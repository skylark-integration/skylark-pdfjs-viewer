/**
 * skylark-pdfjs-viewer - A version of video.js that ported to running on skylarkjs.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(["./app_options"],function(e){const{AppOptions:t,OptionKind:r}=e;class i{constructor(){if(this.constructor===i)throw new Error("Cannot initialize BasePreferences.");Object.defineProperty(this,"defaults",{value:Object.freeze("undefined"!=typeof PDFJSDev&&PDFJSDev.test("PRODUCTION")?PDFJSDev.json("$ROOT/build/default_preferences.json"):t.getAll(r.PREFERENCE)),writable:!1,enumerable:!0,configurable:!1}),this.prefs=Object.assign(Object.create(null),this.defaults),this._initializedPromise=this._readFromStorage(this.defaults).then(e=>{if(e)for(const t in e){const r=this.defaults[t],i=e[t];void 0!==r&&typeof i==typeof r&&(this.prefs[t]=i)}})}async _writeToStorage(e){throw new Error("Not implemented: _writeToStorage")}async _readFromStorage(e){throw new Error("Not implemented: _readFromStorage")}async reset(){return await this._initializedPromise,this.prefs=Object.assign(Object.create(null),this.defaults),this._writeToStorage(this.defaults)}async set(e,t){await this._initializedPromise;const r=this.defaults[e];if(void 0===r)throw new Error(`Set preference: "${e}" is undefined.`);if(void 0===t)throw new Error("Set preference: no value is specified.");const i=typeof t,s=typeof r;if(i!==s){if("number"!==i||"string"!==s)throw new Error(`Set preference: "${t}" is a ${i}, `+`expected a ${s}.`);t=t.toString()}else if("number"===i&&!Number.isInteger(t))throw new Error(`Set preference: "${t}" must be an integer.`);return this.prefs[e]=t,this._writeToStorage(this.prefs)}async get(e){await this._initializedPromise;const t=this.defaults[e];if(void 0===t)throw new Error(`Get preference: "${e}" is undefined.`);{const t=this.prefs[e];if(void 0!==t)return t}return t}async getAll(){return await this._initializedPromise,Object.assign(Object.create(null),this.defaults,this.prefs)}}return{BasePreferences:i}});
//# sourceMappingURL=sourcemaps/preferences.js.map
