{"version":3,"sources":["annotation_layer_builder.js"],"names":["define","pdfjsLib","ui_utils","pdf_link_service","AnnotationLayer","NullL10n","SimpleLinkService","AnnotationLayerBuilder","[object Object]","pageDiv","pdfPage","linkService","downloadManager","annotationStorage","imageResourcesPath","renderInteractiveForms","l10n","enableScripting","hasJSActionsPromise","mouseState","this","_hasJSActionsPromise","_mouseState","div","_cancelled","viewport","intent","Promise","all","getAnnotations","then","annotations","hasJSActions","length","parameters","clone","dontFlip","page","update","document","createElement","className","appendChild","render","translate","setAttribute","DefaultAnnotationLayerFactory"],"mappings":";;;;;;;AAAAA,QACE,wBACA,aACA,sBACA,SAASC,EAASC,EAASC,GAgB3B,MAAMC,gBAAEA,GAAoBH,GACtBI,SAAEA,GAAcH,GAChBI,kBAAEA,GAAsBH,QAkBxBI,EAIJC,aAAYC,QACVA,EAAOC,QACPA,EAAOC,YACPA,EAAWC,gBACXA,EAAeC,kBACfA,EAAoB,KAAIC,mBACxBA,EAAqB,GAAEC,uBACvBA,GAAyB,EAAIC,KAC7BA,EAAOX,EAAQY,gBACfA,GAAkB,EAAKC,oBACvBA,EAAsB,KAAIC,WAC1BA,EAAa,OAEbC,KAAKX,QAAUA,EACfW,KAAKV,QAAUA,EACfU,KAAKT,YAAcA,EACnBS,KAAKR,gBAAkBA,EACvBQ,KAAKN,mBAAqBA,EAC1BM,KAAKL,uBAAyBA,EAC9BK,KAAKJ,KAAOA,EACZI,KAAKP,kBAAoBA,EACzBO,KAAKH,gBAAkBA,EACvBG,KAAKC,qBAAuBH,EAC5BE,KAAKE,YAAcH,EAEnBC,KAAKG,IAAM,KACXH,KAAKI,YAAa,EASpBhB,OAAOiB,EAAUC,EAAS,WACxB,OAAOC,QAAQC,KACbR,KAAKV,QAAQmB,gBAAiBH,OAAAA,IAC9BN,KAAKC,uBACJS,KAAK,EAAEC,EAAaC,GAAe,MACpC,GAAIZ,KAAKI,WACP,OAEF,GAA2B,IAAvBO,EAAYE,OACd,OAGF,MAAMC,GACJT,SAAUA,EAASU,OAAQC,UAAU,IACrCb,IAAKH,KAAKG,IACVQ,YAAAA,EACAM,KAAMjB,KAAKV,QACXI,mBAAoBM,KAAKN,mBACzBC,uBAAwBK,KAAKL,uBAC7BJ,YAAaS,KAAKT,YAClBC,gBAAiBQ,KAAKR,gBACtBC,kBAAmBO,KAAKP,kBACxBI,gBAAiBG,KAAKH,gBACtBe,aAAAA,EACAb,WAAYC,KAAKE,aAGfF,KAAKG,IAGPnB,EAAgBkC,OAAOJ,IAIvBd,KAAKG,IAAMgB,SAASC,cAAc,OAClCpB,KAAKG,IAAIkB,UAAY,kBACrBrB,KAAKX,QAAQiC,YAAYtB,KAAKG,KAC9BW,EAAWX,IAAMH,KAAKG,IAEtBnB,EAAgBuC,OAAOT,GACvBd,KAAKJ,KAAK4B,UAAUxB,KAAKG,QAK/Bf,SACEY,KAAKI,YAAa,EAGpBhB,OACOY,KAAKG,KAGVH,KAAKG,IAAIsB,aAAa,SAAU,SA+CpC,OACEtC,uBAAAA,EACAuC,oCA5BAtC,6BACEC,EACAC,EACAG,EAAoB,KACpBC,EAAqB,GACrBC,GAAyB,EACzBC,EAAOX,EACPY,GAAkB,EAClBC,EAAsB,KACtBC,EAAa,MAEb,OAAO,IAAIZ,GACTE,QAAAA,EACAC,QAAAA,EACAI,mBAAAA,EACAC,uBAAAA,EACAJ,YAAa,IAAIL,EACjBU,KAAAA,EACAH,kBAAAA,EACAI,gBAAAA,EACAC,oBAAAA,EACAC,WAAAA","file":"../annotation_layer_builder.js","sourcesContent":["define([\n  \"skylark-pdfjs-display\",\n  \"./ui_utils\",\n  \"./pdf_link_service\"\n],function(pdfjsLib,ui_utils,pdf_link_service){\n  /* Copyright 2014 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { AnnotationLayer } = pdfjsLib;\n  const { NullL10n } =  ui_utils;\n  const { SimpleLinkService } = pdf_link_service;\n\n  /**\n   * @typedef {Object} AnnotationLayerBuilderOptions\n   * @property {HTMLDivElement} pageDiv\n   * @property {PDFPage} pdfPage\n   * @property {AnnotationStorage} [annotationStorage]\n   * @property {string} [imageResourcesPath] - Path for image resources, mainly\n   *   for annotation icons. Include trailing slash.\n   * @property {boolean} renderInteractiveForms\n   * @property {IPDFLinkService} linkService\n   * @property {DownloadManager} downloadManager\n   * @property {IL10n} l10n - Localization service.\n   * @property {boolean} [enableScripting]\n   * @property {Promise<boolean>} [hasJSActionsPromise]\n   * @property {Object} [mouseState]\n   */\n\n  class AnnotationLayerBuilder {\n    /**\n     * @param {AnnotationLayerBuilderOptions} options\n     */\n    constructor({\n      pageDiv,\n      pdfPage,\n      linkService,\n      downloadManager,\n      annotationStorage = null,\n      imageResourcesPath = \"\",\n      renderInteractiveForms = true,\n      l10n = NullL10n,\n      enableScripting = false,\n      hasJSActionsPromise = null,\n      mouseState = null,\n    }) {\n      this.pageDiv = pageDiv;\n      this.pdfPage = pdfPage;\n      this.linkService = linkService;\n      this.downloadManager = downloadManager;\n      this.imageResourcesPath = imageResourcesPath;\n      this.renderInteractiveForms = renderInteractiveForms;\n      this.l10n = l10n;\n      this.annotationStorage = annotationStorage;\n      this.enableScripting = enableScripting;\n      this._hasJSActionsPromise = hasJSActionsPromise;\n      this._mouseState = mouseState;\n\n      this.div = null;\n      this._cancelled = false;\n    }\n\n    /**\n     * @param {PageViewport} viewport\n     * @param {string} intent (default value is 'display')\n     * @returns {Promise<void>} A promise that is resolved when rendering of the\n     *   annotations is complete.\n     */\n    render(viewport, intent = \"display\") {\n      return Promise.all([\n        this.pdfPage.getAnnotations({ intent }),\n        this._hasJSActionsPromise,\n      ]).then(([annotations, hasJSActions = false]) => {\n        if (this._cancelled) {\n          return;\n        }\n        if (annotations.length === 0) {\n          return;\n        }\n\n        const parameters = {\n          viewport: viewport.clone({ dontFlip: true }),\n          div: this.div,\n          annotations,\n          page: this.pdfPage,\n          imageResourcesPath: this.imageResourcesPath,\n          renderInteractiveForms: this.renderInteractiveForms,\n          linkService: this.linkService,\n          downloadManager: this.downloadManager,\n          annotationStorage: this.annotationStorage,\n          enableScripting: this.enableScripting,\n          hasJSActions,\n          mouseState: this._mouseState,\n        };\n\n        if (this.div) {\n          // If an annotationLayer already exists, refresh its children's\n          // transformation matrices.\n          AnnotationLayer.update(parameters);\n        } else {\n          // Create an annotation layer div and render the annotations\n          // if there is at least one annotation.\n          this.div = document.createElement(\"div\");\n          this.div.className = \"annotationLayer\";\n          this.pageDiv.appendChild(this.div);\n          parameters.div = this.div;\n\n          AnnotationLayer.render(parameters);\n          this.l10n.translate(this.div);\n        }\n      });\n    }\n\n    cancel() {\n      this._cancelled = true;\n    }\n\n    hide() {\n      if (!this.div) {\n        return;\n      }\n      this.div.setAttribute(\"hidden\", \"true\");\n    }\n  }\n\n  /**\n   * @implements IPDFAnnotationLayerFactory\n   */\n  class DefaultAnnotationLayerFactory {\n    /**\n     * @param {HTMLDivElement} pageDiv\n     * @param {PDFPage} pdfPage\n     * @param {AnnotationStorage} [annotationStorage]\n     * @param {string} [imageResourcesPath] - Path for image resources, mainly\n     *   for annotation icons. Include trailing slash.\n     * @param {boolean} renderInteractiveForms\n     * @param {IL10n} l10n\n     * @param {boolean} [enableScripting]\n     * @param {Promise<boolean>} [hasJSActionsPromise]\n     * @param {Object} [mouseState]\n     * @returns {AnnotationLayerBuilder}\n     */\n    createAnnotationLayerBuilder(\n      pageDiv,\n      pdfPage,\n      annotationStorage = null,\n      imageResourcesPath = \"\",\n      renderInteractiveForms = true,\n      l10n = NullL10n,\n      enableScripting = false,\n      hasJSActionsPromise = null,\n      mouseState = null\n    ) {\n      return new AnnotationLayerBuilder({\n        pageDiv,\n        pdfPage,\n        imageResourcesPath,\n        renderInteractiveForms,\n        linkService: new SimpleLinkService(),\n        l10n,\n        annotationStorage,\n        enableScripting,\n        hasJSActionsPromise,\n        mouseState,\n      });\n    }\n  }\n\n  return { \n    AnnotationLayerBuilder, \n    DefaultAnnotationLayerFactory \n  };\n});"]}