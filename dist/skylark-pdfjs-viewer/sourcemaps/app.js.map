{"version":3,"sources":["app.js"],"names":["define","pdfjsLib","PDFJSDev","ui_utils","app_options","pdf_cursor_tools","pdf_rendering_queue","overlay_manager","password_prompt","pdf_attachment_viewer","pdf_document_properties","pdf_find_bar","pdf_find_controller","pdf_history","pdf_layer_viewer","pdf_link_service","pdf_outline_viewer","pdf_presentation_mode","pdf_sidebar","pdf_sidebar_resizer","pdf_thumbnail_viewer","pdf_viewer","secondary_toolbar","toolbar","viewer_compatibility","view_history","animationStarted","AutoPrintRegExp","DEFAULT_SCALE_VALUE","EventBus","getActiveOrFocusedElement","getPDFFileNameFromURL","isValidRotation","isValidScrollMode","isValidSpreadMode","MAX_SCALE","MIN_SCALE","noContextMenuHandler","normalizeWheelEventDirection","parseQueryString","ProgressBar","RendererType","ScrollMode","SidebarView","SpreadMode","TextLayerMode","AppOptions","OptionKind","build","createPromiseCapability","getDocument","getFilenameFromUrl","GlobalWorkerOptions","InvalidPDFException","LinkTarget","loadScript","MissingPDFException","OPS","PDFWorker","PermissionFlag","shadow","UnexpectedResponseException","UNSUPPORTED_FEATURES","version","CursorTool","PDFCursorTools","PDFRenderingQueue","RenderingStates","OverlayManager","PasswordPrompt","PDFAttachmentViewer","PDFDocumentProperties","PDFFindBar","PDFFindController","PDFHistory","PDFLayerViewer","PDFLinkService","PDFOutlineViewer","PDFPresentationMode","PDFSidebar","PDFSidebarResizer","PDFThumbnailViewer","PDFViewer","SecondaryToolbar","Toolbar","viewerCompatibilityParams","ViewHistory","WHEEL_ZOOM_DISABLED_TIMEOUT","ENABLE_PERMISSIONS_CLASS","ViewOnLoad","ViewerCssTheme","AUTOMATIC","LIGHT","DARK","KNOWN_VERSIONS","KNOWN_GENERATORS","DefaultExternalServices","[object Object]","Error","data","callbacks","options","supportsIntegratedFind","this","supportsDocumentFonts","supportedMouseWheelZoomModifierKeys","ctrlKey","metaKey","isInAutomation","PDFViewerApplication","initialBookmark","document","location","hash","substring","_initializedCapability","fellback","appConfig","pdfDocument","pdfLoadingTask","printService","pdfViewer","pdfThumbnailViewer","pdfRenderingQueue","pdfPresentationMode","pdfDocumentProperties","pdfLinkService","pdfHistory","pdfSidebar","pdfSidebarResizer","pdfOutlineViewer","pdfAttachmentViewer","pdfLayerViewer","pdfCursorTools","store","downloadManager","overlayManager","preferences","secondaryToolbar","eventBus","l10n","isInitialViewSet","downloadComplete","isViewerEmbedded","window","parent","url","baseUrl","externalServices","_boundEvents","Object","create","documentInfo","metadata","_contentDispositionFilename","_contentLength","triggerDelayedFallback","_saveInProgress","_wheelUnusedTicks","_idleCallbacks","Set","_scriptingInstance","_mouseState","createPreferences","_readPreferences","_parseHashParameters","_forceCssTheme","_initializeL10n","get","NONE","set","TOP","_initializeViewerComponents","bindEvents","bindWindowEvents","appContainer","documentElement","translate","then","dispatch","source","resolve","test","setAll","getAll","reason","console","error","message","hashParams","waitOn","disableworker","push","async","workerSrc","pdfjsWorker","import","getWorkerSrc","loadFakeWorker","disablerange","disablestream","disableautofetch","disablefontface","disablehistory","webgl","verbosity","textlayer","DISABLE","viewerContainer","classList","add","enabled","pdfbug","split","enabledTabs","debuggerScriptPath","PDFBug","enable","init","mainContainer","loadAndEnablePDFBug","locale","length","Promise","all","catch","createL10n","dir","getDirection","getElementsByTagName","cssTheme","values","includes","styleSheet","styleSheets","cssRules","i","ii","rule","CSSMediaRule","media","deleteRule","darkRules","exec","cssText","insertRule","onIdle","cleanup","bind","externalLinkTarget","externalLinkRel","ignoreDestinationZoom","createDownloadManager","findController","linkService","container","viewer","renderingQueue","renderer","enableWebGL","textLayerMode","imageResourcesPath","renderInteractiveForms","enablePrintAutoRotate","useOnlyCssZoom","maxCanvasPixels","enableScripting","mouseState","setViewer","sidebar","thumbnailView","setThumbnailViewer","setHistory","findBar","documentProperties","cursorToolOnLoad","supportsFullscreen","contextMenuItems","fullscreen","passwordPrompt","passwordOverlay","outlineView","attachmentsView","layersView","elements","onToggled","forceRendering","sidebarResizer","config","initialize","webViewerInitialized","initialized","settled","initializedPromise","promise","ticks","isInPresentationMode","newScale","currentScale","toFixed","Math","ceil","min","currentScaleValue","floor","max","pagesCount","numPages","page","currentPageNumber","val","supportsPrinting","PDFPrintServiceFactory","instance","support","fullscreenEnabled","mozFullScreenEnabled","doc","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","webkitFullscreenEnabled","loadingBar","bar","initPassiveLoading","transport","open","range","originalUrl","file","args","undefined","err","msg","loaded","total","progress","title","decodeURIComponent","ex","setTitle","_docFilename","size","callback","cancelIdleCallback","clear","scripting","internalEvents","domEvents","destroySandbox","name","listener","_off","removeEventListener","isDown","errorWrapper","setAttribute","promises","destroy","setDocument","remove","webViewerResetPermissions","_cancelIdleCallbacks","_destroyScriptingInstance","reset","close","workerParameters","WORKER","key","parameters","setTitleUsingUrl","apiParameters","API","value","URL","loadingTask","onPassword","updateCallback","externalLinkEnabled","setUpdateCallback","onProgress","onUnsupportedFeature","fallback","load","exception","loadingErrorMessage","sourceEventType","downloadByUrl","downloadUrl","filename","getData","blob","Blob","type","download","dispatchEventInSandbox","id","saveDocument","annotationStorage","finally","save","featureId","reportTelemetry","moreInfo","moreInfoText","stack","lineNumber","line","parts","join","errorWrapperConfig","removeAttribute","errorMessage","textContent","closeButton","onclick","errorMoreInfo","moreInfoButton","lessInfoButton","style","height","scrollHeight","oncontextmenu","level","percent","round","isNaN","loadingParams","disableAutoFetch","disableAutoFetchLoadingBarTimeout","clearTimeout","show","setTimeout","hide","getDownloadInfo","firstPagePromise","pageLayoutPromise","getPageLayout","pageModePromise","getPageMode","openActionPromise","getOpenAction","baseDocumentUrl","setPagesCount","href","onePageRendered","pagesPromise","storedPromise","fingerprint","getMultiple","zoom","scrollLeft","scrollTop","rotation","sidebarView","UNKNOWN","scrollMode","spreadMode","pdfPage","setWidth","_initializeAnnotationStorageCallbacks","timeStamp","stored","pageLayout","pageMode","openAction","viewOnLoad","_initializePdfHistory","initialDest","dest","parseInt","mode","THUMBS","OUTLINE","ATTACHMENTS","LAYERS","apiPageModeToSidebarView","apiPageLayoutToSpreadMode","setInitialView","focus","_initializePermissions","race","hasEqualPageSizes","update","_initializeAutoPrint","getOutline","outline","render","getAttachments","attachments","optionalContentConfigPromise","optionalContentConfig","requestIdleCallback","_collectTelemetry","delete","timeout","_initializeJavaScript","_initializePageLabels","_initializeMetadata","objects","calculationOrder","docActions","getFieldObjects","getCalculationOrderIds","getJSActions","createScripting","sandboxBundleSrc","Map","ready","_on","evt","once","detail","command","triggerPrinting","log","element","getElementById","dispatchEvent","CustomEvent","setValue","visitedPages","pageNumber","actionsPromise","actions","has","event","addEventListener","createSandbox","appInfo","platform","navigator","language","docInfo","baseURL","filesize","getRaw","authors","initializeScriptingEvents","markInfo","getMarkInfo","tagged","Marked","javaScript","getJavaScript","triggerAutoPrint","action","some","js","warn","_delayedFallback","info","contentDispositionFilename","contentLength","getMetadata","pdfTitle","PDFFormatVersion","Producer","trim","Creator","infoTitle","Title","metadataTitle","IsXFAPresent","IsAcroFormPresent","forms","versionId","replace","generatorId","producer","toLowerCase","generator","formType","labels","getPageLabels","numLabels","toString","setPageLabels","setPageNumber","currentPageLabel","resetHistory","updateUrl","initialRotation","JSON","stringify","explicitDest","permissions","getPermissions","COPY","onSetModified","beforeUnload","onResetModified","storedHash","setRotation","angle","pagesRotation","scroll","spread","setViewerModes","setHash","SVG","printing","isThumbnailViewEnabled","isThumbnailViewVisible","renderHighestPriority","printMessage","pageViewsReady","notReadyMessage","alert","pagesOverview","getPagesOverview","printContainer","printResolution","createPrintService","layout","resetModified","delta","newRotation","request","print","beforePrint","afterPrint","webViewerResize","webViewerHashchange","webViewerPageRendered","webViewerUpdateViewarea","webViewerPageChanging","webViewerScaleChanging","webViewerRotationChanging","webViewerSidebarViewChanged","webViewerPageMode","webViewerNamedAction","webViewerPresentationModeChanged","webViewerPresentationMode","webViewerPrint","webViewerDownload","webViewerSave","webViewerFirstPage","webViewerLastPage","webViewerNextPage","webViewerPreviousPage","webViewerZoomIn","webViewerZoomOut","webViewerZoomReset","webViewerPageNumberChanged","webViewerScaleChanged","webViewerRotateCw","webViewerRotateCcw","webViewerOptionalContentConfig","webViewerSwitchScrollMode","webViewerScrollModeChanged","webViewerSwitchSpreadMode","webViewerSpreadModeChanged","webViewerDocumentProperties","webViewerFind","webViewerFindFromUrlHash","webViewerUpdateFindMatchesCount","webViewerUpdateFindControlState","reportPageStatsPDFBug","webViewerFileInputChange","webViewerOpenFile","windowResize","windowHashChange","windowBeforePrint","windowAfterPrint","windowUpdateFromSandbox","webViewerVisibilityChange","webViewerWheel","passive","webViewerTouchStart","webViewerClick","webViewerKeyDown","webViewerKeyUp","wholeTicks","sign","abs","scriptingReady","validateFileURL","webViewerOpenFileViaURL","HOSTED_VIEWER_ORIGINS","viewerOrigin","origin","protocol","Stats","pageView","getPageView","pageStats","stats","queryString","search","params","fileInput","createElement","openFileInputName","className","body","appendChild","File","FileReader","FileList","openFile","openFileButton","files","target","preventDefault","dataTransfer","dropEffect","printButton","presentationModeButton","viewFind","timestamp","updateLoadingIndicatorState","getThumbnail","setImage","getStats","view","switchView","select","toggle","presentationModeState","state","setMultiple","scale","left","top","getAnchorUrl","pdfOpenParams","viewBookmark","viewBookmarkButton","currentPage","loading","renderingState","FINISHED","popStateInProgress","requestPresentationMode","downloadOrSave","nextPage","previousPage","zoomIn","zoomOut","zoomReset","goToPage","rotatePages","executeCommand","query","phraseSearch","caseSensitive","entireWord","highlightAll","findPrevious","matchesCount","updateFindMatchesCount","updateResultsCount","previous","rawQuery","updateFindControlState","result","updateUIState","setPageScale","presetValue","pageLabel","scrollThumbnailIntoView","visibilityState","setZoomDisabledTimeout","lastIndexOf","xhr","XMLHttpRequest","onload","Uint8Array","response","responseType","send","disableCreateObjectURL","fileReader","buffer","readAsArrayBuffer","createObjectURL","downloadButton","click","zoomDisabledTimeout","previousScale","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","accumulateWheelTicks","PIXELS_PER_LINE_SCALE","scaleCorrectionFactor","rect","getBoundingClientRect","dx","clientX","dy","clientY","touches","containsElement","isOpen","contains","toggleButton","keyCode","active","handled","ensureViewerFocused","cmd","altKey","shiftKey","isViewerInPresentationMode","findState","curElement","curElementTagName","tagName","toUpperCase","isContentEditable","turnPage","turnOnlyIfPageFit","isVerticalScrollbarEnabled","isHorizontalScrollbarEnabled","opened","switchTool","SELECT","HAND","returnValue","ODD","EVEN"],"mappings":";;;;;;;AAAAA,QACE,wBACA,cAEA,aACA,gBAEA,qBACA,wBACA,oBACA,oBACA,0BACA,4BACA,iBACA,wBACA,gBACA,qBACA,qBACA,uBACA,0BACA,gBACA,wBACA,yBACA,eACA,sBACA,YACA,yBACA,kBAEA,SACAC,EACAC,EAEAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAsBA,MAAMC,iBACJA,EAAgBC,gBAChBA,EAAeC,oBACfA,EAAmBC,SACnBA,EAAQC,0BACRA,EAAyBC,sBACzBA,EAAqBC,gBACrBA,EAAeC,kBACfA,EAAiBC,kBACjBA,EAAiBC,UACjBA,EAASC,UACTA,EAASC,qBACTA,EAAoBC,6BACpBA,EAA4BC,iBAC5BA,EAAgBC,YAChBA,EAAWC,aACXA,EAAYC,WACZA,EAAUC,YACVA,EAAWC,WACXA,EAAUC,cACVA,GACE1C,GAIE2C,WAAEA,EAAUC,WAAEA,GAAe3C,GAC7B4C,MACJA,EAAKC,wBACLA,EAAuBC,YACvBA,EAAWC,mBACXA,EAAkBC,oBAClBA,EAAmBC,oBACnBA,EAAmBC,WACnBA,EAAUC,WACVA,GAAUC,oBACVA,GAAmBC,IACnBA,GAAGC,UACHA,GAASC,eACTA,GAAcC,OACdA,GAAMC,4BACNA,GAA2BC,qBAC3BA,GAAoBC,QACpBA,IACE9D,GAGE+D,WAAEA,GAAUC,eAAEA,IAAmB5D,GACjC6D,kBAAEA,GAAiBC,gBAAEA,IAAoB7D,GACzC8D,eAAEA,IAAmB7D,GACrB8D,eAAEA,IAAmB7D,GACrB8D,oBAAEA,IAAwB7D,GAC1B8D,sBAAEA,IAA0B7D,GAC5B8D,WAAEA,IAAe7D,GACjB8D,kBAAEA,IAAsB7D,GACxB8D,WAAEA,IAAe7D,GACjB8D,eAAEA,IAAmB7D,GACrB8D,eAAEA,IAAmB7D,GACrB8D,iBAAEA,IAAqB7D,GACvB8D,oBAAEA,IAAwB7D,GAC1B8D,WAAEA,IAAe7D,GACjB8D,kBAAEA,IAAsB7D,GACxB8D,mBAAEA,IAAuB7D,GACzB8D,UAAEA,IAAc7D,GAChB8D,iBAAEA,IAAqB7D,GACvB8D,QAAEA,IAAY7D,GACd8D,0BAAEA,IAA8B7D,GAChC8D,YAAEA,IAAgB7D,EAKlB8D,GAA8B,IAC9BC,GAA2B,oBAE3BC,IACM,EADNA,GAGK,EAGLC,IACJC,UAAW,EACXC,MAAO,EACPC,KAAM,GAIFC,IACJ,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGIC,IACJ,oBACA,oBACA,kBACA,oBACA,kBACA,cACA,QACA,QACA,UACA,QACA,SACA,SACA,QACA,SACA,cACA,WACA,YACA,aACA,SACA,eACA,cACA,gBACA,eACA,cAGIC,GACJC,cACE,MAAM,IAAIC,MAAM,8CAGlBD,8BAA8BE,IAE9BF,8BAA8BE,IAE9BF,0BAA0BG,IAE1BH,sBAAsBE,IAEtBF,uBAAuBE,IAEvBF,6BAA6BI,GAC3B,MAAM,IAAIH,MAAM,0CAGlBD,2BACE,MAAM,IAAIC,MAAM,sCAGlBD,kBAAkBI,GAChB,MAAM,IAAIH,MAAM,+BAGlBD,uBAAuBI,GACrB,MAAM,IAAIH,MAAM,oCAGlBI,oCACE,OAAO1C,GAAO2C,KAAM,0BAA0B,GAGhDC,mCACE,OAAO5C,GAAO2C,KAAM,yBAAyB,GAG/CE,iDACE,OAAO7C,GAAO2C,KAAM,uCAClBG,SAAS,EACTC,SAAS,IAIbC,4BACE,OAAOhD,GAAO2C,KAAM,kBAAkB,IAI1C,MAAMM,IACJC,gBAAiBC,SAASC,SAASC,KAAKC,UAAU,GAClDC,uBAAwBlE,IACxBmE,UAAU,EACVC,UAAW,KACXC,YAAa,KACbC,eAAgB,KAChBC,aAAc,KAEdC,UAAW,KAEXC,mBAAoB,KAEpBC,kBAAmB,KAEnBC,oBAAqB,KAErBC,sBAAuB,KAEvBC,eAAgB,KAEhBC,WAAY,KAEZC,WAAY,KAEZC,kBAAmB,KAEnBC,iBAAkB,KAElBC,oBAAqB,KAErBC,eAAgB,KAEhBC,eAAgB,KAEhBC,MAAO,KAEPC,gBAAiB,KAEjBC,eAAgB,KAEhBC,YAAa,KAEblH,QAAS,KAETmH,iBAAkB,KAElBC,SAAU,KAEVC,KAAM,KACNC,kBAAkB,EAClBC,kBAAkB,EAClBC,iBAAkBC,OAAOC,SAAWD,OACpCE,IAAK,GACLC,QAAS,GACTC,iBAAkBpD,GAClBqD,aAAcC,OAAOC,OAAO,MAC5BC,aAAc,KACdC,SAAU,KACVC,4BAA6B,KAC7BC,eAAgB,KAChBC,uBAAwB,KACxBC,iBAAiB,EACjBC,kBAAmB,EACnBC,eAAgB,IAAIC,IACpBC,mBAAoB,KACpBC,YAAaZ,OAAOC,OAAO,MAG3BtD,iBAAiBoB,GACfd,KAAKkC,YAAclC,KAAK6C,iBAAiBe,oBACzC5D,KAAKc,UAAYA,QAEXd,KAAK6D,yBACL7D,KAAK8D,uBACX9D,KAAK+D,uBACC/D,KAAKgE,kBAGThE,KAAKwC,kBACLjG,EAAW0H,IAAI,wBAA0BlH,EAAWmH,MAIpD3H,EAAW4H,IAAI,qBAAsBpH,EAAWqH,WAE5CpE,KAAKqE,8BAIXrE,KAAKsE,aACLtE,KAAKuE,mBAGL,MAAMC,EAAe1D,EAAU0D,cAAgBhE,SAASiE,gBACxDzE,KAAKqC,KAAKqC,UAAUF,GAAcG,KAAK,KAGrC3E,KAAKoC,SAASwC,SAAS,aAAeC,OAAQ7E,SAGhDA,KAAKY,uBAAuBkE,WAM9BpF,yBACE,QACuB,IAAb/F,IACNA,EAASoL,KAAK,4BAChBxI,EAAW0H,IAAI,sBAMjB,IACE1H,EAAWyI,aAAahF,KAAKkC,YAAY+C,UACzC,MAAOC,GAEPC,QAAQC,4BAA4BF,GAAUA,EAAOG,eAQzD3F,6BACE,IAAKnD,EAAW0H,IAAI,iBAClB,OAEF,MAAMvD,EAAOF,SAASC,SAASC,KAAKC,UAAU,GAC9C,IAAKD,EACH,OAEF,MAAM4E,EAAatJ,EAAiB0E,GAClC6E,KA6BF,GA3BI,kBAAmBD,GAA2C,SAA7BA,EAAWE,eAC9CD,EAAOE,KAohEbC,iBACO7I,EAAoB8I,YACvB9I,EAAoB8I,UAAYpJ,EAAW0H,IAAI,cAEjD,QAAwB,IAAbtK,IAA6BA,EAASoL,KAAK,cAEpD,YADAtC,OAAOmD,kBAAoBC,OAAO,yBAGpC,OAAO7I,GAAWG,GAAU2I,gBA5hEZC,IAEV,iBAAkBT,GACpB/I,EAAW4H,IAAI,eAA4C,SAA5BmB,EAAWU,cAExC,kBAAmBV,GACrB/I,EAAW4H,IAAI,gBAA8C,SAA7BmB,EAAWW,eAEzC,qBAAsBX,GACxB/I,EAAW4H,IACT,mBACgC,SAAhCmB,EAAWY,kBAGX,oBAAqBZ,GACvB/I,EAAW4H,IAAI,kBAAkD,SAA/BmB,EAAWa,iBAE3C,mBAAoBb,GACtB/I,EAAW4H,IAAI,iBAAgD,SAA9BmB,EAAWc,gBAE1C,UAAWd,GACb/I,EAAW4H,IAAI,cAAoC,SAArBmB,EAAWe,OAEvC,cAAef,GACjB/I,EAAW4H,IAAI,YAAoC,EAAvBmB,EAAWgB,WAErC,cAAehB,EACjB,OAAQA,EAAWiB,WACjB,IAAK,MACHhK,EAAW4H,IAAI,gBAAiB7H,EAAckK,SAC9C,MACF,IAAK,UACL,IAAK,SACL,IAAK,QACYxG,KAAKc,UAAU2F,gBACvBC,UAAUC,IAAI,aAAerB,EAAWiB,WAIrD,GAAI,WAAYjB,EAAY,CAC1B/I,EAAW4H,IAAI,UAAU,GACzB5H,EAAW4H,IAAI,uBAAuB,GAEtC,MAAMyC,EAAUtB,EAAWuB,OAAOC,MAAM,KACxCvB,EAAOE,KAm/Db,SAA6BsB,GAC3B,MAAMjG,EAAYR,GAAqBQ,UACvC,OAAO9D,GAAW8D,EAAUkG,oBAAoBrC,KAAK,WACnDsC,OAAOC,OAAOH,GACdE,OAAOE,MAAOjK,IAAAA,IAAO4D,EAAUsG,iBAv/DjBC,CAAoBT,IAWlC,YAPuB,IAAbjN,GACNA,EAASoL,KAAK,4BAChB,WAAYO,GAEZ/I,EAAW4H,IAAI,SAAUmB,EAAWgC,QAGhB,IAAlB/B,EAAOgC,OAGJC,QAAQC,IAAIlC,GAAQmC,MAAMxC,IAC/BC,QAAQC,gCAAgCF,EAAOG,oBAJjD,GAWF3F,wBACEM,KAAKqC,KAAOrC,KAAK6C,iBAAiB8E,gBACZ,IAAbhO,GAA4BA,EAASoL,KAAK,2BAC3CuC,OAAQ/K,EAAW0H,IAAI,WACzB,MAEN,MAAM2D,QAAY5H,KAAKqC,KAAKwF,eAC5BrH,SAASsH,qBAAqB,QAAQ,GAAGF,IAAMA,GAMjDlI,iBACE,MAAMqI,EAAWxL,EAAW0H,IAAI,kBAChC,GACE8D,IAAa5I,GAAeC,WAC3B2D,OAAOiF,OAAO7I,IAAgB8I,SAASF,GAI1C,IACE,MAAMG,EAAa1H,SAAS2H,YAAY,GAElCC,EAAWF,GAAcA,EAAWE,aAC1C,IAAK,IAAIC,EAAI,EAAGC,EAAKF,EAASb,OAAQc,EAAIC,EAAID,IAAK,CACjD,MAAME,EAAOH,EAASC,GACtB,GACEE,aAAgBC,cAEhBD,EAAKE,OAA2B,iCAAlBF,EAAKE,MAAM,GACzB,CACA,GAAIV,IAAa5I,GAAeE,MAE9B,YADA6I,EAAWQ,WAAWL,GAIxB,MAAMM,EAAY,yEAAyEC,KACzFL,EAAKM,SAOP,YAJIF,GAAaA,EAAU,KACzBT,EAAWQ,WAAWL,GACtBH,EAAWY,WAAWH,EAAU,GAAIN,OAK1C,MAAOnD,GAEPC,QAAQC,0BAA0BF,GAAUA,EAAOG,eAOvD3F,oCACE,MAAMoB,EAAYd,KAAKc,UAEjBsB,EACJtB,EAAUsB,UACV,IAAI9G,GAAW+E,eAAgBL,KAAK6C,iBAAiBxC,iBACvDL,KAAKoC,SAAWA,EAEhBpC,KAAKiC,eAAiB,IAAIpE,GAE1B,MAAMuD,EAAoB,IAAIzD,GAC9ByD,EAAkB2H,OAAS/I,KAAKgJ,QAAQC,KAAKjJ,MAC7CA,KAAKoB,kBAAoBA,EAEzB,MAAMG,EAAiB,IAAIlD,IACzB+D,SAAAA,EACA8G,mBAAoB3M,EAAW0H,IAAI,sBACnCkF,gBAAiB5M,EAAW0H,IAAI,mBAChCmF,sBAAuB7M,EAAW0H,IAAI,2BAExCjE,KAAKuB,eAAiBA,EAEtB,MAAMS,EAAkBhC,KAAK6C,iBAAiBwG,wBAC9CrJ,KAAKgC,gBAAkBA,EAEvB,MAAMsH,EAAiB,IAAIpL,IACzBqL,YAAahI,EACba,SAAAA,IAEFpC,KAAKsJ,eAAiBA,EAEtB,MAAME,EAAY1I,EAAUsG,cACtBqC,EAAS3I,EAAU2F,gBACzBzG,KAAKkB,UAAY,IAAIvC,IACnB6K,UAAAA,EACAC,OAAAA,EACArH,SAAAA,EACAsH,eAAgBtI,EAChBmI,YAAahI,EACbS,gBAAAA,EACAsH,eAAAA,EACAK,SAAUpN,EAAW0H,IAAI,YACzB2F,YAAarN,EAAW0H,IAAI,eAC5B5B,KAAMrC,KAAKqC,KACXwH,cAAetN,EAAW0H,IAAI,iBAC9B6F,mBAAoBvN,EAAW0H,IAAI,sBACnC8F,uBAAwBxN,EAAW0H,IAAI,0BACvC+F,sBAAuBzN,EAAW0H,IAAI,yBACtCgG,eAAgB1N,EAAW0H,IAAI,kBAC/BiG,gBAAiB3N,EAAW0H,IAAI,mBAChCkG,gBAAiB5N,EAAW0H,IAAI,mBAChCmG,WAAYpK,KAAK2D,cAEnBvC,EAAkBiJ,UAAUrK,KAAKkB,WACjCK,EAAe8I,UAAUrK,KAAKkB,WAE9BlB,KAAKmB,mBAAqB,IAAIzC,IAC5B8K,UAAW1I,EAAUwJ,QAAQC,cAC7BnI,SAAAA,EACAsH,eAAgBtI,EAChBmI,YAAahI,EACbc,KAAMrC,KAAKqC,OAEbjB,EAAkBoJ,mBAAmBxK,KAAKmB,oBAE1CnB,KAAKwB,WAAa,IAAIrD,IACpBoL,YAAahI,EACba,SAAAA,IAEFb,EAAekJ,WAAWzK,KAAKwB,YAE1BxB,KAAKD,yBACRC,KAAK0K,QAAU,IAAIzM,GAAW6C,EAAU4J,QAAStI,EAAUpC,KAAKqC,OAGlErC,KAAKsB,sBAAwB,IAAItD,GAC/B8C,EAAU6J,mBACV3K,KAAKiC,eACLG,EACApC,KAAKqC,MAGPrC,KAAK8B,eAAiB,IAAIpE,IACxB8L,UAAAA,EACApH,SAAAA,EACAwI,iBAAkBrO,EAAW0H,IAAI,sBAGnCjE,KAAKhF,QAAU,IAAI6D,GAAQiC,EAAU9F,QAASoH,EAAUpC,KAAKqC,MAE7DrC,KAAKmC,iBAAmB,IAAIvD,GAC1BkC,EAAUqB,iBACVqH,EACApH,GAGEpC,KAAK6K,qBACP7K,KAAKqB,oBAAsB,IAAI9C,IAC7BiL,UAAAA,EACAtI,UAAWlB,KAAKkB,UAChBkB,SAAAA,EACA0I,iBAAkBhK,EAAUiK,cAIhC/K,KAAKgL,eAAiB,IAAIlN,GACxBgD,EAAUmK,gBACVjL,KAAKiC,eACLjC,KAAKqC,MAGPrC,KAAK2B,iBAAmB,IAAIrD,IAC1BkL,UAAW1I,EAAUwJ,QAAQY,YAC7B9I,SAAAA,EACAmH,YAAahI,IAGfvB,KAAK4B,oBAAsB,IAAI7D,IAC7ByL,UAAW1I,EAAUwJ,QAAQa,gBAC7B/I,SAAAA,EACAJ,gBAAAA,IAGFhC,KAAK6B,eAAiB,IAAIzD,IACxBoL,UAAW1I,EAAUwJ,QAAQc,WAC7BhJ,SAAAA,EACAC,KAAMrC,KAAKqC,OAGbrC,KAAKyB,WAAa,IAAIjD,IACpB6M,SAAUvK,EAAUwJ,QACpBpJ,UAAWlB,KAAKkB,UAChBC,mBAAoBnB,KAAKmB,mBACzBiB,SAAAA,EACAC,KAAMrC,KAAKqC,OAEbrC,KAAKyB,WAAW6J,UAAYtL,KAAKuL,eAAetC,KAAKjJ,MAErDA,KAAK0B,kBAAoB,IAAIjD,GAC3BqC,EAAU0K,eACVpJ,EACApC,KAAKqC,OAIT3C,IAAI+L,GACFzL,KAAK0L,WAAWD,GAAQ9G,KAAKgH,KAG/BC,kBACE,OAAO5L,KAAKY,uBAAuBiL,SAGrCC,yBACE,OAAO9L,KAAKY,uBAAuBmL,SAGrCrM,OAAOsM,GACL,GAAIhM,KAAKkB,UAAU+K,qBACjB,OAEF,IAAIC,EAAWlM,KAAKkB,UAAUiL,aAC9B,GACED,GA7hBsB,IA6hBVA,GAAgCE,QAAQ,GACpDF,EAAWG,KAAKC,KAAgB,GAAXJ,GAAiB,GACtCA,EAAWG,KAAKE,IAAI3Q,EAAWsQ,WACtBF,EAAQ,GAAKE,EAAWtQ,GACnCoE,KAAKkB,UAAUsL,kBAAoBN,GAGrCxM,QAAQsM,GACN,GAAIhM,KAAKkB,UAAU+K,qBACjB,OAEF,IAAIC,EAAWlM,KAAKkB,UAAUiL,aAC9B,GACED,GAAYA,EA1iBU,KA0iBsBE,QAAQ,GACpDF,EAAWG,KAAKI,MAAiB,GAAXP,GAAiB,GACvCA,EAAWG,KAAKK,IAAI7Q,EAAWqQ,WACtBF,EAAQ,GAAKE,EAAWrQ,GACnCmE,KAAKkB,UAAUsL,kBAAoBN,GAGrCxM,YACMM,KAAKkB,UAAU+K,uBAGnBjM,KAAKkB,UAAUsL,kBAAoBnR,IAGrCsR,iBACE,OAAO3M,KAAKe,YAAcf,KAAKe,YAAY6L,SAAW,GAGxDC,WACE,OAAO7M,KAAKkB,UAAU4L,mBAGxBD,SAASE,GACP/M,KAAKkB,UAAU4L,kBAAoBC,GAGrCC,uBACE,OAAOC,GAAuBC,SAASF,kBAGzCnC,yBACE,IAAIsC,EACJ,QAAwB,IAAbxT,GAA4BA,EAASoL,KAAK,cACnDoI,GACiC,IAA/B3M,SAAS4M,oBACyB,IAAlC5M,SAAS6M,yBACN,CACL,MAAMC,EAAM9M,SAASiE,gBACrB0I,KACEG,EAAIC,mBACJD,EAAIE,sBACJF,EAAIG,0BAI2B,IAA/BjN,SAAS4M,oBACyB,IAAlC5M,SAAS6M,uBAC4B,IAArC7M,SAASkN,0BAETP,GAAU,GAGd,OAAO9P,GAAO2C,KAAM,qBAAsBmN,IAG5CpN,6BACE,OAAOC,KAAK6C,iBAAiB9C,wBAG/BE,4BACE,OAAOD,KAAK6C,iBAAiB5C,uBAG/B0N,iBACE,MAAMC,EAAM,IAAI3R,EAAY,eAC5B,OAAOoB,GAAO2C,KAAM,aAAc4N,IAGpC1N,0CACE,OAAOF,KAAK6C,iBAAiB3C,qCAG/BR,qBACE,QACsB,IAAb/F,IACNA,EAASoL,KAAK,wBAEf,MAAM,IAAIpF,MAAM,uCAElBK,KAAK6C,iBAAiBgL,oBACpBnO,oBAAoBiD,EAAK4E,EAAQuG,GAC/BxN,GAAqByN,KAAKpL,GAAO4E,OAAAA,EAAQyG,MAAOF,KAElDpO,eAAeE,GACbU,GAAqByN,KAAKnO,IAE5BF,cAAciD,EAAK4E,EAAQ0G,GACzB,IAAIC,EAAOvL,EACTwL,EAAO,UACMC,IAAX7G,IACF4G,GAAS5G,OAAAA,SAES6G,IAAhBH,IACFC,GAASvL,IAAAA,EAAKsL,YAAAA,IAEhB3N,GAAqByN,KAAKG,EAAMC,IAElCzO,QAAQ2O,GACN/N,GAAqB+B,KAClB4B,IACC,gBACA,KACA,4CAEDU,KAAK2J,IACJhO,GAAqB8E,MAAMkJ,EAAKD,MAGtC3O,WAAW6O,EAAQC,GACjBlO,GAAqBmO,SAASF,EAASC,OAK7C9O,iBAAiBiD,EAAM,IACrB3C,KAAK2C,IAAMA,EACX3C,KAAK4C,QAAUD,EAAImE,MAAM,KAAK,GAC9B,IAAI4H,EAAQlT,EAAsBmH,EAAK,IACvC,IAAK+L,EACH,IACEA,EAAQC,mBAAmB/R,EAAmB+F,KAASA,EACvD,MAAOiM,GAGPF,EAAQ/L,EAGZ3C,KAAK6O,SAASH,IAGhBhP,SAASgP,GACH1O,KAAKwC,mBAIThC,SAASkO,MAAQA,IAGnBI,mBAGE,OAAO9O,KAAKmD,6BAA+B3H,EAAsBwE,KAAK2C,MAMxEjD,uBACE,GAAKM,KAAKwD,eAAeuL,KAAzB,CAGA,IAAK,MAAMC,KAAYhP,KAAKwD,eAC1Bf,OAAOwM,mBAAmBD,GAE5BhP,KAAKwD,eAAe0L,UAMtBxP,kCACE,IAAKM,KAAK0D,mBACR,OAEF,MAAMyL,UAAEA,EAASC,eAAEA,EAAcC,UAAEA,GAAcrP,KAAK0D,mBACtD,UACQyL,EAAUG,iBAChB,MAAOV,IAET,IAAK,MAAOW,EAAMC,KAAaJ,EAC7BpP,KAAKoC,SAASqN,KAAKF,EAAMC,GAE3BJ,EAAeF,QAEf,IAAK,MAAOK,EAAMC,KAAaH,EAC7B5M,OAAOiN,oBAAoBH,EAAMC,GAEnCH,EAAUH,eAEHlP,KAAK2D,YAAYgM,OACxB3P,KAAK0D,mBAAqB,MAQ5BhE,cAIE,GAHqBM,KAAKc,UAAU8O,aAAapG,UACpCqG,aAAa,SAAU,SAE/B7P,KAAKgB,eACR,OAEF,MAAM8O,KAENA,EAASrK,KAAKzF,KAAKgB,eAAe+O,WAClC/P,KAAKgB,eAAiB,KAElBhB,KAAKe,cACPf,KAAKe,YAAc,KAEnBf,KAAKmB,mBAAmB6O,YAAY,MACpChQ,KAAKkB,UAAU8O,YAAY,MAC3BhQ,KAAKuB,eAAeyO,YAAY,MAChChQ,KAAKsB,sBAAsB0O,YAAY,OAmtD7C,WACE,MAAMlP,UAAEA,GAAcR,GACtB,IAAKQ,EACH,OAGFA,EAAU2F,gBAAgBC,UAAUuJ,OAAOhR,IAvtDzCiR,GACAlQ,KAAK+B,MAAQ,KACb/B,KAAKsC,kBAAmB,EACxBtC,KAAKuC,kBAAmB,EACxBvC,KAAK2C,IAAM,GACX3C,KAAK4C,QAAU,GACf5C,KAAKiD,aAAe,KACpBjD,KAAKkD,SAAW,KAChBlD,KAAKmD,4BAA8B,KACnCnD,KAAKoD,eAAiB,KACtBpD,KAAKqD,uBAAyB,KAC9BrD,KAAKsD,iBAAkB,EAEvBtD,KAAKmQ,uBACLL,EAASrK,KAAKzF,KAAKoQ,6BAEnBpQ,KAAKyB,WAAW4O,QAChBrQ,KAAK2B,iBAAiB0O,QACtBrQ,KAAK4B,oBAAoByO,QACzBrQ,KAAK6B,eAAewO,QAEhBrQ,KAAKwB,YACPxB,KAAKwB,WAAW6O,QAEdrQ,KAAK0K,SACP1K,KAAK0K,QAAQ2F,QAEfrQ,KAAKhF,QAAQqV,QACbrQ,KAAKmC,iBAAiBkO,QAEA,oBAAXpJ,QACTA,OAAO+B,gBAEHxB,QAAQC,IAAIqI,IAcpBpQ,WAAWwO,EAAMC,GACXnO,KAAKgB,sBAEDhB,KAAKsQ,QAGb,MAAMC,EAAmBhU,EAAW0I,OAAOzI,EAAWgU,QACtD,IAAK,MAAMC,KAAOF,EAChB1T,EAAoB4T,GAAOF,EAAiBE,GAG9C,MAAMC,EAAa3N,OAAOC,OAAO,MACb,iBAATkL,GAETlO,KAAK2Q,iBAAiBzC,GACtBwC,EAAW/N,IAAMuL,GACRA,GAAQ,eAAgBA,EAEjCwC,EAAW9Q,KAAOsO,EACTA,EAAKvL,KAAOuL,EAAKD,cAC1BjO,KAAK2Q,iBAAiBzC,EAAKD,aAC3ByC,EAAW/N,IAAMuL,EAAKvL,KAGxB,MAAMiO,EAAgBrU,EAAW0I,OAAOzI,EAAWqU,KACnD,IAAK,MAAMJ,KAAOG,EAAe,CAC/B,IAAIE,EAAQF,EAAcH,GAEd,eAARA,GAAyBK,SACH,IAAbnX,GAA6BA,EAASoL,KAAK,cAE3CpL,EAASoL,KAAK,0BACvB+L,EAAQ9Q,KAAK4C,SAFbkO,EAAQtQ,SAASuQ,IAAIjK,MAAM,KAAK,IAKpC4J,EAAWD,GAAOK,EAGpB,GAAI3C,EACF,IAAK,MAAMsC,KAAOtC,EAChBuC,EAAWD,GAAOtC,EAAKsC,GAI3B,MAAMO,EAAcrU,EAAY+T,GAgBhC,OAfA1Q,KAAKgB,eAAiBgQ,EAEtBA,EAAYC,WAAa,EAACC,EAAgBhM,KACxClF,KAAKuB,eAAe4P,qBAAsB,EAC1CnR,KAAKgL,eAAeoG,kBAAkBF,EAAgBhM,GACtDlF,KAAKgL,eAAe+C,SAGtBiD,EAAYK,WAAa,GAAG9C,OAAAA,EAAQC,MAAAA,MAClCxO,KAAKyO,SAASF,EAASC,KAIzBwC,EAAYM,qBAAuBtR,KAAKuR,SAAStI,KAAKjJ,MAE/CgR,EAAYjF,QAAQpH,KACzB5D,IACEf,KAAKwR,KAAKzQ,IAEZ0Q,IACE,GAAIT,IAAgBhR,KAAKgB,eACvB,OAIF,MAAMqE,EAAUoM,GAAaA,EAAUpM,QACvC,IAAIqM,EA6BJ,OA1BEA,EAFED,aAAqB3U,EAEDkD,KAAKqC,KAAK4B,IAC9B,qBACA,KACA,kCAEOwN,aAAqBxU,GAER+C,KAAKqC,KAAK4B,IAC9B,qBACA,KACA,qBAEOwN,aAAqBnU,GACR0C,KAAKqC,KAAK4B,IAC9B,4BACA,KACA,+BAGoBjE,KAAKqC,KAAK4B,IAC9B,gBACA,KACA,6CAIuBU,KAAK2J,IAE9B,MADAtO,KAAKoF,MAAMkJ,GAAOjJ,QAAAA,IACZoM,OAMd/R,UAASiS,gBAAEA,EAAkB,gBAC3B,SAASC,IACP5P,EAAgB6P,YAAYlP,EAAKmP,GAGnC,MAAM9P,EAAkBhC,KAAKgC,gBAC3BW,EAAM3C,KAAK4C,QACXkP,EAAW9R,KAAK8O,aAIb9O,KAAKe,aAAgBf,KAAKuC,iBAK/BvC,KAAKe,YACFgR,UACApN,KAAK,SAAU/E,GACd,MAAMoS,EAAO,IAAIC,MAAMrS,IAASsS,KAAM,oBACtClQ,EAAgBmQ,SAASH,EAAMrP,EAAKmP,EAAUH,KAE/CjK,MAAMkK,GAVPA,KAaJlS,YAAWiS,gBAAEA,EAAkB,gBAC7B,GAAI3R,KAAKsD,gBACP,OAGF,MAAMtB,EAAkBhC,KAAKgC,gBAC3BW,EAAM3C,KAAK4C,QACXkP,EAAW9R,KAAK8O,aAIb9O,KAAKe,aAAgBf,KAAKuC,kBAI/BvC,KAAKsD,iBAAkB,QAGjBtD,KAAK0D,oBAAsB1D,KAAK0D,mBAAmByL,UAAUiD,wBACjEC,GAAI,MACJ9C,KAAM,aAGRvP,KAAKe,YACFuR,aAAatS,KAAKe,YAAYwR,mBAC9B5N,KAAK/E,IACJ,MAAMoS,EAAO,IAAIC,MAAMrS,IAASsS,KAAM,oBACtClQ,EAAgBmQ,SAASH,EAAMrP,EAAKmP,EAAUH,KAE/CjK,MAAM,KACL1H,KAAKmS,UAAWR,gBAAAA,MAEjBa,QAAQ9M,gBAED1F,KAAK0D,oBAAsB1D,KAAK0D,mBAAmByL,UAAUiD,wBACjEC,GAAI,MACJ9C,KAAM,YAGRvP,KAAKsD,iBAAkB,KA3BzBtD,KAAKmS,UAAWR,gBAAAA,KA+BpBjS,eAAeI,GAETE,KAAKe,aAAef,KAAKe,YAAYwR,kBAAkBxD,KAAO,EAChE/O,KAAKyS,KAAK3S,GAEVE,KAAKmS,SAASrS,IASlBJ,iBAAiBgT,GAGf1S,KAAK6C,iBAAiB8P,iBACpBT,KAAM,qBACNQ,UAAAA,IAGG1S,KAAKqD,yBACRrD,KAAKqD,uBAAyB,MAC5BrD,KAAKuR,SAASmB,GACd1S,KAAKqD,uBAAyB,SAKpC3D,SAASgT,GACP1S,KAAK6C,iBAAiB8P,iBACpBT,KAAM,qBACNQ,UAAAA,IAKE1S,KAAKa,WAGTb,KAAKa,UAAW,EAChBb,KAAK6C,iBACF0O,UACCmB,UAAAA,EACA/P,IAAK3C,KAAK4C,UAEX+B,KAAKwN,IACCA,GAGLnS,KAAKmS,UAAWR,gBAAiB,iBAWvCjS,MAAM2F,EAASuN,GACb,MAAMC,GACJ7S,KAAKqC,KAAK4B,IACR,sBACEzG,QAASA,IAAW,IAAKf,MAAOA,GAAS,KAC3C,2CAyCJ,GAtCImW,IACFC,EAAapN,KACXzF,KAAKqC,KAAK4B,IACR,iBACEoB,QAASuN,EAASvN,SACpB,yBAGAuN,EAASE,MACXD,EAAapN,KACXzF,KAAKqC,KAAK4B,IACR,eACE6O,MAAOF,EAASE,OAClB,sBAIAF,EAASd,UACXe,EAAapN,KACXzF,KAAKqC,KAAK4B,IACR,cACEiK,KAAM0E,EAASd,UACjB,mBAIFc,EAASG,YACXF,EAAapN,KACXzF,KAAKqC,KAAK4B,IACR,cACE+O,KAAMJ,EAASG,YACjB,0BAOc,IAAbpZ,GAA6BA,EAASoL,KAAK,cAoCpDyC,QAAQC,IAAIoL,GAAclO,KAAKsO,IAC7B9N,QAAQC,MAAMC,EAAU,KAAO4N,EAAMC,KAAK,SAE5ClT,KAAKuR,eAvC8D,CACnE,MAAM4B,EAAqBnT,KAAKc,UAAU8O,aACpCA,EAAeuD,EAAmB3J,UACxCoG,EAAawD,gBAAgB,UAERD,EAAmBE,aAC3BC,YAAcjO,EAE3B,MAAMkO,EAAcJ,EAAmBI,YACvCA,EAAYC,QAAU,WACpB5D,EAAaC,aAAa,SAAU,SAGtC,MAAM4D,EAAgBN,EAAmBM,cACnCC,EAAiBP,EAAmBO,eACpCC,EAAiBR,EAAmBQ,eAC1CD,EAAeF,QAAU,WACvBC,EAAcL,gBAAgB,UAC9BM,EAAe7D,aAAa,SAAU,QACtC8D,EAAeP,gBAAgB,UAC/BK,EAAcG,MAAMC,OAASJ,EAAcK,aAAe,MAE5DH,EAAeH,QAAU,WACvBC,EAAc5D,aAAa,SAAU,QACrC6D,EAAeN,gBAAgB,UAC/BO,EAAe9D,aAAa,SAAU,SAExC6D,EAAeK,cAAgBjY,EAC/B6X,EAAeI,cAAgBjY,EAC/ByX,EAAYQ,cAAgBjY,EAC5B4X,EAAeN,gBAAgB,UAC/BO,EAAe9D,aAAa,SAAU,QACtCrI,QAAQC,IAAIoL,GAAclO,KAAKsO,IAC7BQ,EAAc3C,MAAQmC,EAAMC,KAAK,UAUvCxT,SAASsU,GACP,GAAIhU,KAAKuC,iBAGP,OAEF,MAAM0R,EAAU5H,KAAK6H,MAAc,IAARF,GAK3B,GAAIC,EAAUjU,KAAK2N,WAAWsG,SAAWE,MAAMF,GAAU,CACvDjU,KAAK2N,WAAWsG,QAAUA,GAODjU,KAAKe,YAC1Bf,KAAKe,YAAYqT,cAAcC,iBAC/B9X,EAAW0H,IAAI,sBAEKgQ,IAClBjU,KAAKsU,oCACPC,aAAavU,KAAKsU,mCAClBtU,KAAKsU,kCAAoC,MAE3CtU,KAAK2N,WAAW6G,OAEhBxU,KAAKsU,kCAAoCG,WAAW,KAClDzU,KAAK2N,WAAW+G,OAChB1U,KAAKsU,kCAAoC,MA/oCJ,QAqpC7C5U,KAAKqB,GACHf,KAAKe,YAAcA,EAEnBA,EAAY4T,kBAAkBhQ,KAAK,EAAG4C,OAAAA,MACpCvH,KAAKoD,eAAiBmE,EACtBvH,KAAKuC,kBAAmB,EACxBvC,KAAK2N,WAAW+G,OAEhBE,EAAiBjQ,KAAK,KACpB3E,KAAKoC,SAASwC,SAAS,kBAAoBC,OAAQ7E,WAMvD,MAAM6U,EAAoB9T,EAAY+T,gBAAgBpN,MAAM,cAGtDqN,EAAkBhU,EAAYiU,cAActN,MAAM,cAGlDuN,EAAoBlU,EAAYmU,gBAAgBxN,MAAM,cAO5D,IAAIyN,EAHJnV,KAAKhF,QAAQoa,cAAcrU,EAAY6L,UAAU,GACjD5M,KAAKmC,iBAAiBiT,cAAcrU,EAAY6L,eAGxB,IAAbjT,GAA4BA,EAASoL,KAAK,WACnDoQ,EAAkB,KACTxb,EAASoL,KAAK,cACvBoQ,EAAkBnV,KAAK4C,QACdjJ,EAASoL,KAAK,YACvBoQ,EAAkB1U,SAAS4U,KAAKvO,MAAM,KAAK,IAE7C9G,KAAKuB,eAAeyO,YAAYjP,EAAaoU,GAC7CnV,KAAKsB,sBAAsB0O,YAAYjP,EAAaf,KAAK2C,KAEzD,MAAMzB,EAAYlB,KAAKkB,UACvBA,EAAU8O,YAAYjP,GACtB,MAAM6T,iBAAEA,EAAgBU,gBAAEA,EAAeC,aAAEA,GAAiBrU,EAEjClB,KAAKmB,mBACb6O,YAAYjP,GAE/B,MAAMyU,GAAiBxV,KAAK+B,MAAQ,IAAIhD,GACtCgC,EAAY0U,cAEXC,aACC7I,KAAM,KACN8I,KAAMta,EACNua,WAAY,IACZC,UAAW,IACXC,SAAU,KACVC,YAAa3Z,EAAY4Z,QACzBC,WAAY9Z,EAAW6Z,QACvBE,WAAY7Z,EAAW2Z,UAExBtO,MAAM,IAEE3E,OAAOC,OAAO,OAGzB4R,EAAiBjQ,KAAKwR,IACpBnW,KAAK2N,WAAWyI,SAASpW,KAAKc,UAAU2F,iBACxCzG,KAAKqW,sCAAsCtV,GAE3CyG,QAAQC,KACNtM,EACAqa,EACAX,EACAE,EACAE,IAECtQ,KAAKe,OAAQ4Q,EAAWC,EAAQC,EAAYC,EAAUC,MACrD,MAAMC,EAAapa,EAAW0H,IAAI,cAElCjE,KAAK4W,uBACHnB,YAAa1U,EAAY0U,YACzBkB,WAAAA,EACAE,YAAaH,GAAcA,EAAWI,OAExC,MAAMvW,EAAkBP,KAAKO,gBAGvBoV,EAAOpZ,EAAW0H,IAAI,oBAC5B,IAAIvD,EAAOiV,UAAeA,IAAS,KAE/BG,EAAW,KACXC,EAAcxZ,EAAW0H,IAAI,qBAC7BgS,EAAa1Z,EAAW0H,IAAI,oBAC5BiS,EAAa3Z,EAAW0H,IAAI,oBAE5BsS,EAAO1J,MAAQ8J,IAAezX,KAChCwB,UACU6V,EAAO1J,aAAa8I,GAAQY,EAAOZ,WACxCY,EAAOX,cAAcW,EAAOV,YAEjCC,EAAWiB,SAASR,EAAOT,SAAU,IAEjCC,IAAgB3Z,EAAY4Z,UAC9BD,EAAmC,EAArBQ,EAAOR,aAEnBE,IAAe9Z,EAAW6Z,UAC5BC,EAAiC,EAApBM,EAAON,YAElBC,IAAe7Z,EAAW2Z,UAC5BE,EAAiC,EAApBK,EAAOL,aAIpBO,GAAYV,IAAgB3Z,EAAY4Z,UAC1CD,EAmjEZ,SAAkCiB,GAChC,OAAQA,GACN,IAAK,UACH,OAAO5a,EAAY8H,KACrB,IAAK,YACH,OAAO9H,EAAY6a,OACrB,IAAK,cACH,OAAO7a,EAAY8a,QACrB,IAAK,iBACH,OAAO9a,EAAY+a,YACrB,IAAK,QACH,OAAO/a,EAAYgb,OAEvB,OAAOhb,EAAY8H,KAhkEKmT,CAAyBZ,IAErCD,GAAcN,IAAe7Z,EAAW2Z,UAC1CE,EAAaoB,GAA0Bd,IAGzCxW,KAAKuX,eAAe7W,GAClBoV,SAAAA,EACAC,YAAAA,EACAE,WAAAA,EACAC,WAAAA,IAEFlW,KAAKoC,SAASwC,SAAS,gBAAkBC,OAAQ7E,OAG5CA,KAAKwC,kBACRtB,EAAUsW,QAKZxX,KAAKyX,uBAAuB1W,SAOtByG,QAAQkQ,MACZnC,EACA,IAAI/N,QAAQ1C,IACV2P,WAAW3P,EApyCU,UAuyCpBvE,GAAoBG,KAGrBQ,EAAUyW,oBAGd3X,KAAKO,gBAAkBA,EAGvBW,EAAUsL,kBAAoBtL,EAAUsL,kBAExCxM,KAAKuX,eAAe7W,OAErBgH,MAAM,KAGL1H,KAAKuX,mBAEN5S,KAAK,WAKJzD,EAAU0W,aAIhBrC,EAAa5Q,KAAK,KAChB3E,KAAK6X,qBAAqB9W,EAAakU,KAGzCK,EAAgB3Q,KAAK,KAYnB,GAXA5D,EAAY+W,aAAanT,KAAKoT,IAC5B/X,KAAK2B,iBAAiBqW,QAASD,QAAAA,EAAShX,YAAAA,MAE1CA,EAAYkX,iBAAiBtT,KAAKuT,IAChClY,KAAK4B,oBAAoBoW,QAASE,YAAAA,MAIpChX,EAAUiX,6BAA6BxT,KAAKyT,IAC1CpY,KAAK6B,eAAemW,QAASI,sBAAAA,EAAuBrX,YAAAA,MAElD,wBAAyB0B,OAAQ,CACnC,MAAMuM,EAAWvM,OAAO4V,oBACtB,KACErY,KAAKsY,kBAAkBvX,GACvBf,KAAKwD,eAAe+U,OAAOvJ,KAE3BwJ,QAAS,MAEbxY,KAAKwD,eAAemD,IAAIqI,GAE1BhP,KAAKyY,sBAAsB1X,KAG7Bf,KAAK0Y,sBAAsB3X,GAC3Bf,KAAK2Y,oBAAoB5X,IAM3BrB,4BAA4BqB,GAC1B,IAAKxE,EAAW0H,IAAI,mBAClB,OAEF,MAAO2U,EAASC,EAAkBC,SAAoBtR,QAAQC,KAC5D1G,EAAYgY,kBACZhY,EAAYiY,yBACZjY,EAAYkY,iBAGd,IAAKL,IAAYE,EAEf,OAEF,GAAI/X,IAAgBf,KAAKe,YACvB,OAEF,MAAMoO,EAAYnP,KAAK6C,iBAAiBqW,qBAClB,IAAbvf,GACLA,EAASoL,KAAK,qCACVoU,iBAAkB5c,EAAW0H,IAAI,qBACnC,MAIAmL,EAAiB,IAAIgK,IACzB/J,EAAY,IAAI+J,IAQlB,GAPApZ,KAAK0D,oBACHyL,UAAAA,EACAkK,OAAO,EACPjK,eAAAA,EACAC,UAAAA,IAGGrP,KAAKiD,qBAGF,IAAIuE,QAAQ1C,IAChB9E,KAAKoC,SAASkX,IACZ,iBACAC,IACEzU,MAEA0U,MAAM,MAGRzY,IAAgBf,KAAKe,aACvB,OAGJ,IAAKf,KAAKoD,uBAMF,IAAIoE,QAAQ1C,IAChB9E,KAAKoC,SAASkX,IACZ,iBACAC,IACEzU,MAEA0U,MAAM,MAGRzY,IAAgBf,KAAKe,aACvB,OA6CJqO,EAAejL,IAAI,oBAzCO,EAAGsV,OAAAA,MAC3B,MAAMpH,GAAEA,EAAEqH,QAAEA,EAAO5I,MAAEA,GAAU2I,EAC/B,IAAKpH,EAAI,CACP,OAAQqH,GACN,IAAK,QACHvU,QAAQ+J,QACR,MACF,IAAK,QACH/J,QAAQC,MAAM0L,GACd,MACF,IAAK,SACH9Q,KAAKkB,UAAUgV,WAAaoB,GAA0BxG,GACtD,MACF,IAAK,WACH9Q,KAAKkB,UAAU4L,kBAAoBgE,EAAQ,EAC3C,MACF,IAAK,QACH9Q,KAAKkB,UAAUqU,aAAa5Q,KAAK,KAC/B3E,KAAK2Z,oBAEP,MACF,IAAK,UACHxU,QAAQyU,IAAI9I,GACZ,MACF,IAAK,OACH9Q,KAAKkB,UAAUsL,kBAAoBsE,EAGvC,OAGF,MAAM+I,EAAUrZ,SAASsZ,eAAezH,GACpCwH,EACFA,EAAQE,cAAc,IAAIC,YAAY,qBAAuBP,OAAAA,UAE/CrL,IAAV0C,GAAiC,OAAVA,GAEzB/P,EAAYwR,kBAAkB0H,SAAS5H,EAAIvB,KAMjD,MAAMoJ,EAAe,IAAId,IAiDzBhK,EAAejL,IAAI,WAhDF,EAAGgW,WAAAA,EAAYC,eAAAA,MAC9BF,EAAa/V,IACXgW,EACA,WAGE,IAAIE,EAAU,MACTH,EAAaI,IAAIH,KACpBE,QAAgBD,EAEZrZ,IAAgBf,KAAKe,qBAMrBf,KAAK0D,oBAAsB1D,KAAK0D,mBAAmByL,UAAUiD,wBACjEC,GAAI,OACJ9C,KAAM,WACN4K,WAAAA,EACAE,QAAAA,KAjBJ,MA8CJjL,EAAejL,IAAI,YAvBDuB,OAASyU,WAAAA,MACzB,MAAMC,EAAiBF,EAAajW,IAAIkW,GACnCC,IAILF,EAAa/V,IAAIgW,EAAY,YAGvBC,EAEFrZ,IAAgBf,KAAKe,mBAKnBf,KAAK0D,oBAAsB1D,KAAK0D,mBAAmByL,UAAUiD,wBACjEC,GAAI,OACJ9C,KAAM,YACN4K,WAAAA,OASJ/K,EAAejL,IAAI,yBAHY,EAAGsV,OAAAA,MAChCtK,EAAUiD,uBAAuBqH,KAOnCpK,EAAUlL,IAAI,YAHIoW,IAChBva,KAAK2D,YAAYgM,QAAS,IAO5BN,EAAUlL,IAAI,UAHEoW,IACdva,KAAK2D,YAAYgM,QAAS,IAI5B,IAAK,MAAOJ,EAAMC,KAAaJ,EAC7BpP,KAAKoC,SAASkX,IAAI/J,EAAMC,GAE1B,IAAK,MAAOD,EAAMC,KAAaH,EAC7B5M,OAAO+X,iBAAiBjL,EAAMC,GAGhC,UACQL,EAAUsL,eACd7B,QAAAA,EACAC,iBAAAA,EACA6B,SACEC,SAAUC,UAAUD,SACpBE,SAAUD,UAAUC,UAEtBC,YACK9a,KAAKiD,aACR8X,QAAS/a,KAAK4C,QACdoY,SAAUhb,KAAKoD,eACf0O,SAAU9R,KAAK8O,aAEf5L,SAAUlD,KAAKkD,UAAYlD,KAAKkD,SAAS+X,SAEzCC,QAASlb,KAAKkD,UAAYlD,KAAKkD,SAASe,IAAI,cAC5C2I,SAAU7L,EAAY6L,SACtBmE,IAAK/Q,KAAK2C,IACV0X,QAASvB,KAIT9Y,KAAK6C,iBAAiBxC,gBACxBL,KAAKoC,SAASwC,SAAS,kBAAoBC,OAAQ7E,OAErD,MAAOoF,GAKP,OAHAD,QAAQC,iCAAiCA,GAASA,EAAMC,kBAExDrF,KAAKoQ,kCAIDjB,EAAUiD,wBACdC,GAAI,MACJ9C,KAAM,eAEFvP,KAAKkB,UAAUia,4BAKrB3T,QAAQ1C,UAAUH,KAAK,KACjB3E,KAAK0D,qBACP1D,KAAK0D,mBAAmB2V,OAAQ,MAUtC3Z,wBAAwBqB,GACtB,MAAMqa,QAAiBpb,KAAKe,YAAYsa,cACxC,GAAIta,IAAgBf,KAAKe,YACvB,OAGF,MAAMua,EAASF,GAAYA,EAASG,SAAU,EAC9Cvb,KAAK6C,iBAAiB8P,iBACpBT,KAAM,SACNoJ,OAAAA,KAOJ5b,2BAA2BqB,EAAakU,GACtC,MAAOyB,EAAY8E,SAAoBhU,QAAQC,KAC7CwN,EACC1Y,EAAW0H,IAAI,mBAAmD,KAA9BlD,EAAY0a,kBAGnD,GAAI1a,IAAgBf,KAAKe,YACvB,OAEF,IAAI2a,GAAmB,EAMvB,GAHIhF,GAAoC,UAAtBA,EAAWiF,SAC3BD,GAAmB,GAEjBF,IACFA,EAAWI,KAAKC,KACTA,IAIL1W,QAAQ2W,KAAK,wCACb9b,KAAK+b,iBAAiBxe,GAAqBie,aACpC,KAGJE,GAEH,IAAK,MAAMG,KAAML,EACf,GAAIK,GAAMzgB,EAAgB2J,KAAK8W,GAAK,CAClCH,GAAmB,EACnB,MAMJA,GACF1b,KAAK2Z,mBAOTja,0BAA0BqB,GACxB,MAAMib,KACJA,EAAI9Y,SACJA,EAAQ+Y,2BACRA,EAA0BC,cAC1BA,SACQnb,EAAYob,cAEtB,GAAIpb,IAAgBf,KAAKe,YACvB,OAgBF,IAAIqb,EAdJpc,KAAKiD,aAAe+Y,EACpBhc,KAAKkD,SAAWA,EAChBlD,KAAKmD,4BAA8B8Y,EAEnCjc,KAAKoD,iBAAoBpD,KAAKoD,eAAiB8Y,GAG/C/W,QAAQyU,WACC7Y,EAAY0U,gBAAgBuG,EAAKK,wBAClCL,EAAKM,UAAY,KAAKC,aAAaP,EAAKQ,SAAW,KAAKD,uBAChD/e,IAAW,SACpBwC,KAAKkB,UAAU0I,YAAc,WAAa,OAIjD,MAAM6S,EAAYT,GAAQA,EAAKU,MAC3BD,IACFL,EAAWK,GAEb,MAAME,EAAgBzZ,GAAYA,EAASe,IAAI,YAC3C0Y,IAQkB,aAAlBA,GACC,mBAAmB5X,KAAK4X,KAEzBP,EAAWO,IAGXP,EACFpc,KAAK6O,YACAuN,OAAcH,GAA8Bzb,SAASkO,SAEjDuN,GACTjc,KAAK6O,SAASoN,GAGZD,EAAKY,eAAiBZ,EAAKa,mBAC7B1X,QAAQ2W,KAAK,iCACb9b,KAAK+b,iBAAiBxe,GAAqBuf,SAE1Cd,EAAKa,oBAAqBb,EAAKY,cAC/B5c,KAAKkB,UAAU6I,yBAEhB5E,QAAQ2W,KAAK,oDACb9b,KAAK+b,iBAAiBxe,GAAqBuf,QAI7C,IAAIC,EAAY,QACZxd,GAAe0I,SAAS+T,EAAKK,oBAC/BU,MAAgBf,EAAKK,iBAAiBW,QAAQ,IAAK,QAErD,IAAIC,EAAc,QAClB,GAAIjB,EAAKM,SAAU,CACjB,MAAMY,EAAWlB,EAAKM,SAASa,cAC/B3d,GAAiBoc,KAAK,SAAUwB,GAC9B,QAAKF,EAASjV,SAASmV,KAGvBH,EAAcG,EAAUJ,QAAQ,SAAU,MACnC,KAGX,IAAIK,EAAW,KACXrB,EAAKY,aACPS,EAAW,MACFrB,EAAKa,oBACdQ,EAAW,YAEbrd,KAAK6C,iBAAiB8P,iBACpBT,KAAM,eACN1U,QAASuf,EACTK,UAAWH,EACXI,SAAAA,IAGFrd,KAAKoC,SAASwC,SAAS,kBAAoBC,OAAQ7E,QAMrDN,4BAA4BqB,GAC1B,MAAMuc,QAAevc,EAAYwc,gBAEjC,GAAIxc,IAAgBf,KAAKe,YACvB,OAEF,IAAKuc,GAAU/gB,EAAW0H,IAAI,qBAC5B,OAEF,MAAMuZ,EAAYF,EAAO/V,OACzB,GAAIiW,IAAcxd,KAAK2M,WAIrB,YAHAxH,QAAQC,MACN,iFAIJ,IAAIiD,EAAI,EAER,KAAOA,EAAImV,GAAaF,EAAOjV,MAAQA,EAAI,GAAGoV,YAC5CpV,IAEF,GAAIA,IAAMmV,EACR,OAEF,MAAMtc,UAAEA,EAASC,mBAAEA,EAAkBnG,QAAEA,GAAYgF,KAEnDkB,EAAUwc,cAAcJ,GACxBnc,EAAmBuc,cAAcJ,GAIjCtiB,EAAQoa,cAAcoI,GAAW,GACjCxiB,EAAQ2iB,cACNzc,EAAU4L,kBACV5L,EAAU0c,mBAOdle,uBAAsB+V,YAAEA,EAAWkB,WAAEA,EAAUE,YAAEA,EAAc,OACzD7W,KAAKwC,kBAAoBjG,EAAW0H,IAAI,oBAK5CjE,KAAKwB,WAAWkK,YACd+J,YAAAA,EACAoI,aAAclH,IAAezX,GAC7B4e,UAAWvhB,EAAW0H,IAAI,sBAGxBjE,KAAKwB,WAAWjB,kBAClBP,KAAKO,gBAAkBP,KAAKwB,WAAWjB,gBAEvCP,KAAK+d,gBAAkB/d,KAAKwB,WAAWuc,iBAKvClH,IACC7W,KAAKO,iBACNoW,IAAezX,KAEfc,KAAKO,gBAAkByd,KAAKC,UAAUpH,GAGtC7W,KAAKwB,WAAWiE,MAAOyY,aAAcrH,EAAasD,WAAY,UAOlEza,6BAA6BqB,GAC3B,MAAMod,QAAoBpd,EAAYqd,iBAElCrd,IAAgBf,KAAKe,aAGpBod,GAAgB5hB,EAAW0H,IAAI,uBAI/Bka,EAAYlW,SAAS7K,GAAeihB,OACvCre,KAAKc,UAAU2F,gBAAgBC,UAAUC,IAAI1H,MAOjDS,sCAAsCqB,GACpC,GAAIA,IAAgBf,KAAKe,YACvB,OAEF,MAAMwR,kBAAEA,GAAsBxR,EAE9BwR,EAAkB+L,cAAgB,WAChC7b,OAAO+X,iBAAiB,eAAgB+D,KAE1ChM,EAAkBiM,gBAAkB,WAClC/b,OAAOiN,oBAAoB,eAAgB6O,MAI/C7e,eACE+e,GACA3I,SAAEA,EAAQC,YAAEA,EAAWE,WAAEA,EAAUC,WAAEA,OAErC,MAAMwI,EAAcC,IACdljB,EAAgBkjB,KAClB3e,KAAKkB,UAAU0d,cAAgBD,IAWnC3e,KAAKsC,kBAAmB,EACxBtC,KAAKyB,WAAW8V,eAAexB,GATR,EAAC8I,EAAQC,KAC1BpjB,EAAkBmjB,KACpB7e,KAAKkB,UAAU+U,WAAa4I,GAE1BljB,EAAkBmjB,KACpB9e,KAAKkB,UAAUgV,WAAa4I,IAMhCC,CAAe9I,EAAYC,GAEvBlW,KAAKO,iBACPme,EAAY1e,KAAK+d,wBACV/d,KAAK+d,gBAEZ/d,KAAKuB,eAAeyd,QAAQhf,KAAKO,iBACjCP,KAAKO,gBAAkB,MACdke,IACTC,EAAY5I,GAEZ9V,KAAKuB,eAAeyd,QAAQP,IAK9Bze,KAAKhF,QAAQ2iB,cACX3d,KAAKkB,UAAU4L,kBACf9M,KAAKkB,UAAU0c,kBAEjB5d,KAAKmC,iBAAiBwb,cAAc3d,KAAKkB,UAAU4L,mBAE9C9M,KAAKkB,UAAUsL,oBAGlBxM,KAAKkB,UAAUsL,kBAAoBnR,IAIvCqE,UACOM,KAAKe,cAGVf,KAAKkB,UAAU8H,UACfhJ,KAAKmB,mBAAmB6H,UAGpBhJ,KAAKkB,UAAUyI,WAAazN,EAAa+iB,KAC3Cjf,KAAKe,YAAYiI,YAIrBtJ,iBACEM,KAAKoB,kBAAkB8d,WAAalf,KAAKiB,aACzCjB,KAAKoB,kBAAkB+d,uBAAyBnf,KAAKyB,WAAW2d,uBAChEpf,KAAKoB,kBAAkBie,yBAGzB3f,cASE,GALAM,KAAK0D,oBAAsB1D,KAAK0D,mBAAmByL,UAAUiD,wBAC3DC,GAAI,MACJ9C,KAAM,cAGJvP,KAAKiB,aAIP,OAGF,IAAKjB,KAAKgN,iBAUR,YATAhN,KAAKqC,KACF4B,IACC,yBACA,KACA,6DAEDU,KAAK2a,IACJtf,KAAKoF,MAAMka,KAOjB,IAAKtf,KAAKkB,UAAUqe,eAWlB,YAVAvf,KAAKqC,KACF4B,IACC,qBACA,KACA,sDAEDU,KAAK6a,IAEJ/c,OAAOgd,MAAMD,KAKnB,MAAME,EAAgB1f,KAAKkB,UAAUye,mBAC/BC,EAAiB5f,KAAKc,UAAU8e,eAChCC,EAAkBtjB,EAAW0H,IAAI,mBACjCkU,EAA+BnY,KAAKkB,UACvCiX,6BAEGlX,EAAegM,GAAuBC,SAAS4S,mBACnD9f,KAAKe,YACL2e,EACAE,EACAC,EACA1H,EACAnY,KAAKqC,MAEPrC,KAAKiB,aAAeA,EACpBjB,KAAKuL,iBAELtK,EAAa8e,SAEb/f,KAAK6C,iBAAiB8P,iBACpBT,KAAM,WAIVxS,aAIEM,KAAK0D,oBAAsB1D,KAAK0D,mBAAmByL,UAAUiD,wBAC3DC,GAAI,MACJ9C,KAAM,aAGJvP,KAAKiB,eACPjB,KAAKiB,aAAa8O,UAClB/P,KAAKiB,aAAe,KAEhBjB,KAAKe,aACPf,KAAKe,YAAYwR,kBAAkByN,iBAGvChgB,KAAKuL,kBAGP7L,YAAYugB,GACV,IAAKjgB,KAAKe,YACR,OAEF,MAAMmf,GAAelgB,KAAKkB,UAAU0d,cAAgB,IAAMqB,GAAS,IACnEjgB,KAAKkB,UAAU0d,cAAgBsB,GAKjCxgB,0BACOM,KAAKqB,qBAGVrB,KAAKqB,oBAAoB8e,WAG3BzgB,kBACOM,KAAKgN,kBAGVvK,OAAO2d,SAGT1gB,aACE,MAAM0C,SAAEA,EAAQU,aAAEA,GAAiB9C,KAEnC8C,EAAaud,YAAcrgB,KAAKqgB,YAAYpX,KAAKjJ,MACjD8C,EAAawd,WAAatgB,KAAKsgB,WAAWrX,KAAKjJ,MAE/CoC,EAASkX,IAAI,SAAUiH,IACvBne,EAASkX,IAAI,aAAckH,IAC3Bpe,EAASkX,IAAI,cAAexW,EAAaud,aACzCje,EAASkX,IAAI,aAAcxW,EAAawd,YACxCle,EAASkX,IAAI,eAAgBmH,IAC7Bre,EAASkX,IAAI,iBAAkBoH,IAC/Bte,EAASkX,IAAI,eAAgBqH,IAC7Bve,EAASkX,IAAI,gBAAiBsH,IAC9Bxe,EAASkX,IAAI,mBAAoBuH,IACjCze,EAASkX,IAAI,qBAAsBwH,IACnC1e,EAASkX,IAAI,WAAYyH,IACzB3e,EAASkX,IAAI,cAAe0H,IAC5B5e,EAASkX,IAAI,0BAA2B2H,IACxC7e,EAASkX,IAAI,mBAAoB4H,IACjC9e,EAASkX,IAAI,QAAS6H,IACtB/e,EAASkX,IAAI,WAAY8H,IACzBhf,EAASkX,IAAI,OAAQ+H,IACrBjf,EAASkX,IAAI,YAAagI,IAC1Blf,EAASkX,IAAI,WAAYiI,IACzBnf,EAASkX,IAAI,WAAYkI,IACzBpf,EAASkX,IAAI,eAAgBmI,IAC7Brf,EAASkX,IAAI,SAAUoI,IACvBtf,EAASkX,IAAI,UAAWqI,IACxBvf,EAASkX,IAAI,YAAasI,IAC1Bxf,EAASkX,IAAI,oBAAqBuI,IAClCzf,EAASkX,IAAI,eAAgBwI,IAC7B1f,EAASkX,IAAI,WAAYyI,IACzB3f,EAASkX,IAAI,YAAa0I,IAC1B5f,EAASkX,IAAI,wBAAyB2I,IACtC7f,EAASkX,IAAI,mBAAoB4I,IACjC9f,EAASkX,IAAI,oBAAqB6I,IAClC/f,EAASkX,IAAI,mBAAoB8I,IACjChgB,EAASkX,IAAI,oBAAqB+I,IAClCjgB,EAASkX,IAAI,qBAAsBgJ,IACnClgB,EAASkX,IAAI,OAAQiJ,IACrBngB,EAASkX,IAAI,kBAAmBkJ,IAChCpgB,EAASkX,IAAI,yBAA0BmJ,IACvCrgB,EAASkX,IAAI,yBAA0BoJ,IAEnCnmB,EAAW0H,IAAI,YACjBnB,EAAa6f,sBAAwBA,GAErCvgB,EAASkX,IAAI,eAAgBxW,EAAa6f,uBAC1CvgB,EAASkX,IAAI,eAAgBxW,EAAa6f,8BAEpB,IAAbhpB,GAA4BA,EAASoL,KAAK,cACnD3C,EAASkX,IAAI,kBAAmBsJ,IAChCxgB,EAASkX,IAAI,WAAYuJ,MAI7BnjB,mBACE,MAAM0C,SAAEA,EAAQU,aAAEA,GAAiB9C,KAEnC8C,EAAaggB,aAAe,MAC1B1gB,EAASwC,SAAS,UAAYC,OAAQpC,WAExCK,EAAaigB,iBAAmB,MAC9B3gB,EAASwC,SAAS,cAChBC,OAAQpC,OACR/B,KAAMF,SAASC,SAASC,KAAKC,UAAU,OAG3CmC,EAAakgB,kBAAoB,MAC/B5gB,EAASwC,SAAS,eAAiBC,OAAQpC,WAE7CK,EAAamgB,iBAAmB,MAC9B7gB,EAASwC,SAAS,cAAgBC,OAAQpC,WAE5CK,EAAaogB,wBAA0B3I,CAAAA,IACrCnY,EAASwC,SAAS,qBAChBC,OAAQpC,OACRgX,OAAQc,EAAMd,WAIlBhX,OAAO+X,iBAAiB,mBAAoB2I,IAC5C1gB,OAAO+X,iBAAiB,QAAS4I,IAAkBC,SAAS,IAC5D5gB,OAAO+X,iBAAiB,aAAc8I,IACpCD,SAAS,IAEX5gB,OAAO+X,iBAAiB,QAAS+I,IACjC9gB,OAAO+X,iBAAiB,UAAWgJ,IACnC/gB,OAAO+X,iBAAiB,QAASiJ,IACjChhB,OAAO+X,iBAAiB,SAAU1X,EAAaggB,cAC/CrgB,OAAO+X,iBAAiB,aAAc1X,EAAaigB,kBACnDtgB,OAAO+X,iBAAiB,cAAe1X,EAAakgB,mBACpDvgB,OAAO+X,iBAAiB,aAAc1X,EAAamgB,kBACnDxgB,OAAO+X,iBACL,oBACA1X,EAAaogB,0BAIjBxjB,eACE,MAAM0C,SAAEA,EAAQU,aAAEA,GAAiB9C,KAEnCoC,EAASqN,KAAK,SAAU8Q,IACxBne,EAASqN,KAAK,aAAc+Q,IAC5Bpe,EAASqN,KAAK,cAAe3M,EAAaud,aAC1Cje,EAASqN,KAAK,aAAc3M,EAAawd,YACzCle,EAASqN,KAAK,eAAgBgR,IAC9Bre,EAASqN,KAAK,iBAAkBiR,IAChCte,EAASqN,KAAK,eAAgBkR,IAC9Bve,EAASqN,KAAK,gBAAiBmR,IAC/Bxe,EAASqN,KAAK,mBAAoBoR,IAClCze,EAASqN,KAAK,qBAAsBqR,IACpC1e,EAASqN,KAAK,WAAYsR,IAC1B3e,EAASqN,KAAK,cAAeuR,IAC7B5e,EAASqN,KAAK,0BAA2BwR,IACzC7e,EAASqN,KAAK,mBAAoByR,IAClC9e,EAASqN,KAAK,QAAS0R,IACvB/e,EAASqN,KAAK,WAAY2R,IAC1Bhf,EAASqN,KAAK,OAAQ4R,IACtBjf,EAASqN,KAAK,YAAa6R,IAC3Blf,EAASqN,KAAK,WAAY8R,IAC1Bnf,EAASqN,KAAK,WAAY+R,IAC1Bpf,EAASqN,KAAK,eAAgBgS,IAC9Brf,EAASqN,KAAK,SAAUiS,IACxBtf,EAASqN,KAAK,UAAWkS,IACzBvf,EAASqN,KAAK,YAAamS,IAC3Bxf,EAASqN,KAAK,oBAAqBoS,IACnCzf,EAASqN,KAAK,eAAgBqS,IAC9B1f,EAASqN,KAAK,WAAYsS,IAC1B3f,EAASqN,KAAK,YAAauS,IAC3B5f,EAASqN,KAAK,wBAAyBwS,IACvC7f,EAASqN,KAAK,mBAAoByS,IAClC9f,EAASqN,KAAK,oBAAqB0S,IACnC/f,EAASqN,KAAK,mBAAoB2S,IAClChgB,EAASqN,KAAK,oBAAqB4S,IACnCjgB,EAASqN,KAAK,qBAAsB6S,IACpClgB,EAASqN,KAAK,OAAQ8S,IACtBngB,EAASqN,KAAK,kBAAmB+S,IACjCpgB,EAASqN,KAAK,yBAA0BgT,IACxCrgB,EAASqN,KAAK,yBAA0BiT,IAEpC5f,EAAa6f,wBACfvgB,EAASqN,KAAK,eAAgB3M,EAAa6f,uBAC3CvgB,EAASqN,KAAK,eAAgB3M,EAAa6f,uBAE3C7f,EAAa6f,sBAAwB,YAEf,IAAbhpB,GAA4BA,EAASoL,KAAK,cACnD3C,EAASqN,KAAK,kBAAmBmT,IACjCxgB,EAASqN,KAAK,WAAYoT,KAG5B/f,EAAaud,YAAc,KAC3Bvd,EAAawd,WAAa,MAG5B5gB,qBACE,MAAMoD,aAAEA,GAAiB9C,KAEzByC,OAAOiN,oBAAoB,mBAAoByT,IAC/C1gB,OAAOiN,oBAAoB,QAAS0T,IAAkBC,SAAS,IAC/D5gB,OAAOiN,oBAAoB,aAAc4T,IACvCD,SAAS,IAEX5gB,OAAOiN,oBAAoB,QAAS6T,IACpC9gB,OAAOiN,oBAAoB,UAAW8T,IACtC/gB,OAAOiN,oBAAoB,QAAS+T,IACpChhB,OAAOiN,oBAAoB,SAAU5M,EAAaggB,cAClDrgB,OAAOiN,oBAAoB,aAAc5M,EAAaigB,kBACtDtgB,OAAOiN,oBAAoB,cAAe5M,EAAakgB,mBACvDvgB,OAAOiN,oBAAoB,aAAc5M,EAAamgB,kBACtDxgB,OAAOiN,oBACL,oBACA5M,EAAaogB,yBAGfpgB,EAAaggB,aAAe,KAC5BhgB,EAAaigB,iBAAmB,KAChCjgB,EAAakgB,kBAAoB,KACjClgB,EAAamgB,iBAAmB,KAChCngB,EAAaogB,wBAA0B,MAGzCxjB,qBAAqBsM,IAGhBhM,KAAKuD,kBAAoB,GAAKyI,EAAQ,GACtChM,KAAKuD,kBAAoB,GAAKyI,EAAQ,KAEvChM,KAAKuD,kBAAoB,GAE3BvD,KAAKuD,mBAAqByI,EAC1B,MAAM0X,EACJrX,KAAKsX,KAAK3jB,KAAKuD,mBACf8I,KAAKI,MAAMJ,KAAKuX,IAAI5jB,KAAKuD,oBAE3B,OADAvD,KAAKuD,mBAAqBmgB,EACnBA,GAOTG,qBAEE,OAAO7jB,KAAK0D,oBAAsB1D,KAAK0D,mBAAmB2V,QAAS,IAIvE,IAAIyK,GA4LAC,GAwOAnB,GAA0BC,GAna9B,QAAwB,IAAblpB,GAA4BA,EAASoL,KAAK,WAAY,CAC/D,MAAMif,GACJ,OACA,2BACA,6BAEFF,GAAkB,SAAU5V,GAC1B,QAAaE,IAATF,EAGJ,IACE,MAAM+V,EAAe,IAAIlT,IAAItO,OAAOhC,SAAS4U,MAAM6O,QAAU,OAC7D,GAAIF,EAAsB/b,SAASgc,GAEjC,OAEF,MAAMC,OAAEA,EAAMC,SAAEA,GAAa,IAAIpT,IAAI7C,EAAMzL,OAAOhC,SAAS4U,MAO3D,GAAI6O,IAAWD,GAA6B,UAAbE,EAC7B,MAAM,IAAIxkB,MAAM,uCAElB,MAAOiP,GACP,MAAMvJ,EAAUuJ,GAAMA,EAAGvJ,QAMzB,MALA/E,GAAqB+B,KAClB4B,IAAI,gBAAiB,KAAM,4CAC3BU,KAAK+M,IACJpR,GAAqB8E,MAAMsM,GAAuBrM,QAAAA,MAEhDuJ,IAwBZ,SAAS+T,IAAsBxI,WAAEA,IAC/B,GAAqB,oBAAViK,QAA0BA,MAAMxd,QACzC,OAEF,MAAMyd,EAAW/jB,GAAqBY,UAAUojB,YAChCnK,EAAa,GAEvBoK,EAAYF,GAAYA,EAASlO,SAAWkO,EAASlO,QAAQqO,MAC9DD,GAGLH,MAAMzd,IAAIwT,EAAYoK,GAGxB,SAAS5Y,KACP,MAAM7K,EAAYR,GAAqBQ,UACvC,IAAIoN,EACJ,QAAwB,IAAbvU,GAA4BA,EAASoL,KAAK,WAAY,CAC/D,MAAM0f,EAAcjkB,SAASC,SAASikB,OAAO/jB,UAAU,GACjDgkB,EAAS3oB,EAAiByoB,GAChCvW,EAAO,SAAUyW,EAASA,EAAOzW,KAAO3R,EAAW0H,IAAI,cACvD6f,GAAgB5V,QACPvU,EAASoL,KAAK,cACvBmJ,EAAOzL,OAAOhC,SAAS4U,KACd1b,EAASoL,KAAK,YACvBmJ,EAAO3R,EAAW0H,IAAI,eAGxB,QAAwB,IAAbtK,GAA4BA,EAASoL,KAAK,WAAY,CAC/D,MAAM6f,EAAYpkB,SAASqkB,cAAc,SACzCD,EAAUvS,GAAKvR,EAAUgkB,kBACzBF,EAAUG,UAAY,YACtBH,EAAU/U,aAAa,OAAQ,QAC/B+U,EAAU7Q,cAAgBjY,EAC1B0E,SAASwkB,KAAKC,YAAYL,GAGvBniB,OAAOyiB,MACPziB,OAAO0iB,YACP1iB,OAAO2iB,UACP3iB,OAAOwP,KAKR2S,EAAU9T,MAAQ,MAHlBhQ,EAAU9F,QAAQqqB,SAASxV,aAAa,SAAU,QAClD/O,EAAUqB,iBAAiBmjB,eAAezV,aAAa,SAAU,SAKnE+U,EAAUpK,iBAAiB,SAAU,SAAUjB,GAC7C,MAAMgM,EAAQhM,EAAIiM,OAAOD,MACpBA,GAA0B,IAAjBA,EAAMhe,QAGpBjH,GAAqB8B,SAASwC,SAAS,mBACrCC,OAAQ7E,KACR4kB,UAAWrL,EAAIiM,WAKnB1kB,EAAUsG,cAAcoT,iBAAiB,WAAY,SAAUjB,GAC7DA,EAAIkM,iBAEJlM,EAAImM,aAAaC,WAAa,SAEhC7kB,EAAUsG,cAAcoT,iBAAiB,OAAQ,SAAUjB,GACzDA,EAAIkM,iBAEJ,MAAMF,EAAQhM,EAAImM,aAAaH,MAC1BA,GAA0B,IAAjBA,EAAMhe,QAGpBjH,GAAqB8B,SAASwC,SAAS,mBACrCC,OAAQ7E,KACR4kB,UAAWrL,EAAImM,sBAInB5kB,EAAU9F,QAAQqqB,SAASxV,aAAa,SAAU,QAClD/O,EAAUqB,iBAAiBmjB,eAAezV,aAAa,SAAU,QAG9DvP,GAAqBL,wBACxB1D,EAAW4H,IAAI,mBAAmB,GAClC7D,GAAqB+B,KAClB4B,IACC,qBACA,KACA,6DAEDU,KAAK2J,IACJnJ,QAAQ2W,KAAKxN,MAIdhO,GAAqB0M,mBACxBlM,EAAU9F,QAAQolB,MAAM1Z,UAAUC,IAAI,UACtC7F,EAAUqB,iBAAiByjB,YAAYlf,UAAUC,IAAI,WAGlDrG,GAAqBuK,qBACxB/J,EAAU9F,QAAQ6qB,uBAAuBnf,UAAUC,IAAI,UACvD7F,EAAUqB,iBAAiB0jB,uBAAuBnf,UAAUC,IAAI,WAG9DrG,GAAqBP,wBACvBe,EAAU9F,QAAQ8qB,SAASpf,UAAUC,IAAI,UAG3C7F,EAAUsG,cAAcoT,iBACtB,gBACA,SAAUjB,GACJA,EAAIiM,SAA+BxlB,MACrCM,GAAqB8B,SAASwC,SAAS,UAAYC,OAAQ7E,SAG/D,GAGF,IACE+jB,GAAwB7V,GACxB,MAAOhJ,GACP5E,GAAqB+B,KAClB4B,IAAI,gBAAiB,KAAM,4CAC3BU,KAAK2J,IACJhO,GAAqB8E,MAAMkJ,EAAKpJ,MAiDxC,SAASub,IAAsBtG,WAAEA,EAAU4L,UAAEA,EAAS3gB,MAAEA,IAQtD,GALI+U,IAAe7Z,GAAqBuM,MACtCvM,GAAqBtF,QAAQgrB,6BAA4B,GAIvD1lB,GAAqBmB,WAAW2d,uBAAwB,CAC1D,MAAMiF,EAAW/jB,GAAqBY,UAAUojB,YAChCnK,EAAa,GAEvB5P,EAAgBjK,GAAqBa,mBAAmB8kB,aAC9C9L,EAAa,GAEzBkK,GAAY9Z,GACdA,EAAc2b,SAAS7B,GAIvBjf,GACF9E,GAAqB+B,KAClB4B,IACC,kBACA,KACA,+CAEDU,KAAK2J,IACJhO,GAAqB8E,MAAMkJ,EAAKlJ,KAItC9E,GAAqBuC,iBAAiB8P,iBACpCT,KAAM,WACN6T,UAAAA,IAGFzlB,GAAqBS,YAAYolB,WAAWxhB,KAAK,SAAU6f,GACzDlkB,GAAqBuC,iBAAiB8P,iBACpCT,KAAM,gBACNsS,MAAAA,MAKN,SAASzD,IAAkB/J,KAAEA,IAE3B,IAAIoP,EACJ,OAAQpP,GACN,IAAK,SACHoP,EAAOhqB,EAAY6a,OACnB,MACF,IAAK,YACL,IAAK,UACHmP,EAAOhqB,EAAY8a,QACnB,MACF,IAAK,cACHkP,EAAOhqB,EAAY+a,YACnB,MACF,IAAK,SACHiP,EAAOhqB,EAAYgb,OACnB,MACF,IAAK,OACHgP,EAAOhqB,EAAY8H,KACnB,MACF,QAEE,YADAiB,QAAQC,MAAM,sCAAwC4R,GAG1D1W,GAAqBmB,WAAW4kB,WAAWD,GAAwB,GAGrE,SAASpF,GAAqBzH,GAG5B,OAAQA,EAAIoC,QACV,IAAK,WACHrb,GAAqBQ,UAAU9F,QAAQmf,WAAWmM,SAClD,MAEF,IAAK,OACEhmB,GAAqBP,wBACxBO,GAAqBoK,QAAQ6b,SAE/B,MAEF,IAAK,QACHjmB,GAAqBqZ,kBACrB,MAEF,IAAK,SACH0H,MAKN,SAASJ,GAAiC1H,GACxCjZ,GAAqBY,UAAUslB,sBAAwBjN,EAAIkN,MAG7D,SAAS3F,GAA4BvH,GACnCjZ,GAAqBc,kBAAkB+d,uBACrC7e,GAAqBmB,WAAW2d,uBAElC,MAAMrd,EAAQzB,GAAqByB,MAC/BA,GAASzB,GAAqBgC,kBAEhCP,EAAMoC,IAAI,cAAeoV,EAAI6M,MAAM1e,MAAM,cAI7C,SAASgZ,GAAwBnH,GAC/B,MAAM9Y,EAAW8Y,EAAI9Y,SACnBsB,EAAQzB,GAAqByB,MAE3BA,GAASzB,GAAqBgC,kBAChCP,EACG2kB,aACC7Z,KAAMpM,EAAS0Z,WACfxE,KAAMlV,EAASkmB,MACf/Q,WAAYnV,EAASmmB,KACrB/Q,UAAWpV,EAASomB,IACpB/Q,SAAUrV,EAASqV,WAEpBpO,MAAM,cAIX,MAAM2N,EAAO/U,GAAqBiB,eAAeulB,aAC/CrmB,EAASsmB,eAEXzmB,GAAqBQ,UAAU9F,QAAQgsB,aAAa3R,KAAOA,EAC3D/U,GAAqBQ,UAAUqB,iBAAiB8kB,mBAAmB5R,KAAOA,EAG1E,MAAM6R,EAAc5mB,GAAqBY,UAAUojB,YACnChkB,GAAqBuM,KAAO,GAEtCsa,GACHD,GAAeA,EAAYE,kBAAoBxpB,GAAgBypB,SAClE/mB,GAAqBtF,QAAQgrB,4BAA4BmB,GAG3D,SAAShF,GAA2B5I,GAClC,MAAMxX,EAAQzB,GAAqByB,MAC/BA,GAASzB,GAAqBgC,kBAEhCP,EAAMoC,IAAI,aAAcoV,EAAIvC,MAAMtP,MAAM,cAI5C,SAAS2a,GAA2B9I,GAClC,MAAMxX,EAAQzB,GAAqByB,MAC/BA,GAASzB,GAAqBgC,kBAEhCP,EAAMoC,IAAI,aAAcoV,EAAIvC,MAAMtP,MAAM,cAI5C,SAAS6Y,KACP,MAAMxf,YAAEA,EAAWG,UAAEA,GAAcZ,GACnC,IAAKS,EACH,OAEF,MAAMyL,EAAoBtL,EAAUsL,kBAEZ,SAAtBA,GACsB,aAAtBA,GACsB,eAAtBA,IAGAtL,EAAUsL,kBAAoBA,GAEhCtL,EAAU0W,SAGZ,SAAS4I,GAAoBjH,GAC3B,MAAM7Y,EAAO6Y,EAAI7Y,KACZA,IAGAJ,GAAqBgC,iBAEdhC,GAAqBkB,WAAW8lB,oBAC1ChnB,GAAqBiB,eAAeyd,QAAQte,GAF5CJ,GAAqBC,gBAAkBG,GAmD3C,SAASwgB,KACP5gB,GAAqBinB,0BAEvB,SAASpG,KACP7gB,GAAqBqZ,kBAEvB,SAASyH,KACP9gB,GAAqBknB,gBAAiB7V,gBAAiB,aAEzD,SAAS0P,KACP/gB,GAAqBknB,gBAAiB7V,gBAAiB,SAEzD,SAAS2P,KACHhhB,GAAqBS,cACvBT,GAAqBuM,KAAO,GAGhC,SAAS0U,KACHjhB,GAAqBS,cACvBT,GAAqBuM,KAAOvM,GAAqBqM,YAGrD,SAAS6U,KACPlhB,GAAqBY,UAAUumB,WAEjC,SAAShG,KACPnhB,GAAqBY,UAAUwmB,eAEjC,SAAShG,KACPphB,GAAqBqnB,SAEvB,SAAShG,KACPrhB,GAAqBsnB,UAEvB,SAAShG,KACPthB,GAAqBunB,YAEvB,SAAShG,GAA2BtI,GAClC,MAAMrY,EAAYZ,GAAqBY,UAGrB,KAAdqY,EAAIzI,OACNxQ,GAAqBiB,eAAeumB,SAASvO,EAAIzI,OAMjDyI,EAAIzI,QAAU5P,EAAU4L,kBAAkB2Q,YAC1ClE,EAAIzI,QAAU5P,EAAU0c,kBAExBtd,GAAqBtF,QAAQ2iB,cAC3Bzc,EAAU4L,kBACV5L,EAAU0c,kBAIhB,SAASkE,GAAsBvI,GAC7BjZ,GAAqBY,UAAUsL,kBAAoB+M,EAAIzI,MAEzD,SAASiR,KACPzhB,GAAqBynB,YAAY,IAEnC,SAAS/F,KACP1hB,GAAqBynB,aAAa,IAEpC,SAAS9F,GAA+B1I,GACtCjZ,GAAqBY,UAAUiX,6BAA+BoB,EAAIxN,QAEpE,SAASmW,GAA0B3I,GACjCjZ,GAAqBY,UAAU+U,WAAasD,EAAIvC,KAElD,SAASoL,GAA0B7I,GACjCjZ,GAAqBY,UAAUgV,WAAaqD,EAAIvC,KAElD,SAASsL,KACPhiB,GAAqBgB,sBAAsByM,OAG7C,SAASwU,GAAchJ,GACrBjZ,GAAqBgJ,eAAe0e,eAAe,OAASzO,EAAIrH,MAC9D+V,MAAO1O,EAAI0O,MACXC,aAAc3O,EAAI2O,aAClBC,cAAe5O,EAAI4O,cACnBC,WAAY7O,EAAI6O,WAChBC,aAAc9O,EAAI8O,aAClBC,aAAc/O,EAAI+O,eAItB,SAAS9F,GAAyBjJ,GAChCjZ,GAAqBgJ,eAAe0e,eAAe,QACjDC,MAAO1O,EAAI0O,MACXC,aAAc3O,EAAI2O,aAClBC,eAAe,EACfC,YAAY,EACZC,cAAc,EACdC,cAAc,IAIlB,SAAS7F,IAAgC8F,aAAEA,IACrCjoB,GAAqBP,uBACvBO,GAAqBuC,iBAAiB2lB,uBAAuBD,GAE7DjoB,GAAqBoK,QAAQ+d,mBAAmBF,GAIpD,SAAS7F,IAAgC+D,MACvCA,EAAKiC,SACLA,EAAQH,aACRA,EAAYI,SACZA,IAEIroB,GAAqBP,uBACvBO,GAAqBuC,iBAAiB+lB,wBACpCC,OAAQpC,EACR6B,aAAcI,EACdH,aAAAA,EACAI,SAAAA,IAGFroB,GAAqBoK,QAAQoe,cAAcrC,EAAOiC,EAAUH,GAIhE,SAAS3H,GAAuBrH,GAC9BjZ,GAAqBtF,QAAQ+tB,aAAaxP,EAAIyP,YAAazP,EAAIoN,OAE/DrmB,GAAqBY,UAAU0W,SAGjC,SAASiJ,GAA0BtH,GACjCjZ,GAAqBa,mBAAmByd,cAAgBrF,EAAIqF,cAE5Dte,GAAqBiL,iBAErBjL,GAAqBY,UAAU4L,kBAAoByM,EAAIY,WAGzD,SAASwG,IAAsBxG,WAAEA,EAAU8O,UAAEA,IAC3C3oB,GAAqBtF,QAAQ2iB,cAAcxD,EAAY8O,GACvD3oB,GAAqB6B,iBAAiBwb,cAAcxD,GAEhD7Z,GAAqBmB,WAAW2d,wBAClC9e,GAAqBa,mBAAmB+nB,wBAAwB/O,GAIpE,SAASgJ,GAA0B5J,GACA,YAA7B/Y,SAAS2oB,iBAEXC,KA5aFrF,QADsB,IAAbpqB,GAA4BA,EAASoL,KAAK,WACzB,SAAUmJ,GAClC,GAAIA,GAAyC,IAAjCA,EAAKmb,YAAY,QAAS,GAAU,CAI9C/oB,GAAqBqQ,iBAAiBzC,GACtC,MAAMob,EAAM,IAAIC,eAOhB,OANAD,EAAIE,OAAS,WACXlpB,GAAqByN,KAAK,IAAI0b,WAAWH,EAAII,YAE/CJ,EAAIvb,KAAK,MAAOG,GAChBob,EAAIK,aAAe,mBACnBL,EAAIM,OAIF1b,GACF5N,GAAqByN,KAAKG,IAGrBvU,EAASoL,KAAK,wBACG,SAAUmJ,GAClC5N,GAAqBqQ,iBAAiBzC,GACtC5N,GAAqBuN,sBAGG,SAAUK,GAClC,GAAIA,EACF,MAAM,IAAIvO,MAAM,mDA2ME,IAAbhG,GAA4BA,EAASoL,KAAK,cACnD6d,GAA2B,SAAUrJ,GACnC,GACEjZ,GAAqBY,WACrBZ,GAAqBY,UAAU+K,qBAE/B,OAEF,MAAMiC,EAAOqL,EAAIqL,UAAUW,MAAM,GAEjC,GAAKzmB,GAA0B+qB,uBAMxB,CACLvpB,GAAqBqQ,iBAAiBzC,EAAKqB,MAE3C,MAAMua,EAAa,IAAI3E,WACvB2E,EAAWN,OAAS,SAAyCjP,GAC3D,MAAMwP,EAASxP,EAAMiL,OAAOqD,OAC5BvoB,GAAqByN,KAAK,IAAI0b,WAAWM,KAE3CD,EAAWE,kBAAkB9b,OAdwB,CACrD,IAAIvL,EAAMoO,IAAIkZ,gBAAgB/b,GAC1BA,EAAKqB,OACP5M,GAAQA,IAAAA,EAAKsL,YAAaC,EAAKqB,OAEjCjP,GAAqByN,KAAKpL,GAa5B,MAAM7B,EAAYR,GAAqBQ,UACvCA,EAAU9F,QAAQgsB,aAAanX,aAAa,SAAU,QACtD/O,EAAUqB,iBAAiB8kB,mBAAmBpX,aAC5C,SACA,QAEF/O,EAAU9F,QAAQmX,SAAStC,aAAa,SAAU,QAClD/O,EAAUqB,iBAAiB+nB,eAAera,aAAa,SAAU,SAGnEgT,GAAoB,SAAUtJ,GAC5B,MAAMuL,EAAoBxkB,GAAqBQ,UAAUgkB,kBACzDtkB,SAASsZ,eAAegL,GAAmBqF,UAiK/C,IAAIC,GAAsB,KAC1B,SAAShB,KACHgB,IACF7V,aAAa6V,IAEfA,GAAsB3V,WAAW,WAC/B2V,GAAsB,MACrBprB,IAGL,SAASokB,GAAe7J,GACtB,MAAMrY,UACJA,EAAShB,oCACTA,GACEI,GAEJ,IAAIY,EAAU+K,qBAId,GACGsN,EAAIpZ,SAAWD,EAAoCC,SACnDoZ,EAAInZ,SAAWF,EAAoCE,QACpD,CAIA,GAFAmZ,EAAIkM,iBAEA2E,IAAoD,WAA7B5pB,SAAS2oB,gBAClC,OAGF,MAAMkB,EAAgBnpB,EAAUiL,aAE1B8T,EAAQlkB,EAA6Bwd,GAC3C,IAAIvN,EAAQ,EACZ,GACEuN,EAAI+Q,YAAcC,WAAWC,gBAC7BjR,EAAI+Q,YAAcC,WAAWE,eAO3Bze,EADEK,KAAKuX,IAAI3D,IAAU,EACb5T,KAAKsX,KAAK1D,GAIV3f,GAAqBoqB,qBAAqBzK,OAE/C,CAEL,MAAM0K,EAAwB,GAC9B3e,EAAQ1L,GAAqBoqB,qBAC3BzK,EAAQ0K,GAIR3e,EAAQ,EACV1L,GAAqBsnB,SAAS5b,GACrBA,EAAQ,GACjB1L,GAAqBqnB,OAAO3b,GAG9B,MAAMG,EAAejL,EAAUiL,aAC/B,GAAIke,IAAkBle,EAAc,CAIlC,MAAMye,EAAwBze,EAAeke,EAAgB,EACvDQ,EAAO3pB,EAAUsI,UAAUshB,wBAC3BC,EAAKxR,EAAIyR,QAAUH,EAAKjE,KACxBqE,EAAK1R,EAAI2R,QAAUL,EAAKhE,IAC9B3lB,EAAUsI,UAAUoM,YAAcmV,EAAKH,EACvC1pB,EAAUsI,UAAUqM,WAAaoV,EAAKL,QAGxCxB,KAIJ,SAAS9F,GAAoB/J,GACvBA,EAAI4R,QAAQ5jB,OAAS,GASvBgS,EAAIkM,iBAIR,SAASlC,GAAehK,GAUtB,GANEjZ,GAAqB+C,wBACrB/C,GAAqBY,UAAUkqB,gBAAgB7R,EAAIiM,SAEnDllB,GAAqB+C,0BAGlB/C,GAAqB6B,iBAAiBkpB,OACzC,OAEF,MAAMvqB,EAAYR,GAAqBQ,WAErCR,GAAqBY,UAAUkqB,gBAAgB7R,EAAIiM,SAClD1kB,EAAU9F,QAAQwO,UAAU8hB,SAAS/R,EAAIiM,SACxCjM,EAAIiM,SAAW1kB,EAAUqB,iBAAiBopB,eAE5CjrB,GAAqB6B,iBAAiBmO,QAI1C,SAASmT,GAAelK,GACF,IAAhBA,EAAIiS,SAGFlrB,GAAqB+C,wBACvB/C,GAAqB+C,yBAK3B,SAASmgB,GAAiBjK,GACxB,GAAIjZ,GAAqB2B,eAAewpB,OACtC,OAGF,IAAIC,GAAU,EACZC,GAAsB,EACxB,MAAMC,GACHrS,EAAIpZ,QAAU,EAAI,IAClBoZ,EAAIsS,OAAS,EAAI,IACjBtS,EAAIuS,SAAW,EAAI,IACnBvS,EAAInZ,QAAU,EAAI,GAEfc,EAAYZ,GAAqBY,UACjC6qB,EACJ7qB,GAAaA,EAAU+K,qBAIzB,GAAY,IAAR2f,GAAqB,IAARA,GAAqB,IAARA,GAAqB,KAARA,EAEzC,OAAQrS,EAAIiS,SACV,KAAK,GACElrB,GAAqBP,wBAA2BwZ,EAAIuS,WACvDxrB,GAAqBoK,QAAQqD,OAC7B2d,GAAU,GAEZ,MACF,KAAK,GACH,IAAKprB,GAAqBP,uBAAwB,CAChD,MAAMisB,EAAY1rB,GAAqBgJ,eAAemd,MAClDuF,GACF1rB,GAAqBgJ,eAAe0e,eAAe,aACjDC,MAAO+D,EAAU/D,MACjBC,aAAc8D,EAAU9D,aACxBC,cAAe6D,EAAU7D,cACzBC,WAAY4D,EAAU5D,WACtBC,aAAc2D,EAAU3D,aACxBC,aAAsB,IAARsD,GAAqB,KAARA,IAG/BF,GAAU,EAEZ,MACF,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACEK,GACHzrB,GAAqBqnB,SAEvB+D,GAAU,EACV,MACF,KAAK,IACL,KAAK,IACL,KAAK,IACEK,GACHzrB,GAAqBsnB,UAEvB8D,GAAU,EACV,MACF,KAAK,GACL,KAAK,GACEK,IAEHtX,WAAW,WAETnU,GAAqBunB,cAEvB6D,GAAU,GAEZ,MAEF,KAAK,IACCK,GAA8BzrB,GAAqBuM,KAAO,KAC5DvM,GAAqBuM,KAAO,EAC5B6e,GAAU,EACVC,GAAsB,GAExB,MACF,KAAK,IAEDI,GACAzrB,GAAqBuM,KAAOvM,GAAqBqM,cAEjDrM,GAAqBuM,KAAOvM,GAAqBqM,WACjD+e,GAAU,EACVC,GAAsB,GAM9B,QAAwB,IAAbhyB,GAA4BA,EAASoL,KAAK,qBAAsB,CACzE,MAAM3C,SAAEA,GAAa9B,GAGrB,GAAY,IAARsrB,GAAqB,IAARA,EACf,OAAQrS,EAAIiS,SACV,KAAK,GACHppB,EAASwC,SAAS,YAAcC,OAAQpC,SACxCipB,GAAU,EACV,MAEF,KAAK,SACqB,IAAb/xB,GAA4BA,EAASoL,KAAK,cACnD3C,EAASwC,SAAS,YAAcC,OAAQpC,SACxCipB,GAAU,IAQpB,GAAY,IAARE,GAAqB,KAARA,EACf,OAAQrS,EAAIiS,SACV,KAAK,GACHlrB,GAAqBinB,0BACrBmE,GAAU,EACV,MACF,KAAK,GAEHprB,GAAqBQ,UAAU9F,QAAQmf,WAAWmM,SAClDoF,GAAU,EAKhB,GAAIA,EAKF,OAJIC,IAAwBI,GAC1B7qB,EAAUsW,aAEZ+B,EAAIkM,iBAMN,MAAMwG,EAAa1wB,IACb2wB,EAAoBD,GAAcA,EAAWE,QAAQC,cAC3D,KACwB,UAAtBF,GACsB,aAAtBA,GACsB,WAAtBA,GACCD,GAAcA,EAAWI,oBAGM,KAA5B9S,EAAIiS,QAPV,CAaA,GAAY,IAARI,EAAW,CACb,IAAIU,EAAW,EACbC,GAAoB,EACtB,OAAQhT,EAAIiS,SACV,KAAK,GACL,KAAK,GAECtqB,EAAUsrB,6BACZD,GAAoB,GAEtBD,GAAY,EACZ,MACF,KAAK,EACEP,IACHQ,GAAoB,GAEtBD,GAAY,EACZ,MACF,KAAK,GAECprB,EAAUurB,+BACZF,GAAoB,GAGxB,KAAK,GACL,KAAK,GACHD,GAAY,EACZ,MACF,KAAK,GACChsB,GAAqB6B,iBAAiBkpB,SACxC/qB,GAAqB6B,iBAAiBmO,QACtCob,GAAU,IAGTprB,GAAqBP,wBACtBO,GAAqBoK,QAAQgiB,SAE7BpsB,GAAqBoK,QAAQ4F,QAC7Bob,GAAU,GAEZ,MACF,KAAK,GACL,KAAK,GAECxqB,EAAUsrB,6BACZD,GAAoB,GAEtBD,EAAW,EACX,MACF,KAAK,GACL,KAAK,GACEP,IACHQ,GAAoB,GAEtBD,EAAW,EACX,MACF,KAAK,GAECprB,EAAUurB,+BACZF,GAAoB,GAGxB,KAAK,GACL,KAAK,GACHD,EAAW,EACX,MAEF,KAAK,IACCP,GAA8BzrB,GAAqBuM,KAAO,KAC5DvM,GAAqBuM,KAAO,EAC5B6e,GAAU,EACVC,GAAsB,GAExB,MACF,KAAK,IAEDI,GACAzrB,GAAqBuM,KAAOvM,GAAqBqM,cAEjDrM,GAAqBuM,KAAOvM,GAAqBqM,WACjD+e,GAAU,EACVC,GAAsB,GAExB,MAEF,KAAK,GACHrrB,GAAqBwB,eAAe6qB,WAAWlvB,GAAWmvB,QAC1D,MACF,KAAK,GACHtsB,GAAqBwB,eAAe6qB,WAAWlvB,GAAWovB,MAC1D,MAEF,KAAK,GACHvsB,GAAqBynB,YAAY,IACjC,MAEF,KAAK,IACHznB,GAAqBmB,WAAW8kB,SAKrB,IAAb+F,GACEC,GAAqD,aAAhCrrB,EAAUsL,oBAE7B8f,EAAW,EACbprB,EAAUumB,WAEVvmB,EAAUwmB,eAEZgE,GAAU,GAKd,GAAY,IAARE,EACF,OAAQrS,EAAIiS,SACV,KAAK,GACL,KAAK,GACH,IACGO,GAC+B,aAAhC7qB,EAAUsL,kBAEV,MAEElM,GAAqBuM,KAAO,GAC9BvM,GAAqBuM,OAEvB6e,GAAU,EACV,MAEF,KAAK,GACHprB,GAAqBynB,aAAa,IAKnC2D,GAAYK,IAKZxS,EAAIiS,SAAW,IAAMjS,EAAIiS,SAAW,IACpB,KAAhBjS,EAAIiS,SAAwC,WAAtBU,KAEvBP,GAAsB,GAItBA,IAAwBzqB,EAAUkqB,gBAAgBa,IAIpD/qB,EAAUsW,QAGRkU,GACFnS,EAAIkM,kBAIR,SAASlH,GAAahF,GAGpB,OAFAA,EAAIkM,iBACJlM,EAAIuT,YAAc,IACX,EAWT,SAASxV,GAA0ByI,GACjC,OAAQA,GACN,IAAK,aACL,IAAK,YACH,OAAO1jB,EAAW6H,KACpB,IAAK,gBACL,IAAK,cACH,OAAO7H,EAAW0wB,IACpB,IAAK,iBACL,IAAK,eACH,OAAO1wB,EAAW2wB,KAEtB,OAAO3wB,EAAW6H,KA4BpB,MAAM+I,IACJC,UACEF,kBAAkB,EAClBtN,qBACE,MAAM,IAAIC,MAAM,0CAKtB,OACEF,wBAAAA,GACAwN,uBAAAA,GACA3M,qBAAAA","file":"../app.js","sourcesContent":["define([\n  \"skylark-pdfjs-display\",\n  \"./pdfjs_dev\",\n\n  \"./ui_utils\",\n  \"./app_options\",\n\n  \"./pdf_cursor_tools\",\n  \"./pdf_rendering_queue\",\n  \"./overlay_manager\",\n  \"./password_prompt\",\n  \"./pdf_attachment_viewer\",\n  \"./pdf_document_properties\",\n  \"./pdf_find_bar\",\n  \"./pdf_find_controller\",\n  \"./pdf_history\",\n  \"./pdf_layer_viewer\",\n  \"./pdf_link_service\",\n  \"./pdf_outline_viewer\",\n  \"./pdf_presentation_mode\",\n  \"./pdf_sidebar\",\n  \"./pdf_sidebar_resizer\",\n  \"./pdf_thumbnail_viewer\",\n  \"./pdf_viewer\",\n  \"./secondary_toolbar\",\n  \"./toolbar\",\n  \"./viewer_compatibility\",\n  \"./view_history\"\n\n],function(\n  pdfjsLib,\n  PDFJSDev,\n\n  ui_utils,\n  app_options,\n\n  pdf_cursor_tools,\n  pdf_rendering_queue,\n  overlay_manager,\n  password_prompt,\n  pdf_attachment_viewer,\n  pdf_document_properties,\n  pdf_find_bar,\n  pdf_find_controller,\n  pdf_history,\n  pdf_layer_viewer,\n  pdf_link_service,\n  pdf_outline_viewer,\n  pdf_presentation_mode,\n  pdf_sidebar,\n  pdf_sidebar_resizer,\n  pdf_thumbnail_viewer,\n  pdf_viewer,\n  secondary_toolbar,\n  toolbar,\n  viewer_compatibility,\n  view_history\n\n  ){\n\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /* globals PDFBug, Stats */\n\n\n\n  const {\n    animationStarted,\n    AutoPrintRegExp,\n    DEFAULT_SCALE_VALUE,\n    EventBus,\n    getActiveOrFocusedElement,\n    getPDFFileNameFromURL,\n    isValidRotation,\n    isValidScrollMode,\n    isValidSpreadMode,\n    MAX_SCALE,\n    MIN_SCALE,\n    noContextMenuHandler,\n    normalizeWheelEventDirection,\n    parseQueryString,\n    ProgressBar,\n    RendererType,\n    ScrollMode,\n    SidebarView,\n    SpreadMode,\n    TextLayerMode,\n  } = ui_utils;\n\n\n\n  const { AppOptions, OptionKind } = app_options;\n  const {\n    build,\n    createPromiseCapability,\n    getDocument,\n    getFilenameFromUrl,\n    GlobalWorkerOptions,\n    InvalidPDFException,\n    LinkTarget,\n    loadScript,\n    MissingPDFException,\n    OPS,\n    PDFWorker,\n    PermissionFlag,\n    shadow,\n    UnexpectedResponseException,\n    UNSUPPORTED_FEATURES,\n    version,\n  } = pdfjsLib;\n\n\n  const { CursorTool, PDFCursorTools } = pdf_cursor_tools;\n  const { PDFRenderingQueue, RenderingStates } = pdf_rendering_queue;\n  const { OverlayManager } = overlay_manager;\n  const { PasswordPrompt } = password_prompt;\n  const { PDFAttachmentViewer } = pdf_attachment_viewer;\n  const { PDFDocumentProperties } = pdf_document_properties;\n  const { PDFFindBar } = pdf_find_bar;\n  const { PDFFindController } = pdf_find_controller;\n  const { PDFHistory } = pdf_history;\n  const { PDFLayerViewer } = pdf_layer_viewer;\n  const { PDFLinkService } = pdf_link_service;\n  const { PDFOutlineViewer } = pdf_outline_viewer;\n  const { PDFPresentationMode } = pdf_presentation_mode;\n  const { PDFSidebar } = pdf_sidebar;\n  const { PDFSidebarResizer } = pdf_sidebar_resizer;\n  const { PDFThumbnailViewer } = pdf_thumbnail_viewer;\n  const { PDFViewer } = pdf_viewer;\n  const { SecondaryToolbar } = secondary_toolbar;\n  const { Toolbar } = toolbar;\n  const { viewerCompatibilityParams } = viewer_compatibility;\n  const { ViewHistory } = view_history;\n\n  const DEFAULT_SCALE_DELTA = 1.1;\n  const DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT = 5000; // ms\n  const FORCE_PAGES_LOADED_TIMEOUT = 10000; // ms\n  const WHEEL_ZOOM_DISABLED_TIMEOUT = 1000; // ms\n  const ENABLE_PERMISSIONS_CLASS = \"enablePermissions\";\n\n  const ViewOnLoad = {\n    UNKNOWN: -1,\n    PREVIOUS: 0, // Default value.\n    INITIAL: 1,\n  };\n\n  const ViewerCssTheme = {\n    AUTOMATIC: 0, // Default value.\n    LIGHT: 1,\n    DARK: 2,\n  };\n\n  // Keep these in sync with mozilla-central's Histograms.json.\n  const KNOWN_VERSIONS = [\n    \"1.0\",\n    \"1.1\",\n    \"1.2\",\n    \"1.3\",\n    \"1.4\",\n    \"1.5\",\n    \"1.6\",\n    \"1.7\",\n    \"1.8\",\n    \"1.9\",\n    \"2.0\",\n    \"2.1\",\n    \"2.2\",\n    \"2.3\",\n  ];\n  // Keep these in sync with mozilla-central's Histograms.json.\n  const KNOWN_GENERATORS = [\n    \"acrobat distiller\",\n    \"acrobat pdfwriter\",\n    \"adobe livecycle\",\n    \"adobe pdf library\",\n    \"adobe photoshop\",\n    \"ghostscript\",\n    \"tcpdf\",\n    \"cairo\",\n    \"dvipdfm\",\n    \"dvips\",\n    \"pdftex\",\n    \"pdfkit\",\n    \"itext\",\n    \"prince\",\n    \"quarkxpress\",\n    \"mac os x\",\n    \"microsoft\",\n    \"openoffice\",\n    \"oracle\",\n    \"luradocument\",\n    \"pdf-xchange\",\n    \"antenna house\",\n    \"aspose.cells\",\n    \"fpdf\",\n  ];\n\n  class DefaultExternalServices {\n    constructor() {\n      throw new Error(\"Cannot initialize DefaultExternalServices.\");\n    }\n\n    static updateFindControlState(data) {}\n\n    static updateFindMatchesCount(data) {}\n\n    static initPassiveLoading(callbacks) {}\n\n    static async fallback(data) {}\n\n    static reportTelemetry(data) {}\n\n    static createDownloadManager(options) {\n      throw new Error(\"Not implemented: createDownloadManager\");\n    }\n\n    static createPreferences() {\n      throw new Error(\"Not implemented: createPreferences\");\n    }\n\n    static createL10n(options) {\n      throw new Error(\"Not implemented: createL10n\");\n    }\n\n    static createScripting(options) {\n      throw new Error(\"Not implemented: createScripting\");\n    }\n\n    static get supportsIntegratedFind() {\n      return shadow(this, \"supportsIntegratedFind\", false);\n    }\n\n    static get supportsDocumentFonts() {\n      return shadow(this, \"supportsDocumentFonts\", true);\n    }\n\n    static get supportedMouseWheelZoomModifierKeys() {\n      return shadow(this, \"supportedMouseWheelZoomModifierKeys\", {\n        ctrlKey: true,\n        metaKey: true,\n      });\n    }\n\n    static get isInAutomation() {\n      return shadow(this, \"isInAutomation\", false);\n    }\n  }\n\n  const PDFViewerApplication = {\n    initialBookmark: document.location.hash.substring(1),\n    _initializedCapability: createPromiseCapability(),\n    fellback: false,\n    appConfig: null,\n    pdfDocument: null,\n    pdfLoadingTask: null,\n    printService: null,\n    /** @type {PDFViewer} */\n    pdfViewer: null,\n    /** @type {PDFThumbnailViewer} */\n    pdfThumbnailViewer: null,\n    /** @type {PDFRenderingQueue} */\n    pdfRenderingQueue: null,\n    /** @type {PDFPresentationMode} */\n    pdfPresentationMode: null,\n    /** @type {PDFDocumentProperties} */\n    pdfDocumentProperties: null,\n    /** @type {PDFLinkService} */\n    pdfLinkService: null,\n    /** @type {PDFHistory} */\n    pdfHistory: null,\n    /** @type {PDFSidebar} */\n    pdfSidebar: null,\n    /** @type {PDFSidebarResizer} */\n    pdfSidebarResizer: null,\n    /** @type {PDFOutlineViewer} */\n    pdfOutlineViewer: null,\n    /** @type {PDFAttachmentViewer} */\n    pdfAttachmentViewer: null,\n    /** @type {PDFLayerViewer} */\n    pdfLayerViewer: null,\n    /** @type {PDFCursorTools} */\n    pdfCursorTools: null,\n    /** @type {ViewHistory} */\n    store: null,\n    /** @type {DownloadManager} */\n    downloadManager: null,\n    /** @type {OverlayManager} */\n    overlayManager: null,\n    /** @type {Preferences} */\n    preferences: null,\n    /** @type {Toolbar} */\n    toolbar: null,\n    /** @type {SecondaryToolbar} */\n    secondaryToolbar: null,\n    /** @type {EventBus} */\n    eventBus: null,\n    /** @type {IL10n} */\n    l10n: null,\n    isInitialViewSet: false,\n    downloadComplete: false,\n    isViewerEmbedded: window.parent !== window,\n    url: \"\",\n    baseUrl: \"\",\n    externalServices: DefaultExternalServices,\n    _boundEvents: Object.create(null),\n    documentInfo: null,\n    metadata: null,\n    _contentDispositionFilename: null,\n    _contentLength: null,\n    triggerDelayedFallback: null,\n    _saveInProgress: false,\n    _wheelUnusedTicks: 0,\n    _idleCallbacks: new Set(),\n    _scriptingInstance: null,\n    _mouseState: Object.create(null),\n\n    // Called once when the document is loaded.\n    async initialize(appConfig) {\n      this.preferences = this.externalServices.createPreferences();\n      this.appConfig = appConfig;\n\n      await this._readPreferences();\n      await this._parseHashParameters();\n      this._forceCssTheme();\n      await this._initializeL10n();\n\n      if (\n        this.isViewerEmbedded &&\n        AppOptions.get(\"externalLinkTarget\") === LinkTarget.NONE\n      ) {\n        // Prevent external links from \"replacing\" the viewer,\n        // when it's embedded in e.g. an <iframe> or an <object>.\n        AppOptions.set(\"externalLinkTarget\", LinkTarget.TOP);\n      }\n      await this._initializeViewerComponents();\n\n      // Bind the various event handlers *after* the viewer has been\n      // initialized, to prevent errors if an event arrives too soon.\n      this.bindEvents();\n      this.bindWindowEvents();\n\n      // We can start UI localization now.\n      const appContainer = appConfig.appContainer || document.documentElement;\n      this.l10n.translate(appContainer).then(() => {\n        // Dispatch the 'localized' event on the `eventBus` once the viewer\n        // has been fully initialized and translated.\n        this.eventBus.dispatch(\"localized\", { source: this });\n      });\n\n      this._initializedCapability.resolve();\n    },\n\n    /**\n     * @private\n     */\n    async _readPreferences() {\n      if (\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || GENERIC\")) &&\n        AppOptions.get(\"disablePreferences\")\n      ) {\n        // Give custom implementations of the default viewer a simpler way to\n        // opt-out of having the `Preferences` override existing `AppOptions`.\n        return;\n      }\n      try {\n        AppOptions.setAll(await this.preferences.getAll());\n      } catch (reason) {\n        ///console.error(`_readPreferences: \"${reason?.message}\".`);  // lwf\n        console.error(`_readPreferences: \"${reason && reason.message}\".`); \n      }\n    },\n\n    /**\n     * Potentially parse special debugging flags in the hash section of the URL.\n     * @private\n     */\n    async _parseHashParameters() {\n      if (!AppOptions.get(\"pdfBugEnabled\")) {\n        return undefined;\n      }\n      const hash = document.location.hash.substring(1);\n      if (!hash) {\n        return undefined;\n      }\n      const hashParams = parseQueryString(hash),\n        waitOn = [];\n\n      if (\"disableworker\" in hashParams && hashParams.disableworker === \"true\") {\n        waitOn.push(loadFakeWorker());\n      }\n      if (\"disablerange\" in hashParams) {\n        AppOptions.set(\"disableRange\", hashParams.disablerange === \"true\");\n      }\n      if (\"disablestream\" in hashParams) {\n        AppOptions.set(\"disableStream\", hashParams.disablestream === \"true\");\n      }\n      if (\"disableautofetch\" in hashParams) {\n        AppOptions.set(\n          \"disableAutoFetch\",\n          hashParams.disableautofetch === \"true\"\n        );\n      }\n      if (\"disablefontface\" in hashParams) {\n        AppOptions.set(\"disableFontFace\", hashParams.disablefontface === \"true\");\n      }\n      if (\"disablehistory\" in hashParams) {\n        AppOptions.set(\"disableHistory\", hashParams.disablehistory === \"true\");\n      }\n      if (\"webgl\" in hashParams) {\n        AppOptions.set(\"enableWebGL\", hashParams.webgl === \"true\");\n      }\n      if (\"verbosity\" in hashParams) {\n        AppOptions.set(\"verbosity\", hashParams.verbosity | 0);\n      }\n      if (\"textlayer\" in hashParams) {\n        switch (hashParams.textlayer) {\n          case \"off\":\n            AppOptions.set(\"textLayerMode\", TextLayerMode.DISABLE);\n            break;\n          case \"visible\":\n          case \"shadow\":\n          case \"hover\":\n            const viewer = this.appConfig.viewerContainer;\n            viewer.classList.add(\"textLayer-\" + hashParams.textlayer);\n            break;\n        }\n      }\n      if (\"pdfbug\" in hashParams) {\n        AppOptions.set(\"pdfBug\", true);\n        AppOptions.set(\"fontExtraProperties\", true);\n\n        const enabled = hashParams.pdfbug.split(\",\");\n        waitOn.push(loadAndEnablePDFBug(enabled));\n      }\n      // It is not possible to change locale for the (various) extension builds.\n      if (\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || GENERIC\")) &&\n        \"locale\" in hashParams\n      ) {\n        AppOptions.set(\"locale\", hashParams.locale);\n      }\n\n      if (waitOn.length === 0) {\n        return undefined;\n      }\n      return Promise.all(waitOn).catch(reason => {\n        console.error(`_parseHashParameters: \"${reason.message}\".`);\n      });\n    },\n\n    /**\n     * @private\n     */\n    async _initializeL10n() {\n      this.l10n = this.externalServices.createL10n(\n        typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n          ? { locale: AppOptions.get(\"locale\") }\n          : null\n      );\n      const dir = await this.l10n.getDirection();\n      document.getElementsByTagName(\"html\")[0].dir = dir;\n    },\n\n    /**\n     * @private\n     */\n    _forceCssTheme() {\n      const cssTheme = AppOptions.get(\"viewerCssTheme\");\n      if (\n        cssTheme === ViewerCssTheme.AUTOMATIC ||\n        !Object.values(ViewerCssTheme).includes(cssTheme)\n      ) {\n        return;\n      }\n      try {\n        const styleSheet = document.styleSheets[0];\n        //const cssRules = styleSheet?.cssRules || []; // lwf\n        const cssRules = styleSheet && styleSheet.cssRules || [];\n        for (let i = 0, ii = cssRules.length; i < ii; i++) {\n          const rule = cssRules[i];\n          if (\n            rule instanceof CSSMediaRule &&\n            ///rule.media?.[0] === \"(prefers-color-scheme: dark)\" // lwf\n            rule.media && rule.media[0] === \"(prefers-color-scheme: dark)\"\n          ) {\n            if (cssTheme === ViewerCssTheme.LIGHT) {\n              styleSheet.deleteRule(i);\n              return;\n            }\n            // cssTheme === ViewerCssTheme.DARK\n            const darkRules = /^@media \\(prefers-color-scheme: dark\\) {\\n\\s*([\\w\\s-.,:;/\\\\{}()]+)\\n}$/.exec(\n              rule.cssText\n            );\n            ///if (darkRules?.[1]) { // lwf\n            if (darkRules && darkRules[1]) {\n              styleSheet.deleteRule(i);\n              styleSheet.insertRule(darkRules[1], i);\n            }\n            return;\n          }\n        }\n      } catch (reason) {\n        ///console.error(`_forceCssTheme: \"${reason?.message}\".`); // lwf\n        console.error(`_forceCssTheme: \"${reason && reason.message}\".`);\n      }\n    },\n\n    /**\n     * @private\n     */\n    async _initializeViewerComponents() {\n      const appConfig = this.appConfig;\n\n      const eventBus =\n        appConfig.eventBus ||\n        new EventBus({ isInAutomation: this.externalServices.isInAutomation });\n      this.eventBus = eventBus;\n\n      this.overlayManager = new OverlayManager();\n\n      const pdfRenderingQueue = new PDFRenderingQueue();\n      pdfRenderingQueue.onIdle = this.cleanup.bind(this);\n      this.pdfRenderingQueue = pdfRenderingQueue;\n\n      const pdfLinkService = new PDFLinkService({\n        eventBus,\n        externalLinkTarget: AppOptions.get(\"externalLinkTarget\"),\n        externalLinkRel: AppOptions.get(\"externalLinkRel\"),\n        ignoreDestinationZoom: AppOptions.get(\"ignoreDestinationZoom\"),\n      });\n      this.pdfLinkService = pdfLinkService;\n\n      const downloadManager = this.externalServices.createDownloadManager();\n      this.downloadManager = downloadManager;\n\n      const findController = new PDFFindController({\n        linkService: pdfLinkService,\n        eventBus,\n      });\n      this.findController = findController;\n\n      const container = appConfig.mainContainer;\n      const viewer = appConfig.viewerContainer;\n      this.pdfViewer = new PDFViewer({\n        container,\n        viewer,\n        eventBus,\n        renderingQueue: pdfRenderingQueue,\n        linkService: pdfLinkService,\n        downloadManager,\n        findController,\n        renderer: AppOptions.get(\"renderer\"),\n        enableWebGL: AppOptions.get(\"enableWebGL\"),\n        l10n: this.l10n,\n        textLayerMode: AppOptions.get(\"textLayerMode\"),\n        imageResourcesPath: AppOptions.get(\"imageResourcesPath\"),\n        renderInteractiveForms: AppOptions.get(\"renderInteractiveForms\"),\n        enablePrintAutoRotate: AppOptions.get(\"enablePrintAutoRotate\"),\n        useOnlyCssZoom: AppOptions.get(\"useOnlyCssZoom\"),\n        maxCanvasPixels: AppOptions.get(\"maxCanvasPixels\"),\n        enableScripting: AppOptions.get(\"enableScripting\"),\n        mouseState: this._mouseState,\n      });\n      pdfRenderingQueue.setViewer(this.pdfViewer);\n      pdfLinkService.setViewer(this.pdfViewer);\n\n      this.pdfThumbnailViewer = new PDFThumbnailViewer({\n        container: appConfig.sidebar.thumbnailView,\n        eventBus,\n        renderingQueue: pdfRenderingQueue,\n        linkService: pdfLinkService,\n        l10n: this.l10n,\n      });\n      pdfRenderingQueue.setThumbnailViewer(this.pdfThumbnailViewer);\n\n      this.pdfHistory = new PDFHistory({\n        linkService: pdfLinkService,\n        eventBus,\n      });\n      pdfLinkService.setHistory(this.pdfHistory);\n\n      if (!this.supportsIntegratedFind) {\n        this.findBar = new PDFFindBar(appConfig.findBar, eventBus, this.l10n);\n      }\n\n      this.pdfDocumentProperties = new PDFDocumentProperties(\n        appConfig.documentProperties,\n        this.overlayManager,\n        eventBus,\n        this.l10n\n      );\n\n      this.pdfCursorTools = new PDFCursorTools({\n        container,\n        eventBus,\n        cursorToolOnLoad: AppOptions.get(\"cursorToolOnLoad\"),\n      });\n\n      this.toolbar = new Toolbar(appConfig.toolbar, eventBus, this.l10n);\n\n      this.secondaryToolbar = new SecondaryToolbar(\n        appConfig.secondaryToolbar,\n        container,\n        eventBus\n      );\n\n      if (this.supportsFullscreen) {\n        this.pdfPresentationMode = new PDFPresentationMode({\n          container,\n          pdfViewer: this.pdfViewer,\n          eventBus,\n          contextMenuItems: appConfig.fullscreen,\n        });\n      }\n\n      this.passwordPrompt = new PasswordPrompt(\n        appConfig.passwordOverlay,\n        this.overlayManager,\n        this.l10n\n      );\n\n      this.pdfOutlineViewer = new PDFOutlineViewer({\n        container: appConfig.sidebar.outlineView,\n        eventBus,\n        linkService: pdfLinkService,\n      });\n\n      this.pdfAttachmentViewer = new PDFAttachmentViewer({\n        container: appConfig.sidebar.attachmentsView,\n        eventBus,\n        downloadManager,\n      });\n\n      this.pdfLayerViewer = new PDFLayerViewer({\n        container: appConfig.sidebar.layersView,\n        eventBus,\n        l10n: this.l10n,\n      });\n\n      this.pdfSidebar = new PDFSidebar({\n        elements: appConfig.sidebar,\n        pdfViewer: this.pdfViewer,\n        pdfThumbnailViewer: this.pdfThumbnailViewer,\n        eventBus,\n        l10n: this.l10n,\n      });\n      this.pdfSidebar.onToggled = this.forceRendering.bind(this);\n\n      this.pdfSidebarResizer = new PDFSidebarResizer(\n        appConfig.sidebarResizer,\n        eventBus,\n        this.l10n\n      );\n    },\n\n    run(config) {\n      this.initialize(config).then(webViewerInitialized);\n    },\n\n    get initialized() {\n      return this._initializedCapability.settled;\n    },\n\n    get initializedPromise() {\n      return this._initializedCapability.promise;\n    },\n\n    zoomIn(ticks) {\n      if (this.pdfViewer.isInPresentationMode) {\n        return;\n      }\n      let newScale = this.pdfViewer.currentScale;\n      do {\n        newScale = (newScale * DEFAULT_SCALE_DELTA).toFixed(2);\n        newScale = Math.ceil(newScale * 10) / 10;\n        newScale = Math.min(MAX_SCALE, newScale);\n      } while (--ticks > 0 && newScale < MAX_SCALE);\n      this.pdfViewer.currentScaleValue = newScale;\n    },\n\n    zoomOut(ticks) {\n      if (this.pdfViewer.isInPresentationMode) {\n        return;\n      }\n      let newScale = this.pdfViewer.currentScale;\n      do {\n        newScale = (newScale / DEFAULT_SCALE_DELTA).toFixed(2);\n        newScale = Math.floor(newScale * 10) / 10;\n        newScale = Math.max(MIN_SCALE, newScale);\n      } while (--ticks > 0 && newScale > MIN_SCALE);\n      this.pdfViewer.currentScaleValue = newScale;\n    },\n\n    zoomReset() {\n      if (this.pdfViewer.isInPresentationMode) {\n        return;\n      }\n      this.pdfViewer.currentScaleValue = DEFAULT_SCALE_VALUE;\n    },\n\n    get pagesCount() {\n      return this.pdfDocument ? this.pdfDocument.numPages : 0;\n    },\n\n    get page() {\n      return this.pdfViewer.currentPageNumber;\n    },\n\n    set page(val) {\n      this.pdfViewer.currentPageNumber = val;\n    },\n\n    get supportsPrinting() {\n      return PDFPrintServiceFactory.instance.supportsPrinting;\n    },\n\n    get supportsFullscreen() {\n      let support;\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n        support =\n          document.fullscreenEnabled === true ||\n          document.mozFullScreenEnabled === true;\n      } else {\n        const doc = document.documentElement;\n        support = !!(\n          doc.requestFullscreen ||\n          doc.mozRequestFullScreen ||\n          doc.webkitRequestFullScreen\n        );\n\n        if (\n          document.fullscreenEnabled === false ||\n          document.mozFullScreenEnabled === false ||\n          document.webkitFullscreenEnabled === false\n        ) {\n          support = false;\n        }\n      }\n      return shadow(this, \"supportsFullscreen\", support);\n    },\n\n    get supportsIntegratedFind() {\n      return this.externalServices.supportsIntegratedFind;\n    },\n\n    get supportsDocumentFonts() {\n      return this.externalServices.supportsDocumentFonts;\n    },\n\n    get loadingBar() {\n      const bar = new ProgressBar(\"#loadingBar\");\n      return shadow(this, \"loadingBar\", bar);\n    },\n\n    get supportedMouseWheelZoomModifierKeys() {\n      return this.externalServices.supportedMouseWheelZoomModifierKeys;\n    },\n\n    initPassiveLoading() {\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        !PDFJSDev.test(\"MOZCENTRAL || CHROME\")\n      ) {\n        throw new Error(\"Not implemented: initPassiveLoading\");\n      }\n      this.externalServices.initPassiveLoading({\n        onOpenWithTransport(url, length, transport) {\n          PDFViewerApplication.open(url, { length, range: transport });\n        },\n        onOpenWithData(data) {\n          PDFViewerApplication.open(data);\n        },\n        onOpenWithURL(url, length, originalUrl) {\n          let file = url,\n            args = null;\n          if (length !== undefined) {\n            args = { length };\n          }\n          if (originalUrl !== undefined) {\n            file = { url, originalUrl };\n          }\n          PDFViewerApplication.open(file, args);\n        },\n        onError(err) {\n          PDFViewerApplication.l10n\n            .get(\n              \"loading_error\",\n              null,\n              \"An error occurred while loading the PDF.\"\n            )\n            .then(msg => {\n              PDFViewerApplication.error(msg, err);\n            });\n        },\n        onProgress(loaded, total) {\n          PDFViewerApplication.progress(loaded / total);\n        },\n      });\n    },\n\n    setTitleUsingUrl(url = \"\") {\n      this.url = url;\n      this.baseUrl = url.split(\"#\")[0];\n      let title = getPDFFileNameFromURL(url, \"\");\n      if (!title) {\n        try {\n          title = decodeURIComponent(getFilenameFromUrl(url)) || url;\n        } catch (ex) {\n          // decodeURIComponent may throw URIError,\n          // fall back to using the unprocessed url in that case\n          title = url;\n        }\n      }\n      this.setTitle(title);\n    },\n\n    setTitle(title) {\n      if (this.isViewerEmbedded) {\n        // Embedded PDF viewers should not be changing their parent page's title.\n        return;\n      }\n      document.title = title;\n    },\n\n    get _docFilename() {\n      // Use `this.url` instead of `this.baseUrl` to perform filename detection\n      // based on the reference fragment as ultimate fallback if needed.\n      return this._contentDispositionFilename || getPDFFileNameFromURL(this.url);\n    },\n\n    /**\n     * @private\n     */\n    _cancelIdleCallbacks() {\n      if (!this._idleCallbacks.size) {\n        return;\n      }\n      for (const callback of this._idleCallbacks) {\n        window.cancelIdleCallback(callback);\n      }\n      this._idleCallbacks.clear();\n    },\n\n    /**\n     * @private\n     */\n    async _destroyScriptingInstance() {\n      if (!this._scriptingInstance) {\n        return;\n      }\n      const { scripting, internalEvents, domEvents } = this._scriptingInstance;\n      try {\n        await scripting.destroySandbox();\n      } catch (ex) {}\n\n      for (const [name, listener] of internalEvents) {\n        this.eventBus._off(name, listener);\n      }\n      internalEvents.clear();\n\n      for (const [name, listener] of domEvents) {\n        window.removeEventListener(name, listener);\n      }\n      domEvents.clear();\n\n      delete this._mouseState.isDown;\n      this._scriptingInstance = null;\n    },\n\n    /**\n     * Closes opened PDF document.\n     * @returns {Promise} - Returns the promise, which is resolved when all\n     *                      destruction is completed.\n     */\n    async close() {\n      const errorWrapper = this.appConfig.errorWrapper.container;\n      errorWrapper.setAttribute(\"hidden\", \"true\");\n\n      if (!this.pdfLoadingTask) {\n        return undefined;\n      }\n      const promises = [];\n\n      promises.push(this.pdfLoadingTask.destroy());\n      this.pdfLoadingTask = null;\n\n      if (this.pdfDocument) {\n        this.pdfDocument = null;\n\n        this.pdfThumbnailViewer.setDocument(null);\n        this.pdfViewer.setDocument(null);\n        this.pdfLinkService.setDocument(null);\n        this.pdfDocumentProperties.setDocument(null);\n      }\n      webViewerResetPermissions();\n      this.store = null;\n      this.isInitialViewSet = false;\n      this.downloadComplete = false;\n      this.url = \"\";\n      this.baseUrl = \"\";\n      this.documentInfo = null;\n      this.metadata = null;\n      this._contentDispositionFilename = null;\n      this._contentLength = null;\n      this.triggerDelayedFallback = null;\n      this._saveInProgress = false;\n\n      this._cancelIdleCallbacks();\n      promises.push(this._destroyScriptingInstance());\n\n      this.pdfSidebar.reset();\n      this.pdfOutlineViewer.reset();\n      this.pdfAttachmentViewer.reset();\n      this.pdfLayerViewer.reset();\n\n      if (this.pdfHistory) {\n        this.pdfHistory.reset();\n      }\n      if (this.findBar) {\n        this.findBar.reset();\n      }\n      this.toolbar.reset();\n      this.secondaryToolbar.reset();\n\n      if (typeof PDFBug !== \"undefined\") {\n        PDFBug.cleanup();\n      }\n      await Promise.all(promises);\n\n      return undefined;\n    },\n\n    /**\n     * Opens PDF document specified by URL or array with additional arguments.\n     * @param {string|TypedArray|ArrayBuffer} file - PDF location or binary data.\n     * @param {Object} [args] - Additional arguments for the getDocument call,\n     *                          e.g. HTTP headers ('httpHeaders') or alternative\n     *                          data transport ('range').\n     * @returns {Promise} - Returns the promise, which is resolved when document\n     *                      is opened.\n     */\n    async open(file, args) {\n      if (this.pdfLoadingTask) {\n        // We need to destroy already opened document.\n        await this.close();\n      }\n      // Set the necessary global worker parameters, using the available options.\n      const workerParameters = AppOptions.getAll(OptionKind.WORKER);\n      for (const key in workerParameters) {\n        GlobalWorkerOptions[key] = workerParameters[key];\n      }\n\n      const parameters = Object.create(null);\n      if (typeof file === \"string\") {\n        // URL\n        this.setTitleUsingUrl(file);\n        parameters.url = file;\n      } else if (file && \"byteLength\" in file) {\n        // ArrayBuffer\n        parameters.data = file;\n      } else if (file.url && file.originalUrl) {\n        this.setTitleUsingUrl(file.originalUrl);\n        parameters.url = file.url;\n      }\n      // Set the necessary API parameters, using the available options.\n      const apiParameters = AppOptions.getAll(OptionKind.API);\n      for (const key in apiParameters) {\n        let value = apiParameters[key];\n\n        if (key === \"docBaseUrl\" && !value) {\n          if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n            value = document.URL.split(\"#\")[0];\n          } else if (PDFJSDev.test(\"MOZCENTRAL || CHROME\")) {\n            value = this.baseUrl;\n          }\n        }\n        parameters[key] = value;\n      }\n      // Finally, update the API parameters with the arguments (if they exist).\n      if (args) {\n        for (const key in args) {\n          parameters[key] = args[key];\n        }\n      }\n\n      const loadingTask = getDocument(parameters);\n      this.pdfLoadingTask = loadingTask;\n\n      loadingTask.onPassword = (updateCallback, reason) => {\n        this.pdfLinkService.externalLinkEnabled = false;\n        this.passwordPrompt.setUpdateCallback(updateCallback, reason);\n        this.passwordPrompt.open();\n      };\n\n      loadingTask.onProgress = ({ loaded, total }) => {\n        this.progress(loaded / total);\n      };\n\n      // Listen for unsupported features to trigger the fallback UI.\n      loadingTask.onUnsupportedFeature = this.fallback.bind(this);\n\n      return loadingTask.promise.then(\n        pdfDocument => {\n          this.load(pdfDocument);\n        },\n        exception => {\n          if (loadingTask !== this.pdfLoadingTask) {\n            return undefined; // Ignore errors for previously opened PDF files.\n          }\n\n          ///const message = exception?.message; // lwf\n          const message = exception && exception.message;\n          let loadingErrorMessage;\n          if (exception instanceof InvalidPDFException) {\n            // change error message also for other builds\n            loadingErrorMessage = this.l10n.get(\n              \"invalid_file_error\",\n              null,\n              \"Invalid or corrupted PDF file.\"\n            );\n          } else if (exception instanceof MissingPDFException) {\n            // special message for missing PDF's\n            loadingErrorMessage = this.l10n.get(\n              \"missing_file_error\",\n              null,\n              \"Missing PDF file.\"\n            );\n          } else if (exception instanceof UnexpectedResponseException) {\n            loadingErrorMessage = this.l10n.get(\n              \"unexpected_response_error\",\n              null,\n              \"Unexpected server response.\"\n            );\n          } else {\n            loadingErrorMessage = this.l10n.get(\n              \"loading_error\",\n              null,\n              \"An error occurred while loading the PDF.\"\n            );\n          }\n\n          return loadingErrorMessage.then(msg => {\n            this.error(msg, { message });\n            throw exception;\n          });\n        }\n      );\n    },\n\n    download({ sourceEventType = \"download\" } = {}) {\n      function downloadByUrl() {\n        downloadManager.downloadUrl(url, filename);\n      }\n\n      const downloadManager = this.downloadManager,\n        url = this.baseUrl,\n        filename = this._docFilename;\n\n      // When the PDF document isn't ready, or the PDF file is still downloading,\n      // simply download using the URL.\n      if (!this.pdfDocument || !this.downloadComplete) {\n        downloadByUrl();\n        return;\n      }\n\n      this.pdfDocument\n        .getData()\n        .then(function (data) {\n          const blob = new Blob([data], { type: \"application/pdf\" });\n          downloadManager.download(blob, url, filename, sourceEventType);\n        })\n        .catch(downloadByUrl); // Error occurred, try downloading with the URL.\n    },\n\n    async save({ sourceEventType = \"download\" } = {}) {\n      if (this._saveInProgress) {\n        return;\n      }\n\n      const downloadManager = this.downloadManager,\n        url = this.baseUrl,\n        filename = this._docFilename;\n\n      // When the PDF document isn't ready, or the PDF file is still downloading,\n      // simply download using the URL.\n      if (!this.pdfDocument || !this.downloadComplete) {\n        this.download({ sourceEventType });\n        return;\n      }\n      this._saveInProgress = true;\n\n      ///await this._scriptingInstance?.scripting.dispatchEventInSandbox({ // lwf\n      await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({\n        id: \"doc\",\n        name: \"WillSave\",\n      });\n\n      this.pdfDocument\n        .saveDocument(this.pdfDocument.annotationStorage)\n        .then(data => {\n          const blob = new Blob([data], { type: \"application/pdf\" });\n          downloadManager.download(blob, url, filename, sourceEventType);\n        })\n        .catch(() => {\n          this.download({ sourceEventType });\n        })\n        .finally(async () => {\n          ///await this._scriptingInstance?.scripting.dispatchEventInSandbox({ // lwf\n          await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({\n            id: \"doc\",\n            name: \"DidSave\",\n          });\n\n          this._saveInProgress = false;\n        });\n    },\n\n    downloadOrSave(options) {\n      ///if (this.pdfDocument?.annotationStorage.size > 0) { // lwf\n      if (this.pdfDocument && this.pdfDocument.annotationStorage.size > 0) {\n        this.save(options);\n      } else {\n        this.download(options);\n      }\n    },\n\n    /**\n     * For PDF documents that contain e.g. forms and javaScript, we should only\n     * trigger the fallback bar once the user has interacted with the page.\n     * @private\n     */\n    _delayedFallback(featureId) {\n      // Ensure that telemetry is always reported, since it's not guaranteed\n      // that the fallback bar will be shown (depends on user interaction).\n      this.externalServices.reportTelemetry({\n        type: \"unsupportedFeature\",\n        featureId,\n      });\n\n      if (!this.triggerDelayedFallback) {\n        this.triggerDelayedFallback = () => {\n          this.fallback(featureId);\n          this.triggerDelayedFallback = null;\n        };\n      }\n    },\n\n    fallback(featureId) {\n      this.externalServices.reportTelemetry({\n        type: \"unsupportedFeature\",\n        featureId,\n      });\n\n      // Only trigger the fallback once so we don't spam the user with messages\n      // for one PDF.\n      if (this.fellback) {\n        return;\n      }\n      this.fellback = true;\n      this.externalServices\n        .fallback({\n          featureId,\n          url: this.baseUrl,\n        })\n        .then(download => {\n          if (!download) {\n            return;\n          }\n          this.download({ sourceEventType: \"download\" });\n        });\n    },\n\n    /**\n     * Show the error box.\n     * @param {string} message - A message that is human readable.\n     * @param {Object} [moreInfo] - Further information about the error that is\n     *                              more technical.  Should have a 'message' and\n     *                              optionally a 'stack' property.\n     */\n    error(message, moreInfo) {\n      const moreInfoText = [\n        this.l10n.get(\n          \"error_version_info\",\n          { version: version || \"?\", build: build || \"?\" },\n          \"PDF.js v{{version}} (build: {{build}})\"\n        ),\n      ];\n      if (moreInfo) {\n        moreInfoText.push(\n          this.l10n.get(\n            \"error_message\",\n            { message: moreInfo.message },\n            \"Message: {{message}}\"\n          )\n        );\n        if (moreInfo.stack) {\n          moreInfoText.push(\n            this.l10n.get(\n              \"error_stack\",\n              { stack: moreInfo.stack },\n              \"Stack: {{stack}}\"\n            )\n          );\n        } else {\n          if (moreInfo.filename) {\n            moreInfoText.push(\n              this.l10n.get(\n                \"error_file\",\n                { file: moreInfo.filename },\n                \"File: {{file}}\"\n              )\n            );\n          }\n          if (moreInfo.lineNumber) {\n            moreInfoText.push(\n              this.l10n.get(\n                \"error_line\",\n                { line: moreInfo.lineNumber },\n                \"Line: {{line}}\"\n              )\n            );\n          }\n        }\n      }\n\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        const errorWrapperConfig = this.appConfig.errorWrapper;\n        const errorWrapper = errorWrapperConfig.container;\n        errorWrapper.removeAttribute(\"hidden\");\n\n        const errorMessage = errorWrapperConfig.errorMessage;\n        errorMessage.textContent = message;\n\n        const closeButton = errorWrapperConfig.closeButton;\n        closeButton.onclick = function () {\n          errorWrapper.setAttribute(\"hidden\", \"true\");\n        };\n\n        const errorMoreInfo = errorWrapperConfig.errorMoreInfo;\n        const moreInfoButton = errorWrapperConfig.moreInfoButton;\n        const lessInfoButton = errorWrapperConfig.lessInfoButton;\n        moreInfoButton.onclick = function () {\n          errorMoreInfo.removeAttribute(\"hidden\");\n          moreInfoButton.setAttribute(\"hidden\", \"true\");\n          lessInfoButton.removeAttribute(\"hidden\");\n          errorMoreInfo.style.height = errorMoreInfo.scrollHeight + \"px\";\n        };\n        lessInfoButton.onclick = function () {\n          errorMoreInfo.setAttribute(\"hidden\", \"true\");\n          moreInfoButton.removeAttribute(\"hidden\");\n          lessInfoButton.setAttribute(\"hidden\", \"true\");\n        };\n        moreInfoButton.oncontextmenu = noContextMenuHandler;\n        lessInfoButton.oncontextmenu = noContextMenuHandler;\n        closeButton.oncontextmenu = noContextMenuHandler;\n        moreInfoButton.removeAttribute(\"hidden\");\n        lessInfoButton.setAttribute(\"hidden\", \"true\");\n        Promise.all(moreInfoText).then(parts => {\n          errorMoreInfo.value = parts.join(\"\\n\");\n        });\n      } else {\n        Promise.all(moreInfoText).then(parts => {\n          console.error(message + \"\\n\" + parts.join(\"\\n\"));\n        });\n        this.fallback();\n      }\n    },\n\n    progress(level) {\n      if (this.downloadComplete) {\n        // Don't accidentally show the loading bar again when the entire file has\n        // already been fetched (only an issue when disableAutoFetch is enabled).\n        return;\n      }\n      const percent = Math.round(level * 100);\n      // When we transition from full request to range requests, it's possible\n      // that we discard some of the loaded data. This can cause the loading\n      // bar to move backwards. So prevent this by only updating the bar if it\n      // increases.\n      if (percent > this.loadingBar.percent || isNaN(percent)) {\n        this.loadingBar.percent = percent;\n\n        // When disableAutoFetch is enabled, it's not uncommon for the entire file\n        // to never be fetched (depends on e.g. the file structure). In this case\n        // the loading bar will not be completely filled, nor will it be hidden.\n        // To prevent displaying a partially filled loading bar permanently, we\n        // hide it when no data has been loaded during a certain amount of time.\n        const disableAutoFetch = this.pdfDocument\n          ? this.pdfDocument.loadingParams.disableAutoFetch\n          : AppOptions.get(\"disableAutoFetch\");\n\n        if (disableAutoFetch && percent) {\n          if (this.disableAutoFetchLoadingBarTimeout) {\n            clearTimeout(this.disableAutoFetchLoadingBarTimeout);\n            this.disableAutoFetchLoadingBarTimeout = null;\n          }\n          this.loadingBar.show();\n\n          this.disableAutoFetchLoadingBarTimeout = setTimeout(() => {\n            this.loadingBar.hide();\n            this.disableAutoFetchLoadingBarTimeout = null;\n          }, DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT);\n        }\n      }\n    },\n\n    load(pdfDocument) {\n      this.pdfDocument = pdfDocument;\n\n      pdfDocument.getDownloadInfo().then(({ length }) => {\n        this._contentLength = length; // Ensure that the correct length is used.\n        this.downloadComplete = true;\n        this.loadingBar.hide();\n\n        firstPagePromise.then(() => {\n          this.eventBus.dispatch(\"documentloaded\", { source: this });\n        });\n      });\n\n      // Since the `setInitialView` call below depends on this being resolved,\n      // fetch it early to avoid delaying initial rendering of the PDF document.\n      const pageLayoutPromise = pdfDocument.getPageLayout().catch(function () {\n        /* Avoid breaking initial rendering; ignoring errors. */\n      });\n      const pageModePromise = pdfDocument.getPageMode().catch(function () {\n        /* Avoid breaking initial rendering; ignoring errors. */\n      });\n      const openActionPromise = pdfDocument.getOpenAction().catch(function () {\n        /* Avoid breaking initial rendering; ignoring errors. */\n      });\n\n      this.toolbar.setPagesCount(pdfDocument.numPages, false);\n      this.secondaryToolbar.setPagesCount(pdfDocument.numPages);\n\n      let baseDocumentUrl;\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        baseDocumentUrl = null;\n      } else if (PDFJSDev.test(\"MOZCENTRAL\")) {\n        baseDocumentUrl = this.baseUrl;\n      } else if (PDFJSDev.test(\"CHROME\")) {\n        baseDocumentUrl = location.href.split(\"#\")[0];\n      }\n      this.pdfLinkService.setDocument(pdfDocument, baseDocumentUrl);\n      this.pdfDocumentProperties.setDocument(pdfDocument, this.url);\n\n      const pdfViewer = this.pdfViewer;\n      pdfViewer.setDocument(pdfDocument);\n      const { firstPagePromise, onePageRendered, pagesPromise } = pdfViewer;\n\n      const pdfThumbnailViewer = this.pdfThumbnailViewer;\n      pdfThumbnailViewer.setDocument(pdfDocument);\n\n      const storedPromise = (this.store = new ViewHistory(\n        pdfDocument.fingerprint\n      ))\n        .getMultiple({\n          page: null,\n          zoom: DEFAULT_SCALE_VALUE,\n          scrollLeft: \"0\",\n          scrollTop: \"0\",\n          rotation: null,\n          sidebarView: SidebarView.UNKNOWN,\n          scrollMode: ScrollMode.UNKNOWN,\n          spreadMode: SpreadMode.UNKNOWN,\n        })\n        .catch(() => {\n          /* Unable to read from storage; ignoring errors. */\n          return Object.create(null);\n        });\n\n      firstPagePromise.then(pdfPage => {\n        this.loadingBar.setWidth(this.appConfig.viewerContainer);\n        this._initializeAnnotationStorageCallbacks(pdfDocument);\n\n        Promise.all([\n          animationStarted,\n          storedPromise,\n          pageLayoutPromise,\n          pageModePromise,\n          openActionPromise,\n        ])\n          .then(async ([timeStamp, stored, pageLayout, pageMode, openAction]) => {\n            const viewOnLoad = AppOptions.get(\"viewOnLoad\");\n\n            this._initializePdfHistory({\n              fingerprint: pdfDocument.fingerprint,\n              viewOnLoad,\n              initialDest: openAction && openAction.dest,\n            });\n            const initialBookmark = this.initialBookmark;\n\n            // Initialize the default values, from user preferences.\n            const zoom = AppOptions.get(\"defaultZoomValue\");\n            let hash = zoom ? `zoom=${zoom}` : null;\n\n            let rotation = null;\n            let sidebarView = AppOptions.get(\"sidebarViewOnLoad\");\n            let scrollMode = AppOptions.get(\"scrollModeOnLoad\");\n            let spreadMode = AppOptions.get(\"spreadModeOnLoad\");\n\n            if (stored.page && viewOnLoad !== ViewOnLoad.INITIAL) {\n              hash =\n                `page=${stored.page}&zoom=${zoom || stored.zoom},` +\n                `${stored.scrollLeft},${stored.scrollTop}`;\n\n              rotation = parseInt(stored.rotation, 10);\n              // Always let user preference take precedence over the view history.\n              if (sidebarView === SidebarView.UNKNOWN) {\n                sidebarView = stored.sidebarView | 0;\n              }\n              if (scrollMode === ScrollMode.UNKNOWN) {\n                scrollMode = stored.scrollMode | 0;\n              }\n              if (spreadMode === SpreadMode.UNKNOWN) {\n                spreadMode = stored.spreadMode | 0;\n              }\n            }\n            // Always let the user preference/view history take precedence.\n            if (pageMode && sidebarView === SidebarView.UNKNOWN) {\n              sidebarView = apiPageModeToSidebarView(pageMode);\n            }\n            if (pageLayout && spreadMode === SpreadMode.UNKNOWN) {\n              spreadMode = apiPageLayoutToSpreadMode(pageLayout);\n            }\n\n            this.setInitialView(hash, {\n              rotation,\n              sidebarView,\n              scrollMode,\n              spreadMode,\n            });\n            this.eventBus.dispatch(\"documentinit\", { source: this });\n            // Make all navigation keys work on document load,\n            // unless the viewer is embedded in a web page.\n            if (!this.isViewerEmbedded) {\n              pdfViewer.focus();\n            }\n\n            // Currently only the \"copy\"-permission is supported, hence we delay\n            // the `getPermissions` API call until *after* rendering has started.\n            this._initializePermissions(pdfDocument);\n\n            // For documents with different page sizes, once all pages are\n            // resolved, ensure that the correct location becomes visible on load.\n            // (To reduce the risk, in very large and/or slow loading documents,\n            //  that the location changes *after* the user has started interacting\n            //  with the viewer, wait for either `pagesPromise` or a timeout.)\n            await Promise.race([\n              pagesPromise,\n              new Promise(resolve => {\n                setTimeout(resolve, FORCE_PAGES_LOADED_TIMEOUT);\n              }),\n            ]);\n            if (!initialBookmark && !hash) {\n              return;\n            }\n            if (pdfViewer.hasEqualPageSizes) {\n              return;\n            }\n            this.initialBookmark = initialBookmark;\n\n            // eslint-disable-next-line no-self-assign\n            pdfViewer.currentScaleValue = pdfViewer.currentScaleValue;\n            // Re-apply the initial document location.\n            this.setInitialView(hash);\n          })\n          .catch(() => {\n            // Ensure that the document is always completely initialized,\n            // even if there are any errors thrown above.\n            this.setInitialView();\n          })\n          .then(function () {\n            // At this point, rendering of the initial page(s) should always have\n            // started (and may even have completed).\n            // To prevent any future issues, e.g. the document being completely\n            // blank on load, always trigger rendering here.\n            pdfViewer.update();\n          });\n      });\n\n      pagesPromise.then(() => {\n        this._initializeAutoPrint(pdfDocument, openActionPromise);\n      });\n\n      onePageRendered.then(() => {\n        pdfDocument.getOutline().then(outline => {\n          this.pdfOutlineViewer.render({ outline, pdfDocument });\n        });\n        pdfDocument.getAttachments().then(attachments => {\n          this.pdfAttachmentViewer.render({ attachments });\n        });\n        // Ensure that the layers accurately reflects the current state in the\n        // viewer itself, rather than the default state provided by the API.\n        pdfViewer.optionalContentConfigPromise.then(optionalContentConfig => {\n          this.pdfLayerViewer.render({ optionalContentConfig, pdfDocument });\n        });\n        if (\"requestIdleCallback\" in window) {\n          const callback = window.requestIdleCallback(\n            () => {\n              this._collectTelemetry(pdfDocument);\n              this._idleCallbacks.delete(callback);\n            },\n            { timeout: 1000 }\n          );\n          this._idleCallbacks.add(callback);\n        }\n        this._initializeJavaScript(pdfDocument);\n      });\n\n      this._initializePageLabels(pdfDocument);\n      this._initializeMetadata(pdfDocument);\n    },\n\n    /**\n     * @private\n     */\n    async _initializeJavaScript(pdfDocument) {\n      if (!AppOptions.get(\"enableScripting\")) {\n        return;\n      }\n      const [objects, calculationOrder, docActions] = await Promise.all([\n        pdfDocument.getFieldObjects(),\n        pdfDocument.getCalculationOrderIds(),\n        pdfDocument.getJSActions(),\n      ]);\n\n      if (!objects && !docActions) {\n        // No FieldObjects or JavaScript actions were found in the document.\n        return;\n      }\n      if (pdfDocument !== this.pdfDocument) {\n        return; // The document was closed while the data resolved.\n      }\n      const scripting = this.externalServices.createScripting(\n        typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || GENERIC || CHROME\")\n          ? { sandboxBundleSrc: AppOptions.get(\"sandboxBundleSrc\") }\n          : null\n      );\n      // Store a reference to the current scripting-instance, to allow destruction\n      // of the sandbox and removal of the event listeners at document closing.\n      const internalEvents = new Map(),\n        domEvents = new Map();\n      this._scriptingInstance = {\n        scripting,\n        ready: false,\n        internalEvents,\n        domEvents,\n      };\n\n      if (!this.documentInfo) {\n        // It should be *extremely* rare for metadata to not have been resolved\n        // when this code runs, but ensure that we handle that case here.\n        await new Promise(resolve => {\n          this.eventBus._on(\n            \"metadataloaded\",\n            evt => {\n              resolve();\n            },\n            { once: true }\n          );\n        });\n        if (pdfDocument !== this.pdfDocument) {\n          return; // The document was closed while the metadata resolved.\n        }\n      }\n      if (!this._contentLength) {\n        // Always waiting for the entire PDF document to be loaded will, most\n        // likely, delay sandbox-creation too much in the general case for all\n        // PDF documents which are not provided as binary data to the API.\n        // Hence we'll simply have to trust that the `contentLength` (as provided\n        // by the server), when it exists, is accurate enough here.\n        await new Promise(resolve => {\n          this.eventBus._on(\n            \"documentloaded\",\n            evt => {\n              resolve();\n            },\n            { once: true }\n          );\n        });\n        if (pdfDocument !== this.pdfDocument) {\n          return; // The document was closed while the downloadInfo resolved.\n        }\n      }\n\n      const updateFromSandbox = ({ detail }) => {\n        const { id, command, value } = detail;\n        if (!id) {\n          switch (command) {\n            case \"clear\":\n              console.clear();\n              break;\n            case \"error\":\n              console.error(value);\n              break;\n            case \"layout\":\n              this.pdfViewer.spreadMode = apiPageLayoutToSpreadMode(value);\n              break;\n            case \"page-num\":\n              this.pdfViewer.currentPageNumber = value + 1;\n              break;\n            case \"print\":\n              this.pdfViewer.pagesPromise.then(() => {\n                this.triggerPrinting();\n              });\n              break;\n            case \"println\":\n              console.log(value);\n              break;\n            case \"zoom\":\n              this.pdfViewer.currentScaleValue = value;\n              break;\n          }\n          return;\n        }\n\n        const element = document.getElementById(id);\n        if (element) {\n          element.dispatchEvent(new CustomEvent(\"updatefromsandbox\", { detail }));\n        } else {\n          if (value !== undefined && value !== null) {\n            // The element hasn't been rendered yet, use the AnnotationStorage.\n            pdfDocument.annotationStorage.setValue(id, value);\n          }\n        }\n      };\n      internalEvents.set(\"updatefromsandbox\", updateFromSandbox);\n\n      const visitedPages = new Map();\n      const pageOpen = ({ pageNumber, actionsPromise }) => {\n        visitedPages.set(\n          pageNumber,\n          (async () => {\n            // Avoid sending, and thus serializing, the `actions` data\n            // when the same page is opened several times.\n            let actions = null;\n            if (!visitedPages.has(pageNumber)) {\n              actions = await actionsPromise;\n\n              if (pdfDocument !== this.pdfDocument) {\n                return; // The document was closed while the actions resolved.\n              }\n            }\n\n            ///await this._scriptingInstance?.scripting.dispatchEventInSandbox({ // lwf\n            await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({\n              id: \"page\",\n              name: \"PageOpen\",\n              pageNumber,\n              actions,\n            });\n          })()\n        );\n      };\n\n      const pageClose = async ({ pageNumber }) => {\n        const actionsPromise = visitedPages.get(pageNumber);\n        if (!actionsPromise) {\n          // Ensure that the \"pageclose\" event was preceded by a \"pageopen\" event.\n          return;\n        }\n        visitedPages.set(pageNumber, null);\n\n        // Ensure that the \"pageopen\" event is handled first.\n        await actionsPromise;\n\n        if (pdfDocument !== this.pdfDocument) {\n          return; // The document was closed while the actions resolved.\n        }\n\n        ///await this._scriptingInstance?.scripting.dispatchEventInSandbox({ // lwf\n        await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({\n          id: \"page\",\n          name: \"PageClose\",\n          pageNumber,\n        });\n      };\n      internalEvents.set(\"pageopen\", pageOpen);\n      internalEvents.set(\"pageclose\", pageClose);\n\n      const dispatchEventInSandbox = ({ detail }) => {\n        scripting.dispatchEventInSandbox(detail);\n      };\n      internalEvents.set(\"dispatcheventinsandbox\", dispatchEventInSandbox);\n\n      const mouseDown = event => {\n        this._mouseState.isDown = true;\n      };\n      domEvents.set(\"mousedown\", mouseDown);\n\n      const mouseUp = event => {\n        this._mouseState.isDown = false;\n      };\n      domEvents.set(\"mouseup\", mouseUp);\n\n      for (const [name, listener] of internalEvents) {\n        this.eventBus._on(name, listener);\n      }\n      for (const [name, listener] of domEvents) {\n        window.addEventListener(name, listener);\n      }\n\n      try {\n        await scripting.createSandbox({\n          objects,\n          calculationOrder,\n          appInfo: {\n            platform: navigator.platform,\n            language: navigator.language,\n          },\n          docInfo: {\n            ...this.documentInfo,\n            baseURL: this.baseUrl,\n            filesize: this._contentLength,\n            filename: this._docFilename,\n            ///metadata: this.metadata?.getRaw(), // lwf\n            metadata: this.metadata && this.metadata.getRaw(),\n            ///authors: this.metadata?.get(\"dc:creator\"), // lwf\n            authors: this.metadata && this.metadata.get(\"dc:creator\"),\n            numPages: pdfDocument.numPages,\n            URL: this.url,\n            actions: docActions,\n          },\n        });\n\n        if (this.externalServices.isInAutomation) {\n          this.eventBus.dispatch(\"sandboxcreated\", { source: this });\n        }\n      } catch (error) {\n        ///console.error(`_initializeJavaScript: \"${error?.message}\".`); // lwf\n        console.error(`_initializeJavaScript: \"${error && error.message}\".`);\n\n        this._destroyScriptingInstance();\n        return;\n      }\n\n      await scripting.dispatchEventInSandbox({\n        id: \"doc\",\n        name: \"Open\",\n      });\n      await this.pdfViewer.initializeScriptingEvents();\n\n      // Used together with the integration-tests, see the `scriptingReady`\n      // getter, to enable awaiting full initialization of the scripting/sandbox.\n      // (Defer this slightly, to make absolutely sure that everything is done.)\n      Promise.resolve().then(() => {\n        if (this._scriptingInstance) {\n          this._scriptingInstance.ready = true;\n        }\n      });\n    },\n\n    /**\n     * A place to fetch data for telemetry after one page is rendered and the\n     * viewer is idle.\n     * @private\n     */\n    async _collectTelemetry(pdfDocument) {\n      const markInfo = await this.pdfDocument.getMarkInfo();\n      if (pdfDocument !== this.pdfDocument) {\n        return; // Document was closed while waiting for mark info.\n      }\n      ///const tagged = markInfo?.Marked || false; // lwf\n      const tagged = markInfo && markInfo.Marked || false;\n      this.externalServices.reportTelemetry({\n        type: \"tagged\",\n        tagged,\n      });\n    },\n\n    /**\n     * @private\n     */\n    async _initializeAutoPrint(pdfDocument, openActionPromise) {\n      const [openAction, javaScript] = await Promise.all([\n        openActionPromise,\n        !AppOptions.get(\"enableScripting\") ? pdfDocument.getJavaScript() : null,\n      ]);\n\n      if (pdfDocument !== this.pdfDocument) {\n        return; // The document was closed while the auto print data resolved.\n      }\n      let triggerAutoPrint = false;\n\n      ///if (openAction?.action === \"Print\") { // lwf\n      if (openAction && openAction.action === \"Print\") {\n        triggerAutoPrint = true;\n      }\n      if (javaScript) {\n        javaScript.some(js => {\n          if (!js) {\n            // Don't warn/fallback for empty JavaScript actions.\n            return false;\n          }\n          console.warn(\"Warning: JavaScript is not supported\");\n          this._delayedFallback(UNSUPPORTED_FEATURES.javaScript);\n          return true;\n        });\n\n        if (!triggerAutoPrint) {\n          // Hack to support auto printing.\n          for (const js of javaScript) {\n            if (js && AutoPrintRegExp.test(js)) {\n              triggerAutoPrint = true;\n              break;\n            }\n          }\n        }\n      }\n\n      if (triggerAutoPrint) {\n        this.triggerPrinting();\n      }\n    },\n\n    /**\n     * @private\n     */\n    async _initializeMetadata(pdfDocument) {\n      const {\n        info,\n        metadata,\n        contentDispositionFilename,\n        contentLength,\n      } = await pdfDocument.getMetadata();\n\n      if (pdfDocument !== this.pdfDocument) {\n        return; // The document was closed while the metadata resolved.\n      }\n      this.documentInfo = info;\n      this.metadata = metadata;\n      this._contentDispositionFilename = contentDispositionFilename;\n      //this._contentLength ??= contentLength; // See `getDownloadInfo`-call above. // lwf\n      this._contentLength ||  (this._contentLength = contentLength);\n\n      // Provides some basic debug information\n      console.log(\n        `PDF ${pdfDocument.fingerprint} [${info.PDFFormatVersion} ` +\n          `${(info.Producer || \"-\").trim()} / ${(info.Creator || \"-\").trim()}] ` +\n          `(PDF.js: ${version || \"-\"}` +\n          `${this.pdfViewer.enableWebGL ? \" [WebGL]\" : \"\"})`\n      );\n\n      let pdfTitle;\n      const infoTitle = info && info.Title;\n      if (infoTitle) {\n        pdfTitle = infoTitle;\n      }\n      const metadataTitle = metadata && metadata.get(\"dc:title\");\n      if (metadataTitle) {\n        // Ghostscript can produce invalid 'dc:title' Metadata entries:\n        //  - The title may be \"Untitled\" (fixes bug 1031612).\n        //  - The title may contain incorrectly encoded characters, which thus\n        //    looks broken, hence we ignore the Metadata entry when it\n        //    contains characters from the Specials Unicode block\n        //    (fixes bug 1605526).\n        if (\n          metadataTitle !== \"Untitled\" &&\n          !/[\\uFFF0-\\uFFFF]/g.test(metadataTitle)\n        ) {\n          pdfTitle = metadataTitle;\n        }\n      }\n      if (pdfTitle) {\n        this.setTitle(\n          `${pdfTitle} - ${contentDispositionFilename || document.title}`\n        );\n      } else if (contentDispositionFilename) {\n        this.setTitle(contentDispositionFilename);\n      }\n\n      if (info.IsXFAPresent && !info.IsAcroFormPresent) {\n        console.warn(\"Warning: XFA is not supported\");\n        this._delayedFallback(UNSUPPORTED_FEATURES.forms);\n      } else if (\n        (info.IsAcroFormPresent || info.IsXFAPresent) &&\n        !this.pdfViewer.renderInteractiveForms\n      ) {\n        console.warn(\"Warning: Interactive form support is not enabled\");\n        this._delayedFallback(UNSUPPORTED_FEATURES.forms);\n      }\n\n      // Telemetry labels must be C++ variable friendly.\n      let versionId = \"other\";\n      if (KNOWN_VERSIONS.includes(info.PDFFormatVersion)) {\n        versionId = `v${info.PDFFormatVersion.replace(\".\", \"_\")}`;\n      }\n      let generatorId = \"other\";\n      if (info.Producer) {\n        const producer = info.Producer.toLowerCase();\n        KNOWN_GENERATORS.some(function (generator) {\n          if (!producer.includes(generator)) {\n            return false;\n          }\n          generatorId = generator.replace(/[ .-]/g, \"_\");\n          return true;\n        });\n      }\n      let formType = null;\n      if (info.IsXFAPresent) {\n        formType = \"xfa\";\n      } else if (info.IsAcroFormPresent) {\n        formType = \"acroform\";\n      }\n      this.externalServices.reportTelemetry({\n        type: \"documentInfo\",\n        version: versionId,\n        generator: generatorId,\n        formType,\n      });\n\n      this.eventBus.dispatch(\"metadataloaded\", { source: this });\n    },\n\n    /**\n     * @private\n     */\n    async _initializePageLabels(pdfDocument) {\n      const labels = await pdfDocument.getPageLabels();\n\n      if (pdfDocument !== this.pdfDocument) {\n        return; // The document was closed while the page labels resolved.\n      }\n      if (!labels || AppOptions.get(\"disablePageLabels\")) {\n        return;\n      }\n      const numLabels = labels.length;\n      if (numLabels !== this.pagesCount) {\n        console.error(\n          \"The number of Page Labels does not match the number of pages in the document.\"\n        );\n        return;\n      }\n      let i = 0;\n      // Ignore page labels that correspond to standard page numbering.\n      while (i < numLabels && labels[i] === (i + 1).toString()) {\n        i++;\n      }\n      if (i === numLabels) {\n        return;\n      }\n      const { pdfViewer, pdfThumbnailViewer, toolbar } = this;\n\n      pdfViewer.setPageLabels(labels);\n      pdfThumbnailViewer.setPageLabels(labels);\n\n      // Changing toolbar page display to use labels and we need to set\n      // the label of the current page.\n      toolbar.setPagesCount(numLabels, true);\n      toolbar.setPageNumber(\n        pdfViewer.currentPageNumber,\n        pdfViewer.currentPageLabel\n      );\n    },\n\n    /**\n     * @private\n     */\n    _initializePdfHistory({ fingerprint, viewOnLoad, initialDest = null }) {\n      if (this.isViewerEmbedded || AppOptions.get(\"disableHistory\")) {\n        // The browsing history is only enabled when the viewer is standalone,\n        // i.e. not when it is embedded in a web page.\n        return;\n      }\n      this.pdfHistory.initialize({\n        fingerprint,\n        resetHistory: viewOnLoad === ViewOnLoad.INITIAL,\n        updateUrl: AppOptions.get(\"historyUpdateUrl\"),\n      });\n\n      if (this.pdfHistory.initialBookmark) {\n        this.initialBookmark = this.pdfHistory.initialBookmark;\n\n        this.initialRotation = this.pdfHistory.initialRotation;\n      }\n\n      // Always let the browser history/document hash take precedence.\n      if (\n        initialDest &&\n        !this.initialBookmark &&\n        viewOnLoad === ViewOnLoad.UNKNOWN\n      ) {\n        this.initialBookmark = JSON.stringify(initialDest);\n        // TODO: Re-factor the `PDFHistory` initialization to remove this hack\n        // that's currently necessary to prevent weird initial history state.\n        this.pdfHistory.push({ explicitDest: initialDest, pageNumber: null });\n      }\n    },\n\n    /**\n     * @private\n     */\n    async _initializePermissions(pdfDocument) {\n      const permissions = await pdfDocument.getPermissions();\n\n      if (pdfDocument !== this.pdfDocument) {\n        return; // The document was closed while the permissions resolved.\n      }\n      if (!permissions || !AppOptions.get(\"enablePermissions\")) {\n        return;\n      }\n      // Currently only the \"copy\"-permission is supported.\n      if (!permissions.includes(PermissionFlag.COPY)) {\n        this.appConfig.viewerContainer.classList.add(ENABLE_PERMISSIONS_CLASS);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _initializeAnnotationStorageCallbacks(pdfDocument) {\n      if (pdfDocument !== this.pdfDocument) {\n        return;\n      }\n      const { annotationStorage } = pdfDocument;\n\n      annotationStorage.onSetModified = function () {\n        window.addEventListener(\"beforeunload\", beforeUnload);\n      };\n      annotationStorage.onResetModified = function () {\n        window.removeEventListener(\"beforeunload\", beforeUnload);\n      };\n    },\n\n    setInitialView(\n      storedHash,\n      { rotation, sidebarView, scrollMode, spreadMode } = {}\n    ) {\n      const setRotation = angle => {\n        if (isValidRotation(angle)) {\n          this.pdfViewer.pagesRotation = angle;\n        }\n      };\n      const setViewerModes = (scroll, spread) => {\n        if (isValidScrollMode(scroll)) {\n          this.pdfViewer.scrollMode = scroll;\n        }\n        if (isValidSpreadMode(spread)) {\n          this.pdfViewer.spreadMode = spread;\n        }\n      };\n      this.isInitialViewSet = true;\n      this.pdfSidebar.setInitialView(sidebarView);\n\n      setViewerModes(scrollMode, spreadMode);\n\n      if (this.initialBookmark) {\n        setRotation(this.initialRotation);\n        delete this.initialRotation;\n\n        this.pdfLinkService.setHash(this.initialBookmark);\n        this.initialBookmark = null;\n      } else if (storedHash) {\n        setRotation(rotation);\n\n        this.pdfLinkService.setHash(storedHash);\n      }\n\n      // Ensure that the correct page number is displayed in the UI,\n      // even if the active page didn't change during document load.\n      this.toolbar.setPageNumber(\n        this.pdfViewer.currentPageNumber,\n        this.pdfViewer.currentPageLabel\n      );\n      this.secondaryToolbar.setPageNumber(this.pdfViewer.currentPageNumber);\n\n      if (!this.pdfViewer.currentScaleValue) {\n        // Scale was not initialized: invalid bookmark or scale was not specified.\n        // Setting the default one.\n        this.pdfViewer.currentScaleValue = DEFAULT_SCALE_VALUE;\n      }\n    },\n\n    cleanup() {\n      if (!this.pdfDocument) {\n        return; // run cleanup when document is loaded\n      }\n      this.pdfViewer.cleanup();\n      this.pdfThumbnailViewer.cleanup();\n\n      // We don't want to remove fonts used by active page SVGs.\n      if (this.pdfViewer.renderer !== RendererType.SVG) {\n        this.pdfDocument.cleanup();\n      }\n    },\n\n    forceRendering() {\n      this.pdfRenderingQueue.printing = !!this.printService;\n      this.pdfRenderingQueue.isThumbnailViewEnabled = this.pdfSidebar.isThumbnailViewVisible;\n      this.pdfRenderingQueue.renderHighestPriority();\n    },\n\n    beforePrint() {\n      // Given that the \"beforeprint\" browser event is synchronous, we\n      // unfortunately cannot await the scripting event dispatching here.\n      ///this._scriptingInstance?.scripting.dispatchEventInSandbox({ // lwf\n      this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({\n        id: \"doc\",\n        name: \"WillPrint\",\n      });\n\n      if (this.printService) {\n        // There is no way to suppress beforePrint/afterPrint events,\n        // but PDFPrintService may generate double events -- this will ignore\n        // the second event that will be coming from native window.print().\n        return;\n      }\n\n      if (!this.supportsPrinting) {\n        this.l10n\n          .get(\n            \"printing_not_supported\",\n            null,\n            \"Warning: Printing is not fully supported by this browser.\"\n          )\n          .then(printMessage => {\n            this.error(printMessage);\n          });\n        return;\n      }\n\n      // The beforePrint is a sync method and we need to know layout before\n      // returning from this method. Ensure that we can get sizes of the pages.\n      if (!this.pdfViewer.pageViewsReady) {\n        this.l10n\n          .get(\n            \"printing_not_ready\",\n            null,\n            \"Warning: The PDF is not fully loaded for printing.\"\n          )\n          .then(notReadyMessage => {\n            // eslint-disable-next-line no-alert\n            window.alert(notReadyMessage);\n          });\n        return;\n      }\n\n      const pagesOverview = this.pdfViewer.getPagesOverview();\n      const printContainer = this.appConfig.printContainer;\n      const printResolution = AppOptions.get(\"printResolution\");\n      const optionalContentConfigPromise = this.pdfViewer\n        .optionalContentConfigPromise;\n\n      const printService = PDFPrintServiceFactory.instance.createPrintService(\n        this.pdfDocument,\n        pagesOverview,\n        printContainer,\n        printResolution,\n        optionalContentConfigPromise,\n        this.l10n\n      );\n      this.printService = printService;\n      this.forceRendering();\n\n      printService.layout();\n\n      this.externalServices.reportTelemetry({\n        type: \"print\",\n      });\n    },\n\n    afterPrint() {\n      // Given that the \"afterprint\" browser event is synchronous, we\n      // unfortunately cannot await the scripting event dispatching here.\n      ///this._scriptingInstance?.scripting.dispatchEventInSandbox({ // lwf\n      this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({\n        id: \"doc\",\n        name: \"DidPrint\",\n      });\n\n      if (this.printService) {\n        this.printService.destroy();\n        this.printService = null;\n\n        if (this.pdfDocument) {\n          this.pdfDocument.annotationStorage.resetModified();\n        }\n      }\n      this.forceRendering();\n    },\n\n    rotatePages(delta) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      const newRotation = (this.pdfViewer.pagesRotation + 360 + delta) % 360;\n      this.pdfViewer.pagesRotation = newRotation;\n      // Note that the thumbnail viewer is updated, and rendering is triggered,\n      // in the 'rotationchanging' event handler.\n    },\n\n    requestPresentationMode() {\n      if (!this.pdfPresentationMode) {\n        return;\n      }\n      this.pdfPresentationMode.request();\n    },\n\n    triggerPrinting() {\n      if (!this.supportsPrinting) {\n        return;\n      }\n      window.print();\n    },\n\n    bindEvents() {\n      const { eventBus, _boundEvents } = this;\n\n      _boundEvents.beforePrint = this.beforePrint.bind(this);\n      _boundEvents.afterPrint = this.afterPrint.bind(this);\n\n      eventBus._on(\"resize\", webViewerResize);\n      eventBus._on(\"hashchange\", webViewerHashchange);\n      eventBus._on(\"beforeprint\", _boundEvents.beforePrint);\n      eventBus._on(\"afterprint\", _boundEvents.afterPrint);\n      eventBus._on(\"pagerendered\", webViewerPageRendered);\n      eventBus._on(\"updateviewarea\", webViewerUpdateViewarea);\n      eventBus._on(\"pagechanging\", webViewerPageChanging);\n      eventBus._on(\"scalechanging\", webViewerScaleChanging);\n      eventBus._on(\"rotationchanging\", webViewerRotationChanging);\n      eventBus._on(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n      eventBus._on(\"pagemode\", webViewerPageMode);\n      eventBus._on(\"namedaction\", webViewerNamedAction);\n      eventBus._on(\"presentationmodechanged\", webViewerPresentationModeChanged);\n      eventBus._on(\"presentationmode\", webViewerPresentationMode);\n      eventBus._on(\"print\", webViewerPrint);\n      eventBus._on(\"download\", webViewerDownload);\n      eventBus._on(\"save\", webViewerSave);\n      eventBus._on(\"firstpage\", webViewerFirstPage);\n      eventBus._on(\"lastpage\", webViewerLastPage);\n      eventBus._on(\"nextpage\", webViewerNextPage);\n      eventBus._on(\"previouspage\", webViewerPreviousPage);\n      eventBus._on(\"zoomin\", webViewerZoomIn);\n      eventBus._on(\"zoomout\", webViewerZoomOut);\n      eventBus._on(\"zoomreset\", webViewerZoomReset);\n      eventBus._on(\"pagenumberchanged\", webViewerPageNumberChanged);\n      eventBus._on(\"scalechanged\", webViewerScaleChanged);\n      eventBus._on(\"rotatecw\", webViewerRotateCw);\n      eventBus._on(\"rotateccw\", webViewerRotateCcw);\n      eventBus._on(\"optionalcontentconfig\", webViewerOptionalContentConfig);\n      eventBus._on(\"switchscrollmode\", webViewerSwitchScrollMode);\n      eventBus._on(\"scrollmodechanged\", webViewerScrollModeChanged);\n      eventBus._on(\"switchspreadmode\", webViewerSwitchSpreadMode);\n      eventBus._on(\"spreadmodechanged\", webViewerSpreadModeChanged);\n      eventBus._on(\"documentproperties\", webViewerDocumentProperties);\n      eventBus._on(\"find\", webViewerFind);\n      eventBus._on(\"findfromurlhash\", webViewerFindFromUrlHash);\n      eventBus._on(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n      eventBus._on(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n\n      if (AppOptions.get(\"pdfBug\")) {\n        _boundEvents.reportPageStatsPDFBug = reportPageStatsPDFBug;\n\n        eventBus._on(\"pagerendered\", _boundEvents.reportPageStatsPDFBug);\n        eventBus._on(\"pagechanging\", _boundEvents.reportPageStatsPDFBug);\n      }\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        eventBus._on(\"fileinputchange\", webViewerFileInputChange);\n        eventBus._on(\"openfile\", webViewerOpenFile);\n      }\n    },\n\n    bindWindowEvents() {\n      const { eventBus, _boundEvents } = this;\n\n      _boundEvents.windowResize = () => {\n        eventBus.dispatch(\"resize\", { source: window });\n      };\n      _boundEvents.windowHashChange = () => {\n        eventBus.dispatch(\"hashchange\", {\n          source: window,\n          hash: document.location.hash.substring(1),\n        });\n      };\n      _boundEvents.windowBeforePrint = () => {\n        eventBus.dispatch(\"beforeprint\", { source: window });\n      };\n      _boundEvents.windowAfterPrint = () => {\n        eventBus.dispatch(\"afterprint\", { source: window });\n      };\n      _boundEvents.windowUpdateFromSandbox = event => {\n        eventBus.dispatch(\"updatefromsandbox\", {\n          source: window,\n          detail: event.detail,\n        });\n      };\n\n      window.addEventListener(\"visibilitychange\", webViewerVisibilityChange);\n      window.addEventListener(\"wheel\", webViewerWheel, { passive: false });\n      window.addEventListener(\"touchstart\", webViewerTouchStart, {\n        passive: false,\n      });\n      window.addEventListener(\"click\", webViewerClick);\n      window.addEventListener(\"keydown\", webViewerKeyDown);\n      window.addEventListener(\"keyup\", webViewerKeyUp);\n      window.addEventListener(\"resize\", _boundEvents.windowResize);\n      window.addEventListener(\"hashchange\", _boundEvents.windowHashChange);\n      window.addEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n      window.addEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n      window.addEventListener(\n        \"updatefromsandbox\",\n        _boundEvents.windowUpdateFromSandbox\n      );\n    },\n\n    unbindEvents() {\n      const { eventBus, _boundEvents } = this;\n\n      eventBus._off(\"resize\", webViewerResize);\n      eventBus._off(\"hashchange\", webViewerHashchange);\n      eventBus._off(\"beforeprint\", _boundEvents.beforePrint);\n      eventBus._off(\"afterprint\", _boundEvents.afterPrint);\n      eventBus._off(\"pagerendered\", webViewerPageRendered);\n      eventBus._off(\"updateviewarea\", webViewerUpdateViewarea);\n      eventBus._off(\"pagechanging\", webViewerPageChanging);\n      eventBus._off(\"scalechanging\", webViewerScaleChanging);\n      eventBus._off(\"rotationchanging\", webViewerRotationChanging);\n      eventBus._off(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n      eventBus._off(\"pagemode\", webViewerPageMode);\n      eventBus._off(\"namedaction\", webViewerNamedAction);\n      eventBus._off(\"presentationmodechanged\", webViewerPresentationModeChanged);\n      eventBus._off(\"presentationmode\", webViewerPresentationMode);\n      eventBus._off(\"print\", webViewerPrint);\n      eventBus._off(\"download\", webViewerDownload);\n      eventBus._off(\"save\", webViewerSave);\n      eventBus._off(\"firstpage\", webViewerFirstPage);\n      eventBus._off(\"lastpage\", webViewerLastPage);\n      eventBus._off(\"nextpage\", webViewerNextPage);\n      eventBus._off(\"previouspage\", webViewerPreviousPage);\n      eventBus._off(\"zoomin\", webViewerZoomIn);\n      eventBus._off(\"zoomout\", webViewerZoomOut);\n      eventBus._off(\"zoomreset\", webViewerZoomReset);\n      eventBus._off(\"pagenumberchanged\", webViewerPageNumberChanged);\n      eventBus._off(\"scalechanged\", webViewerScaleChanged);\n      eventBus._off(\"rotatecw\", webViewerRotateCw);\n      eventBus._off(\"rotateccw\", webViewerRotateCcw);\n      eventBus._off(\"optionalcontentconfig\", webViewerOptionalContentConfig);\n      eventBus._off(\"switchscrollmode\", webViewerSwitchScrollMode);\n      eventBus._off(\"scrollmodechanged\", webViewerScrollModeChanged);\n      eventBus._off(\"switchspreadmode\", webViewerSwitchSpreadMode);\n      eventBus._off(\"spreadmodechanged\", webViewerSpreadModeChanged);\n      eventBus._off(\"documentproperties\", webViewerDocumentProperties);\n      eventBus._off(\"find\", webViewerFind);\n      eventBus._off(\"findfromurlhash\", webViewerFindFromUrlHash);\n      eventBus._off(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n      eventBus._off(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n\n      if (_boundEvents.reportPageStatsPDFBug) {\n        eventBus._off(\"pagerendered\", _boundEvents.reportPageStatsPDFBug);\n        eventBus._off(\"pagechanging\", _boundEvents.reportPageStatsPDFBug);\n\n        _boundEvents.reportPageStatsPDFBug = null;\n      }\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        eventBus._off(\"fileinputchange\", webViewerFileInputChange);\n        eventBus._off(\"openfile\", webViewerOpenFile);\n      }\n\n      _boundEvents.beforePrint = null;\n      _boundEvents.afterPrint = null;\n    },\n\n    unbindWindowEvents() {\n      const { _boundEvents } = this;\n\n      window.removeEventListener(\"visibilitychange\", webViewerVisibilityChange);\n      window.removeEventListener(\"wheel\", webViewerWheel, { passive: false });\n      window.removeEventListener(\"touchstart\", webViewerTouchStart, {\n        passive: false,\n      });\n      window.removeEventListener(\"click\", webViewerClick);\n      window.removeEventListener(\"keydown\", webViewerKeyDown);\n      window.removeEventListener(\"keyup\", webViewerKeyUp);\n      window.removeEventListener(\"resize\", _boundEvents.windowResize);\n      window.removeEventListener(\"hashchange\", _boundEvents.windowHashChange);\n      window.removeEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n      window.removeEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n      window.removeEventListener(\n        \"updatefromsandbox\",\n        _boundEvents.windowUpdateFromSandbox\n      );\n\n      _boundEvents.windowResize = null;\n      _boundEvents.windowHashChange = null;\n      _boundEvents.windowBeforePrint = null;\n      _boundEvents.windowAfterPrint = null;\n      _boundEvents.windowUpdateFromSandbox = null;\n    },\n\n    accumulateWheelTicks(ticks) {\n      // If the scroll direction changed, reset the accumulated wheel ticks.\n      if (\n        (this._wheelUnusedTicks > 0 && ticks < 0) ||\n        (this._wheelUnusedTicks < 0 && ticks > 0)\n      ) {\n        this._wheelUnusedTicks = 0;\n      }\n      this._wheelUnusedTicks += ticks;\n      const wholeTicks =\n        Math.sign(this._wheelUnusedTicks) *\n        Math.floor(Math.abs(this._wheelUnusedTicks));\n      this._wheelUnusedTicks -= wholeTicks;\n      return wholeTicks;\n    },\n\n    /**\n     * Used together with the integration-tests, to enable awaiting full\n     * initialization of the scripting/sandbox.\n     */\n    get scriptingReady() {\n      ///return this._scriptingInstance?.ready || false; // lwf\n      return this._scriptingInstance && this._scriptingInstance.ready || false;\n    },\n  };\n\n  let validateFileURL;\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    const HOSTED_VIEWER_ORIGINS = [\n      \"null\",\n      \"http://mozilla.github.io\",\n      \"https://mozilla.github.io\",\n    ];\n    validateFileURL = function (file) {\n      if (file === undefined) {\n        return;\n      }\n      try {\n        const viewerOrigin = new URL(window.location.href).origin || \"null\";\n        if (HOSTED_VIEWER_ORIGINS.includes(viewerOrigin)) {\n          // Hosted or local viewer, allow for any file locations\n          return;\n        }\n        const { origin, protocol } = new URL(file, window.location.href);\n        // Removing of the following line will not guarantee that the viewer will\n        // start accepting URLs from foreign origin -- CORS headers on the remote\n        // server must be properly configured.\n        // IE10 / IE11 does not include an origin in `blob:`-URLs. So don't block\n        // any blob:-URL. The browser's same-origin policy will block requests to\n        // blob:-URLs from other origins, so this is safe.\n        if (origin !== viewerOrigin && protocol !== \"blob:\") {\n          throw new Error(\"file origin does not match viewer's\");\n        }\n      } catch (ex) {\n        const message = ex && ex.message;\n        PDFViewerApplication.l10n\n          .get(\"loading_error\", null, \"An error occurred while loading the PDF.\")\n          .then(loadingErrorMessage => {\n            PDFViewerApplication.error(loadingErrorMessage, { message });\n          });\n        throw ex;\n      }\n    };\n  }\n\n  async function loadFakeWorker() {\n    if (!GlobalWorkerOptions.workerSrc) {\n      GlobalWorkerOptions.workerSrc = AppOptions.get(\"workerSrc\");\n    }\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n      window.pdfjsWorker = await import(\"pdfjs/core/worker.js\");\n      return undefined;\n    }\n    return loadScript(PDFWorker.getWorkerSrc());\n  }\n\n  function loadAndEnablePDFBug(enabledTabs) {\n    const appConfig = PDFViewerApplication.appConfig;\n    return loadScript(appConfig.debuggerScriptPath).then(function () {\n      PDFBug.enable(enabledTabs);\n      PDFBug.init({ OPS }, appConfig.mainContainer);\n    });\n  }\n\n  function reportPageStatsPDFBug({ pageNumber }) {\n    if (typeof Stats === \"undefined\" || !Stats.enabled) {\n      return;\n    }\n    const pageView = PDFViewerApplication.pdfViewer.getPageView(\n      /* index = */ pageNumber - 1\n    );\n    const pageStats = pageView && pageView.pdfPage && pageView.pdfPage.stats;\n    if (!pageStats) {\n      return;\n    }\n    Stats.add(pageNumber, pageStats);\n  }\n\n  function webViewerInitialized() {\n    const appConfig = PDFViewerApplication.appConfig;\n    let file;\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      const queryString = document.location.search.substring(1);\n      const params = parseQueryString(queryString);\n      file = \"file\" in params ? params.file : AppOptions.get(\"defaultUrl\");\n      validateFileURL(file);\n    } else if (PDFJSDev.test(\"MOZCENTRAL\")) {\n      file = window.location.href;\n    } else if (PDFJSDev.test(\"CHROME\")) {\n      file = AppOptions.get(\"defaultUrl\");\n    }\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      const fileInput = document.createElement(\"input\");\n      fileInput.id = appConfig.openFileInputName;\n      fileInput.className = \"fileInput\";\n      fileInput.setAttribute(\"type\", \"file\");\n      fileInput.oncontextmenu = noContextMenuHandler;\n      document.body.appendChild(fileInput);\n\n      if (\n        !window.File ||\n        !window.FileReader ||\n        !window.FileList ||\n        !window.Blob\n      ) {\n        appConfig.toolbar.openFile.setAttribute(\"hidden\", \"true\");\n        appConfig.secondaryToolbar.openFileButton.setAttribute(\"hidden\", \"true\");\n      } else {\n        fileInput.value = null;\n      }\n\n      fileInput.addEventListener(\"change\", function (evt) {\n        const files = evt.target.files;\n        if (!files || files.length === 0) {\n          return;\n        }\n        PDFViewerApplication.eventBus.dispatch(\"fileinputchange\", {\n          source: this,\n          fileInput: evt.target,\n        });\n      });\n\n      // Enable dragging-and-dropping a new PDF file onto the viewerContainer.\n      appConfig.mainContainer.addEventListener(\"dragover\", function (evt) {\n        evt.preventDefault();\n\n        evt.dataTransfer.dropEffect = \"move\";\n      });\n      appConfig.mainContainer.addEventListener(\"drop\", function (evt) {\n        evt.preventDefault();\n\n        const files = evt.dataTransfer.files;\n        if (!files || files.length === 0) {\n          return;\n        }\n        PDFViewerApplication.eventBus.dispatch(\"fileinputchange\", {\n          source: this,\n          fileInput: evt.dataTransfer,\n        });\n      });\n    } else {\n      appConfig.toolbar.openFile.setAttribute(\"hidden\", \"true\");\n      appConfig.secondaryToolbar.openFileButton.setAttribute(\"hidden\", \"true\");\n    }\n\n    if (!PDFViewerApplication.supportsDocumentFonts) {\n      AppOptions.set(\"disableFontFace\", true);\n      PDFViewerApplication.l10n\n        .get(\n          \"web_fonts_disabled\",\n          null,\n          \"Web fonts are disabled: unable to use embedded PDF fonts.\"\n        )\n        .then(msg => {\n          console.warn(msg);\n        });\n    }\n\n    if (!PDFViewerApplication.supportsPrinting) {\n      appConfig.toolbar.print.classList.add(\"hidden\");\n      appConfig.secondaryToolbar.printButton.classList.add(\"hidden\");\n    }\n\n    if (!PDFViewerApplication.supportsFullscreen) {\n      appConfig.toolbar.presentationModeButton.classList.add(\"hidden\");\n      appConfig.secondaryToolbar.presentationModeButton.classList.add(\"hidden\");\n    }\n\n    if (PDFViewerApplication.supportsIntegratedFind) {\n      appConfig.toolbar.viewFind.classList.add(\"hidden\");\n    }\n\n    appConfig.mainContainer.addEventListener(\n      \"transitionend\",\n      function (evt) {\n        if (evt.target === /* mainContainer */ this) {\n          PDFViewerApplication.eventBus.dispatch(\"resize\", { source: this });\n        }\n      },\n      true\n    );\n\n    try {\n      webViewerOpenFileViaURL(file);\n    } catch (reason) {\n      PDFViewerApplication.l10n\n        .get(\"loading_error\", null, \"An error occurred while loading the PDF.\")\n        .then(msg => {\n          PDFViewerApplication.error(msg, reason);\n        });\n    }\n  }\n\n  let webViewerOpenFileViaURL;\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    webViewerOpenFileViaURL = function (file) {\n      if (file && file.lastIndexOf(\"file:\", 0) === 0) {\n        // file:-scheme. Load the contents in the main thread because QtWebKit\n        // cannot load file:-URLs in a Web Worker. file:-URLs are usually loaded\n        // very quickly, so there is no need to set up progress event listeners.\n        PDFViewerApplication.setTitleUsingUrl(file);\n        const xhr = new XMLHttpRequest();\n        xhr.onload = function () {\n          PDFViewerApplication.open(new Uint8Array(xhr.response));\n        };\n        xhr.open(\"GET\", file);\n        xhr.responseType = \"arraybuffer\";\n        xhr.send();\n        return;\n      }\n\n      if (file) {\n        PDFViewerApplication.open(file);\n      }\n    };\n  } else if (PDFJSDev.test(\"MOZCENTRAL || CHROME\")) {\n    webViewerOpenFileViaURL = function (file) {\n      PDFViewerApplication.setTitleUsingUrl(file);\n      PDFViewerApplication.initPassiveLoading();\n    };\n  } else {\n    webViewerOpenFileViaURL = function (file) {\n      if (file) {\n        throw new Error(\"Not implemented: webViewerOpenFileViaURL\");\n      }\n    };\n  }\n\n  function webViewerResetPermissions() {\n    const { appConfig } = PDFViewerApplication;\n    if (!appConfig) {\n      return;\n    }\n    // Currently only the \"copy\"-permission is supported.\n    appConfig.viewerContainer.classList.remove(ENABLE_PERMISSIONS_CLASS);\n  }\n\n  function webViewerPageRendered({ pageNumber, timestamp, error }) {\n    // If the page is still visible when it has finished rendering,\n    // ensure that the page number input loading indicator is hidden.\n    if (pageNumber === PDFViewerApplication.page) {\n      PDFViewerApplication.toolbar.updateLoadingIndicatorState(false);\n    }\n\n    // Use the rendered page to set the corresponding thumbnail image.\n    if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n      const pageView = PDFViewerApplication.pdfViewer.getPageView(\n        /* index = */ pageNumber - 1\n      );\n      const thumbnailView = PDFViewerApplication.pdfThumbnailViewer.getThumbnail(\n        /* index = */ pageNumber - 1\n      );\n      if (pageView && thumbnailView) {\n        thumbnailView.setImage(pageView);\n      }\n    }\n\n    if (error) {\n      PDFViewerApplication.l10n\n        .get(\n          \"rendering_error\",\n          null,\n          \"An error occurred while rendering the page.\"\n        )\n        .then(msg => {\n          PDFViewerApplication.error(msg, error);\n        });\n    }\n\n    PDFViewerApplication.externalServices.reportTelemetry({\n      type: \"pageInfo\",\n      timestamp,\n    });\n    // It is a good time to report stream and font types.\n    PDFViewerApplication.pdfDocument.getStats().then(function (stats) {\n      PDFViewerApplication.externalServices.reportTelemetry({\n        type: \"documentStats\",\n        stats,\n      });\n    });\n  }\n\n  function webViewerPageMode({ mode }) {\n    // Handle the 'pagemode' hash parameter, see also `PDFLinkService_setHash`.\n    let view;\n    switch (mode) {\n      case \"thumbs\":\n        view = SidebarView.THUMBS;\n        break;\n      case \"bookmarks\":\n      case \"outline\": // non-standard\n        view = SidebarView.OUTLINE;\n        break;\n      case \"attachments\": // non-standard\n        view = SidebarView.ATTACHMENTS;\n        break;\n      case \"layers\": // non-standard\n        view = SidebarView.LAYERS;\n        break;\n      case \"none\":\n        view = SidebarView.NONE;\n        break;\n      default:\n        console.error('Invalid \"pagemode\" hash parameter: ' + mode);\n        return;\n    }\n    PDFViewerApplication.pdfSidebar.switchView(view, /* forceOpen = */ true);\n  }\n\n  function webViewerNamedAction(evt) {\n    // Processing a couple of named actions that might be useful, see also\n    // `PDFLinkService.executeNamedAction`.\n    switch (evt.action) {\n      case \"GoToPage\":\n        PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n        break;\n\n      case \"Find\":\n        if (!PDFViewerApplication.supportsIntegratedFind) {\n          PDFViewerApplication.findBar.toggle();\n        }\n        break;\n\n      case \"Print\":\n        PDFViewerApplication.triggerPrinting();\n        break;\n\n      case \"SaveAs\":\n        webViewerSave();\n        break;\n    }\n  }\n\n  function webViewerPresentationModeChanged(evt) {\n    PDFViewerApplication.pdfViewer.presentationModeState = evt.state;\n  }\n\n  function webViewerSidebarViewChanged(evt) {\n    PDFViewerApplication.pdfRenderingQueue.isThumbnailViewEnabled =\n      PDFViewerApplication.pdfSidebar.isThumbnailViewVisible;\n\n    const store = PDFViewerApplication.store;\n    if (store && PDFViewerApplication.isInitialViewSet) {\n      // Only update the storage when the document has been loaded *and* rendered.\n      store.set(\"sidebarView\", evt.view).catch(function () {});\n    }\n  }\n\n  function webViewerUpdateViewarea(evt) {\n    const location = evt.location,\n      store = PDFViewerApplication.store;\n\n    if (store && PDFViewerApplication.isInitialViewSet) {\n      store\n        .setMultiple({\n          page: location.pageNumber,\n          zoom: location.scale,\n          scrollLeft: location.left,\n          scrollTop: location.top,\n          rotation: location.rotation,\n        })\n        .catch(function () {\n          /* unable to write to storage */\n        });\n    }\n    const href = PDFViewerApplication.pdfLinkService.getAnchorUrl(\n      location.pdfOpenParams\n    );\n    PDFViewerApplication.appConfig.toolbar.viewBookmark.href = href;\n    PDFViewerApplication.appConfig.secondaryToolbar.viewBookmarkButton.href = href;\n\n    // Show/hide the loading indicator in the page number input element.\n    const currentPage = PDFViewerApplication.pdfViewer.getPageView(\n      /* index = */ PDFViewerApplication.page - 1\n    );\n    const loading =\n      (currentPage && currentPage.renderingState) !== RenderingStates.FINISHED;\n    PDFViewerApplication.toolbar.updateLoadingIndicatorState(loading);\n  }\n\n  function webViewerScrollModeChanged(evt) {\n    const store = PDFViewerApplication.store;\n    if (store && PDFViewerApplication.isInitialViewSet) {\n      // Only update the storage when the document has been loaded *and* rendered.\n      store.set(\"scrollMode\", evt.mode).catch(function () {});\n    }\n  }\n\n  function webViewerSpreadModeChanged(evt) {\n    const store = PDFViewerApplication.store;\n    if (store && PDFViewerApplication.isInitialViewSet) {\n      // Only update the storage when the document has been loaded *and* rendered.\n      store.set(\"spreadMode\", evt.mode).catch(function () {});\n    }\n  }\n\n  function webViewerResize() {\n    const { pdfDocument, pdfViewer } = PDFViewerApplication;\n    if (!pdfDocument) {\n      return;\n    }\n    const currentScaleValue = pdfViewer.currentScaleValue;\n    if (\n      currentScaleValue === \"auto\" ||\n      currentScaleValue === \"page-fit\" ||\n      currentScaleValue === \"page-width\"\n    ) {\n      // Note: the scale is constant for 'page-actual'.\n      pdfViewer.currentScaleValue = currentScaleValue;\n    }\n    pdfViewer.update();\n  }\n\n  function webViewerHashchange(evt) {\n    const hash = evt.hash;\n    if (!hash) {\n      return;\n    }\n    if (!PDFViewerApplication.isInitialViewSet) {\n      PDFViewerApplication.initialBookmark = hash;\n    } else if (!PDFViewerApplication.pdfHistory.popStateInProgress) {\n      PDFViewerApplication.pdfLinkService.setHash(hash);\n    }\n  }\n\n  let webViewerFileInputChange, webViewerOpenFile;\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    webViewerFileInputChange = function (evt) {\n      if (\n        PDFViewerApplication.pdfViewer &&\n        PDFViewerApplication.pdfViewer.isInPresentationMode\n      ) {\n        return; // Opening a new PDF file isn't supported in Presentation Mode.\n      }\n      const file = evt.fileInput.files[0];\n\n      if (!viewerCompatibilityParams.disableCreateObjectURL) {\n        let url = URL.createObjectURL(file);\n        if (file.name) {\n          url = { url, originalUrl: file.name };\n        }\n        PDFViewerApplication.open(url);\n      } else {\n        PDFViewerApplication.setTitleUsingUrl(file.name);\n        // Read the local file into a Uint8Array.\n        const fileReader = new FileReader();\n        fileReader.onload = function webViewerChangeFileReaderOnload(event) {\n          const buffer = event.target.result;\n          PDFViewerApplication.open(new Uint8Array(buffer));\n        };\n        fileReader.readAsArrayBuffer(file);\n      }\n\n      // URL does not reflect proper document location - hiding some icons.\n      const appConfig = PDFViewerApplication.appConfig;\n      appConfig.toolbar.viewBookmark.setAttribute(\"hidden\", \"true\");\n      appConfig.secondaryToolbar.viewBookmarkButton.setAttribute(\n        \"hidden\",\n        \"true\"\n      );\n      appConfig.toolbar.download.setAttribute(\"hidden\", \"true\");\n      appConfig.secondaryToolbar.downloadButton.setAttribute(\"hidden\", \"true\");\n    };\n\n    webViewerOpenFile = function (evt) {\n      const openFileInputName = PDFViewerApplication.appConfig.openFileInputName;\n      document.getElementById(openFileInputName).click();\n    };\n  }\n\n  function webViewerPresentationMode() {\n    PDFViewerApplication.requestPresentationMode();\n  }\n  function webViewerPrint() {\n    PDFViewerApplication.triggerPrinting();\n  }\n  function webViewerDownload() {\n    PDFViewerApplication.downloadOrSave({ sourceEventType: \"download\" });\n  }\n  function webViewerSave() {\n    PDFViewerApplication.downloadOrSave({ sourceEventType: \"save\" });\n  }\n  function webViewerFirstPage() {\n    if (PDFViewerApplication.pdfDocument) {\n      PDFViewerApplication.page = 1;\n    }\n  }\n  function webViewerLastPage() {\n    if (PDFViewerApplication.pdfDocument) {\n      PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n    }\n  }\n  function webViewerNextPage() {\n    PDFViewerApplication.pdfViewer.nextPage();\n  }\n  function webViewerPreviousPage() {\n    PDFViewerApplication.pdfViewer.previousPage();\n  }\n  function webViewerZoomIn() {\n    PDFViewerApplication.zoomIn();\n  }\n  function webViewerZoomOut() {\n    PDFViewerApplication.zoomOut();\n  }\n  function webViewerZoomReset() {\n    PDFViewerApplication.zoomReset();\n  }\n  function webViewerPageNumberChanged(evt) {\n    const pdfViewer = PDFViewerApplication.pdfViewer;\n    // Note that for `<input type=\"number\">` HTML elements, an empty string will\n    // be returned for non-number inputs; hence we simply do nothing in that case.\n    if (evt.value !== \"\") {\n      PDFViewerApplication.pdfLinkService.goToPage(evt.value);\n    }\n\n    // Ensure that the page number input displays the correct value, even if the\n    // value entered by the user was invalid (e.g. a floating point number).\n    if (\n      evt.value !== pdfViewer.currentPageNumber.toString() &&\n      evt.value !== pdfViewer.currentPageLabel\n    ) {\n      PDFViewerApplication.toolbar.setPageNumber(\n        pdfViewer.currentPageNumber,\n        pdfViewer.currentPageLabel\n      );\n    }\n  }\n  function webViewerScaleChanged(evt) {\n    PDFViewerApplication.pdfViewer.currentScaleValue = evt.value;\n  }\n  function webViewerRotateCw() {\n    PDFViewerApplication.rotatePages(90);\n  }\n  function webViewerRotateCcw() {\n    PDFViewerApplication.rotatePages(-90);\n  }\n  function webViewerOptionalContentConfig(evt) {\n    PDFViewerApplication.pdfViewer.optionalContentConfigPromise = evt.promise;\n  }\n  function webViewerSwitchScrollMode(evt) {\n    PDFViewerApplication.pdfViewer.scrollMode = evt.mode;\n  }\n  function webViewerSwitchSpreadMode(evt) {\n    PDFViewerApplication.pdfViewer.spreadMode = evt.mode;\n  }\n  function webViewerDocumentProperties() {\n    PDFViewerApplication.pdfDocumentProperties.open();\n  }\n\n  function webViewerFind(evt) {\n    PDFViewerApplication.findController.executeCommand(\"find\" + evt.type, {\n      query: evt.query,\n      phraseSearch: evt.phraseSearch,\n      caseSensitive: evt.caseSensitive,\n      entireWord: evt.entireWord,\n      highlightAll: evt.highlightAll,\n      findPrevious: evt.findPrevious,\n    });\n  }\n\n  function webViewerFindFromUrlHash(evt) {\n    PDFViewerApplication.findController.executeCommand(\"find\", {\n      query: evt.query,\n      phraseSearch: evt.phraseSearch,\n      caseSensitive: false,\n      entireWord: false,\n      highlightAll: true,\n      findPrevious: false,\n    });\n  }\n\n  function webViewerUpdateFindMatchesCount({ matchesCount }) {\n    if (PDFViewerApplication.supportsIntegratedFind) {\n      PDFViewerApplication.externalServices.updateFindMatchesCount(matchesCount);\n    } else {\n      PDFViewerApplication.findBar.updateResultsCount(matchesCount);\n    }\n  }\n\n  function webViewerUpdateFindControlState({\n    state,\n    previous,\n    matchesCount,\n    rawQuery,\n  }) {\n    if (PDFViewerApplication.supportsIntegratedFind) {\n      PDFViewerApplication.externalServices.updateFindControlState({\n        result: state,\n        findPrevious: previous,\n        matchesCount,\n        rawQuery,\n      });\n    } else {\n      PDFViewerApplication.findBar.updateUIState(state, previous, matchesCount);\n    }\n  }\n\n  function webViewerScaleChanging(evt) {\n    PDFViewerApplication.toolbar.setPageScale(evt.presetValue, evt.scale);\n\n    PDFViewerApplication.pdfViewer.update();\n  }\n\n  function webViewerRotationChanging(evt) {\n    PDFViewerApplication.pdfThumbnailViewer.pagesRotation = evt.pagesRotation;\n\n    PDFViewerApplication.forceRendering();\n    // Ensure that the active page doesn't change during rotation.\n    PDFViewerApplication.pdfViewer.currentPageNumber = evt.pageNumber;\n  }\n\n  function webViewerPageChanging({ pageNumber, pageLabel }) {\n    PDFViewerApplication.toolbar.setPageNumber(pageNumber, pageLabel);\n    PDFViewerApplication.secondaryToolbar.setPageNumber(pageNumber);\n\n    if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n      PDFViewerApplication.pdfThumbnailViewer.scrollThumbnailIntoView(pageNumber);\n    }\n  }\n\n  function webViewerVisibilityChange(evt) {\n    if (document.visibilityState === \"visible\") {\n      // Ignore mouse wheel zooming during tab switches (bug 1503412).\n      setZoomDisabledTimeout();\n    }\n  }\n\n  let zoomDisabledTimeout = null;\n  function setZoomDisabledTimeout() {\n    if (zoomDisabledTimeout) {\n      clearTimeout(zoomDisabledTimeout);\n    }\n    zoomDisabledTimeout = setTimeout(function () {\n      zoomDisabledTimeout = null;\n    }, WHEEL_ZOOM_DISABLED_TIMEOUT);\n  }\n\n  function webViewerWheel(evt) {\n    const {\n      pdfViewer,\n      supportedMouseWheelZoomModifierKeys,\n    } = PDFViewerApplication;\n\n    if (pdfViewer.isInPresentationMode) {\n      return;\n    }\n\n    if (\n      (evt.ctrlKey && supportedMouseWheelZoomModifierKeys.ctrlKey) ||\n      (evt.metaKey && supportedMouseWheelZoomModifierKeys.metaKey)\n    ) {\n      // Only zoom the pages, not the entire viewer.\n      evt.preventDefault();\n      // NOTE: this check must be placed *after* preventDefault.\n      if (zoomDisabledTimeout || document.visibilityState === \"hidden\") {\n        return;\n      }\n\n      const previousScale = pdfViewer.currentScale;\n\n      const delta = normalizeWheelEventDirection(evt);\n      let ticks = 0;\n      if (\n        evt.deltaMode === WheelEvent.DOM_DELTA_LINE ||\n        evt.deltaMode === WheelEvent.DOM_DELTA_PAGE\n      ) {\n        // For line-based devices, use one tick per event, because different\n        // OSs have different defaults for the number lines. But we generally\n        // want one \"clicky\" roll of the wheel (which produces one event) to\n        // adjust the zoom by one step.\n        if (Math.abs(delta) >= 1) {\n          ticks = Math.sign(delta);\n        } else {\n          // If we're getting fractional lines (I can't think of a scenario\n          // this might actually happen), be safe and use the accumulator.\n          ticks = PDFViewerApplication.accumulateWheelTicks(delta);\n        }\n      } else {\n        // pixel-based devices\n        const PIXELS_PER_LINE_SCALE = 30;\n        ticks = PDFViewerApplication.accumulateWheelTicks(\n          delta / PIXELS_PER_LINE_SCALE\n        );\n      }\n\n      if (ticks < 0) {\n        PDFViewerApplication.zoomOut(-ticks);\n      } else if (ticks > 0) {\n        PDFViewerApplication.zoomIn(ticks);\n      }\n\n      const currentScale = pdfViewer.currentScale;\n      if (previousScale !== currentScale) {\n        // After scaling the page via zoomIn/zoomOut, the position of the upper-\n        // left corner is restored. When the mouse wheel is used, the position\n        // under the cursor should be restored instead.\n        const scaleCorrectionFactor = currentScale / previousScale - 1;\n        const rect = pdfViewer.container.getBoundingClientRect();\n        const dx = evt.clientX - rect.left;\n        const dy = evt.clientY - rect.top;\n        pdfViewer.container.scrollLeft += dx * scaleCorrectionFactor;\n        pdfViewer.container.scrollTop += dy * scaleCorrectionFactor;\n      }\n    } else {\n      setZoomDisabledTimeout();\n    }\n  }\n\n  function webViewerTouchStart(evt) {\n    if (evt.touches.length > 1) {\n      // Disable touch-based zooming, because the entire UI bits gets zoomed and\n      // that doesn't look great. If we do want to have a good touch-based\n      // zooming experience, we need to implement smooth zoom capability (probably\n      // using a CSS transform for faster visual response, followed by async\n      // re-rendering at the final zoom level) and do gesture detection on the\n      // touchmove events to drive it. Or if we want to settle for a less good\n      // experience we can make the touchmove events drive the existing step-zoom\n      // behaviour that the ctrl+mousewheel path takes.\n      evt.preventDefault();\n    }\n  }\n\n  function webViewerClick(evt) {\n    // Avoid triggering the fallback bar when the user clicks on the\n    // toolbar or sidebar.\n    if (\n      PDFViewerApplication.triggerDelayedFallback &&\n      PDFViewerApplication.pdfViewer.containsElement(evt.target)\n    ) {\n      PDFViewerApplication.triggerDelayedFallback();\n    }\n\n    if (!PDFViewerApplication.secondaryToolbar.isOpen) {\n      return;\n    }\n    const appConfig = PDFViewerApplication.appConfig;\n    if (\n      PDFViewerApplication.pdfViewer.containsElement(evt.target) ||\n      (appConfig.toolbar.container.contains(evt.target) &&\n        evt.target !== appConfig.secondaryToolbar.toggleButton)\n    ) {\n      PDFViewerApplication.secondaryToolbar.close();\n    }\n  }\n\n  function webViewerKeyUp(evt) {\n    if (evt.keyCode === 9) {\n      // The user is tabbing into the viewer. Trigger the fallback bar if it has\n      // not already been displayed.\n      if (PDFViewerApplication.triggerDelayedFallback) {\n        PDFViewerApplication.triggerDelayedFallback();\n      }\n    }\n  }\n\n  function webViewerKeyDown(evt) {\n    if (PDFViewerApplication.overlayManager.active) {\n      return;\n    }\n\n    let handled = false,\n      ensureViewerFocused = false;\n    const cmd =\n      (evt.ctrlKey ? 1 : 0) |\n      (evt.altKey ? 2 : 0) |\n      (evt.shiftKey ? 4 : 0) |\n      (evt.metaKey ? 8 : 0);\n\n    const pdfViewer = PDFViewerApplication.pdfViewer;\n    const isViewerInPresentationMode =\n      pdfViewer && pdfViewer.isInPresentationMode;\n\n    // First, handle the key bindings that are independent whether an input\n    // control is selected or not.\n    if (cmd === 1 || cmd === 8 || cmd === 5 || cmd === 12) {\n      // either CTRL or META key with optional SHIFT.\n      switch (evt.keyCode) {\n        case 70: // f\n          if (!PDFViewerApplication.supportsIntegratedFind && !evt.shiftKey) {\n            PDFViewerApplication.findBar.open();\n            handled = true;\n          }\n          break;\n        case 71: // g\n          if (!PDFViewerApplication.supportsIntegratedFind) {\n            const findState = PDFViewerApplication.findController.state;\n            if (findState) {\n              PDFViewerApplication.findController.executeCommand(\"findagain\", {\n                query: findState.query,\n                phraseSearch: findState.phraseSearch,\n                caseSensitive: findState.caseSensitive,\n                entireWord: findState.entireWord,\n                highlightAll: findState.highlightAll,\n                findPrevious: cmd === 5 || cmd === 12,\n              });\n            }\n            handled = true;\n          }\n          break;\n        case 61: // FF/Mac '='\n        case 107: // FF '+' and '='\n        case 187: // Chrome '+'\n        case 171: // FF with German keyboard\n          if (!isViewerInPresentationMode) {\n            PDFViewerApplication.zoomIn();\n          }\n          handled = true;\n          break;\n        case 173: // FF/Mac '-'\n        case 109: // FF '-'\n        case 189: // Chrome '-'\n          if (!isViewerInPresentationMode) {\n            PDFViewerApplication.zoomOut();\n          }\n          handled = true;\n          break;\n        case 48: // '0'\n        case 96: // '0' on Numpad of Swedish keyboard\n          if (!isViewerInPresentationMode) {\n            // keeping it unhandled (to restore page zoom to 100%)\n            setTimeout(function () {\n              // ... and resetting the scale after browser adjusts its scale\n              PDFViewerApplication.zoomReset();\n            });\n            handled = false;\n          }\n          break;\n\n        case 38: // up arrow\n          if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n            PDFViewerApplication.page = 1;\n            handled = true;\n            ensureViewerFocused = true;\n          }\n          break;\n        case 40: // down arrow\n          if (\n            isViewerInPresentationMode ||\n            PDFViewerApplication.page < PDFViewerApplication.pagesCount\n          ) {\n            PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n            handled = true;\n            ensureViewerFocused = true;\n          }\n          break;\n      }\n    }\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC || CHROME\")) {\n      const { eventBus } = PDFViewerApplication;\n\n      // CTRL or META without shift\n      if (cmd === 1 || cmd === 8) {\n        switch (evt.keyCode) {\n          case 83: // s\n            eventBus.dispatch(\"download\", { source: window });\n            handled = true;\n            break;\n\n          case 79: // o\n            if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n              eventBus.dispatch(\"openfile\", { source: window });\n              handled = true;\n            }\n            break;\n        }\n      }\n    }\n\n    // CTRL+ALT or Option+Command\n    if (cmd === 3 || cmd === 10) {\n      switch (evt.keyCode) {\n        case 80: // p\n          PDFViewerApplication.requestPresentationMode();\n          handled = true;\n          break;\n        case 71: // g\n          // focuses input#pageNumber field\n          PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n          handled = true;\n          break;\n      }\n    }\n\n    if (handled) {\n      if (ensureViewerFocused && !isViewerInPresentationMode) {\n        pdfViewer.focus();\n      }\n      evt.preventDefault();\n      return;\n    }\n\n    // Some shortcuts should not get handled if a control/input element\n    // is selected.\n    const curElement = getActiveOrFocusedElement();\n    const curElementTagName = curElement && curElement.tagName.toUpperCase();\n    if (\n      curElementTagName === \"INPUT\" ||\n      curElementTagName === \"TEXTAREA\" ||\n      curElementTagName === \"SELECT\" ||\n      (curElement && curElement.isContentEditable)\n    ) {\n      // Make sure that the secondary toolbar is closed when Escape is pressed.\n      if (evt.keyCode !== /* Esc = */ 27) {\n        return;\n      }\n    }\n\n    // No control key pressed at all.\n    if (cmd === 0) {\n      let turnPage = 0,\n        turnOnlyIfPageFit = false;\n      switch (evt.keyCode) {\n        case 38: // up arrow\n        case 33: // pg up\n          // vertical scrolling using arrow/pg keys\n          if (pdfViewer.isVerticalScrollbarEnabled) {\n            turnOnlyIfPageFit = true;\n          }\n          turnPage = -1;\n          break;\n        case 8: // backspace\n          if (!isViewerInPresentationMode) {\n            turnOnlyIfPageFit = true;\n          }\n          turnPage = -1;\n          break;\n        case 37: // left arrow\n          // horizontal scrolling using arrow keys\n          if (pdfViewer.isHorizontalScrollbarEnabled) {\n            turnOnlyIfPageFit = true;\n          }\n        /* falls through */\n        case 75: // 'k'\n        case 80: // 'p'\n          turnPage = -1;\n          break;\n        case 27: // esc key\n          if (PDFViewerApplication.secondaryToolbar.isOpen) {\n            PDFViewerApplication.secondaryToolbar.close();\n            handled = true;\n          }\n          if (\n            !PDFViewerApplication.supportsIntegratedFind &&\n            PDFViewerApplication.findBar.opened\n          ) {\n            PDFViewerApplication.findBar.close();\n            handled = true;\n          }\n          break;\n        case 40: // down arrow\n        case 34: // pg down\n          // vertical scrolling using arrow/pg keys\n          if (pdfViewer.isVerticalScrollbarEnabled) {\n            turnOnlyIfPageFit = true;\n          }\n          turnPage = 1;\n          break;\n        case 13: // enter key\n        case 32: // spacebar\n          if (!isViewerInPresentationMode) {\n            turnOnlyIfPageFit = true;\n          }\n          turnPage = 1;\n          break;\n        case 39: // right arrow\n          // horizontal scrolling using arrow keys\n          if (pdfViewer.isHorizontalScrollbarEnabled) {\n            turnOnlyIfPageFit = true;\n          }\n        /* falls through */\n        case 74: // 'j'\n        case 78: // 'n'\n          turnPage = 1;\n          break;\n\n        case 36: // home\n          if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n            PDFViewerApplication.page = 1;\n            handled = true;\n            ensureViewerFocused = true;\n          }\n          break;\n        case 35: // end\n          if (\n            isViewerInPresentationMode ||\n            PDFViewerApplication.page < PDFViewerApplication.pagesCount\n          ) {\n            PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n            handled = true;\n            ensureViewerFocused = true;\n          }\n          break;\n\n        case 83: // 's'\n          PDFViewerApplication.pdfCursorTools.switchTool(CursorTool.SELECT);\n          break;\n        case 72: // 'h'\n          PDFViewerApplication.pdfCursorTools.switchTool(CursorTool.HAND);\n          break;\n\n        case 82: // 'r'\n          PDFViewerApplication.rotatePages(90);\n          break;\n\n        case 115: // F4\n          PDFViewerApplication.pdfSidebar.toggle();\n          break;\n      }\n\n      if (\n        turnPage !== 0 &&\n        (!turnOnlyIfPageFit || pdfViewer.currentScaleValue === \"page-fit\")\n      ) {\n        if (turnPage > 0) {\n          pdfViewer.nextPage();\n        } else {\n          pdfViewer.previousPage();\n        }\n        handled = true;\n      }\n    }\n\n    // shift-key\n    if (cmd === 4) {\n      switch (evt.keyCode) {\n        case 13: // enter key\n        case 32: // spacebar\n          if (\n            !isViewerInPresentationMode &&\n            pdfViewer.currentScaleValue !== \"page-fit\"\n          ) {\n            break;\n          }\n          if (PDFViewerApplication.page > 1) {\n            PDFViewerApplication.page--;\n          }\n          handled = true;\n          break;\n\n        case 82: // 'r'\n          PDFViewerApplication.rotatePages(-90);\n          break;\n      }\n    }\n\n    if (!handled && !isViewerInPresentationMode) {\n      // 33=Page Up  34=Page Down  35=End    36=Home\n      // 37=Left     38=Up         39=Right  40=Down\n      // 32=Spacebar\n      if (\n        (evt.keyCode >= 33 && evt.keyCode <= 40) ||\n        (evt.keyCode === 32 && curElementTagName !== \"BUTTON\")\n      ) {\n        ensureViewerFocused = true;\n      }\n    }\n\n    if (ensureViewerFocused && !pdfViewer.containsElement(curElement)) {\n      // The page container is not focused, but a page navigation key has been\n      // pressed. Change the focus to the viewer container to make sure that\n      // navigation by keyboard works as expected.\n      pdfViewer.focus();\n    }\n\n    if (handled) {\n      evt.preventDefault();\n    }\n  }\n\n  function beforeUnload(evt) {\n    evt.preventDefault();\n    evt.returnValue = \"\";\n    return false;\n  }\n\n  /**\n   * Converts API PageLayout values to the format used by `PDFViewer`.\n   * NOTE: This is supported to the extent that the viewer implements the\n   *       necessary Scroll/Spread modes (since SinglePage, TwoPageLeft,\n   *       and TwoPageRight all suggests using non-continuous scrolling).\n   * @param {string} mode - The API PageLayout value.\n   * @returns {number} A value from {SpreadMode}.\n   */\n  function apiPageLayoutToSpreadMode(layout) {\n    switch (layout) {\n      case \"SinglePage\":\n      case \"OneColumn\":\n        return SpreadMode.NONE;\n      case \"TwoColumnLeft\":\n      case \"TwoPageLeft\":\n        return SpreadMode.ODD;\n      case \"TwoColumnRight\":\n      case \"TwoPageRight\":\n        return SpreadMode.EVEN;\n    }\n    return SpreadMode.NONE; // Default value.\n  }\n\n  /**\n   * Converts API PageMode values to the format used by `PDFSidebar`.\n   * NOTE: There's also a \"FullScreen\" parameter which is not possible to support,\n   *       since the Fullscreen API used in browsers requires that entering\n   *       fullscreen mode only occurs as a result of a user-initiated event.\n   * @param {string} mode - The API PageMode value.\n   * @returns {number} A value from {SidebarView}.\n   */\n  function apiPageModeToSidebarView(mode) {\n    switch (mode) {\n      case \"UseNone\":\n        return SidebarView.NONE;\n      case \"UseThumbs\":\n        return SidebarView.THUMBS;\n      case \"UseOutlines\":\n        return SidebarView.OUTLINE;\n      case \"UseAttachments\":\n        return SidebarView.ATTACHMENTS;\n      case \"UseOC\":\n        return SidebarView.LAYERS;\n    }\n    return SidebarView.NONE; // Default value.\n  }\n\n  /* Abstract factory for the print service. */\n  const PDFPrintServiceFactory = {\n    instance: {\n      supportsPrinting: false,\n      createPrintService() {\n        throw new Error(\"Not implemented: createPrintService\");\n      },\n    },\n  };\n\n  return {\n    DefaultExternalServices,\n    PDFPrintServiceFactory,\n    PDFViewerApplication,\n  };\n\n});"]}