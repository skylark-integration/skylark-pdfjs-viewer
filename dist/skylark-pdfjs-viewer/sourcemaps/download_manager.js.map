{"version":3,"sources":["download_manager.js"],"names":["define","pdfjsLib","PDFJSDev","viewer_compatibility","createObjectURL","createValidAbsoluteUrl","viewerCompatibilityParams","test","Error","download","blobUrl","filename","a","document","createElement","click","href","target","body","documentElement","appendChild","remove","DownloadManager","[object Object]","url","data","contentType","disableCreateObjectURL","blob","sourceEventType","this","downloadUrl","URL"],"mappings":";;;;;;;AAAAA,QACE,wBACA,cACA,0BACA,SACAC,EACAC,EACAC,GAmBA,MAAMC,gBAAEA,EAAeC,uBAAEA,GAA2BJ,GAC9CK,0BAAEA,GAA8BH,EAEtC,QAAwB,IAAbD,IAA6BA,EAASK,KAAK,qBACpD,MAAM,IAAIC,MACR,4FAKJ,SAASC,EAASC,EAASC,GACzB,MAAMC,EAAIC,SAASC,cAAc,KACjC,IAAKF,EAAEG,MACL,MAAM,IAAIP,MAAM,kDAElBI,EAAEI,KAAON,EACTE,EAAEK,OAAS,UAGP,aAAcL,IAChBA,EAAEH,SAAWE,IAIdE,SAASK,MAAQL,SAASM,iBAAiBC,YAAYR,GACxDA,EAAEG,QACFH,EAAES,SAqCJ,OAASC,sBAjCPC,YAAYC,EAAKb,GACVN,EAAuBmB,EAAK,uBAGjCf,EAASe,EAAM,yBAA0Bb,GAG3CY,aAAaE,EAAMd,EAAUe,GAM3BjB,EALgBL,EACdqB,EACAC,EACApB,EAA0BqB,wBAEVhB,GASpBY,SAASK,EAAMJ,EAAKb,EAAUkB,EAAkB,YAC1CvB,EAA0BqB,uBAE5BG,KAAKC,YAAYP,EAAKb,GAIxBF,EADgBuB,IAAI5B,gBAAgBwB,GAClBjB","file":"../download_manager.js","sourcesContent":["define([\n  \"skylark-pdfjs-display\",\n  \"./pdfjs_dev\",\n  \"./viewer_compatibility\"\n],function(\n  pdfjsLib,\n  PDFJSDev,\n  viewer_compatibility\n){\n\n\n  /* Copyright 2013 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { createObjectURL, createValidAbsoluteUrl } = pdfjsLib;\n  const { viewerCompatibilityParams } = viewer_compatibility;\n\n  if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"CHROME || GENERIC\")) {\n    throw new Error(\n      'Module \"pdfjs-web/download_manager\" shall not be used ' +\n        \"outside CHROME and GENERIC builds.\"\n    );\n  }\n\n  function download(blobUrl, filename) {\n    const a = document.createElement(\"a\");\n    if (!a.click) {\n      throw new Error('DownloadManager: \"a.click()\" is not supported.');\n    }\n    a.href = blobUrl;\n    a.target = \"_parent\";\n    // Use a.download if available. This increases the likelihood that\n    // the file is downloaded instead of opened by another PDF plugin.\n    if (\"download\" in a) {\n      a.download = filename;\n    }\n    // <a> must be in the document for recent Firefox versions,\n    // otherwise .click() is ignored.\n    (document.body || document.documentElement).appendChild(a);\n    a.click();\n    a.remove();\n  }\n\n  class DownloadManager {\n    downloadUrl(url, filename) {\n      if (!createValidAbsoluteUrl(url, \"http://example.com\")) {\n        return; // restricted/invalid URL\n      }\n      download(url + \"#pdfjs.action=download\", filename);\n    }\n\n    downloadData(data, filename, contentType) {\n      const blobUrl = createObjectURL(\n        data,\n        contentType,\n        viewerCompatibilityParams.disableCreateObjectURL\n      );\n      download(blobUrl, filename);\n    }\n\n    /**\n     * @param sourceEventType {string} Used to signal what triggered the download.\n     *   The version of PDF.js integrated with Firefox uses this to to determine\n     *   which dialog to show. \"save\" triggers \"save as\" and \"download\" triggers\n     *   the \"open with\" dialog.\n     */\n    download(blob, url, filename, sourceEventType = \"download\") {\n      if (viewerCompatibilityParams.disableCreateObjectURL) {\n        // URL.createObjectURL is not supported\n        this.downloadUrl(url, filename);\n        return;\n      }\n      const blobUrl = URL.createObjectURL(blob);\n      download(blobUrl, filename);\n    }\n  }\n\n  return { DownloadManager };\n});"]}