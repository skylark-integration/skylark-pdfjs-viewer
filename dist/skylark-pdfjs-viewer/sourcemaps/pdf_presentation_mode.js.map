{"version":3,"sources":["pdf_presentation_mode.js"],"names":["define","PDFJSDev","ui_utils","normalizeWheelEventDelta","PresentationModeState","DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS","DELAY_BEFORE_HIDING_CONTROLS","ACTIVE_SELECTOR","CONTROLS_SELECTOR","MOUSE_SCROLL_COOLDOWN_TIME","PAGE_SWITCH_THRESHOLD","SWIPE_MIN_DISTANCE_THRESHOLD","SWIPE_ANGLE_THRESHOLD","Math","PI","PDFPresentationMode","[object Object]","container","pdfViewer","eventBus","contextMenuItems","this","active","args","contextMenuOpen","mouseScrollTimeStamp","mouseScrollDelta","touchSwipeState","contextFirstPage","addEventListener","dispatch","source","contextLastPage","contextPageRotateCw","contextPageRotateCcw","switchInProgress","pagesCount","_addFullscreenChangeListeners","_setSwitchInProgress","_notifyStateChange","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","page","currentPageNumber","previousScale","currentScaleValue","evt","preventDefault","delta","currentTime","Date","getTime","storedTime","_resetMouseScrollState","abs","totalDelta","previousPage","nextPage","isFullscreen","document","fullscreenElement","mozFullScreen","webkitIsFullScreen","state","NORMAL","CHANGING","FULLSCREEN","test","Error","clearTimeout","setTimeout","_removeFullscreenChangeListeners","_resetSwitchInProgress","classList","add","_addWindowListeners","_showControls","setAttribute","window","getSelection","removeAllRanges","remove","_removeWindowListeners","_hideControls","removeAttribute","button","target","href","contains","shiftKey","controlsTimeout","touches","length","type","startX","pageX","startY","pageY","endX","endY","dx","dy","absAngle","atan2","showControlsBind","bind","mouseDownBind","_mouseDown","mouseWheelBind","_mouseWheel","resetMouseScrollStateBind","contextMenuBind","_contextMenu","touchSwipeBind","_touchSwipe","passive","removeEventListener","_enter","_exit","fullscreenChangeBind","_fullscreenChange"],"mappings":"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","file":"../pdf_presentation_mode.js","sourcesContent":["define([\n  \"./pdfjs_dev\",\n  \"./ui_utils\",\n],function(\n  PDFJSDev,\n  ui_utils\n){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { normalizeWheelEventDelta, PresentationModeState } = ui_utils;\n\n  const DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS = 1500; // in ms\n  const DELAY_BEFORE_HIDING_CONTROLS = 3000; // in ms\n  const ACTIVE_SELECTOR = \"pdfPresentationMode\";\n  const CONTROLS_SELECTOR = \"pdfPresentationModeControls\";\n  const MOUSE_SCROLL_COOLDOWN_TIME = 50; // in ms\n  const PAGE_SWITCH_THRESHOLD = 0.1;\n\n  // Number of CSS pixels for a movement to count as a swipe.\n  const SWIPE_MIN_DISTANCE_THRESHOLD = 50;\n\n  // Swipe angle deviation from the x or y axis before it is not\n  // considered a swipe in that direction any more.\n  const SWIPE_ANGLE_THRESHOLD = Math.PI / 6;\n\n  /**\n   * @typedef {Object} PDFPresentationModeOptions\n   * @property {HTMLDivElement} container - The container for the viewer element.\n   * @property {PDFViewer} pdfViewer - The document viewer.\n   * @property {EventBus} eventBus - The application event bus.\n   * @property {Array} [contextMenuItems] - The menu items that are added to the\n   *   context menu in Presentation Mode.\n   */\n\n  class PDFPresentationMode {\n    /**\n     * @param {PDFPresentationModeOptions} options\n     */\n    constructor({ container, pdfViewer, eventBus, contextMenuItems = null }) {\n      this.container = container;\n      this.pdfViewer = pdfViewer;\n      this.eventBus = eventBus;\n\n      this.active = false;\n      this.args = null;\n      this.contextMenuOpen = false;\n      this.mouseScrollTimeStamp = 0;\n      this.mouseScrollDelta = 0;\n      this.touchSwipeState = null;\n\n      if (contextMenuItems) {\n        contextMenuItems.contextFirstPage.addEventListener(\"click\", () => {\n          this.contextMenuOpen = false;\n          this.eventBus.dispatch(\"firstpage\", { source: this });\n        });\n        contextMenuItems.contextLastPage.addEventListener(\"click\", () => {\n          this.contextMenuOpen = false;\n          this.eventBus.dispatch(\"lastpage\", { source: this });\n        });\n        contextMenuItems.contextPageRotateCw.addEventListener(\"click\", () => {\n          this.contextMenuOpen = false;\n          this.eventBus.dispatch(\"rotatecw\", { source: this });\n        });\n        contextMenuItems.contextPageRotateCcw.addEventListener(\"click\", () => {\n          this.contextMenuOpen = false;\n          this.eventBus.dispatch(\"rotateccw\", { source: this });\n        });\n      }\n    }\n\n    /**\n     * Request the browser to enter fullscreen mode.\n     * @returns {boolean} Indicating if the request was successful.\n     */\n    request() {\n      if (this.switchInProgress || this.active || !this.pdfViewer.pagesCount) {\n        return false;\n      }\n      this._addFullscreenChangeListeners();\n      this._setSwitchInProgress();\n      this._notifyStateChange();\n\n      if (this.container.requestFullscreen) {\n        this.container.requestFullscreen();\n      } else if (this.container.mozRequestFullScreen) {\n        this.container.mozRequestFullScreen();\n      } else if (this.container.webkitRequestFullscreen) {\n        this.container.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n      } else {\n        return false;\n      }\n\n      this.args = {\n        page: this.pdfViewer.currentPageNumber,\n        previousScale: this.pdfViewer.currentScaleValue,\n      };\n\n      return true;\n    }\n\n    /**\n     * @private\n     */\n    _mouseWheel(evt) {\n      if (!this.active) {\n        return;\n      }\n\n      evt.preventDefault();\n\n      const delta = normalizeWheelEventDelta(evt);\n      const currentTime = new Date().getTime();\n      const storedTime = this.mouseScrollTimeStamp;\n\n      // If we've already switched page, avoid accidentally switching again.\n      if (\n        currentTime > storedTime &&\n        currentTime - storedTime < MOUSE_SCROLL_COOLDOWN_TIME\n      ) {\n        return;\n      }\n      // If the scroll direction changed, reset the accumulated scroll delta.\n      if (\n        (this.mouseScrollDelta > 0 && delta < 0) ||\n        (this.mouseScrollDelta < 0 && delta > 0)\n      ) {\n        this._resetMouseScrollState();\n      }\n      this.mouseScrollDelta += delta;\n\n      if (Math.abs(this.mouseScrollDelta) >= PAGE_SWITCH_THRESHOLD) {\n        const totalDelta = this.mouseScrollDelta;\n        this._resetMouseScrollState();\n        const success =\n          totalDelta > 0\n            ? this.pdfViewer.previousPage()\n            : this.pdfViewer.nextPage();\n        if (success) {\n          this.mouseScrollTimeStamp = currentTime;\n        }\n      }\n    }\n\n    get isFullscreen() {\n      return !!(\n        document.fullscreenElement ||\n        document.mozFullScreen ||\n        document.webkitIsFullScreen\n      );\n    }\n\n    /**\n     * @private\n     */\n    _notifyStateChange() {\n      let state = PresentationModeState.NORMAL;\n      if (this.switchInProgress) {\n        state = PresentationModeState.CHANGING;\n      } else if (this.active) {\n        state = PresentationModeState.FULLSCREEN;\n      }\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n        this.eventBus.dispatch(\"presentationmodechanged\", {\n          source: this,\n          state,\n        });\n      } else {\n        this.eventBus.dispatch(\"presentationmodechanged\", {\n          source: this,\n          state,\n          get active() {\n            throw new Error(\n              \"Deprecated parameter: `active`, please use `state` instead.\"\n            );\n          },\n          get switchInProgress() {\n            throw new Error(\n              \"Deprecated parameter: `switchInProgress`, please use `state` instead.\"\n            );\n          },\n        });\n      }\n    }\n\n    /**\n     * Used to initialize a timeout when requesting Presentation Mode,\n     * i.e. when the browser is requested to enter fullscreen mode.\n     * This timeout is used to prevent the current page from being scrolled\n     * partially, or completely, out of view when entering Presentation Mode.\n     * NOTE: This issue seems limited to certain zoom levels (e.g. page-width).\n     *\n     * @private\n     */\n    _setSwitchInProgress() {\n      if (this.switchInProgress) {\n        clearTimeout(this.switchInProgress);\n      }\n      this.switchInProgress = setTimeout(() => {\n        this._removeFullscreenChangeListeners();\n        delete this.switchInProgress;\n        this._notifyStateChange();\n      }, DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS);\n    }\n\n    /**\n     * @private\n     */\n    _resetSwitchInProgress() {\n      if (this.switchInProgress) {\n        clearTimeout(this.switchInProgress);\n        delete this.switchInProgress;\n      }\n    }\n\n    /**\n     * @private\n     */\n    _enter() {\n      this.active = true;\n      this._resetSwitchInProgress();\n      this._notifyStateChange();\n      this.container.classList.add(ACTIVE_SELECTOR);\n\n      // Ensure that the correct page is scrolled into view when entering\n      // Presentation Mode, by waiting until fullscreen mode in enabled.\n      setTimeout(() => {\n        this.pdfViewer.currentPageNumber = this.args.page;\n        this.pdfViewer.currentScaleValue = \"page-fit\";\n      }, 0);\n\n      this._addWindowListeners();\n      this._showControls();\n      this.contextMenuOpen = false;\n      this.container.setAttribute(\"contextmenu\", \"viewerContextMenu\");\n\n      // Text selection is disabled in Presentation Mode, thus it's not possible\n      // for the user to deselect text that is selected (e.g. with \"Select all\")\n      // when entering Presentation Mode, hence we remove any active selection.\n      window.getSelection().removeAllRanges();\n    }\n\n    /**\n     * @private\n     */\n    _exit() {\n      const page = this.pdfViewer.currentPageNumber;\n      this.container.classList.remove(ACTIVE_SELECTOR);\n\n      // Ensure that the correct page is scrolled into view when exiting\n      // Presentation Mode, by waiting until fullscreen mode is disabled.\n      setTimeout(() => {\n        this.active = false;\n        this._removeFullscreenChangeListeners();\n        this._notifyStateChange();\n\n        this.pdfViewer.currentScaleValue = this.args.previousScale;\n        this.pdfViewer.currentPageNumber = page;\n        this.args = null;\n      }, 0);\n\n      this._removeWindowListeners();\n      this._hideControls();\n      this._resetMouseScrollState();\n      this.container.removeAttribute(\"contextmenu\");\n      this.contextMenuOpen = false;\n    }\n\n    /**\n     * @private\n     */\n    _mouseDown(evt) {\n      if (this.contextMenuOpen) {\n        this.contextMenuOpen = false;\n        evt.preventDefault();\n        return;\n      }\n      if (evt.button === 0) {\n        // Enable clicking of links in presentation mode. Note: only links\n        // pointing to destinations in the current PDF document work.\n        const isInternalLink =\n          evt.target.href && evt.target.classList.contains(\"internalLink\");\n        if (!isInternalLink) {\n          // Unless an internal link was clicked, advance one page.\n          evt.preventDefault();\n\n          if (evt.shiftKey) {\n            this.pdfViewer.previousPage();\n          } else {\n            this.pdfViewer.nextPage();\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     */\n    _contextMenu() {\n      this.contextMenuOpen = true;\n    }\n\n    /**\n     * @private\n     */\n    _showControls() {\n      if (this.controlsTimeout) {\n        clearTimeout(this.controlsTimeout);\n      } else {\n        this.container.classList.add(CONTROLS_SELECTOR);\n      }\n      this.controlsTimeout = setTimeout(() => {\n        this.container.classList.remove(CONTROLS_SELECTOR);\n        delete this.controlsTimeout;\n      }, DELAY_BEFORE_HIDING_CONTROLS);\n    }\n\n    /**\n     * @private\n     */\n    _hideControls() {\n      if (!this.controlsTimeout) {\n        return;\n      }\n      clearTimeout(this.controlsTimeout);\n      this.container.classList.remove(CONTROLS_SELECTOR);\n      delete this.controlsTimeout;\n    }\n\n    /**\n     * Resets the properties used for tracking mouse scrolling events.\n     *\n     * @private\n     */\n    _resetMouseScrollState() {\n      this.mouseScrollTimeStamp = 0;\n      this.mouseScrollDelta = 0;\n    }\n\n    /**\n     * @private\n     */\n    _touchSwipe(evt) {\n      if (!this.active) {\n        return;\n      }\n      if (evt.touches.length > 1) {\n        // Multiple touch points detected; cancel the swipe.\n        this.touchSwipeState = null;\n        return;\n      }\n\n      switch (evt.type) {\n        case \"touchstart\":\n          this.touchSwipeState = {\n            startX: evt.touches[0].pageX,\n            startY: evt.touches[0].pageY,\n            endX: evt.touches[0].pageX,\n            endY: evt.touches[0].pageY,\n          };\n          break;\n        case \"touchmove\":\n          if (this.touchSwipeState === null) {\n            return;\n          }\n          this.touchSwipeState.endX = evt.touches[0].pageX;\n          this.touchSwipeState.endY = evt.touches[0].pageY;\n          // Avoid the swipe from triggering browser gestures (Chrome in\n          // particular has some sort of swipe gesture in fullscreen mode).\n          evt.preventDefault();\n          break;\n        case \"touchend\":\n          if (this.touchSwipeState === null) {\n            return;\n          }\n          let delta = 0;\n          const dx = this.touchSwipeState.endX - this.touchSwipeState.startX;\n          const dy = this.touchSwipeState.endY - this.touchSwipeState.startY;\n          const absAngle = Math.abs(Math.atan2(dy, dx));\n          if (\n            Math.abs(dx) > SWIPE_MIN_DISTANCE_THRESHOLD &&\n            (absAngle <= SWIPE_ANGLE_THRESHOLD ||\n              absAngle >= Math.PI - SWIPE_ANGLE_THRESHOLD)\n          ) {\n            // Horizontal swipe.\n            delta = dx;\n          } else if (\n            Math.abs(dy) > SWIPE_MIN_DISTANCE_THRESHOLD &&\n            Math.abs(absAngle - Math.PI / 2) <= SWIPE_ANGLE_THRESHOLD\n          ) {\n            // Vertical swipe.\n            delta = dy;\n          }\n          if (delta > 0) {\n            this.pdfViewer.previousPage();\n          } else if (delta < 0) {\n            this.pdfViewer.nextPage();\n          }\n          break;\n      }\n    }\n\n    /**\n     * @private\n     */\n    _addWindowListeners() {\n      this.showControlsBind = this._showControls.bind(this);\n      this.mouseDownBind = this._mouseDown.bind(this);\n      this.mouseWheelBind = this._mouseWheel.bind(this);\n      this.resetMouseScrollStateBind = this._resetMouseScrollState.bind(this);\n      this.contextMenuBind = this._contextMenu.bind(this);\n      this.touchSwipeBind = this._touchSwipe.bind(this);\n\n      window.addEventListener(\"mousemove\", this.showControlsBind);\n      window.addEventListener(\"mousedown\", this.mouseDownBind);\n      window.addEventListener(\"wheel\", this.mouseWheelBind, { passive: false });\n      window.addEventListener(\"keydown\", this.resetMouseScrollStateBind);\n      window.addEventListener(\"contextmenu\", this.contextMenuBind);\n      window.addEventListener(\"touchstart\", this.touchSwipeBind);\n      window.addEventListener(\"touchmove\", this.touchSwipeBind);\n      window.addEventListener(\"touchend\", this.touchSwipeBind);\n    }\n\n    /**\n     * @private\n     */\n    _removeWindowListeners() {\n      window.removeEventListener(\"mousemove\", this.showControlsBind);\n      window.removeEventListener(\"mousedown\", this.mouseDownBind);\n      window.removeEventListener(\"wheel\", this.mouseWheelBind, {\n        passive: false,\n      });\n      window.removeEventListener(\"keydown\", this.resetMouseScrollStateBind);\n      window.removeEventListener(\"contextmenu\", this.contextMenuBind);\n      window.removeEventListener(\"touchstart\", this.touchSwipeBind);\n      window.removeEventListener(\"touchmove\", this.touchSwipeBind);\n      window.removeEventListener(\"touchend\", this.touchSwipeBind);\n\n      delete this.showControlsBind;\n      delete this.mouseDownBind;\n      delete this.mouseWheelBind;\n      delete this.resetMouseScrollStateBind;\n      delete this.contextMenuBind;\n      delete this.touchSwipeBind;\n    }\n\n    /**\n     * @private\n     */\n    _fullscreenChange() {\n      if (this.isFullscreen) {\n        this._enter();\n      } else {\n        this._exit();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _addFullscreenChangeListeners() {\n      this.fullscreenChangeBind = this._fullscreenChange.bind(this);\n\n      window.addEventListener(\"fullscreenchange\", this.fullscreenChangeBind);\n      window.addEventListener(\"mozfullscreenchange\", this.fullscreenChangeBind);\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        window.addEventListener(\n          \"webkitfullscreenchange\",\n          this.fullscreenChangeBind\n        );\n      }\n    }\n\n    /**\n     * @private\n     */\n    _removeFullscreenChangeListeners() {\n      window.removeEventListener(\"fullscreenchange\", this.fullscreenChangeBind);\n      window.removeEventListener(\n        \"mozfullscreenchange\",\n        this.fullscreenChangeBind\n      );\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        window.removeEventListener(\n          \"webkitfullscreenchange\",\n          this.fullscreenChangeBind\n        );\n      }\n\n      delete this.fullscreenChangeBind;\n    }\n  }\n\n  return { PDFPresentationMode };\n});"]}