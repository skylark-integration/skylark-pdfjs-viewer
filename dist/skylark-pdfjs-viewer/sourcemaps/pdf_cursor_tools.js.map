{"version":3,"sources":["pdf_cursor_tools.js"],"names":["define","ui_utils","grab_to_pan","GrabToPan","PresentationModeState","CursorTool","SELECT","HAND","ZOOM","PDFCursorTools","[object Object]","container","eventBus","cursorToolOnLoad","this","active","activeBeforePresentationMode","handTool","element","_addEventListeners","Promise","resolve","then","switchTool","activeTool","tool","disableActiveTool","deactivate","activate","console","error","_dispatchEvent","dispatch","source","_on","evt","state","CHANGING","FULLSCREEN","previouslyActive","NORMAL"],"mappings":";;;;;;;AAAAA,QACE,aACA,iBACA,SAASC,EAASC,GAgBlB,MAAMC,UAAEA,GAAcD,GAChBE,sBAAEA,GAA0BH,EAE5BI,GACJC,OAAQ,EACRC,KAAM,EACNC,KAAM,GAmIR,OAASH,WAAAA,EAAYI,qBAnHnBC,aAAYC,UAAEA,EAASC,SAAEA,EAAQC,iBAAEA,EAAmBR,EAAWC,SAC/DQ,KAAKH,UAAYA,EACjBG,KAAKF,SAAWA,EAEhBE,KAAKC,OAASV,EAAWC,OACzBQ,KAAKE,6BAA+B,KAEpCF,KAAKG,SAAW,IAAId,GAClBe,QAASJ,KAAKH,YAGhBG,KAAKK,qBAILC,QAAQC,UAAUC,KAAK,KACrBR,KAAKS,WAAWV,KAOpBW,iBACE,OAAOV,KAAKC,OAQdL,WAAWe,GACT,GAA0C,OAAtCX,KAAKE,6BACP,OAEF,GAAIS,IAASX,KAAKC,OAChB,OAGF,MAAMW,EAAoB,KACxB,OAAQZ,KAAKC,QACX,KAAKV,EAAWC,OACd,MACF,KAAKD,EAAWE,KACdO,KAAKG,SAASU,aACd,MACF,KAAKtB,EAAWG,QAMpB,OAAQiB,GACN,KAAKpB,EAAWC,OACdoB,IACA,MACF,KAAKrB,EAAWE,KACdmB,IACAZ,KAAKG,SAASW,WACd,MACF,KAAKvB,EAAWG,KAEhB,QAEE,YADAqB,QAAQC,sBAAsBL,+BAKlCX,KAAKC,OAASU,EAEdX,KAAKiB,iBAMPrB,iBACEI,KAAKF,SAASoB,SAAS,qBACrBC,OAAQnB,KACRW,KAAMX,KAAKC,SAOfL,qBACEI,KAAKF,SAASsB,IAAI,mBAAoBC,IACpCrB,KAAKS,WAAWY,EAAIV,QAGtBX,KAAKF,SAASsB,IAAI,0BAA2BC,IAC3C,OAAQA,EAAIC,OACV,KAAKhC,EAAsBiC,SACzB,MACF,KAAKjC,EAAsBkC,WAAY,CACrC,MAAMC,EAAmBzB,KAAKC,OAE9BD,KAAKS,WAAWlB,EAAWC,QAC3BQ,KAAKE,6BAA+BuB,EACpC,MAEF,KAAKnC,EAAsBoC,OAAQ,CACjC,MAAMD,EAAmBzB,KAAKE,6BAE9BF,KAAKE,6BAA+B,KACpCF,KAAKS,WAAWgB,GAChB","file":"../pdf_cursor_tools.js","sourcesContent":["define([\n  \"./ui_utils\",\n  \"./grab_to_pan\"\n],function(ui_utils,grab_to_pan){\n  /* Copyright 2017 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { GrabToPan } = grab_to_pan;\n  const { PresentationModeState } = ui_utils;\n\n  const CursorTool = {\n    SELECT: 0, // The default value.\n    HAND: 1,\n    ZOOM: 2,\n  };\n\n  /**\n   * @typedef {Object} PDFCursorToolsOptions\n   * @property {HTMLDivElement} container - The document container.\n   * @property {EventBus} eventBus - The application event bus.\n   * @property {number} [cursorToolOnLoad] - The cursor tool that will be enabled\n   *   on load; the constants from {CursorTool} should be used. The default value\n   *   is `CursorTool.SELECT`.\n   */\n\n  class PDFCursorTools {\n    /**\n     * @param {PDFCursorToolsOptions} options\n     */\n    constructor({ container, eventBus, cursorToolOnLoad = CursorTool.SELECT }) {\n      this.container = container;\n      this.eventBus = eventBus;\n\n      this.active = CursorTool.SELECT;\n      this.activeBeforePresentationMode = null;\n\n      this.handTool = new GrabToPan({\n        element: this.container,\n      });\n\n      this._addEventListeners();\n\n      // Defer the initial `switchTool` call, to give other viewer components\n      // time to initialize *and* register 'cursortoolchanged' event listeners.\n      Promise.resolve().then(() => {\n        this.switchTool(cursorToolOnLoad);\n      });\n    }\n\n    /**\n     * @type {number} One of the values in {CursorTool}.\n     */\n    get activeTool() {\n      return this.active;\n    }\n\n    /**\n     * NOTE: This method is ignored while Presentation Mode is active.\n     * @param {number} tool - The cursor mode that should be switched to,\n     *                        must be one of the values in {CursorTool}.\n     */\n    switchTool(tool) {\n      if (this.activeBeforePresentationMode !== null) {\n        return; // Cursor tools cannot be used in Presentation Mode.\n      }\n      if (tool === this.active) {\n        return; // The requested tool is already active.\n      }\n\n      const disableActiveTool = () => {\n        switch (this.active) {\n          case CursorTool.SELECT:\n            break;\n          case CursorTool.HAND:\n            this.handTool.deactivate();\n            break;\n          case CursorTool.ZOOM:\n          /* falls through */\n        }\n      };\n\n      // Enable the new cursor tool.\n      switch (tool) {\n        case CursorTool.SELECT:\n          disableActiveTool();\n          break;\n        case CursorTool.HAND:\n          disableActiveTool();\n          this.handTool.activate();\n          break;\n        case CursorTool.ZOOM:\n        /* falls through */\n        default:\n          console.error(`switchTool: \"${tool}\" is an unsupported value.`);\n          return;\n      }\n      // Update the active tool *after* it has been validated above,\n      // in order to prevent setting it to an invalid state.\n      this.active = tool;\n\n      this._dispatchEvent();\n    }\n\n    /**\n     * @private\n     */\n    _dispatchEvent() {\n      this.eventBus.dispatch(\"cursortoolchanged\", {\n        source: this,\n        tool: this.active,\n      });\n    }\n\n    /**\n     * @private\n     */\n    _addEventListeners() {\n      this.eventBus._on(\"switchcursortool\", evt => {\n        this.switchTool(evt.tool);\n      });\n\n      this.eventBus._on(\"presentationmodechanged\", evt => {\n        switch (evt.state) {\n          case PresentationModeState.CHANGING:\n            break;\n          case PresentationModeState.FULLSCREEN: {\n            const previouslyActive = this.active;\n\n            this.switchTool(CursorTool.SELECT);\n            this.activeBeforePresentationMode = previouslyActive;\n            break;\n          }\n          case PresentationModeState.NORMAL: {\n            const previouslyActive = this.activeBeforePresentationMode;\n\n            this.activeBeforePresentationMode = null;\n            this.switchTool(previouslyActive);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  return { CursorTool, PDFCursorTools };\n});"]}