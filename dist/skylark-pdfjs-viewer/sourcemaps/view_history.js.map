{"version":3,"sources":["view_history.js"],"names":["define","PDFJSDev","DEFAULT_VIEW_HISTORY_CACHE_SIZE","ViewHistory","[object Object]","fingerprint","cacheSize","this","_initializedPromise","_readFromStorage","then","databaseStr","database","JSON","parse","index","Array","isArray","files","length","shift","i","ii","push","file","stringify","test","sessionStorage","setItem","localStorage","getItem","name","val","_writeToStorage","properties","defaultValue","undefined","values","Object","create"],"mappings":";;;;;;;AAAAA,QACE,eACA,SAASC,GAgBT,MAAMC,EAAkC,GA2FxC,OAASC,kBA/EPC,YAAYC,EAAaC,EAAYJ,GACnCK,KAAKF,YAAcA,EACnBE,KAAKD,UAAYA,EAEjBC,KAAKC,oBAAsBD,KAAKE,mBAAmBC,KAAKC,IACtD,MAAMC,EAAWC,KAAKC,MAAMH,GAAe,MAC3C,IAAII,GAAS,EACb,GAAKC,MAAMC,QAAQL,EAASM,OAErB,CACL,KAAON,EAASM,MAAMC,QAAUZ,KAAKD,WACnCM,EAASM,MAAME,QAGjB,IAAK,IAAIC,EAAI,EAAGC,EAAKV,EAASM,MAAMC,OAAQE,EAAIC,EAAID,IAElD,GADeT,EAASM,MAAMG,GACnBhB,cAAgBE,KAAKF,YAAa,CAC3CU,EAAQM,EACR,YAVJT,EAASM,UAcI,IAAXH,IACFA,EAAQH,EAASM,MAAMK,MAAOlB,YAAaE,KAAKF,cAAiB,GAEnEE,KAAKiB,KAAOZ,EAASM,MAAMH,GAC3BR,KAAKK,SAAWA,IAIpBR,wBACE,MAAMO,EAAcE,KAAKY,UAAUlB,KAAKK,eAEhB,IAAbX,GAA4BA,EAASyB,KAAK,cACnDC,eAAeC,QAAQ,gBAAiBjB,GAG1CkB,aAAaD,QAAQ,gBAAiBjB,GAGxCP,yBACE,YAAwB,IAAbH,GAA4BA,EAASyB,KAAK,cAC5CC,eAAeG,QAAQ,iBAEzBD,aAAaC,QAAQ,iBAG9B1B,UAAU2B,EAAMC,GAGd,aAFMzB,KAAKC,oBACXD,KAAKiB,KAAKO,GAAQC,EACXzB,KAAK0B,kBAGd7B,kBAAkB8B,SACV3B,KAAKC,oBACX,IAAK,MAAMuB,KAAQG,EACjB3B,KAAKiB,KAAKO,GAAQG,EAAWH,GAE/B,OAAOxB,KAAK0B,kBAGd7B,UAAU2B,EAAMI,SACR5B,KAAKC,oBACX,MAAMwB,EAAMzB,KAAKiB,KAAKO,GACtB,YAAeK,IAARJ,EAAoBA,EAAMG,EAGnC/B,kBAAkB8B,SACV3B,KAAKC,oBACX,MAAM6B,EAASC,OAAOC,OAAO,MAE7B,IAAK,MAAMR,KAAQG,EAAY,CAC7B,MAAMF,EAAMzB,KAAKiB,KAAKO,GACtBM,EAAON,QAAgBK,IAARJ,EAAoBA,EAAME,EAAWH,GAEtD,OAAOM","file":"../view_history.js","sourcesContent":["define([\n  \"./pdfjs_dev\"\n],function(PDFJSDev){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const DEFAULT_VIEW_HISTORY_CACHE_SIZE = 20;\n\n  /**\n   * View History - This is a utility for saving various view parameters for\n   *                recently opened files.\n   *\n   * The way that the view parameters are stored depends on how PDF.js is built,\n   * for 'gulp <flag>' the following cases exist:\n   *  - MOZCENTRAL        - uses sessionStorage.\n   *  - GENERIC or CHROME - uses localStorage, if it is available.\n   */\n  class ViewHistory {\n    constructor(fingerprint, cacheSize = DEFAULT_VIEW_HISTORY_CACHE_SIZE) {\n      this.fingerprint = fingerprint;\n      this.cacheSize = cacheSize;\n\n      this._initializedPromise = this._readFromStorage().then(databaseStr => {\n        const database = JSON.parse(databaseStr || \"{}\");\n        let index = -1;\n        if (!Array.isArray(database.files)) {\n          database.files = [];\n        } else {\n          while (database.files.length >= this.cacheSize) {\n            database.files.shift();\n          }\n\n          for (let i = 0, ii = database.files.length; i < ii; i++) {\n            const branch = database.files[i];\n            if (branch.fingerprint === this.fingerprint) {\n              index = i;\n              break;\n            }\n          }\n        }\n        if (index === -1) {\n          index = database.files.push({ fingerprint: this.fingerprint }) - 1;\n        }\n        this.file = database.files[index];\n        this.database = database;\n      });\n    }\n\n    async _writeToStorage() {\n      const databaseStr = JSON.stringify(this.database);\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n        sessionStorage.setItem(\"pdfjs.history\", databaseStr);\n        return;\n      }\n      localStorage.setItem(\"pdfjs.history\", databaseStr);\n    }\n\n    async _readFromStorage() {\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n        return sessionStorage.getItem(\"pdfjs.history\");\n      }\n      return localStorage.getItem(\"pdfjs.history\");\n    }\n\n    async set(name, val) {\n      await this._initializedPromise;\n      this.file[name] = val;\n      return this._writeToStorage();\n    }\n\n    async setMultiple(properties) {\n      await this._initializedPromise;\n      for (const name in properties) {\n        this.file[name] = properties[name];\n      }\n      return this._writeToStorage();\n    }\n\n    async get(name, defaultValue) {\n      await this._initializedPromise;\n      const val = this.file[name];\n      return val !== undefined ? val : defaultValue;\n    }\n\n    async getMultiple(properties) {\n      await this._initializedPromise;\n      const values = Object.create(null);\n\n      for (const name in properties) {\n        const val = this.file[name];\n        values[name] = val !== undefined ? val : properties[name];\n      }\n      return values;\n    }\n  }\n\n  return { ViewHistory };\n});"]}