{"version":3,"sources":["app_options.js"],"names":["define","viewer_compatibility","PDFJSDev","viewerCompatibilityParams","OptionKind","VIEWER","API","WORKER","PREFERENCE","defaultOptions","cursorToolOnLoad","value","kind","defaultUrl","defaultZoomValue","disableHistory","disablePageLabels","enablePermissions","enablePrintAutoRotate","enableScripting","test","enableWebGL","externalLinkRel","externalLinkTarget","historyUpdateUrl","ignoreDestinationZoom","imageResourcesPath","maxCanvasPixels","compatibility","pdfBugEnabled","printResolution","renderer","renderInteractiveForms","sidebarViewOnLoad","scrollModeOnLoad","spreadModeOnLoad","textLayerMode","useOnlyCssZoom","viewerCssTheme","viewOnLoad","cMapPacked","cMapUrl","disableAutoFetch","disableFontFace","disableRange","disableStream","docBaseUrl","fontExtraProperties","isEvalSupported","maxImageSize","pdfBug","verbosity","workerPort","workerSrc","disablePreferences","locale","navigator","language","sandboxBundleSrc","userOptions","Object","create","AppOptions","[object Object]","Error","name","userOption","undefined","defaultOption","options","valueType","Number","isInteger"],"mappings":"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","file":"../app_options.js","sourcesContent":["define([\n  \"./viewer_compatibility\",\n  \"./pdfjs_dev\"\n],function(viewer_compatibility,PDFJSDev){\n\n  /* Copyright 2018 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { viewerCompatibilityParams } = viewer_compatibility;\n\n  const OptionKind = {\n    VIEWER: 0x02,\n    API: 0x04,\n    WORKER: 0x08,\n    PREFERENCE: 0x80,\n  };\n\n  /**\n   * PLEASE NOTE: To avoid introducing unnecessary dependencies, we specify the\n   *              values below *explicitly* rather than relying on imported types.\n   */\n  const defaultOptions = {\n    cursorToolOnLoad: {\n      /** @type {number} */\n      value: 0,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    defaultUrl: {\n      /** @type {string} */\n      value: \"compressed.tracemonkey-pldi-09.pdf\",\n      kind: OptionKind.VIEWER,\n    },\n    defaultZoomValue: {\n      /** @type {string} */\n      value: \"\",\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    disableHistory: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER,\n    },\n    disablePageLabels: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    /**\n     * The `disablePreferences` is, conditionally, defined below.\n     */\n    enablePermissions: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    enablePrintAutoRotate: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    enableScripting: {\n      /** @type {boolean} */\n      value: typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\"),\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    enableWebGL: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    externalLinkRel: {\n      /** @type {string} */\n      value: \"noopener noreferrer nofollow\",\n      kind: OptionKind.VIEWER,\n    },\n    externalLinkTarget: {\n      /** @type {number} */\n      value: 0,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    historyUpdateUrl: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    ignoreDestinationZoom: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    imageResourcesPath: {\n      /** @type {string} */\n      value: \"./images/\",\n      kind: OptionKind.VIEWER,\n    },\n    /**\n     * The `locale` is, conditionally, defined below.\n     */\n    maxCanvasPixels: {\n      /** @type {number} */\n      value: 16777216,\n      compatibility: viewerCompatibilityParams.maxCanvasPixels,\n      kind: OptionKind.VIEWER,\n    },\n    pdfBugEnabled: {\n      /** @type {boolean} */\n      value: typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\"),\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    printResolution: {\n      /** @type {number} */\n      value: 150,\n      kind: OptionKind.VIEWER,\n    },\n    renderer: {\n      /** @type {string} */\n      value: \"canvas\",\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    renderInteractiveForms: {\n      /** @type {boolean} */\n      value: true,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    sidebarViewOnLoad: {\n      /** @type {number} */\n      value: -1,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    scrollModeOnLoad: {\n      /** @type {number} */\n      value: -1,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    spreadModeOnLoad: {\n      /** @type {number} */\n      value: -1,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    textLayerMode: {\n      /** @type {number} */\n      value: 1,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    useOnlyCssZoom: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    viewerCssTheme: {\n      /** @type {number} */\n      value: 0,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    viewOnLoad: {\n      /** @type {boolean} */\n      value: 0,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n\n    cMapPacked: {\n      /** @type {boolean} */\n      value: true,\n      kind: OptionKind.API,\n    },\n    cMapUrl: {\n      /** @type {string} */\n      value:\n        typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n          ? \"../external/bcmaps/\"\n          : \"../web/cmaps/\",\n      kind: OptionKind.API,\n    },\n    disableAutoFetch: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.API + OptionKind.PREFERENCE,\n    },\n    disableFontFace: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.API + OptionKind.PREFERENCE,\n    },\n    disableRange: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.API + OptionKind.PREFERENCE,\n    },\n    disableStream: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.API + OptionKind.PREFERENCE,\n    },\n    docBaseUrl: {\n      /** @type {string} */\n      value: \"\",\n      kind: OptionKind.API,\n    },\n    fontExtraProperties: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.API,\n    },\n    isEvalSupported: {\n      /** @type {boolean} */\n      value: true,\n      kind: OptionKind.API,\n    },\n    maxImageSize: {\n      /** @type {number} */\n      value: -1,\n      kind: OptionKind.API,\n    },\n    pdfBug: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.API,\n    },\n    verbosity: {\n      /** @type {number} */\n      value: 1,\n      kind: OptionKind.API,\n    },\n\n    workerPort: {\n      /** @type {Object} */\n      value: null,\n      kind: OptionKind.WORKER,\n    },\n    workerSrc: {\n      /** @type {string} */\n      value:\n        typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n          ? \"../src/worker_loader.js\"\n          : \"../build/pdf.worker.js\",\n      kind: OptionKind.WORKER,\n    },\n  };\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || (GENERIC && !LIB)\")\n  ) {\n    defaultOptions.disablePreferences = {\n      /** @type {boolean} */\n      value: typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\"),\n      kind: OptionKind.VIEWER,\n    };\n    defaultOptions.locale = {\n      /** @type {string} */\n      value: typeof navigator !== \"undefined\" ? navigator.language : \"en-US\",\n      kind: OptionKind.VIEWER,\n    };\n    defaultOptions.sandboxBundleSrc = {\n      /** @type {string} */\n      value:\n        typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n          ? \"../build/dev-sandbox/pdf.sandbox.js\"\n          : \"../build/pdf.sandbox.js\",\n      kind: OptionKind.VIEWER,\n    };\n  } else if (PDFJSDev.test(\"CHROME\")) {\n    defaultOptions.sandboxBundleSrc = {\n      /** @type {string} */\n      value: \"../build/pdf.sandbox.js\",\n      kind: OptionKind.VIEWER,\n    };\n  }\n\n  const userOptions = Object.create(null);\n\n  class AppOptions {\n    constructor() {\n      throw new Error(\"Cannot initialize AppOptions.\");\n    }\n\n    static get(name) {\n      const userOption = userOptions[name];\n      if (userOption !== undefined) {\n        return userOption;\n      }\n      const defaultOption = defaultOptions[name];\n      if (defaultOption !== undefined) {\n        return defaultOption.compatibility || defaultOption.value;\n      }\n      return undefined;\n    }\n\n    static getAll(kind = null) {\n      const options = Object.create(null);\n      for (const name in defaultOptions) {\n        const defaultOption = defaultOptions[name];\n        if (kind) {\n          if ((kind & defaultOption.kind) === 0) {\n            continue;\n          }\n          if (kind === OptionKind.PREFERENCE) {\n            const value = defaultOption.value,\n              valueType = typeof value;\n\n            if (\n              valueType === \"boolean\" ||\n              valueType === \"string\" ||\n              (valueType === \"number\" && Number.isInteger(value))\n            ) {\n              options[name] = value;\n              continue;\n            }\n            throw new Error(`Invalid type for preference: ${name}`);\n          }\n        }\n        const userOption = userOptions[name];\n        options[name] =\n          userOption !== undefined\n            ? userOption\n            : defaultOption.compatibility || defaultOption.value;\n      }\n      return options;\n    }\n\n    static set(name, value) {\n      userOptions[name] = value;\n    }\n\n    static setAll(options) {\n      for (const name in options) {\n        userOptions[name] = options[name];\n      }\n    }\n\n    static remove(name) {\n      delete userOptions[name];\n    }\n  }\n\n  return { AppOptions, OptionKind };\n});"]}