{"version":3,"sources":["firefoxcom.js"],"names":["define","pdfjsLib","PDFJSDev","ui_utils","app","preferences","DefaultExternalServices","PDFViewerApplication","PDFDataRangeTransport","shadow","BasePreferences","DEFAULT_SCALE_VALUE","test","Error","FirefoxCom","[object Object]","action","data","request","document","createTextNode","documentElement","appendChild","sender","createEvent","initCustomEvent","sync","dispatchEvent","response","detail","remove","Promise","resolve","this","callback","addEventListener","event","target","once","responseExpected","DownloadManager","url","filename","originalUrl","contentType","blobUrl","URL","createObjectURL","Blob","type","requestAsync","isAttachment","then","error","revokeObjectURL","blob","sourceEventType","console","FirefoxPreferences","prefObj","prefStr","JSON","parse","MozL10n","mozL10n","getLanguage","getDirection","property","args","fallback","get","element","translate","events","handleEvent","initialized","eventBus","dispatch","source","window","substring","length","query","phraseSearch","caseSensitive","entireWord","highlightAll","findPrevious","pdfViewer","currentScaleValue","FirefoxComDataRangeTransport","begin","end","requestSync","FirefoxScripting","externalServices","callbacks","pdfDataRangeTransport","e","warn","origin","pdfjsLoadAction","done","onOpenWithTransport","pdfUrl","onDataRange","chunk","onDataProgress","loaded","onDataProgressiveRead","total","onDataProgressiveDone","onProgress","onError","errorCode","onOpenWithData","stringify","options","supportsIntegratedFind","support","supportsDocumentFonts","supportedMouseWheelZoomModifierKeys","isInAutomation","setExternalLocalizerServices","getLocale","getStrings","key"],"mappings":"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","file":"../firefoxcom.js","sourcesContent":["define([\n  \"skylark-pdfjs-display\",\n  \"./pdfjs_dev\",\n  \"./ui_utils\",\n  \"./app\",\n  \"./preferences\"\n],function(\n  pdfjsLib,\n  PDFJSDev,\n  ui_utils,\n  app,\n  preferences\n){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  ///import \"../extensions/firefox/tools/l10n.js\";//TODO:checking\n  const { DefaultExternalServices, PDFViewerApplication }= app;\n  const { PDFDataRangeTransport, shadow } = pdfjsLib;\n  const { BasePreferences } = preferences;\n  const { DEFAULT_SCALE_VALUE } = ui_utils;\n\n  if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n    throw new Error(\n      'Module \"./firefoxcom.js\" shall not be used outside MOZCENTRAL builds.'\n    );\n  }\n\n  class FirefoxCom {\n    /**\n     * Creates an event that the extension is listening for and will\n     * synchronously respond to.\n     * NOTE: It is recommended to use requestAsync() instead since one day we may\n     *       not be able to synchronously reply.\n     * @param {string} action - The action to trigger.\n     * @param {Object|string} [data] - The data to send.\n     * @returns {*} The response.\n     */\n    static requestSync(action, data) {\n      const request = document.createTextNode(\"\");\n      document.documentElement.appendChild(request);\n\n      const sender = document.createEvent(\"CustomEvent\");\n      sender.initCustomEvent(\"pdf.js.message\", true, false, {\n        action,\n        data,\n        sync: true,\n      });\n      request.dispatchEvent(sender);\n      const response = sender.detail.response;\n      request.remove();\n\n      return response;\n    }\n\n    /**\n     * Creates an event that the extension is listening for and will\n     * asynchronously respond to.\n     * @param {string} action - The action to trigger.\n     * @param {Object|string} [data] - The data to send.\n     * @returns {Promise<any>} A promise that is resolved with the response data.\n     */\n    static requestAsync(action, data) {\n      return new Promise(resolve => {\n        this.request(action, data, resolve);\n      });\n    }\n\n    /**\n     * Creates an event that the extension is listening for and will, optionally,\n     * asynchronously respond to.\n     * @param {string} action - The action to trigger.\n     * @param {Object|string} [data] - The data to send.\n     */\n    static request(action, data, callback = null) {\n      const request = document.createTextNode(\"\");\n      if (callback) {\n        request.addEventListener(\n          \"pdf.js.response\",\n          event => {\n            const response = event.detail.response;\n            event.target.remove();\n\n            callback(response);\n          },\n          { once: true }\n        );\n      }\n      document.documentElement.appendChild(request);\n\n      const sender = document.createEvent(\"CustomEvent\");\n      sender.initCustomEvent(\"pdf.js.message\", true, false, {\n        action,\n        data,\n        sync: false,\n        responseExpected: !!callback,\n      });\n      request.dispatchEvent(sender);\n    }\n  }\n\n  class DownloadManager {\n    downloadUrl(url, filename) {\n      FirefoxCom.request(\"download\", {\n        originalUrl: url,\n        filename,\n      });\n    }\n\n    downloadData(data, filename, contentType) {\n      const blobUrl = URL.createObjectURL(\n        new Blob([data], { type: contentType })\n      );\n\n      FirefoxCom.requestAsync(\"download\", {\n        blobUrl,\n        originalUrl: blobUrl,\n        filename,\n        isAttachment: true,\n      }).then(error => {\n        URL.revokeObjectURL(blobUrl);\n      });\n    }\n\n    download(blob, url, filename, sourceEventType = \"download\") {\n      const blobUrl = URL.createObjectURL(blob);\n\n      FirefoxCom.requestAsync(\"download\", {\n        blobUrl,\n        originalUrl: url,\n        filename,\n        sourceEventType,\n      }).then(error => {\n        if (error) {\n          // If downloading failed in `PdfStreamConverter.jsm` it's very unlikely\n          // that attempting to fallback and re-download would be helpful here.\n          console.error(\"`ChromeActions.download` failed.\");\n        }\n        URL.revokeObjectURL(blobUrl);\n      });\n    }\n  }\n\n  class FirefoxPreferences extends BasePreferences {\n    async _writeToStorage(prefObj) {\n      return FirefoxCom.requestAsync(\"setPreferences\", prefObj);\n    }\n\n    async _readFromStorage(prefObj) {\n      const prefStr = await FirefoxCom.requestAsync(\"getPreferences\", prefObj);\n      return JSON.parse(prefStr);\n    }\n  }\n\n  class MozL10n {\n    constructor(mozL10n) {\n      this.mozL10n = mozL10n;\n    }\n\n    async getLanguage() {\n      return this.mozL10n.getLanguage();\n    }\n\n    async getDirection() {\n      return this.mozL10n.getDirection();\n    }\n\n    async get(property, args, fallback) {\n      return this.mozL10n.get(property, args, fallback);\n    }\n\n    async translate(element) {\n      this.mozL10n.translate(element);\n    }\n  }\n\n  (function listenFindEvents() {\n    const events = [\n      \"find\",\n      \"findagain\",\n      \"findhighlightallchange\",\n      \"findcasesensitivitychange\",\n      \"findentirewordchange\",\n      \"findbarclose\",\n    ];\n    const handleEvent = function ({ type, detail }) {\n      if (!PDFViewerApplication.initialized) {\n        return;\n      }\n      if (type === \"findbarclose\") {\n        PDFViewerApplication.eventBus.dispatch(type, { source: window });\n        return;\n      }\n      PDFViewerApplication.eventBus.dispatch(\"find\", {\n        source: window,\n        type: type.substring(\"find\".length),\n        query: detail.query,\n        phraseSearch: true,\n        caseSensitive: !!detail.caseSensitive,\n        entireWord: !!detail.entireWord,\n        highlightAll: !!detail.highlightAll,\n        findPrevious: !!detail.findPrevious,\n      });\n    };\n\n    for (const event of events) {\n      window.addEventListener(event, handleEvent);\n    }\n  })();\n\n  (function listenZoomEvents() {\n    const events = [\"zoomin\", \"zoomout\", \"zoomreset\"];\n    const handleEvent = function ({ type, detail }) {\n      if (!PDFViewerApplication.initialized) {\n        return;\n      }\n      // Avoid attempting to needlessly reset the zoom level *twice* in a row,\n      // when using the `Ctrl + 0` keyboard shortcut.\n      if (\n        type === \"zoomreset\" &&\n        PDFViewerApplication.pdfViewer.currentScaleValue === DEFAULT_SCALE_VALUE\n      ) {\n        return;\n      }\n      PDFViewerApplication.eventBus.dispatch(type, { source: window });\n    };\n\n    for (const event of events) {\n      window.addEventListener(event, handleEvent);\n    }\n  })();\n\n  (function listenSaveEvent() {\n    const handleEvent = function ({ type, detail }) {\n      if (!PDFViewerApplication.initialized) {\n        return;\n      }\n      PDFViewerApplication.eventBus.dispatch(type, { source: window });\n    };\n\n    window.addEventListener(\"save\", handleEvent);\n  })();\n\n  class FirefoxComDataRangeTransport extends PDFDataRangeTransport {\n    requestDataRange(begin, end) {\n      FirefoxCom.request(\"requestDataRange\", { begin, end });\n    }\n\n    abort() {\n      // Sync call to ensure abort is really started.\n      FirefoxCom.requestSync(\"abortLoading\", null);\n    }\n  }\n\n  class FirefoxScripting {\n    static async createSandbox(data) {\n      const success = await FirefoxCom.requestAsync(\"createSandbox\", data);\n      if (!success) {\n        throw new Error(\"Cannot create sandbox.\");\n      }\n    }\n\n    static async dispatchEventInSandbox(event) {\n      FirefoxCom.request(\"dispatchEventInSandbox\", event);\n    }\n\n    static async destroySandbox() {\n      FirefoxCom.request(\"destroySandbox\", null);\n    }\n  }\n\n  class FirefoxExternalServices extends DefaultExternalServices {\n    static updateFindControlState(data) {\n      FirefoxCom.request(\"updateFindControlState\", data);\n    }\n\n    static updateFindMatchesCount(data) {\n      FirefoxCom.request(\"updateFindMatchesCount\", data);\n    }\n\n    static initPassiveLoading(callbacks) {\n      let pdfDataRangeTransport;\n\n      window.addEventListener(\"message\", function windowMessage(e) {\n        if (e.source !== null) {\n          // The message MUST originate from Chrome code.\n          console.warn(\"Rejected untrusted message from \" + e.origin);\n          return;\n        }\n        const args = e.data;\n\n        if (typeof args !== \"object\" || !(\"pdfjsLoadAction\" in args)) {\n          return;\n        }\n        switch (args.pdfjsLoadAction) {\n          case \"supportsRangedLoading\":\n            pdfDataRangeTransport = new FirefoxComDataRangeTransport(\n              args.length,\n              args.data,\n              args.done\n            );\n\n            callbacks.onOpenWithTransport(\n              args.pdfUrl,\n              args.length,\n              pdfDataRangeTransport\n            );\n            break;\n          case \"range\":\n            pdfDataRangeTransport.onDataRange(args.begin, args.chunk);\n            break;\n          case \"rangeProgress\":\n            pdfDataRangeTransport.onDataProgress(args.loaded);\n            break;\n          case \"progressiveRead\":\n            pdfDataRangeTransport.onDataProgressiveRead(args.chunk);\n\n            // Don't forget to report loading progress as well, since otherwise\n            // the loadingBar won't update when `disableRange=true` is set.\n            pdfDataRangeTransport.onDataProgress(args.loaded, args.total);\n            break;\n          case \"progressiveDone\":\n            if (pdfDataRangeTransport) {\n              pdfDataRangeTransport.onDataProgressiveDone();\n            }\n            break;\n          case \"progress\":\n            callbacks.onProgress(args.loaded, args.total);\n            break;\n          case \"complete\":\n            if (!args.data) {\n              callbacks.onError(args.errorCode);\n              break;\n            }\n            callbacks.onOpenWithData(args.data);\n            break;\n        }\n      });\n      FirefoxCom.requestSync(\"initPassiveLoading\", null);\n    }\n\n    static async fallback(data) {\n      return FirefoxCom.requestAsync(\"fallback\", data);\n    }\n\n    static reportTelemetry(data) {\n      FirefoxCom.request(\"reportTelemetry\", JSON.stringify(data));\n    }\n\n    static createDownloadManager(options) {\n      return new DownloadManager();\n    }\n\n    static createPreferences() {\n      return new FirefoxPreferences();\n    }\n\n    static createL10n(options) {\n      const mozL10n = document.mozL10n;\n      // TODO refactor mozL10n.setExternalLocalizerServices\n      return new MozL10n(mozL10n);\n    }\n\n    static createScripting(options) {\n      return FirefoxScripting;\n    }\n\n    static get supportsIntegratedFind() {\n      const support = FirefoxCom.requestSync(\"supportsIntegratedFind\");\n      return shadow(this, \"supportsIntegratedFind\", support);\n    }\n\n    static get supportsDocumentFonts() {\n      const support = FirefoxCom.requestSync(\"supportsDocumentFonts\");\n      return shadow(this, \"supportsDocumentFonts\", support);\n    }\n\n    static get supportedMouseWheelZoomModifierKeys() {\n      const support = FirefoxCom.requestSync(\n        \"supportedMouseWheelZoomModifierKeys\"\n      );\n      return shadow(this, \"supportedMouseWheelZoomModifierKeys\", support);\n    }\n\n    static get isInAutomation() {\n      // Returns the value of `Cu.isInAutomation`, which is only `true` when e.g.\n      // various test-suites are running in mozilla-central.\n      const isInAutomation = FirefoxCom.requestSync(\"isInAutomation\");\n      return shadow(this, \"isInAutomation\", isInAutomation);\n    }\n  }\n  PDFViewerApplication.externalServices = FirefoxExternalServices;\n\n  // l10n.js for Firefox extension expects services to be set.\n  document.mozL10n.setExternalLocalizerServices({\n    getLocale() {\n      return FirefoxCom.requestSync(\"getLocale\", null);\n    },\n\n    getStrings(key) {\n      return FirefoxCom.requestSync(\"getStrings\", key);\n    },\n  });\n\n  return { DownloadManager, FirefoxCom };\n});"]}