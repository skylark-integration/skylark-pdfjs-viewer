{"version":3,"sources":["skylark-pdfjs-viewer-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","Error","_attach","root","attach","obj","skylark","main","pdfjs","display","__webpack_modules__","__unused_webpack_module","exports","__w_pdfjs_require__","Object","defineProperty","value","enumerable","get","_display_utils","addLinkAttributes","getFilenameFromUrl","LinkTarget","loadScript","PDFDateString","RenderingCancelledException","_api","build","getDocument","LoopbackPort","PDFDataRangeTransport","PDFWorker","version","_util","CMapCompressionType","createObjectURL","createPromiseCapability","createValidAbsoluteUrl","InvalidPDFException","MissingPDFException","OPS","PasswordResponses","PermissionFlag","removeNullCharacters","shadow","UnexpectedResponseException","UNSUPPORTED_FEATURES","Util","VerbosityLevel","_annotation_layer","AnnotationLayer","_api_compatibility","apiCompatibilityParams","_worker_options","GlobalWorkerOptions","_text_layer","renderTextLayer","_svg","SVGGraphics","isNodeJS","PDFNodeStream","setPDFNetworkStreamFactory","params","PDFNetworkStream","PDFFetchStream","isFetchSupported","isValidFetchUrl","url","link","target","rel","enabled","assert","urlNullRemoved","href","title","onclick","targetStr","NONE","SELF","BLANK","PARENT","TOP","DEFAULT_LINK_REL","deprecated","details","console","log","anchor","indexOf","query","end","Math","min","substring","lastIndexOf","src","removeScriptElement","Promise","resolve","reject","script","document","createElement","onload","evt","remove","onerror","head","documentElement","appendChild","StatTimer","PageViewport","DOMSVGFactory","DOMCMapReaderFactory","DOMCanvasFactory","BaseCMapReaderFactory","BaseCanvasFactory","SVG_NS","[object Object]","this","constructor","unreachable","width","height","canvasAndContext","canvas","context","ownerDocument","globalThis","super","_document","getContext","baseUrl","isCompressed","compressionType","BINARY","_fetchData","catch","reason","baseURI","fetch","then","async","response","ok","statusText","cMapData","Uint8Array","arrayBuffer","stringToBytes","text","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","status","responseText","send","svg","createElementNS","setAttribute","type","viewBox","scale","rotation","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","abs","transform","slice","x","y","applyTransform","rect","topLeft","bottomRight","applyInverseTransform","BaseException","msg","Response","prototype","ReadableStream","protocol","URL","ex","pdfDateStringRegex","started","create","times","warn","Date","now","push","start","outBuf","longest","time","duration","padEnd","join","input","isString","RegExp","matches","exec","year","parseInt","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","UTC","arrayByteLength","arraysToBytes","arr","resultLength","pos","data","item","itemLength","byteLength","set","bytesToString","bytes","undefined","String","fromCharCode","apply","strBuf","chunkEnd","chunk","subarray","capability","isSettled","promise","absoluteUrl","_isValidProtocol","encodeToXmlString","str","buffer","ii","char","codePointAt","entity","XMLEntities","toString","toUpperCase","escapeString","replace","match","getModificationDate","date","getUTCFullYear","getUTCMonth","padStart","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getVerbosityLevel","verbosity","info","INFOS","isArrayBuffer","v","isArrayEqual","arr1","arr2","every","element","index","isAscii","test","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","objectFromEntries","iterable","assign","fromEntries","objectSize","keys","NullCharactersRegExp","setVerbosityLevel","level","Number","isInteger","string32","stringToPDFString","charCodeAt","code","PDFStringTranslateTable","charAt","stringToUTF16BEString","buf","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","UnknownErrorException","TextRenderingMode","StreamType","PasswordException","PageActionEventType","IsLittleEndianCached","IsEvalSupportedCached","ImageKind","IDENTITY_MATRIX","FormatError","FontType","FONT_IDENTITY_MATRIX","DocumentActionEventType","AnnotationType","AnnotationStateModelType","AnnotationReviewState","AnnotationReplyType","AnnotationMarkedState","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","AnnotationActionEventType","AbortException","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontGetPath","errorMarkedContent","NEED_PASSWORD","INCORRECT_PASSWORD","cond","prop","configurable","writable","message","buffer8","Uint32Array","isLittleEndian","Function","isEvalSupported","hexNumbers","Array","map","n","r","g","b","m1","m2","p","m","xt","yt","d","p1","p2","p3","p4","max","transpose","a","c","first","sqrt","sx","sy","rect1","rect2","compare","orderedX","sort","orderedY","result","normalizeRect","digits","contentType","forceDataSchema","blob","Blob","b1","b2","b3","d1","d2","d3","d4","60","62","38","34","39","__unused_webpack_exports","process","versions","nw","electron","PDFPageProxy","PDFDocumentProxy","DefaultCMapReaderFactory","DefaultCanvasFactory","_font_loader","_node_utils","_annotation_storage","_canvas","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","_webgl","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","NodeCanvasFactory","NodeCMapReaderFactory","createPDFNetworkStream","pdfNetworkStreamFactory","task","PDFDocumentLoadingTask","source","range","rangeTransport","worker","key","window","pdfBytes","isNaN","location","rangeChunkSize","CMapReaderFactory","ignoreErrors","stopAtErrors","fontExtraProperties","pdfBug","maxImageSize","disableFontFace","disableRange","disableStream","disableAutoFetch","workerParams","port","workerPort","fromPort","_worker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","httpHeaders","withCredentials","all","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","_transport","_capability","pdfDataRangeTransport","sendWithPromise","apiVersion","password","docBaseUrl","nextDocumentId","onPassword","onProgress","onUnsupportedFeature","transportDestroyed","destroy","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","listener","begin","loaded","total","pdfInfo","_pdfInfo","annotationStorage","AnnotationStorage","numPages","fingerprint","pageNumber","getPage","ref","getPageIndex","getDestinations","id","getDestination","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","downloadInfoCapability","getStats","startCleanup","loadingTask","loadingParams","saveDocument","getFieldObjects","hasJSActions","getCalculationOrderIds","pageIndex","pageInfo","_pageIndex","_pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","rotate","userUnit","view","intent","annotationsPromise","annotationsIntent","getAnnotations","_jsActionsPromise","getPageJSActions","canvasContext","viewport","enableWebGL","renderInteractiveForms","imageLayer","canvasFactory","background","optionalContentConfigPromise","renderingIntent","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","webGLContext","WebGLContext","enable","displayReadyCapability","operatorList","fnArray","argsArray","lastChunk","_pumpOperatorList","getAll","complete","error","renderTasks","internalRenderTask","splice","_tryCleanup","_abortOperatorList","timeEnd","InternalRenderTask","callback","useRequestAnimationFrame","renderTask","transparency","optionalContentConfig","initializeGraphics","operatorListChanged","opListTask","opListReadCapability","normalizeWhitespace","disableCombineTextItems","sendWithStream","combineTextItems","highWaterMark","size","textContent","items","readableStream","streamTextContent","reader","getReader","styles","pump","read","done","pageCache","waitOn","force","completed","cancel","clear","resetStats","values","operatorListChunk","args","streamReader","_renderPageChunk","setTimeout","curIntentState","delete","cleanup","stats","defer","_listeners","_defer","_deferred","transfers","forEach","call","cloned","WeakMap","cloneValue","has","includes","byteOffset","isArray","desc","getOwnPropertyDescriptor","getPrototypeOf","hasOwnProperty","PDFWorkerClosure","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","require","pdfjsFilePath","currentScript","getWorkerSrc","workerSrc","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","WorkerMessageHandler","setupFakeWorkerGlobal","loader","eval","pdfjsWorker","createCDNWrapper","wrapper","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","terminateEarly","removeEventListener","onWorkerError","terminate","_setupFakeWorker","addEventListener","supportTransfers","sendTest","testObj","workerHandler","setup","fontLoader","FontLoader","_onUnsupportedFeature","bind","_params","cMapUrl","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","loadingTaskSettled","settled","page","_destroy","terminated","annotationStorageResetModified","pdfDocument","resetModified","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","onPull","close","enqueue","onCancel","ready","readyReason","headersCapability","fullReader","headersReady","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","_numPages","exception","updatePassword","_startRenderPage","exportedData","exportedError","fontRegistry","FontInspector","fontAdded","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","fetched","builtInCMap","featureId","filename","results","OptionalContentConfig","metadata","Metadata","contentDispositionFilename","cleanupSuccessful","_objs","objId","resolved","_ensureObj","RenderTask","_internalRenderTask","onContinue","canvasInRendering","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","add","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","requestAnimationFrame","executeOperatorList","BaseFontLoader","nativeFontFaces","styleElement","nativeFontFace","fonts","rule","getElementsByTagName","styleSheet","sheet","insertRule","cssRules","attached","missingFile","isFontLoadingAPISupported","createNativeFontFace","addNativeFontFace","family","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","_loadTestFont","rules","fontsToLoad","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","userAgent","otherRequest","shift","atob","int32","offset","spliceString","s","insert","chunk1","chunk2","ctx","called","checksum","btoa","names","loadedName","div","style","visibility","position","top","left","span","fontFamily","body","isFontReady","fillText","getImageData","removeChild","translatedData","compiledGlyphs","FontFace","registerFont","mimetype","character","cmds","current","js","cmd","Canvas","createCanvas","fs","readFile","_storage","_modified","onSetModified","onResetModified","defaultValue","modified","entry","val","entries","_setModified","compatibilityParams","freeze","_pattern_helper","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","_originalSave","_originalRestore","_originalRotate","_originalScale","_originalTranslate","translate","_originalTransform","_originalSetTransform","setTransform","_transformMatrix","_transformStack","f","ad_bc","bc_ad","old","prev","pop","angle","cosValue","cos","sinValue","sin","CachedCanvases","cache","getCanvas","trackTransform","canvasEntry","reset","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","textMatrixScale","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","transferMaps","clone","setCurrentPoint","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","contentVisible","markedContentStack","cachedCanvases","_cachedGetSinglePixelWidth","putBinaryImageData","imgData","ImageData","putImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","createImageData","destPos","srcPos","dest","j","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","kind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","property","setLineDash","getLineDash","lineDashOffset","resetCtxToDefault","strokeStyle","fillStyle","fillRule","globalAlpha","lineCap","lineJoin","miterLimit","globalCompositeOperation","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","maskCtx","scaleX","scaleY","backdrop","isEnabled","composed","layer","subtype","drawImage","hasBackdrop","composeFn","chunkSize","ceil","row","chunkHeight","genericComposeSMask","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","fillRect","transparentCanvas","compositeCtx","_combinedScaleFactor","hypot","beginLayout","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","steps","fnId","breakIt","depObjId","objsPool","startsWith","endLayout","limit","dashArray","dashPhase","flatness","states","state","suspendSMaskGroup","endSMaskGroup","beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","startTransformInverse","mozCurrentTransformInverse","deltaTransform","clearRect","resumeSMaskGroup","ops","xw","yh","bezierCurveTo","consumePath","getPattern","singularValueDecompose2dScale","getSinglePixelWidth","scaledLineWidth","resetTransform","round","isPatternFill","needRestore","paths","pendingTextPaths","beginPath","addToPath","spacing","fontRefName","fontObj","fontDirection","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","patternTransform","resetLineWidthToOne","fillStrokeMode","isAddToPathSet","getPathGenerator","strokeText","isFontSubpixelAAEnabled","glyphs","showType3Text","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","charWidth","vmetric","vx","vy","remeasure","measuredWidth","measureText","characterScaleX","isInFont","paintChar","scaledAccentX","scaledAccentY","isTextInvisible","spacingLength","charProcOperatorList","operatorListId","transformed","xWidth","yWidth","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","getShadingPatternFromIR","arguments","makeHexColor","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","matrix","bbox","group","isolated","knockout","bounds","getAxialAlignedBoundingBox","canvasBounds","intersect","floor","imageSmoothingEnabled","mozImageSmoothingEnabled","img","compiled","width1","j0","points","POINT_TYPES","lineSize","data0","count","sum","Int32Array","outlines","coords","p0","step","pp","kk","o","l","ll","compileType3Glyph","maskCanvas","skewX","skewY","positions","images","image","w","h","widthScale","imgToPaint","tmpCanvas","tmpCtx","heightScale","HTMLElement","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","getCanvasPosition","appendImage","tag","visible","isVisible","isContentVisible","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","op","raw","shadingIR","ShadingIRs","fromIR","applyBoundingBox","Path2D","region","RadialAxial","colorStops","r1","grad","createLinearGradient","createRadialGradient","addColorStop","createMeshCanvas","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","combinesScale","figures","backgroundColor","boundsWidth","boundsHeight","paddedWidth","BORDER_SIZE","paddedHeight","drawFigures","Mesh","owner","matrixScale","temporaryPatternCanvas","createPattern","Dummy","PaintType","COLORED","UNCOLORED","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","combinedScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","clipBbox","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","action","cbSourceName","cbTargetName","postMessage","_createStreamSink","actionName","handler","ah","_postMessage","queueingStrategy","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","self","streamSink","isCancelled","lastDesiredSize","sinkCapability","success","_deleteStreamController","allSettled","_xml_parser","_repair","parser","SimpleXMLParser","lowerCaseName","xmlDocument","parseFromString","_metadataMap","_parse","_data","codes","chars","nodeName","childNodes","filter","node","hasChildNodes","seqNode","authors","_getSequence","trim","rdf","firstChild","nextSibling","_getCreators","SimpleDOMNode","XMLParserErrorCode","NoError","EndOfDocument","UnterminatedCdat","UnterminatedXmlDeclaration","UnterminatedDoctypeDeclaration","UnterminatedComment","MalformedElement","OutOfMemory","UnterminatedAttributeValue","UnterminatedElement","ElementNeverBegun","isWhitespace","ch","XMLParserBase","fromCodePoint","onResolveEntity","attributes","skipWs","attrName","attrValue","attrEndChar","attrEndIndex","_resolveEntities","parsed","attrStart","ch2","onError","onEndElement","pi","_parseProcessingInstruction","onPi","onComment","onCdata","q2","complexDoctype","doctypeContent","onDoctype","content","_parseContent","onBeginElement","onText","isEmpty","nodeValue","parentNode","child","component","stack","parent","siblingPos","searchNode","currentPos","newPos","attribute","dump","hasAttributes","_currentFragment","_stack","_errorCode","_hasAttributes","_lowerCaseName","parseXml","isWhitespaceString","toLowerCase","lastElement","OptionalContentGroup","creator","_order","_groups","order","groups","baseState","off","expression","policy","ids","from","_queuedChunks","_progressiveDone","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","addRangeListener","_onReceiveData","addProgressListener","_onProgress","addProgressiveReadListener","addProgressiveDoneListener","_onProgressiveDone","transportReady","_enqueue","found","some","_begin","_progressiveDataLength","_loaded","firstReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","requestDataRange","readers","abort","_stream","_done","_filename","_requests","_headersReady","requestCapability","_end","_queuedChunk","requestsCapability","_removeRangeReader","_enabled","WebGLUtils","tryInitGL","loadShader","gl","shaderType","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errorMsg","getShaderInfoLog","createVertexShader","VERTEX_SHADER","createFragmentShader","FRAGMENT_SHADER","createProgram","shaders","program","attachShader","linkProgram","linked","getProgramParameter","LINK_STATUS","getProgramInfoLog","createTexture","textureId","activeTexture","texture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","currentGL","currentCanvas","generateGL","premultipliedalpha","smaskVertexShaderCode","smaskFragmentShaderCode","smaskCache","figuresVertexShaderCode","figuresFragmentShaderCode","figuresCache","vertexShader","fragmentShader","useProgram","resolutionLocation","getUniformLocation","positionLocation","getAttribLocation","backdropLocation","subtypeLocation","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform1i","initSmaskGL","drawingBufferWidth","drawingBufferHeight","uniform2f","uniform4f","TEXTURE0","maskTexture","TEXTURE1","clearColor","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","flush","deleteTexture","deleteBuffer","scaleLocation","offsetLocation","colorLocation","initFiguresGL","coordsMap","colorsMap","pIndex","cIndex","col","jj","coordsBuffer","colorsBuffer","_scripting_utils","AnnotationElementFactory","parameters","annotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","linkService","downloadManager","imageResourcesPath","svgFactory","enableScripting","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","transformOrigin","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","quadPoints","savedRect","quadPoint","trigger","popupElement","PopupElement","modificationDate","contents","hideWrapper","popup","render","className","quadrilateral","isTooltipOnly","actions","Action","newWindow","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","_bindJSAction","_renderQuadrilaterals","linkElement","cloneNode","destination","getDestinationHash","goToDestination","getAnchorUrl","executeNamedAction","jsName","eventBus","dispatch","detail","hasPopup","alt","dataset","l10nId","l10nArgs","JSON","stringify","_createPopup","alternativeText","platform","ctrlKey","metaKey","baseName","eventName","valueGetter","shiftKey","modifier","_getKeyModifier","checked","getter","_setEventListener","hasAppearance","fieldValue","storage","getOrCreateValue","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","multiLine","setValue","blurListener","setSelectionRange","valueAsString","activeElement","focus","preventScroll","userName","hidden","disabled","editable","selStart","selEnd","selRange","ColorConverters","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","change","_setEventListeners","readOnly","fieldName","maxLen","maxLength","comb","fieldWidth","combWidth","classList","letterSpacing","verticalAlign","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","textAlign","checkbox","getElementsByName","getAttribute","buttonValue","radio","radioId","selectElement","combo","options","multiSelect","multiple","option","optionElement","displayValue","exportValue","getValue","selectedIndex","changeEx","keyDown","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","pinned","hideElement","dateObject","toDateObject","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","line","createTextNode","pin","hasAttribute","removeAttribute","zIndex","unpin","lineCoordinates","append","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","file","_download","downloadData","sortedAnnotations","popupAnnotations","annotations","rendered","renderedElement","prepend","elements","makeColorComp","G","R","B","components","RGB_HTML","CMYK_RGB","MAX_TEXT_DIVS_TO_RENDER","NonWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","canvasWidth","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","_textDivs","_textDivProperties","tx","_viewport","atan2","fontName","fontHeight","fontAscent","ascent","descent","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","_layoutText","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","_bounds","right","bottom","_canceled","textDivs","textDivsLength","_renderingDone","findPositiveMin","ts","t","expand","expanded","boxes","box","x1New","x2New","expandBoundsLTR","expandBounds","divProperties","Float64Array","boxScale","fakeBoundary","Infinity","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","unshift","used","concat","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_renderTimer","styleCache","len","_render","timeout","mozOpaque","textItems","textStyles","_processItems","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","padding","renderParameters","SVG_DEFAULTS","fontStyle","fontWeight","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","writePngChunk","crc","crc32","deflateSyncUncompressed","literals","deflateBlocks","idat","adler","adler32","encode","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","Buffer","output","deflateSync","pngLength","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","pf","toFixed","pm","acos","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","svgElement","loadDependencies","convertOpList","operatorIdMapping","opList","fn","opTree","opListElement","opListToTree","opTreeElement","lineMatrix","xcoords","ycoords","tspan","setAttributeNS","txtElement","txtgrp","lineWidthScale","_setStrokeAttributes","_ensureTransformGroup","defs","addFontStyle","_makeColorN_Pattern","inverseTransform","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","colorStop","stop","getAttributeNS","clipId","clipPath","clipElement","setStrokeAlpha","setFillAlpha","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","_network_utils","http","https","fileUriRegex","sourceUrl","parsedUrl","parse","host","parseUrl","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","statusCode","_setReadableStream","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","Range","lstat","stat","createReadStream","createResponseStatusError","contentDisposition","_content_disposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","needsEncodingFixup","toParamRegExp","rfc2616unquote","fixupEncoding","rfc2047decode","rfc5987decode","contentDispositionStr","iter","quot","part","parts","rfc2231getparam","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","decode","err","quotindex","extvalue","encodingend","langvalue","charset","hex","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","NetworkManager","getXhr","currXhrId","pendingRequests","listeners","xhr","xhrId","pendingRequest","setRequestHeader","expectedStatus","onStateChange","onprogress","onHeadersReceived","onDone","xhrStatus","ok_response_on_range_request","getArrayBuffer","rangeHeader","_source","_manager","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","onClosed","_onRangeRequestReaderClosed","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","requestFull","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","getRequestXhr","abortRequest","lengthComputable","isPendingRequest","_requestId","requestRange","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers","__webpack_module_cache__","moduleId","module","pdfjsLib","__webpack_require__","_app_options","AppOptions","_app","PDFViewerApplication","webViewerLoad","config","appContainer","mainContainer","getElementById","viewerContainer","toolbar","scaleSelectContainer","scaleSelect","customScaleOption","previous","next","zoomIn","zoomOut","viewFind","openFile","print","presentationModeButton","download","viewBookmark","secondaryToolbar","toggleButton","toolbarButtonContainer","openFileButton","printButton","downloadButton","viewBookmarkButton","firstPageButton","lastPageButton","pageRotateCwButton","pageRotateCcwButton","cursorSelectToolButton","cursorHandToolButton","scrollVerticalButton","scrollHorizontalButton","scrollWrappedButton","spreadNoneButton","spreadOddButton","spreadEvenButton","documentPropertiesButton","fullscreen","contextFirstPage","contextLastPage","contextPageRotateCw","contextPageRotateCcw","sidebar","outerContainer","thumbnailButton","outlineButton","attachmentsButton","layersButton","thumbnailView","outlineView","attachmentsView","layersView","outlineOptionsContainer","currentOutlineItemButton","sidebarResizer","resizer","findBar","bar","findField","highlightAllCheckbox","caseSensitiveCheckbox","entireWordCheckbox","findMsg","findResultsCount","findPreviousButton","findNextButton","passwordOverlay","overlayName","label","submitButton","cancelButton","documentProperties","closeButton","fields","fileName","fileSize","author","subject","keywords","creationDate","producer","pageCount","pageSize","linearized","errorWrapper","errorMessage","errorMoreInfo","moreInfoButton","lessInfoButton","printContainer","openFileInputName","debuggerScriptPath","createEvent","initCustomEvent","dispatchEvent","run","PDFViewerApplicationOptions","OptionKind","_viewer_compatibility","VIEWER","API","WORKER","PREFERENCE","defaultOptions","cursorToolOnLoad","defaultUrl","defaultZoomValue","disableHistory","disablePageLabels","enablePermissions","enablePrintAutoRotate","historyUpdateUrl","ignoreDestinationZoom","maxCanvasPixels","compatibility","viewerCompatibilityParams","pdfBugEnabled","printResolution","renderer","sidebarViewOnLoad","scrollModeOnLoad","spreadModeOnLoad","textLayerMode","useOnlyCssZoom","viewerCssTheme","viewOnLoad","disablePreferences","locale","language","sandboxBundleSrc","userOptions","userOption","defaultOption","valueType","maxTouchPoints","isAndroid","isIOS","isIOSChrome","disableCreateObjectURL","PDFPrintServiceFactory","DefaultExternalServices","_ui_utils","_pdfjsLib","_pdf_cursor_tools","_pdf_rendering_queue","_overlay_manager","_password_prompt","_pdf_attachment_viewer","_pdf_document_properties","_pdf_find_bar","_pdf_find_controller","_pdf_history","_pdf_layer_viewer","_pdf_link_service","_pdf_outline_viewer","_pdf_presentation_mode","_pdf_sidebar","_pdf_sidebar_resizer","_pdf_thumbnail_viewer","_pdf_viewer","_secondary_toolbar","_toolbar","_view_history","WHEEL_ZOOM_DISABLED_TIMEOUT","ENABLE_PERMISSIONS_CLASS","ViewOnLoad","PREVIOUS","INITIAL","ViewerCssTheme","AUTOMATIC","LIGHT","DARK","KNOWN_VERSIONS","KNOWN_GENERATORS","callbacks","supportsIntegratedFind","supportsDocumentFonts","supportedMouseWheelZoomModifierKeys","isInAutomation","initialBookmark","hash","_initializedCapability","fellback","appConfig","pdfLoadingTask","printService","pdfViewer","pdfThumbnailViewer","pdfRenderingQueue","pdfPresentationMode","pdfDocumentProperties","pdfLinkService","pdfHistory","pdfSidebar","pdfSidebarResizer","pdfOutlineViewer","pdfAttachmentViewer","pdfLayerViewer","pdfCursorTools","store","overlayManager","preferences","l10n","isInitialViewSet","downloadComplete","isViewerEmbedded","externalServices","_boundEvents","documentInfo","_contentDispositionFilename","triggerDelayedFallback","_saveInProgress","_wheelUnusedTicks","_idleCallbacks","Set","_scriptingInstance","createPreferences","_readPreferences","_parseHashParameters","_forceCssTheme","_initializeL10n","_initializeViewerComponents","bindEvents","bindWindowEvents","setAll","hashParams","parseQueryString","disableworker","loadFakeWorker","disablerange","disablestream","disableautofetch","disablefontface","disablehistory","webgl","textlayer","TextLayerMode","DISABLE","viewer","pdfbug","enabledTabs","PDFBug","loadAndEnablePDFBug","createL10n","dir","getDirection","cssTheme","styleSheets","CSSMediaRule","media","deleteRule","darkRules","cssText","darkRule","EventBus","OverlayManager","PDFRenderingQueue","onIdle","PDFLinkService","createDownloadManager","findController","PDFFindController","PDFViewer","renderingQueue","setViewer","PDFThumbnailViewer","setThumbnailViewer","PDFHistory","setHistory","PDFFindBar","PDFDocumentProperties","PDFCursorTools","Toolbar","SecondaryToolbar","supportsFullscreen","PDFPresentationMode","contextMenuItems","passwordPrompt","PasswordPrompt","PDFOutlineViewer","PDFAttachmentViewer","PDFLayerViewer","PDFSidebar","onToggled","forceRendering","PDFSidebarResizer","initialize","webViewerInitialized","initialized","initializedPromise","ticks","isInPresentationMode","newScale","currentScale","MAX_SCALE","currentScaleValue","MIN_SCALE","DEFAULT_SCALE_VALUE","pagesCount","currentPageNumber","supportsPrinting","instance","support","doc","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","loadingBar","ProgressBar","getPDFFileNameFromURL","setTitle","_docFilename","cancelIdleCallback","scripting","internalEvents","domEvents","destroySandbox","_off","promises","setDocument","webViewerResetPermissions","_cancelIdleCallbacks","_destroyScriptingInstance","workerParameters","setTitleUsingUrl","originalUrl","apiParameters","updateCallback","setUpdateCallback","progress","fallback","load","loadingErrorMessage","sourceEventType","downloadByUrl","downloadUrl","dispatchEventInSandbox","reportTelemetry","moreInfo","moreInfoText","lineNumber","errorWrapperConfig","scrollHeight","oncontextmenu","noContextMenuHandler","percent","disableAutoFetchLoadingBarTimeout","show","hide","getDownloadInfo","firstPagePromise","pageLayoutPromise","pageModePromise","openActionPromise","baseDocumentUrl","setPagesCount","onePageRendered","pagesPromise","storedPromise","ViewHistory","getMultiple","zoom","scrollLeft","scrollTop","sidebarView","SidebarView","scrollMode","ScrollMode","spreadMode","SpreadMode","pdfPage","setWidth","_initializeAnnotationStorageCallbacks","animationStarted","timeStamp","stored","pageLayout","pageMode","openAction","_initializePdfHistory","initialDest","THUMBS","OUTLINE","ATTACHMENTS","LAYERS","apiPageModeToSidebarView","apiPageLayoutToSpreadMode","setInitialView","_initializePermissions","race","hasEqualPageSizes","update","_initializeAutoPrint","outline","attachments","requestIdleCallback","_collectTelemetry","_initializeJavaScript","_initializePageLabels","_initializeMetadata","objects","calculationOrder","docActions","getJSActions","createScripting","_on","once","command","triggerPrinting","CustomEvent","visitedPages","actionsPromise","createSandbox","appInfo","docInfo","baseURL","filesize","getRaw","initializeScriptingEvents","markInfo","tagged","Marked","triggerAutoPrint","_delayedFallback","AutoPrintRegExp","pdfTitle","PDFFormatVersion","Producer","Creator","infoTitle","Title","metadataTitle","IsXFAPresent","IsAcroFormPresent","versionId","generatorId","generator","formType","labels","numLabels","setPageLabels","setPageNumber","currentPageLabel","resetHistory","updateUrl","initialRotation","explicitDest","permissions","beforeUnload","storedHash","setRotation","isValidRotation","pagesRotation","scroll","spread","isValidScrollMode","isValidSpreadMode","setViewerModes","setHash","RendererType","SVG","printing","isThumbnailViewEnabled","isThumbnailViewVisible","renderHighestPriority","printMessage","pageViewsReady","notReadyMessage","alert","pagesOverview","getPagesOverview","createPrintService","layout","delta","newRotation","beforePrint","afterPrint","webViewerResize","webViewerHashchange","webViewerPageRendered","webViewerUpdateViewarea","webViewerPageChanging","webViewerScaleChanging","webViewerRotationChanging","webViewerSidebarViewChanged","webViewerPageMode","webViewerNamedAction","webViewerPresentationModeChanged","webViewerPresentationMode","webViewerPrint","webViewerDownload","webViewerSave","webViewerFirstPage","webViewerLastPage","webViewerNextPage","webViewerPreviousPage","webViewerZoomIn","webViewerZoomOut","webViewerZoomReset","webViewerPageNumberChanged","webViewerScaleChanged","webViewerRotateCw","webViewerRotateCcw","webViewerOptionalContentConfig","webViewerSwitchScrollMode","webViewerScrollModeChanged","webViewerSwitchSpreadMode","webViewerSpreadModeChanged","webViewerDocumentProperties","webViewerFind","webViewerFindFromUrlHash","webViewerUpdateFindMatchesCount","webViewerUpdateFindControlState","reportPageStatsPDFBug","webViewerFileInputChange","webViewerOpenFile","windowResize","windowHashChange","windowBeforePrint","windowAfterPrint","windowUpdateFromSandbox","webViewerVisibilityChange","webViewerWheel","passive","webViewerTouchStart","webViewerClick","webViewerKeyDown","webViewerKeyUp","wholeTicks","sign","scriptingReady","validateFileURL","webViewerOpenFileViaURL","HOSTED_VIEWER_ORIGINS","viewerOrigin","Stats","pageView","getPageView","pageStats","queryString","search","fileInput","File","FileReader","FileList","files","preventDefault","dataTransfer","dropEffect","timestamp","updateLoadingIndicatorState","getThumbnail","setImage","switchView","select","toggle","presentationModeState","setMultiple","pdfOpenParams","currentPage","loading","renderingState","RenderingStates","FINISHED","popStateInProgress","requestPresentationMode","downloadOrSave","nextPage","previousPage","zoomReset","goToPage","rotatePages","executeCommand","phraseSearch","caseSensitive","entireWord","highlightAll","findPrevious","matchesCount","updateFindMatchesCount","updateResultsCount","rawQuery","updateFindControlState","updateUIState","setPageScale","presetValue","pageLabel","scrollThumbnailIntoView","visibilityState","setZoomDisabledTimeout","fileReader","readAsArrayBuffer","click","zoomDisabledTimeout","previousScale","normalizeWheelEventDirection","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","accumulateWheelTicks","PIXELS_PER_LINE_SCALE","scaleCorrectionFactor","getBoundingClientRect","dx","clientX","dy","clientY","touches","containsElement","isOpen","contains","keyCode","active","handled","ensureViewerFocused","altKey","isViewerInPresentationMode","findState","curElement","getActiveOrFocusedElement","curElementTagName","tagName","isContentEditable","turnPage","turnOnlyIfPageFit","isVerticalScrollbarEnabled","isHorizontalScrollbarEnabled","opened","switchTool","CursorTool","SELECT","HAND","returnValue","ODD","EVEN","approximateFraction","xinv","x_","backtrackBeforeAllVisibleElements","binarySearchFirstItem","curRoot","curActiveOrFocused","querySelector","shadowRoot","getOutputScale","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","scaled","getPageSizeInches","changeOrientation","defaultFilename","isDataSchema","reFilename","splitURI","suggestedFilename","getVisibleElements","scrollEl","views","sortByVisibility","horizontal","rtl","clientHeight","clientWidth","numViews","firstVisibleElementInd","elementLeft","offsetLeft","clientLeft","elementRight","offsetTop","clientTop","lastEdge","currentWidth","currentHeight","viewWidth","viewHeight","viewRight","viewBottom","hiddenHeight","hiddenWidth","fractionHeight","fractionWidth","widthPercent","last","pc","isPortraitOrientation","moveToEndOfArray","condition","moved","write","normalizeWheelEventDelta","MOUSE_PIXELS_PER_LINE","param","roundToDivide","scrollIntoView","spot","skipOverflowHiddenElements","offsetParent","scrollWidth","getComputedStyle","overflow","_scaleY","_scaleX","waitOnEventOrTimeout","delay","eventHandler","WaitOnType","EVENT","timeoutHandler","TIMEOUT","watchScroll","viewAreaElement","debounceScroll","rAF","currentX","lastX","currentY","lastY","down","_eventHandler","VERTICAL_PADDING","UNKNOWN_SCALE","SCROLLBAR_PADDING","PresentationModeState","NullL10n","MAX_AUTO_SCALE","DEFAULT_SCALE","CSS_UNITS","LOADINGBAR_END_OFFSET_VAR","NORMAL","CHANGING","FULLSCREEN","CANVAS","ENABLE","ENABLE_ENHANCE","VERTICAL","HORIZONTAL","WRAPPED","getLanguage","formatL10nValue","minIndex","maxIndex","currentIndex","currentItem","elt","pageTop","deltaX","deltaY","external","eventListeners","externalListeners","_this$_listeners","units","_indeterminate","progressSize","_percent","_updateBar","scrollbarWidth","offsetWidth","setProperty","_grab_to_pan","ZOOM","activeBeforePresentationMode","handTool","GrabToPan","_addEventListeners","activeTool","tool","disableActiveTool","deactivate","activate","_dispatchEvent","previouslyActive","ignoreTarget","onActiveChanged","_onmousedown","_onmousemove","_endPan","overlay","matchesSelector","CSS_CLASS_GRAB","button","originalTarget","scrollLeftStart","scrollTopStart","clientXStart","clientYStart","stopPropagation","focusedElement","blur","isNotIEorIsIE10plus","buttons","isChrome15OrOpera15plus","isSafari6plus","which","isLeftMouseReleased","xDiff","yDiff","scrollTo","behavior","prefix","documentMode","chrome","webstore","app","vendor","CLEANUP_TIMEOUT","RUNNING","PAUSED","highestPriorityPage","idleTimeout","renderingId","currentlyVisiblePages","scrolledDown","visibleViews","numVisible","isViewFinished","nextPageIndex","previousPageIndex","resume","draw","_overlays","_active","_keyDownBound","_keyDown","callerCloseMethod","canForceClose","_closeThroughCaller","verify","register","promptString","_base_tree_viewer","PdfFileRegExp","BaseTreeViewer","_appendAttachment","keepRenderedCapability","_attachments","_renderedCapability","_pendingDispatchEvent","attachmentsCount","blobUrl","viewerUrl","revokeObjectURL","localeCompare","fragment","createDocumentFragment","_bindPdfLink","_normalizeTextContent","_finishRendering","renderedPromise","TREEITEM_OFFSET_TOP","TREEITEM_SELECTED_CLASS","_pdfDocument","_lastToggleIsShow","_currentTreeItem","toggler","shouldShowAll","_toggleTreeItem","insertBefore","hasAnyNesting","treeItem","currentNode","firstElementChild","_updateCurrentTreeItem","DEFAULT_FIELD_CONTENT","NON_METRIC_LOCALES","US_PAGE_NAMES","8.5x11","8.5x14","METRIC_PAGE_NAMES","297x420","210x297","getPageName","isPortrait","pageNames","_reset","_currentPageNumber","_pagesRotation","_isNonMetricLocale","freezeFieldData","_dataAvailableCapability","fieldData","_updateUI","isLinearized","_parseFileSize","_parseDate","CreationDate","ModDate","_parsePageSize","_parseLinearization","IsLinearized","Author","Subject","Keywords","kb","size_kb","toPrecision","toLocaleString","size_b","size_mb","pageSizeInches","sizeInches","sizeMillimeters","pageName","rawName","exactMillimeters","intMillimeters","unit","orientation","inputDate","MATCHES_COUNT_LIMIT","_adjustWidth","findPrev","FindState","FOUND","PENDING","NOT_FOUND","matchesCountMsg","findbarHeight","inputContainerHeight","_pdf_find_utils","FIND_TIMEOUT","MATCH_SCROLL_OFFSET_TOP","MATCH_SCROLL_OFFSET_LEFT","CHARACTERS_TO_NORMALIZE","‘","’","‚","‛","“","”","„","‟","¼","½","¾","normalizationRegex","normalize","diffs","normalizedText","normalizedCh","diff","getOriginalIndex","matchIndex","totalDiff","_linkService","_eventBus","_onFindBarClose","highlightMatches","_highlightMatches","pageMatches","_pageMatches","pageMatchesLength","_pageMatchesLength","selected","_selected","_state","_firstPageCapability","_shouldDirtyMatch","_dirtyMatch","_updateUIState","_extractText","findbarClosed","pendingTimeout","_findTimeout","_nextMatch","_updateAllPages","_scrollMatches","matchIdx","pageIdx","_offset","wrapped","_extractTextPromises","_pageContents","_pageDiffs","_matchesCountTotal","_pagesToSearch","_pendingFindMatches","_resumePageIdx","_query","_rawQuery","_normalizedQuery","isPageVisible","matchesWithLength","matchesLength","isSubTerm","currentElem","nextElem","skipped","prevElem","matchLength","startIdx","getCharacterType","endIdx","pageContent","pageDiffs","queryLen","_isEntireWord","originalMatchIdx","matchEnd","originalQueryLen","queryArray","subquery","subqueryLen","_prepareMatches","_calculatePhraseMatch","_calculateWordMatch","_updatePage","_nextPageMatch","pageMatchesCount","_updateUIResultsCount","extractTextCapability","getTextContent","currentPageIndex","_calculateMatch","numPageMatches","_updateMatch","_advanceOffsetPage","numMatches","_matchesReady","_requestMatchesCount","charCode","isAlphabeticalScript","isAsciiSpace","CharacterType","SPACE","isAsciiAlpha","isAsciiDigit","ALPHA_LETTER","PUNCT","isThai","THAI_LETTER","isHan","HAN_LETTER","isKatakana","KATAKANA_LETTER","isHiragana","HIRAGANA_LETTER","isHalfwidthKatakana","HALFWIDTH_KATAKANA_LETTER","isDestArraysEqual","isDestHashesEqual","HASH_CHANGE_TIMEOUT","POSITION_UPDATED_THRESHOLD","UPDATE_VIEWAREA_TIMEOUT","getCurrentHash","destHash","pushHash","nameddest","firstDest","secondDest","isEntryEqual","_initialized","_fingerprint","_isViewerInPresentationMode","_isPagesLoaded","reInitialized","_updateUrl","_bindEvents","history","_popStateInProgress","_blockHashChange","_currentHash","_numPositionUpdates","_uid","_maxUid","_destination","_position","_isValidState","_parseCurrentHash","_pushOrReplaceState","_updateInternalState","uid","_initialRotation","_initialBookmark","_pageHide","_unbindEvents","_updateViewareaTimeout","namedDest","forceReplace","_tryPushCurrentPosition","back","forward","shouldReplace","newState","newUrl","replaceState","pushState","temporary","checkReload","perfEntry","performance","getEntriesByType","removeTemporary","checkNameddest","newHash","hashChanged","updateViewarea","_updateViewarea","popState","_popState","pageHide","_resetLayers","_toggleAllTreeItems","_optionalContentConfig","layersCount","groupId","setVisibility","_addToggleButton","getOrder","queue","levelData","_setNestedName","itemsDiv","getGroup","SimpleLinkService","_ignoreDestinationZoom","_pagesRefCache","rawDest","destRef","_cachedPageNumber","cachePageRef","_goToDestinationHelper","pushCurrentPosition","scrollPageIntoView","destArray","pageLabelToPageNumber","pushPage","phrase","zoomArgs","zoomArg","zoomArgNumber","parseFloat","allowNegativeOffset","pagemode","destLength","num","gen","allowNull","isValidExplicitDestination","pageNum","pageRef","refStr","isPageCached","_currentOutlineItem","_sidebarView","_outline","_pageNumberToDestHashCapability","outlineCount","enableCurrentOutlineItemButton","totalCount","nestedCount","nestedItems","_setStyles","pageNumberToDestHash","_getPageNumberToDestHash","_scrollToCurrentTreeItem","pageNumberNesting","nesting","currentNesting","DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS","DELAY_BEFORE_HIDING_CONTROLS","ACTIVE_SELECTOR","CONTROLS_SELECTOR","MOUSE_SCROLL_COOLDOWN_TIME","PAGE_SWITCH_THRESHOLD","SWIPE_MIN_DISTANCE_THRESHOLD","SWIPE_ANGLE_THRESHOLD","contextMenuOpen","mouseScrollTimeStamp","mouseScrollDelta","touchSwipeState","switchInProgress","_addFullscreenChangeListeners","_setSwitchInProgress","_notifyStateChange","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","currentTime","getTime","storedTime","_resetMouseScrollState","totalDelta","isFullscreen","fullscreenElement","mozFullScreen","webkitIsFullScreen","_removeFullscreenChangeListeners","_resetSwitchInProgress","_addWindowListeners","_showControls","getSelection","removeAllRanges","_removeWindowListeners","_hideControls","isInternalLink","controlsTimeout","startX","pageX","startY","pageY","endX","endY","absAngle","showControlsBind","mouseDownBind","_mouseDown","mouseWheelBind","_mouseWheel","resetMouseScrollStateBind","contextMenuBind","_contextMenu","touchSwipeBind","_touchSwipe","_enter","_exit","fullscreenChangeBind","_fullscreenChange","UI_NOTIFICATION_CLASS","_outlineOptionsContainer","_currentOutlineItemButton","_hideUINotification","visibleView","isOutlineViewVisible","isAttachmentsViewVisible","isLayersViewVisible","_switchView","forceOpen","isViewChanged","shouldForceRendering","_updateThumbnailViewer","_forceRendering","onTreeLoaded","_showUINotification","SIDEBAR_WIDTH_VAR","SIDEBAR_MIN_WIDTH","SIDEBAR_RESIZING_CLASS","isRTL","sidebarOpen","_width","_outerContainerWidth","outerContainerWidth","maxWidth","_updateWidth","mouseMove","mouseUp","_mouseMove","_mouseUp","updated","_pdf_thumbnail_view","THUMBNAIL_SCROLL_MARGIN","THUMBNAIL_SELECTED_CLASS","_scrollUpdated","_resetView","_setImageDisabled","_thumbnails","prevThumbnailView","visibleThumbs","_getVisibleThumbs","numVisibleThumbs","shouldScroll","TempImageFactory","destroyCanvas","_pageLabels","_optionalContentConfigPromise","_pagesRequests","_cancelRendering","firstPdfPage","getViewport","checkSetImageDisabled","thumbnail","PDFThumbnailView","defaultViewport","disableCanvasToImageConversion","firstThumbnailView","setPdfPage","cancelRendering","setPageLabel","thumbView","getHighestPriority","_ensurePdfPageLoaded","renderView","MAX_NUM_SCALING_STEPS","THUMBNAIL_CANVAS_BORDER_WIDTH","THUMBNAIL_WIDTH","tempCanvasCache","tempCanvas","pdfPageRotate","_checkSetImageDisabled","pageWidth","pageHeight","pageRatio","canvasHeight","_thumbPageTitle","ring","borderAdjustment","totalRotation","outputScale","_thumbPageCanvas","toDataURL","finishRenderTask","_convertCanvasToImage","_getPageDrawContext","drawViewport","renderContext","cont","isHighestPriority","resultPromise","pageCached","reducedWidth","reducedHeight","reducedImage","reducedImageCtx","_base_viewer","BaseViewer","_viewerElement","pageDiv","pageSpot","_isScrollModeHorizontal","_scrollIntoView","_getCurrentVisiblePage","_getVisiblePages","visiblePages","currentId","stillFullyVisible","_scrollMode","_spreadMode","_setCurrentPageNumber","_annotation_layer_builder","_pdf_page_view","_text_layer_builder","DEFAULT_CACHE_SIZE","_name","removePageBorders","defaultRenderingQueue","_scrollUpdate","_onBeforeDraw","_onAfterDraw","_pages","_pagesCapability","resetCurrentPageView","_resetCurrentPageView","_currentScale","_setScale","_currentScaleValue","_onePageRenderedCapability","_buffer","cssTransform","textLayerFactory","PDFPageView","annotationLayerFactory","firstPageView","_updateSpreadMode","_onePageRenderedOrForceFetch","getPagesLeft","resize","newSize","pagesToKeep","pageIdsToKeep","iMax","_location","_resetScriptingEvents","_updateScrollMode","newValue","noScroll","preset","oldScale","isSameScale","isChangingPresentationMode","_pageWidthScaleFactor","_setScaleUpdatePages","noPadding","hPadding","vPadding","pageWidthScale","pageHeightScale","horizontalScale","boundingRect","convertToViewportPoint","firstPage","normalizedScaleValue","currentPageView","getPagePoint","intLeft","intTop","numVisiblePages","newCacheSize","_updateHelper","_updateLocation","_isContainerRtl","direction","scrollAhead","textLayerDiv","TextLayerBuilder","hasJSActionsPromise","AnnotationLayerBuilder","pages","parity","yArray","expectedId","firstId","lastId","advance","_getPageAdvance","_pageOpenPendingSet","pageOpenPendingSet","scriptingEvents","_scriptingEvents","dispatchPageClose","dispatchPageOpen","onPageChanging","onPageRendered","onPagesDestroy","DefaultAnnotationLayerFactory","_cancelled","MAX_CANVAS_PIXELS","hasRestrictedScaling","paintTask","paintedViewportMap","_renderError","annotationLayer","textLayer","zoomLayer","removeFromDOM","zoomLayerCanvas","keepZoomLayer","keepAnnotations","currentZoomLayerNode","currentAnnotationNode","_resetZoomLayer","loadingIconDiv","isScalingRestricted","redrawAnnotations","relativeRotation","absRotation","textLayerViewport","textRelativeRotation","textAbsRotation","transX","transY","_renderAnnotationLayer","convertToPdfPoint","canvasWrapper","createTextLayerBuilder","renderContinueCallback","finishPaintTask","paintOnSvg","paintOnCanvas","onRenderContinue","setTextContentStream","createAnnotationLayerBuilder","renderCapability","isCanvasHidden","showCanvas","actualSizeViewport","pixelsInViewport","maxScale","sfx","sfy","ensureNotCancelled","getOperatorList","svgGfx","getSVG","DefaultTextLayerFactory","EXPAND_DIVS_TIMEOUT","renderingDone","textLayerRenderTask","_onUpdateTextLayerMatches","_bindMouse","endOfContent","numTextDivs","textLayerFrag","_updateMatches","iIndex","mm","divIdx","isSelectedPage","selectedMatchIdx","prevEnd","infinity","appendTextToDiv","fromOffset","toOffset","i0","i1","isSelected","highlightSuffix","scrollMatchIntoView","n0","n1","clearedUntilDivIdx","_convertMatches","_renderMatches","expandDivsTimer","adjustTop","getPropertyValue","divBounds","_pdf_single_page_viewer","eventDetails","lastPage","pageRotateCw","pageRotateCcw","containerHeight","previousContainerHeight","_bindClickListeners","_bindCursorToolsListener","_bindScrollModeListener","_bindSpreadModeListener","_setMaxHeight","PDFSinglePageViewer","scrollModeChanged","isScrollModeHorizontal","spreadModeChanged","maxHeight","_ensurePageViewVisible","_shadowViewer","_previousPageNumber","_updateScrollDown","previousPageView","viewerNodes","PAGE_NUMBER_LOADING_INDICATOR","SCALE_SELECT_CONTAINER_WIDTH","SCALE_SELECT_WIDTH","_wasLocalized","_bindListeners","hasPageLabels","pageScaleValue","pageScale","_adjustScaleWidth","resetNumPages","customScale","predefinedValueFound","pageNumberInput","predefinedValuesPromise","predefinedValue","DEFAULT_VIEW_HISTORY_CACHE_SIZE","cacheSize","_initializedPromise","_readFromStorage","databaseStr","database","branch","localStorage","setItem","getItem","_writeToStorage","GenericCom","_preferences","_download_manager","_genericl10n","_generic_scripting","GenericPreferences","BasePreferences","prefObj","DownloadManager","GenericL10n","GenericScripting","prefs","defaults","prefValue","defaultType","webL10n","lang","_lang","_ready","setLanguage","gL10nData","gTextData","gTextProp","gLanguage","gMacros","gReadyState","gAsyncResourceLoading","xhrLoadText","onSuccess","onFailure","overrideMimeType","ontimeout","parseResource","successCallback","failureCallback","evalString","parsedPropertiesCallback","dictionary","reBlank","reComment","reSection","reImport","reSplit","parseRawLines","rawText","extendedSyntax","parsedRawLinesCallback","currentLang","genericLang","skipLang","nextEntry","loadImport","parseProperties","loadLocale","langLinks","langCount","onResourceLoaded","gResourceCount","resource","L10nResourceLink","dict","innerHTML","locales","default_locale","defaultLocale","anyCaseLang","getL10nData","rv","substArguments","substIndexes","reMatch","macroName","paramName","macro","matched_text","arg","translateElement","getL10nAttributes","children","childElementCount","nodeType","getChildElementCount","textNode","plural","_pluralRules","isIn","list","isBetween","pluralRules","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","af","ak","am","ar","asa","az","be","bem","bez","bg","bh","bm","bn","bo","brx","bs","ca","cgg","chr","cy","da","de","dv","dz","ee","el","en","eo","es","et","eu","fa","ff","fi","fil","fo","fr","fur","fy","ga","gd","gsw","gu","guw","gv","ha","haw","he","hi","hr","hu","ig","is","it","iu","ja","jmc","jv","ka","kab","kaj","kcg","kde","kea","kl","km","kn","ko","ksb","ksh","ku","kw","lag","lb","lg","ln","lo","lt","lv","mas","mg","mk","ml","mn","mo","mr","ms","mt","my","nah","naq","nb","nd","ne","nl","nn","no","nr","nso","ny","nyn","om","or","pa","pap","pl","pt","rm","ro","rof","ru","rwk","sah","saq","se","seh","ses","sg","sh","shi","sk","sl","sma","smi","smj","smn","sms","sn","so","sq","sr","ss","ssy","st","sv","sw","syr","ta","te","teo","th","ti","tig","tk","tl","tn","to","tr","tzm","uk","ve","vi","vun","wa","wae","wo","xh","xog","yo","zh","zu","getPluralRules","fallbackString","getText","shortCode","getTranslatableChildren","elementCount","getReadyState","pdfjsSandbox","QuickJSSandbox","sandbox","nukeSandbox","PDFPrintService","activeService","_printResolution","throwIfInactive","pageStyleSheet","ensureOverlay","renderNextPage","renderProgress","activeServiceOnEntry","PRINT_UNITS","renderPage","useRenderedPage","printItem","toBlob","eventType","progressContainer","progressBar","progressPerc","renderPages","performPrint","opera","stopImmediatePropagation","stopPropagationIfNeeded","overlayPromise"],"mappings":"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,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,GACAC,IAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAzqF,GAAA,GACA0qF,IAAA,EACAC,GAAA,GACAC,GAAA,EACAC,IAAA,EACAC,IAAA,EACArjF,GAAA,GACAsjF,GAAA,GACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GACA31E,GAAA,EACA41E,IAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,GACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GACAC,GAAA,EACAv1G,GAAA,EACAw1G,GAAA,EACAr0H,GAAA,EACAs0H,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAxrF,GAAA,EACAyrF,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,IAAA,GACAC,GAAA,EACAC,GAAA,EACAC,IAAA,GACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,GACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GACAC,GAAA,EACAC,IAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,IAAA,EACA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","file":"../skylark-pdfjs-viewer-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        if (ns[name]) {\r\n            if (obj2) {\r\n                throw new Error(\"This namespace already exists:\" + path);\r\n            }\r\n\r\n        } else {\r\n            ns[name] = obj2 || {};\r\n        }\r\n        return ns[name];\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var root = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(root,path,obj);\r\n    \t}\r\n    };\r\n    return root;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-pdfjs-display/pdfjs',[\r\n\t\"skylark-langx-ns\"\r\n],function(skylark) {\r\n\treturn skylark.attach(\"intg.pdfjs\");\r\n});\ndefine('skylark-pdfjs-display/display',[\n  \"./pdfjs\"\n],function(pdfjs){\nreturn pdfjs.display = /******/ (() => { // webpackBootstrap\n/******/  \"use strict\";\n/******/  var __webpack_modules__ = ([\n/* 0 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  Object.defineProperty(exports, \"addLinkAttributes\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.addLinkAttributes;\n    }\n  }));\n  Object.defineProperty(exports, \"getFilenameFromUrl\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.getFilenameFromUrl;\n    }\n  }));\n  Object.defineProperty(exports, \"LinkTarget\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.LinkTarget;\n    }\n  }));\n  Object.defineProperty(exports, \"loadScript\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.loadScript;\n    }\n  }));\n  Object.defineProperty(exports, \"PDFDateString\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.PDFDateString;\n    }\n  }));\n  Object.defineProperty(exports, \"RenderingCancelledException\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.RenderingCancelledException;\n    }\n  }));\n  Object.defineProperty(exports, \"build\", ({\n    enumerable: true,\n    get: function () {\n      return _api.build;\n    }\n  }));\n  Object.defineProperty(exports, \"getDocument\", ({\n    enumerable: true,\n    get: function () {\n      return _api.getDocument;\n    }\n  }));\n  Object.defineProperty(exports, \"LoopbackPort\", ({\n    enumerable: true,\n    get: function () {\n      return _api.LoopbackPort;\n    }\n  }));\n  Object.defineProperty(exports, \"PDFDataRangeTransport\", ({\n    enumerable: true,\n    get: function () {\n      return _api.PDFDataRangeTransport;\n    }\n  }));\n  Object.defineProperty(exports, \"PDFWorker\", ({\n    enumerable: true,\n    get: function () {\n      return _api.PDFWorker;\n    }\n  }));\n  Object.defineProperty(exports, \"version\", ({\n    enumerable: true,\n    get: function () {\n      return _api.version;\n    }\n  }));\n  Object.defineProperty(exports, \"CMapCompressionType\", ({\n    enumerable: true,\n    get: function () {\n      return _util.CMapCompressionType;\n    }\n  }));\n  Object.defineProperty(exports, \"createObjectURL\", ({\n    enumerable: true,\n    get: function () {\n      return _util.createObjectURL;\n    }\n  }));\n  Object.defineProperty(exports, \"createPromiseCapability\", ({\n    enumerable: true,\n    get: function () {\n      return _util.createPromiseCapability;\n    }\n  }));\n  Object.defineProperty(exports, \"createValidAbsoluteUrl\", ({\n    enumerable: true,\n    get: function () {\n      return _util.createValidAbsoluteUrl;\n    }\n  }));\n  Object.defineProperty(exports, \"InvalidPDFException\", ({\n    enumerable: true,\n    get: function () {\n      return _util.InvalidPDFException;\n    }\n  }));\n  Object.defineProperty(exports, \"MissingPDFException\", ({\n    enumerable: true,\n    get: function () {\n      return _util.MissingPDFException;\n    }\n  }));\n  Object.defineProperty(exports, \"OPS\", ({\n    enumerable: true,\n    get: function () {\n      return _util.OPS;\n    }\n  }));\n  Object.defineProperty(exports, \"PasswordResponses\", ({\n    enumerable: true,\n    get: function () {\n      return _util.PasswordResponses;\n    }\n  }));\n  Object.defineProperty(exports, \"PermissionFlag\", ({\n    enumerable: true,\n    get: function () {\n      return _util.PermissionFlag;\n    }\n  }));\n  Object.defineProperty(exports, \"removeNullCharacters\", ({\n    enumerable: true,\n    get: function () {\n      return _util.removeNullCharacters;\n    }\n  }));\n  Object.defineProperty(exports, \"shadow\", ({\n    enumerable: true,\n    get: function () {\n      return _util.shadow;\n    }\n  }));\n  Object.defineProperty(exports, \"UnexpectedResponseException\", ({\n    enumerable: true,\n    get: function () {\n      return _util.UnexpectedResponseException;\n    }\n  }));\n  Object.defineProperty(exports, \"UNSUPPORTED_FEATURES\", ({\n    enumerable: true,\n    get: function () {\n      return _util.UNSUPPORTED_FEATURES;\n    }\n  }));\n  Object.defineProperty(exports, \"Util\", ({\n    enumerable: true,\n    get: function () {\n      return _util.Util;\n    }\n  }));\n  Object.defineProperty(exports, \"VerbosityLevel\", ({\n    enumerable: true,\n    get: function () {\n      return _util.VerbosityLevel;\n    }\n  }));\n  Object.defineProperty(exports, \"AnnotationLayer\", ({\n    enumerable: true,\n    get: function () {\n      return _annotation_layer.AnnotationLayer;\n    }\n  }));\n  Object.defineProperty(exports, \"apiCompatibilityParams\", ({\n    enumerable: true,\n    get: function () {\n      return _api_compatibility.apiCompatibilityParams;\n    }\n  }));\n  Object.defineProperty(exports, \"GlobalWorkerOptions\", ({\n    enumerable: true,\n    get: function () {\n      return _worker_options.GlobalWorkerOptions;\n    }\n  }));\n  Object.defineProperty(exports, \"renderTextLayer\", ({\n    enumerable: true,\n    get: function () {\n      return _text_layer.renderTextLayer;\n    }\n  }));\n  Object.defineProperty(exports, \"SVGGraphics\", ({\n    enumerable: true,\n    get: function () {\n      return _svg.SVGGraphics;\n    }\n  }));\n\n  var _display_utils = __w_pdfjs_require__(1);\n\n  var _api = __w_pdfjs_require__(5);\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _annotation_layer = __w_pdfjs_require__(19);\n\n  var _api_compatibility = __w_pdfjs_require__(9);\n\n  var _worker_options = __w_pdfjs_require__(12);\n\n  var _text_layer = __w_pdfjs_require__(21);\n\n  var _svg = __w_pdfjs_require__(22);\n\n  const pdfjsVersion = '2.7.570';\n  const pdfjsBuild = 'f2c7338b0';\n  {\n    const {\n      isNodeJS\n    } = __w_pdfjs_require__(4);\n\n    if (isNodeJS) {\n      const PDFNodeStream = __w_pdfjs_require__(23).PDFNodeStream;\n\n      (0, _api.setPDFNetworkStreamFactory)(params => {\n        return new PDFNodeStream(params);\n      });\n    } else {\n      const PDFNetworkStream = __w_pdfjs_require__(26).PDFNetworkStream;\n\n      let PDFFetchStream;\n\n      if ((0, _display_utils.isFetchSupported)()) {\n        PDFFetchStream = __w_pdfjs_require__(27).PDFFetchStream;\n      }\n\n      (0, _api.setPDFNetworkStreamFactory)(params => {\n        if (PDFFetchStream && (0, _display_utils.isValidFetchUrl)(params.url)) {\n          return new PDFFetchStream(params);\n        }\n\n        return new PDFNetworkStream(params);\n      });\n    }\n  }\n\n  /***/ }),\n  /* 1 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.addLinkAttributes = addLinkAttributes;\n  exports.deprecated = deprecated;\n  exports.getFilenameFromUrl = getFilenameFromUrl;\n  exports.isFetchSupported = isFetchSupported;\n  exports.isValidFetchUrl = isValidFetchUrl;\n  exports.loadScript = loadScript;\n  exports.StatTimer = exports.RenderingCancelledException = exports.PDFDateString = exports.PageViewport = exports.LinkTarget = exports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.DOMCanvasFactory = exports.DEFAULT_LINK_REL = exports.BaseCMapReaderFactory = exports.BaseCanvasFactory = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  const DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\n  exports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;\n  const SVG_NS = \"http://www.w3.org/2000/svg\";\n\n  class BaseCanvasFactory {\n    constructor() {\n      if (this.constructor === BaseCanvasFactory) {\n        (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n      }\n    }\n\n    create(width, height) {\n      (0, _util.unreachable)(\"Abstract method `create` called.\");\n    }\n\n    reset(canvasAndContext, width, height) {\n      if (!canvasAndContext.canvas) {\n        throw new Error(\"Canvas is not specified\");\n      }\n\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n\n      canvasAndContext.canvas.width = width;\n      canvasAndContext.canvas.height = height;\n    }\n\n    destroy(canvasAndContext) {\n      if (!canvasAndContext.canvas) {\n        throw new Error(\"Canvas is not specified\");\n      }\n\n      canvasAndContext.canvas.width = 0;\n      canvasAndContext.canvas.height = 0;\n      canvasAndContext.canvas = null;\n      canvasAndContext.context = null;\n    }\n\n  }\n\n  exports.BaseCanvasFactory = BaseCanvasFactory;\n\n  class DOMCanvasFactory extends BaseCanvasFactory {\n    constructor({\n      ownerDocument = globalThis.document\n    } = {}) {\n      super();\n      this._document = ownerDocument;\n    }\n\n    create(width, height) {\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n\n      const canvas = this._document.createElement(\"canvas\");\n\n      const context = canvas.getContext(\"2d\");\n      canvas.width = width;\n      canvas.height = height;\n      return {\n        canvas,\n        context\n      };\n    }\n\n  }\n\n  exports.DOMCanvasFactory = DOMCanvasFactory;\n\n  class BaseCMapReaderFactory {\n    constructor({\n      baseUrl = null,\n      isCompressed = false\n    }) {\n      if (this.constructor === BaseCMapReaderFactory) {\n        (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n      }\n\n      this.baseUrl = baseUrl;\n      this.isCompressed = isCompressed;\n    }\n\n    async fetch({\n      name\n    }) {\n      if (!this.baseUrl) {\n        throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n      }\n\n      if (!name) {\n        throw new Error(\"CMap name must be specified.\");\n      }\n\n      const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n      const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n      return this._fetchData(url, compressionType).catch(reason => {\n        throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\n      });\n    }\n\n    _fetchData(url, compressionType) {\n      (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n    }\n\n  }\n\n  exports.BaseCMapReaderFactory = BaseCMapReaderFactory;\n\n  class DOMCMapReaderFactory extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      if (isFetchSupported() && isValidFetchUrl(url, document.baseURI)) {\n        return fetch(url).then(async response => {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          let cMapData;\n\n          if (this.isCompressed) {\n            cMapData = new Uint8Array(await response.arrayBuffer());\n          } else {\n            cMapData = (0, _util.stringToBytes)(await response.text());\n          }\n\n          return {\n            cMapData,\n            compressionType\n          };\n        });\n      }\n\n      return new Promise((resolve, reject) => {\n        const request = new XMLHttpRequest();\n        request.open(\"GET\", url, true);\n\n        if (this.isCompressed) {\n          request.responseType = \"arraybuffer\";\n        }\n\n        request.onreadystatechange = () => {\n          if (request.readyState !== XMLHttpRequest.DONE) {\n            return;\n          }\n\n          if (request.status === 200 || request.status === 0) {\n            let cMapData;\n\n            if (this.isCompressed && request.response) {\n              cMapData = new Uint8Array(request.response);\n            } else if (!this.isCompressed && request.responseText) {\n              cMapData = (0, _util.stringToBytes)(request.responseText);\n            }\n\n            if (cMapData) {\n              resolve({\n                cMapData,\n                compressionType\n              });\n              return;\n            }\n          }\n\n          reject(new Error(request.statusText));\n        };\n\n        request.send(null);\n      });\n    }\n\n  }\n\n  exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n\n  class DOMSVGFactory {\n    create(width, height) {\n      (0, _util.assert)(width > 0 && height > 0, \"Invalid SVG dimensions\");\n      const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n      svg.setAttribute(\"version\", \"1.1\");\n      svg.setAttribute(\"width\", width + \"px\");\n      svg.setAttribute(\"height\", height + \"px\");\n      svg.setAttribute(\"preserveAspectRatio\", \"none\");\n      svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n      return svg;\n    }\n\n    createElement(type) {\n      (0, _util.assert)(typeof type === \"string\", \"Invalid SVG element type\");\n      return document.createElementNS(SVG_NS, type);\n    }\n\n  }\n\n  exports.DOMSVGFactory = DOMSVGFactory;\n\n  class PageViewport {\n    constructor({\n      viewBox,\n      scale,\n      rotation,\n      offsetX = 0,\n      offsetY = 0,\n      dontFlip = false\n    }) {\n      this.viewBox = viewBox;\n      this.scale = scale;\n      this.rotation = rotation;\n      this.offsetX = offsetX;\n      this.offsetY = offsetY;\n      const centerX = (viewBox[2] + viewBox[0]) / 2;\n      const centerY = (viewBox[3] + viewBox[1]) / 2;\n      let rotateA, rotateB, rotateC, rotateD;\n      rotation = rotation % 360;\n      rotation = rotation < 0 ? rotation + 360 : rotation;\n\n      switch (rotation) {\n        case 180:\n          rotateA = -1;\n          rotateB = 0;\n          rotateC = 0;\n          rotateD = 1;\n          break;\n\n        case 90:\n          rotateA = 0;\n          rotateB = 1;\n          rotateC = 1;\n          rotateD = 0;\n          break;\n\n        case 270:\n          rotateA = 0;\n          rotateB = -1;\n          rotateC = -1;\n          rotateD = 0;\n          break;\n\n        case 0:\n          rotateA = 1;\n          rotateB = 0;\n          rotateC = 0;\n          rotateD = -1;\n          break;\n\n        default:\n          throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n      }\n\n      if (dontFlip) {\n        rotateC = -rotateC;\n        rotateD = -rotateD;\n      }\n\n      let offsetCanvasX, offsetCanvasY;\n      let width, height;\n\n      if (rotateA === 0) {\n        offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n        offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n        width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n        height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      } else {\n        offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n        offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n        width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n        height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      }\n\n      this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n      this.width = width;\n      this.height = height;\n    }\n\n    clone({\n      scale = this.scale,\n      rotation = this.rotation,\n      offsetX = this.offsetX,\n      offsetY = this.offsetY,\n      dontFlip = false\n    } = {}) {\n      return new PageViewport({\n        viewBox: this.viewBox.slice(),\n        scale,\n        rotation,\n        offsetX,\n        offsetY,\n        dontFlip\n      });\n    }\n\n    convertToViewportPoint(x, y) {\n      return _util.Util.applyTransform([x, y], this.transform);\n    }\n\n    convertToViewportRectangle(rect) {\n      const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n\n      const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n\n      return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n    }\n\n    convertToPdfPoint(x, y) {\n      return _util.Util.applyInverseTransform([x, y], this.transform);\n    }\n\n  }\n\n  exports.PageViewport = PageViewport;\n\n  class RenderingCancelledException extends _util.BaseException {\n    constructor(msg, type) {\n      super(msg);\n      this.type = type;\n    }\n\n  }\n\n  exports.RenderingCancelledException = RenderingCancelledException;\n  const LinkTarget = {\n    NONE: 0,\n    SELF: 1,\n    BLANK: 2,\n    PARENT: 3,\n    TOP: 4\n  };\n  exports.LinkTarget = LinkTarget;\n\n  function addLinkAttributes(link, {\n    url,\n    target,\n    rel,\n    enabled = true\n  } = {}) {\n    (0, _util.assert)(url && typeof url === \"string\", 'addLinkAttributes: A valid \"url\" parameter must provided.');\n    const urlNullRemoved = (0, _util.removeNullCharacters)(url);\n\n    if (enabled) {\n      link.href = link.title = urlNullRemoved;\n    } else {\n      link.href = \"\";\n      link.title = `Disabled: ${urlNullRemoved}`;\n\n      link.onclick = () => {\n        return false;\n      };\n    }\n\n    let targetStr = \"\";\n\n    switch (target) {\n      case LinkTarget.NONE:\n        break;\n\n      case LinkTarget.SELF:\n        targetStr = \"_self\";\n        break;\n\n      case LinkTarget.BLANK:\n        targetStr = \"_blank\";\n        break;\n\n      case LinkTarget.PARENT:\n        targetStr = \"_parent\";\n        break;\n\n      case LinkTarget.TOP:\n        targetStr = \"_top\";\n        break;\n    }\n\n    link.target = targetStr;\n    link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n  }\n\n  function getFilenameFromUrl(url) {\n    const anchor = url.indexOf(\"#\");\n    const query = url.indexOf(\"?\");\n    const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n    return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n  }\n\n  class StatTimer {\n    constructor() {\n      this.started = Object.create(null);\n      this.times = [];\n    }\n\n    time(name) {\n      if (name in this.started) {\n        (0, _util.warn)(`Timer is already running for ${name}`);\n      }\n\n      this.started[name] = Date.now();\n    }\n\n    timeEnd(name) {\n      if (!(name in this.started)) {\n        (0, _util.warn)(`Timer has not been started for ${name}`);\n      }\n\n      this.times.push({\n        name,\n        start: this.started[name],\n        end: Date.now()\n      });\n      delete this.started[name];\n    }\n\n    toString() {\n      const outBuf = [];\n      let longest = 0;\n\n      for (const time of this.times) {\n        const name = time.name;\n\n        if (name.length > longest) {\n          longest = name.length;\n        }\n      }\n\n      for (const time of this.times) {\n        const duration = time.end - time.start;\n        outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n      }\n\n      return outBuf.join(\"\");\n    }\n\n  }\n\n  exports.StatTimer = StatTimer;\n\n  function isFetchSupported() {\n    return typeof fetch !== \"undefined\" && typeof Response !== \"undefined\" && \"body\" in Response.prototype && typeof ReadableStream !== \"undefined\";\n  }\n\n  function isValidFetchUrl(url, baseUrl) {\n    try {\n      const {\n        protocol\n      } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n      return protocol === \"http:\" || protocol === \"https:\";\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  function loadScript(src, removeScriptElement = false) {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n\n      script.onload = function (evt) {\n        if (removeScriptElement) {\n          script.remove();\n        }\n\n        resolve(evt);\n      };\n\n      script.onerror = function () {\n        reject(new Error(`Cannot load script at: ${script.src}`));\n      };\n\n      (document.head || document.documentElement).appendChild(script);\n    });\n  }\n\n  function deprecated(details) {\n    console.log(\"Deprecated API usage: \" + details);\n  }\n\n  let pdfDateStringRegex;\n\n  class PDFDateString {\n    static toDateObject(input) {\n      if (!input || !(0, _util.isString)(input)) {\n        return null;\n      }\n\n      if (!pdfDateStringRegex) {\n        pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n      }\n\n      const matches = pdfDateStringRegex.exec(input);\n\n      if (!matches) {\n        return null;\n      }\n\n      const year = parseInt(matches[1], 10);\n      let month = parseInt(matches[2], 10);\n      month = month >= 1 && month <= 12 ? month - 1 : 0;\n      let day = parseInt(matches[3], 10);\n      day = day >= 1 && day <= 31 ? day : 1;\n      let hour = parseInt(matches[4], 10);\n      hour = hour >= 0 && hour <= 23 ? hour : 0;\n      let minute = parseInt(matches[5], 10);\n      minute = minute >= 0 && minute <= 59 ? minute : 0;\n      let second = parseInt(matches[6], 10);\n      second = second >= 0 && second <= 59 ? second : 0;\n      const universalTimeRelation = matches[7] || \"Z\";\n      let offsetHour = parseInt(matches[8], 10);\n      offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n      let offsetMinute = parseInt(matches[9], 10) || 0;\n      offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n      if (universalTimeRelation === \"-\") {\n        hour += offsetHour;\n        minute += offsetMinute;\n      } else if (universalTimeRelation === \"+\") {\n        hour -= offsetHour;\n        minute -= offsetMinute;\n      }\n\n      return new Date(Date.UTC(year, month, day, hour, minute, second));\n    }\n\n  }\n\n  exports.PDFDateString = PDFDateString;\n\n  /***/ }),\n  /* 2 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.arrayByteLength = arrayByteLength;\n  exports.arraysToBytes = arraysToBytes;\n  exports.assert = assert;\n  exports.bytesToString = bytesToString;\n  exports.createPromiseCapability = createPromiseCapability;\n  exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n  exports.encodeToXmlString = encodeToXmlString;\n  exports.escapeString = escapeString;\n  exports.getModificationDate = getModificationDate;\n  exports.getVerbosityLevel = getVerbosityLevel;\n  exports.info = info;\n  exports.isArrayBuffer = isArrayBuffer;\n  exports.isArrayEqual = isArrayEqual;\n  exports.isAscii = isAscii;\n  exports.isBool = isBool;\n  exports.isNum = isNum;\n  exports.isSameOrigin = isSameOrigin;\n  exports.isString = isString;\n  exports.objectFromEntries = objectFromEntries;\n  exports.objectSize = objectSize;\n  exports.removeNullCharacters = removeNullCharacters;\n  exports.setVerbosityLevel = setVerbosityLevel;\n  exports.shadow = shadow;\n  exports.string32 = string32;\n  exports.stringToBytes = stringToBytes;\n  exports.stringToPDFString = stringToPDFString;\n  exports.stringToUTF16BEString = stringToUTF16BEString;\n  exports.stringToUTF8String = stringToUTF8String;\n  exports.unreachable = unreachable;\n  exports.utf8StringToString = utf8StringToString;\n  exports.warn = warn;\n  exports.VerbosityLevel = exports.Util = exports.UNSUPPORTED_FEATURES = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.IsLittleEndianCached = exports.IsEvalSupportedCached = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FontType = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.createObjectURL = exports.CMapCompressionType = exports.BaseException = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0;\n\n  __w_pdfjs_require__(3);\n\n  const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n  exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n  const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n  exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n  const PermissionFlag = {\n    PRINT: 0x04,\n    MODIFY_CONTENTS: 0x08,\n    COPY: 0x10,\n    MODIFY_ANNOTATIONS: 0x20,\n    FILL_INTERACTIVE_FORMS: 0x100,\n    COPY_FOR_ACCESSIBILITY: 0x200,\n    ASSEMBLE: 0x400,\n    PRINT_HIGH_QUALITY: 0x800\n  };\n  exports.PermissionFlag = PermissionFlag;\n  const TextRenderingMode = {\n    FILL: 0,\n    STROKE: 1,\n    FILL_STROKE: 2,\n    INVISIBLE: 3,\n    FILL_ADD_TO_PATH: 4,\n    STROKE_ADD_TO_PATH: 5,\n    FILL_STROKE_ADD_TO_PATH: 6,\n    ADD_TO_PATH: 7,\n    FILL_STROKE_MASK: 3,\n    ADD_TO_PATH_FLAG: 4\n  };\n  exports.TextRenderingMode = TextRenderingMode;\n  const ImageKind = {\n    GRAYSCALE_1BPP: 1,\n    RGB_24BPP: 2,\n    RGBA_32BPP: 3\n  };\n  exports.ImageKind = ImageKind;\n  const AnnotationType = {\n    TEXT: 1,\n    LINK: 2,\n    FREETEXT: 3,\n    LINE: 4,\n    SQUARE: 5,\n    CIRCLE: 6,\n    POLYGON: 7,\n    POLYLINE: 8,\n    HIGHLIGHT: 9,\n    UNDERLINE: 10,\n    SQUIGGLY: 11,\n    STRIKEOUT: 12,\n    STAMP: 13,\n    CARET: 14,\n    INK: 15,\n    POPUP: 16,\n    FILEATTACHMENT: 17,\n    SOUND: 18,\n    MOVIE: 19,\n    WIDGET: 20,\n    SCREEN: 21,\n    PRINTERMARK: 22,\n    TRAPNET: 23,\n    WATERMARK: 24,\n    THREED: 25,\n    REDACT: 26\n  };\n  exports.AnnotationType = AnnotationType;\n  const AnnotationStateModelType = {\n    MARKED: \"Marked\",\n    REVIEW: \"Review\"\n  };\n  exports.AnnotationStateModelType = AnnotationStateModelType;\n  const AnnotationMarkedState = {\n    MARKED: \"Marked\",\n    UNMARKED: \"Unmarked\"\n  };\n  exports.AnnotationMarkedState = AnnotationMarkedState;\n  const AnnotationReviewState = {\n    ACCEPTED: \"Accepted\",\n    REJECTED: \"Rejected\",\n    CANCELLED: \"Cancelled\",\n    COMPLETED: \"Completed\",\n    NONE: \"None\"\n  };\n  exports.AnnotationReviewState = AnnotationReviewState;\n  const AnnotationReplyType = {\n    GROUP: \"Group\",\n    REPLY: \"R\"\n  };\n  exports.AnnotationReplyType = AnnotationReplyType;\n  const AnnotationFlag = {\n    INVISIBLE: 0x01,\n    HIDDEN: 0x02,\n    PRINT: 0x04,\n    NOZOOM: 0x08,\n    NOROTATE: 0x10,\n    NOVIEW: 0x20,\n    READONLY: 0x40,\n    LOCKED: 0x80,\n    TOGGLENOVIEW: 0x100,\n    LOCKEDCONTENTS: 0x200\n  };\n  exports.AnnotationFlag = AnnotationFlag;\n  const AnnotationFieldFlag = {\n    READONLY: 0x0000001,\n    REQUIRED: 0x0000002,\n    NOEXPORT: 0x0000004,\n    MULTILINE: 0x0001000,\n    PASSWORD: 0x0002000,\n    NOTOGGLETOOFF: 0x0004000,\n    RADIO: 0x0008000,\n    PUSHBUTTON: 0x0010000,\n    COMBO: 0x0020000,\n    EDIT: 0x0040000,\n    SORT: 0x0080000,\n    FILESELECT: 0x0100000,\n    MULTISELECT: 0x0200000,\n    DONOTSPELLCHECK: 0x0400000,\n    DONOTSCROLL: 0x0800000,\n    COMB: 0x1000000,\n    RICHTEXT: 0x2000000,\n    RADIOSINUNISON: 0x2000000,\n    COMMITONSELCHANGE: 0x4000000\n  };\n  exports.AnnotationFieldFlag = AnnotationFieldFlag;\n  const AnnotationBorderStyleType = {\n    SOLID: 1,\n    DASHED: 2,\n    BEVELED: 3,\n    INSET: 4,\n    UNDERLINE: 5\n  };\n  exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n  const AnnotationActionEventType = {\n    E: \"Mouse Enter\",\n    X: \"Mouse Exit\",\n    D: \"Mouse Down\",\n    U: \"Mouse Up\",\n    Fo: \"Focus\",\n    Bl: \"Blur\",\n    PO: \"PageOpen\",\n    PC: \"PageClose\",\n    PV: \"PageVisible\",\n    PI: \"PageInvisible\",\n    K: \"Keystroke\",\n    F: \"Format\",\n    V: \"Validate\",\n    C: \"Calculate\"\n  };\n  exports.AnnotationActionEventType = AnnotationActionEventType;\n  const DocumentActionEventType = {\n    WC: \"WillClose\",\n    WS: \"WillSave\",\n    DS: \"DidSave\",\n    WP: \"WillPrint\",\n    DP: \"DidPrint\"\n  };\n  exports.DocumentActionEventType = DocumentActionEventType;\n  const PageActionEventType = {\n    O: \"PageOpen\",\n    C: \"PageClose\"\n  };\n  exports.PageActionEventType = PageActionEventType;\n  const StreamType = {\n    UNKNOWN: \"UNKNOWN\",\n    FLATE: \"FLATE\",\n    LZW: \"LZW\",\n    DCT: \"DCT\",\n    JPX: \"JPX\",\n    JBIG: \"JBIG\",\n    A85: \"A85\",\n    AHX: \"AHX\",\n    CCF: \"CCF\",\n    RLX: \"RLX\"\n  };\n  exports.StreamType = StreamType;\n  const FontType = {\n    UNKNOWN: \"UNKNOWN\",\n    TYPE1: \"TYPE1\",\n    TYPE1C: \"TYPE1C\",\n    CIDFONTTYPE0: \"CIDFONTTYPE0\",\n    CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n    TRUETYPE: \"TRUETYPE\",\n    CIDFONTTYPE2: \"CIDFONTTYPE2\",\n    TYPE3: \"TYPE3\",\n    OPENTYPE: \"OPENTYPE\",\n    TYPE0: \"TYPE0\",\n    MMTYPE1: \"MMTYPE1\"\n  };\n  exports.FontType = FontType;\n  const VerbosityLevel = {\n    ERRORS: 0,\n    WARNINGS: 1,\n    INFOS: 5\n  };\n  exports.VerbosityLevel = VerbosityLevel;\n  const CMapCompressionType = {\n    NONE: 0,\n    BINARY: 1,\n    STREAM: 2\n  };\n  exports.CMapCompressionType = CMapCompressionType;\n  const OPS = {\n    dependency: 1,\n    setLineWidth: 2,\n    setLineCap: 3,\n    setLineJoin: 4,\n    setMiterLimit: 5,\n    setDash: 6,\n    setRenderingIntent: 7,\n    setFlatness: 8,\n    setGState: 9,\n    save: 10,\n    restore: 11,\n    transform: 12,\n    moveTo: 13,\n    lineTo: 14,\n    curveTo: 15,\n    curveTo2: 16,\n    curveTo3: 17,\n    closePath: 18,\n    rectangle: 19,\n    stroke: 20,\n    closeStroke: 21,\n    fill: 22,\n    eoFill: 23,\n    fillStroke: 24,\n    eoFillStroke: 25,\n    closeFillStroke: 26,\n    closeEOFillStroke: 27,\n    endPath: 28,\n    clip: 29,\n    eoClip: 30,\n    beginText: 31,\n    endText: 32,\n    setCharSpacing: 33,\n    setWordSpacing: 34,\n    setHScale: 35,\n    setLeading: 36,\n    setFont: 37,\n    setTextRenderingMode: 38,\n    setTextRise: 39,\n    moveText: 40,\n    setLeadingMoveText: 41,\n    setTextMatrix: 42,\n    nextLine: 43,\n    showText: 44,\n    showSpacedText: 45,\n    nextLineShowText: 46,\n    nextLineSetSpacingShowText: 47,\n    setCharWidth: 48,\n    setCharWidthAndBounds: 49,\n    setStrokeColorSpace: 50,\n    setFillColorSpace: 51,\n    setStrokeColor: 52,\n    setStrokeColorN: 53,\n    setFillColor: 54,\n    setFillColorN: 55,\n    setStrokeGray: 56,\n    setFillGray: 57,\n    setStrokeRGBColor: 58,\n    setFillRGBColor: 59,\n    setStrokeCMYKColor: 60,\n    setFillCMYKColor: 61,\n    shadingFill: 62,\n    beginInlineImage: 63,\n    beginImageData: 64,\n    endInlineImage: 65,\n    paintXObject: 66,\n    markPoint: 67,\n    markPointProps: 68,\n    beginMarkedContent: 69,\n    beginMarkedContentProps: 70,\n    endMarkedContent: 71,\n    beginCompat: 72,\n    endCompat: 73,\n    paintFormXObjectBegin: 74,\n    paintFormXObjectEnd: 75,\n    beginGroup: 76,\n    endGroup: 77,\n    beginAnnotations: 78,\n    endAnnotations: 79,\n    beginAnnotation: 80,\n    endAnnotation: 81,\n    paintJpegXObject: 82,\n    paintImageMaskXObject: 83,\n    paintImageMaskXObjectGroup: 84,\n    paintImageXObject: 85,\n    paintInlineImageXObject: 86,\n    paintInlineImageXObjectGroup: 87,\n    paintImageXObjectRepeat: 88,\n    paintImageMaskXObjectRepeat: 89,\n    paintSolidColorImageMask: 90,\n    constructPath: 91\n  };\n  exports.OPS = OPS;\n  const UNSUPPORTED_FEATURES = {\n    unknown: \"unknown\",\n    forms: \"forms\",\n    javaScript: \"javaScript\",\n    smask: \"smask\",\n    shadingPattern: \"shadingPattern\",\n    font: \"font\",\n    errorTilingPattern: \"errorTilingPattern\",\n    errorExtGState: \"errorExtGState\",\n    errorXObject: \"errorXObject\",\n    errorFontLoadType3: \"errorFontLoadType3\",\n    errorFontState: \"errorFontState\",\n    errorFontMissing: \"errorFontMissing\",\n    errorFontTranslate: \"errorFontTranslate\",\n    errorColorSpace: \"errorColorSpace\",\n    errorOperatorList: \"errorOperatorList\",\n    errorFontToUnicode: \"errorFontToUnicode\",\n    errorFontLoadNative: \"errorFontLoadNative\",\n    errorFontGetPath: \"errorFontGetPath\",\n    errorMarkedContent: \"errorMarkedContent\"\n  };\n  exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n  const PasswordResponses = {\n    NEED_PASSWORD: 1,\n    INCORRECT_PASSWORD: 2\n  };\n  exports.PasswordResponses = PasswordResponses;\n  let verbosity = VerbosityLevel.WARNINGS;\n\n  function setVerbosityLevel(level) {\n    if (Number.isInteger(level)) {\n      verbosity = level;\n    }\n  }\n\n  function getVerbosityLevel() {\n    return verbosity;\n  }\n\n  function info(msg) {\n    if (verbosity >= VerbosityLevel.INFOS) {\n      console.log(`Info: ${msg}`);\n    }\n  }\n\n  function warn(msg) {\n    if (verbosity >= VerbosityLevel.WARNINGS) {\n      console.log(`Warning: ${msg}`);\n    }\n  }\n\n  function unreachable(msg) {\n    throw new Error(msg);\n  }\n\n  function assert(cond, msg) {\n    if (!cond) {\n      unreachable(msg);\n    }\n  }\n\n  function isSameOrigin(baseUrl, otherUrl) {\n    let base;\n\n    try {\n      base = new URL(baseUrl);\n\n      if (!base.origin || base.origin === \"null\") {\n        return false;\n      }\n    } catch (e) {\n      return false;\n    }\n\n    const other = new URL(otherUrl, base);\n    return base.origin === other.origin;\n  }\n\n  function _isValidProtocol(url) {\n    if (!url) {\n      return false;\n    }\n\n    switch (url.protocol) {\n      case \"http:\":\n      case \"https:\":\n      case \"ftp:\":\n      case \"mailto:\":\n      case \"tel:\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  function createValidAbsoluteUrl(url, baseUrl) {\n    if (!url) {\n      return null;\n    }\n\n    try {\n      const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\n      if (_isValidProtocol(absoluteUrl)) {\n        return absoluteUrl;\n      }\n    } catch (ex) {}\n\n    return null;\n  }\n\n  function shadow(obj, prop, value) {\n    Object.defineProperty(obj, prop, {\n      value,\n      enumerable: true,\n      configurable: true,\n      writable: false\n    });\n    return value;\n  }\n\n  const BaseException = function BaseExceptionClosure() {\n    function BaseException(message) {\n      if (this.constructor === BaseException) {\n        unreachable(\"Cannot initialize BaseException.\");\n      }\n\n      this.message = message;\n      this.name = this.constructor.name;\n    }\n\n    BaseException.prototype = new Error();\n    BaseException.constructor = BaseException;\n    return BaseException;\n  }();\n\n  exports.BaseException = BaseException;\n\n  class PasswordException extends BaseException {\n    constructor(msg, code) {\n      super(msg);\n      this.code = code;\n    }\n\n  }\n\n  exports.PasswordException = PasswordException;\n\n  class UnknownErrorException extends BaseException {\n    constructor(msg, details) {\n      super(msg);\n      this.details = details;\n    }\n\n  }\n\n  exports.UnknownErrorException = UnknownErrorException;\n\n  class InvalidPDFException extends BaseException {}\n\n  exports.InvalidPDFException = InvalidPDFException;\n\n  class MissingPDFException extends BaseException {}\n\n  exports.MissingPDFException = MissingPDFException;\n\n  class UnexpectedResponseException extends BaseException {\n    constructor(msg, status) {\n      super(msg);\n      this.status = status;\n    }\n\n  }\n\n  exports.UnexpectedResponseException = UnexpectedResponseException;\n\n  class FormatError extends BaseException {}\n\n  exports.FormatError = FormatError;\n\n  class AbortException extends BaseException {}\n\n  exports.AbortException = AbortException;\n  const NullCharactersRegExp = /\\x00/g;\n\n  function removeNullCharacters(str) {\n    if (typeof str !== \"string\") {\n      warn(\"The argument for removeNullCharacters must be a string.\");\n      return str;\n    }\n\n    return str.replace(NullCharactersRegExp, \"\");\n  }\n\n  function bytesToString(bytes) {\n    assert(bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined, \"Invalid argument for bytesToString\");\n    const length = bytes.length;\n    const MAX_ARGUMENT_COUNT = 8192;\n\n    if (length < MAX_ARGUMENT_COUNT) {\n      return String.fromCharCode.apply(null, bytes);\n    }\n\n    const strBuf = [];\n\n    for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n      const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n      const chunk = bytes.subarray(i, chunkEnd);\n      strBuf.push(String.fromCharCode.apply(null, chunk));\n    }\n\n    return strBuf.join(\"\");\n  }\n\n  function stringToBytes(str) {\n    assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n    const length = str.length;\n    const bytes = new Uint8Array(length);\n\n    for (let i = 0; i < length; ++i) {\n      bytes[i] = str.charCodeAt(i) & 0xff;\n    }\n\n    return bytes;\n  }\n\n  function arrayByteLength(arr) {\n    if (arr.length !== undefined) {\n      return arr.length;\n    }\n\n    assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n    return arr.byteLength;\n  }\n\n  function arraysToBytes(arr) {\n    const length = arr.length;\n\n    if (length === 1 && arr[0] instanceof Uint8Array) {\n      return arr[0];\n    }\n\n    let resultLength = 0;\n\n    for (let i = 0; i < length; i++) {\n      resultLength += arrayByteLength(arr[i]);\n    }\n\n    let pos = 0;\n    const data = new Uint8Array(resultLength);\n\n    for (let i = 0; i < length; i++) {\n      let item = arr[i];\n\n      if (!(item instanceof Uint8Array)) {\n        if (typeof item === \"string\") {\n          item = stringToBytes(item);\n        } else {\n          item = new Uint8Array(item);\n        }\n      }\n\n      const itemLength = item.byteLength;\n      data.set(item, pos);\n      pos += itemLength;\n    }\n\n    return data;\n  }\n\n  function string32(value) {\n    return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n  }\n\n  function objectSize(obj) {\n    return Object.keys(obj).length;\n  }\n\n  function objectFromEntries(iterable) {\n    return Object.assign(Object.create(null), Object.fromEntries(iterable));\n  }\n\n  function isLittleEndian() {\n    const buffer8 = new Uint8Array(4);\n    buffer8[0] = 1;\n    const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n    return view32[0] === 1;\n  }\n\n  const IsLittleEndianCached = {\n    get value() {\n      return shadow(this, \"value\", isLittleEndian());\n    }\n\n  };\n  exports.IsLittleEndianCached = IsLittleEndianCached;\n\n  function isEvalSupported() {\n    try {\n      new Function(\"\");\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const IsEvalSupportedCached = {\n    get value() {\n      return shadow(this, \"value\", isEvalSupported());\n    }\n\n  };\n  exports.IsEvalSupportedCached = IsEvalSupportedCached;\n  const hexNumbers = [...Array(256).keys()].map(n => n.toString(16).padStart(2, \"0\"));\n\n  class Util {\n    static makeHexColor(r, g, b) {\n      return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n    }\n\n    static transform(m1, m2) {\n      return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n    }\n\n    static applyTransform(p, m) {\n      const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n      const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n      return [xt, yt];\n    }\n\n    static applyInverseTransform(p, m) {\n      const d = m[0] * m[3] - m[1] * m[2];\n      const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n      const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n      return [xt, yt];\n    }\n\n    static getAxialAlignedBoundingBox(r, m) {\n      const p1 = Util.applyTransform(r, m);\n      const p2 = Util.applyTransform(r.slice(2, 4), m);\n      const p3 = Util.applyTransform([r[0], r[3]], m);\n      const p4 = Util.applyTransform([r[2], r[1]], m);\n      return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n    }\n\n    static inverseTransform(m) {\n      const d = m[0] * m[3] - m[1] * m[2];\n      return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n    }\n\n    static apply3dTransform(m, v) {\n      return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n    }\n\n    static singularValueDecompose2dScale(m) {\n      const transpose = [m[0], m[2], m[1], m[3]];\n      const a = m[0] * transpose[0] + m[1] * transpose[2];\n      const b = m[0] * transpose[1] + m[1] * transpose[3];\n      const c = m[2] * transpose[0] + m[3] * transpose[2];\n      const d = m[2] * transpose[1] + m[3] * transpose[3];\n      const first = (a + d) / 2;\n      const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n      const sx = first + second || 1;\n      const sy = first - second || 1;\n      return [Math.sqrt(sx), Math.sqrt(sy)];\n    }\n\n    static normalizeRect(rect) {\n      const r = rect.slice(0);\n\n      if (rect[0] > rect[2]) {\n        r[0] = rect[2];\n        r[2] = rect[0];\n      }\n\n      if (rect[1] > rect[3]) {\n        r[1] = rect[3];\n        r[3] = rect[1];\n      }\n\n      return r;\n    }\n\n    static intersect(rect1, rect2) {\n      function compare(a, b) {\n        return a - b;\n      }\n\n      const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n      const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n      const result = [];\n      rect1 = Util.normalizeRect(rect1);\n      rect2 = Util.normalizeRect(rect2);\n\n      if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n        result[0] = orderedX[1];\n        result[2] = orderedX[2];\n      } else {\n        return null;\n      }\n\n      if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n        result[1] = orderedY[1];\n        result[3] = orderedY[2];\n      } else {\n        return null;\n      }\n\n      return result;\n    }\n\n  }\n\n  exports.Util = Util;\n  const PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n\n  function stringToPDFString(str) {\n    const length = str.length,\n          strBuf = [];\n\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      for (let i = 2; i < length; i += 2) {\n        strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n      }\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      for (let i = 2; i < length; i += 2) {\n        strBuf.push(String.fromCharCode(str.charCodeAt(i + 1) << 8 | str.charCodeAt(i)));\n      }\n    } else {\n      for (let i = 0; i < length; ++i) {\n        const code = PDFStringTranslateTable[str.charCodeAt(i)];\n        strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n      }\n    }\n\n    return strBuf.join(\"\");\n  }\n\n  function escapeString(str) {\n    return str.replace(/([()\\\\\\n\\r])/g, match => {\n      if (match === \"\\n\") {\n        return \"\\\\n\";\n      } else if (match === \"\\r\") {\n        return \"\\\\r\";\n      }\n\n      return `\\\\${match}`;\n    });\n  }\n\n  function isAscii(str) {\n    return /^[\\x00-\\x7F]*$/.test(str);\n  }\n\n  function stringToUTF16BEString(str) {\n    const buf = [\"\\xFE\\xFF\"];\n\n    for (let i = 0, ii = str.length; i < ii; i++) {\n      const char = str.charCodeAt(i);\n      buf.push(String.fromCharCode(char >> 8 & 0xff));\n      buf.push(String.fromCharCode(char & 0xff));\n    }\n\n    return buf.join(\"\");\n  }\n\n  function stringToUTF8String(str) {\n    return decodeURIComponent(escape(str));\n  }\n\n  function utf8StringToString(str) {\n    return unescape(encodeURIComponent(str));\n  }\n\n  function isBool(v) {\n    return typeof v === \"boolean\";\n  }\n\n  function isNum(v) {\n    return typeof v === \"number\";\n  }\n\n  function isString(v) {\n    return typeof v === \"string\";\n  }\n\n  function isArrayBuffer(v) {\n    return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n  }\n\n  function isArrayEqual(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n      return false;\n    }\n\n    return arr1.every(function (element, index) {\n      return element === arr2[index];\n    });\n  }\n\n  function getModificationDate(date = new Date()) {\n    const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n    return buffer.join(\"\");\n  }\n\n  function createPromiseCapability() {\n    const capability = Object.create(null);\n    let isSettled = false;\n    Object.defineProperty(capability, \"settled\", {\n      get() {\n        return isSettled;\n      }\n\n    });\n    capability.promise = new Promise(function (resolve, reject) {\n      capability.resolve = function (data) {\n        isSettled = true;\n        resolve(data);\n      };\n\n      capability.reject = function (reason) {\n        isSettled = true;\n        reject(reason);\n      };\n    });\n    return capability;\n  }\n\n  const createObjectURL = function createObjectURLClosure() {\n    const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    return function createObjectURL(data, contentType, forceDataSchema = false) {\n      if (!forceDataSchema && URL.createObjectURL) {\n        const blob = new Blob([data], {\n          type: contentType\n        });\n        return URL.createObjectURL(blob);\n      }\n\n      let buffer = `data:${contentType};base64,`;\n\n      for (let i = 0, ii = data.length; i < ii; i += 3) {\n        const b1 = data[i] & 0xff;\n        const b2 = data[i + 1] & 0xff;\n        const b3 = data[i + 2] & 0xff;\n        const d1 = b1 >> 2,\n              d2 = (b1 & 3) << 4 | b2 >> 4;\n        const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n        const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n        buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n      }\n\n      return buffer;\n    };\n  }();\n\n  exports.createObjectURL = createObjectURL;\n  const XMLEntities = {\n    0x3c: \"&lt;\",\n    0x3e: \"&gt;\",\n    0x26: \"&amp;\",\n    0x22: \"&quot;\",\n    0x27: \"&apos;\"\n  };\n\n  function encodeToXmlString(str) {\n    const buffer = [];\n    let start = 0;\n\n    for (let i = 0, ii = str.length; i < ii; i++) {\n      const char = str.codePointAt(i);\n\n      if (0x20 <= char && char <= 0x7e) {\n        const entity = XMLEntities[char];\n\n        if (entity) {\n          if (start < i) {\n            buffer.push(str.substring(start, i));\n          }\n\n          buffer.push(entity);\n          start = i + 1;\n        }\n      } else {\n        if (start < i) {\n          buffer.push(str.substring(start, i));\n        }\n\n        buffer.push(`&#x${char.toString(16).toUpperCase()};`);\n\n        if (char > 0xd7ff && (char < 0xe000 || char > 0xfffd)) {\n          i++;\n        }\n\n        start = i + 1;\n      }\n    }\n\n    if (buffer.length === 0) {\n      return str;\n    }\n\n    if (start < str.length) {\n      buffer.push(str.substring(start, str.length));\n    }\n\n    return buffer.join(\"\");\n  }\n\n  /***/ }),\n  /* 3 */\n  /***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n\n\n  var _is_node = __w_pdfjs_require__(4);\n\n  ;\n\n  /***/ }),\n  /* 4 */\n  /***/ ((__unused_webpack_module, exports) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.isNodeJS = void 0;\n  const isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\n  exports.isNodeJS = isNodeJS;\n\n  /***/ }),\n  /* 5 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.getDocument = getDocument;\n  exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n  exports.version = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultCMapReaderFactory = exports.DefaultCanvasFactory = exports.build = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _display_utils = __w_pdfjs_require__(1);\n\n  var _font_loader = __w_pdfjs_require__(6);\n\n  var _node_utils = __w_pdfjs_require__(7);\n\n  var _annotation_storage = __w_pdfjs_require__(8);\n\n  var _api_compatibility = __w_pdfjs_require__(9);\n\n  var _canvas = __w_pdfjs_require__(10);\n\n  var _worker_options = __w_pdfjs_require__(12);\n\n  var _is_node = __w_pdfjs_require__(4);\n\n  var _message_handler = __w_pdfjs_require__(13);\n\n  var _metadata = __w_pdfjs_require__(14);\n\n  var _optional_content_config = __w_pdfjs_require__(16);\n\n  var _transport_stream = __w_pdfjs_require__(17);\n\n  var _webgl = __w_pdfjs_require__(18);\n\n  const DEFAULT_RANGE_CHUNK_SIZE = 65536;\n  const RENDERING_CANCELLED_TIMEOUT = 100;\n  const DefaultCanvasFactory = _is_node.isNodeJS ? _node_utils.NodeCanvasFactory : _display_utils.DOMCanvasFactory;\n  exports.DefaultCanvasFactory = DefaultCanvasFactory;\n  const DefaultCMapReaderFactory = _is_node.isNodeJS ? _node_utils.NodeCMapReaderFactory : _display_utils.DOMCMapReaderFactory;\n  exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;\n  let createPDFNetworkStream;\n\n  function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n    createPDFNetworkStream = pdfNetworkStreamFactory;\n  }\n\n  function getDocument(src) {\n    const task = new PDFDocumentLoadingTask();\n    let source;\n\n    if (typeof src === \"string\") {\n      source = {\n        url: src\n      };\n    } else if ((0, _util.isArrayBuffer)(src)) {\n      source = {\n        data: src\n      };\n    } else if (src instanceof PDFDataRangeTransport) {\n      source = {\n        range: src\n      };\n    } else {\n      if (typeof src !== \"object\") {\n        throw new Error(\"Invalid parameter in getDocument, \" + \"need either Uint8Array, string or a parameter object\");\n      }\n\n      if (!src.url && !src.data && !src.range) {\n        throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n      }\n\n      source = src;\n    }\n\n    const params = Object.create(null);\n    let rangeTransport = null,\n        worker = null;\n\n    for (const key in source) {\n      if (key === \"url\" && typeof window !== \"undefined\") {\n        params[key] = new URL(source[key], window.location).href;\n        continue;\n      } else if (key === \"range\") {\n        rangeTransport = source[key];\n        continue;\n      } else if (key === \"worker\") {\n        worker = source[key];\n        continue;\n      } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n        const pdfBytes = source[key];\n\n        if (typeof pdfBytes === \"string\") {\n          params[key] = (0, _util.stringToBytes)(pdfBytes);\n        } else if (typeof pdfBytes === \"object\" && pdfBytes !== null && !isNaN(pdfBytes.length)) {\n          params[key] = new Uint8Array(pdfBytes);\n        } else if ((0, _util.isArrayBuffer)(pdfBytes)) {\n          params[key] = new Uint8Array(pdfBytes);\n        } else {\n          throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string or array-like object is expected in the \" + \"data property.\");\n        }\n\n        continue;\n      }\n\n      params[key] = source[key];\n    }\n\n    params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n    params.CMapReaderFactory = params.CMapReaderFactory || DefaultCMapReaderFactory;\n    params.ignoreErrors = params.stopAtErrors !== true;\n    params.fontExtraProperties = params.fontExtraProperties === true;\n    params.pdfBug = params.pdfBug === true;\n\n    if (!Number.isInteger(params.maxImageSize)) {\n      params.maxImageSize = -1;\n    }\n\n    if (typeof params.isEvalSupported !== \"boolean\") {\n      params.isEvalSupported = true;\n    }\n\n    if (typeof params.disableFontFace !== \"boolean\") {\n      params.disableFontFace = _api_compatibility.apiCompatibilityParams.disableFontFace || false;\n    }\n\n    if (typeof params.ownerDocument === \"undefined\") {\n      params.ownerDocument = globalThis.document;\n    }\n\n    if (typeof params.disableRange !== \"boolean\") {\n      params.disableRange = false;\n    }\n\n    if (typeof params.disableStream !== \"boolean\") {\n      params.disableStream = false;\n    }\n\n    if (typeof params.disableAutoFetch !== \"boolean\") {\n      params.disableAutoFetch = false;\n    }\n\n    (0, _util.setVerbosityLevel)(params.verbosity);\n\n    if (!worker) {\n      const workerParams = {\n        verbosity: params.verbosity,\n        port: _worker_options.GlobalWorkerOptions.workerPort\n      };\n      worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n      task._worker = worker;\n    }\n\n    const docId = task.docId;\n    worker.promise.then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\n\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n\n        if (rangeTransport) {\n          networkStream = new _transport_stream.PDFDataTransportStream({\n            length: params.length,\n            initialData: params.initialData,\n            progressiveDone: params.progressiveDone,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream\n          }, rangeTransport);\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream\n          });\n        }\n\n        resolve(networkStream);\n      });\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(function ([workerId, networkStream]) {\n        if (task.destroyed) {\n          throw new Error(\"Loading aborted\");\n        }\n\n        const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n        messageHandler.postMessageTransfers = worker.postMessageTransfers;\n        const transport = new WorkerTransport(messageHandler, task, networkStream, params);\n        task._transport = transport;\n        messageHandler.send(\"Ready\", null);\n      });\n    }).catch(task._capability.reject);\n    return task;\n  }\n\n  function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n    if (worker.destroyed) {\n      return Promise.reject(new Error(\"Worker was destroyed\"));\n    }\n\n    if (pdfDataRangeTransport) {\n      source.length = pdfDataRangeTransport.length;\n      source.initialData = pdfDataRangeTransport.initialData;\n      source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    }\n\n    return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion: '2.7.570',\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties\n    }).then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n\n      return workerId;\n    });\n  }\n\n  const PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\n    let nextDocumentId = 0;\n\n    class PDFDocumentLoadingTask {\n      constructor() {\n        this._capability = (0, _util.createPromiseCapability)();\n        this._transport = null;\n        this._worker = null;\n        this.docId = \"d\" + nextDocumentId++;\n        this.destroyed = false;\n        this.onPassword = null;\n        this.onProgress = null;\n        this.onUnsupportedFeature = null;\n      }\n\n      get promise() {\n        return this._capability.promise;\n      }\n\n      destroy() {\n        this.destroyed = true;\n        const transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\n        return transportDestroyed.then(() => {\n          this._transport = null;\n\n          if (this._worker) {\n            this._worker.destroy();\n\n            this._worker = null;\n          }\n        });\n      }\n\n    }\n\n    return PDFDocumentLoadingTask;\n  }();\n\n  class PDFDataRangeTransport {\n    constructor(length, initialData, progressiveDone = false) {\n      this.length = length;\n      this.initialData = initialData;\n      this.progressiveDone = progressiveDone;\n      this._rangeListeners = [];\n      this._progressListeners = [];\n      this._progressiveReadListeners = [];\n      this._progressiveDoneListeners = [];\n      this._readyCapability = (0, _util.createPromiseCapability)();\n    }\n\n    addRangeListener(listener) {\n      this._rangeListeners.push(listener);\n    }\n\n    addProgressListener(listener) {\n      this._progressListeners.push(listener);\n    }\n\n    addProgressiveReadListener(listener) {\n      this._progressiveReadListeners.push(listener);\n    }\n\n    addProgressiveDoneListener(listener) {\n      this._progressiveDoneListeners.push(listener);\n    }\n\n    onDataRange(begin, chunk) {\n      for (const listener of this._rangeListeners) {\n        listener(begin, chunk);\n      }\n    }\n\n    onDataProgress(loaded, total) {\n      this._readyCapability.promise.then(() => {\n        for (const listener of this._progressListeners) {\n          listener(loaded, total);\n        }\n      });\n    }\n\n    onDataProgressiveRead(chunk) {\n      this._readyCapability.promise.then(() => {\n        for (const listener of this._progressiveReadListeners) {\n          listener(chunk);\n        }\n      });\n    }\n\n    onDataProgressiveDone() {\n      this._readyCapability.promise.then(() => {\n        for (const listener of this._progressiveDoneListeners) {\n          listener();\n        }\n      });\n    }\n\n    transportReady() {\n      this._readyCapability.resolve();\n    }\n\n    requestDataRange(begin, end) {\n      (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n    }\n\n    abort() {}\n\n  }\n\n  exports.PDFDataRangeTransport = PDFDataRangeTransport;\n\n  class PDFDocumentProxy {\n    constructor(pdfInfo, transport) {\n      this._pdfInfo = pdfInfo;\n      this._transport = transport;\n    }\n\n    get annotationStorage() {\n      return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n    }\n\n    get numPages() {\n      return this._pdfInfo.numPages;\n    }\n\n    get fingerprint() {\n      return this._pdfInfo.fingerprint;\n    }\n\n    getPage(pageNumber) {\n      return this._transport.getPage(pageNumber);\n    }\n\n    getPageIndex(ref) {\n      return this._transport.getPageIndex(ref);\n    }\n\n    getDestinations() {\n      return this._transport.getDestinations();\n    }\n\n    getDestination(id) {\n      return this._transport.getDestination(id);\n    }\n\n    getPageLabels() {\n      return this._transport.getPageLabels();\n    }\n\n    getPageLayout() {\n      return this._transport.getPageLayout();\n    }\n\n    getPageMode() {\n      return this._transport.getPageMode();\n    }\n\n    getViewerPreferences() {\n      return this._transport.getViewerPreferences();\n    }\n\n    getOpenAction() {\n      return this._transport.getOpenAction();\n    }\n\n    getAttachments() {\n      return this._transport.getAttachments();\n    }\n\n    getJavaScript() {\n      return this._transport.getJavaScript();\n    }\n\n    getJSActions() {\n      return this._transport.getDocJSActions();\n    }\n\n    getOutline() {\n      return this._transport.getOutline();\n    }\n\n    getOptionalContentConfig() {\n      return this._transport.getOptionalContentConfig();\n    }\n\n    getPermissions() {\n      return this._transport.getPermissions();\n    }\n\n    getMetadata() {\n      return this._transport.getMetadata();\n    }\n\n    getMarkInfo() {\n      return this._transport.getMarkInfo();\n    }\n\n    getData() {\n      return this._transport.getData();\n    }\n\n    getDownloadInfo() {\n      return this._transport.downloadInfoCapability.promise;\n    }\n\n    getStats() {\n      return this._transport.getStats();\n    }\n\n    cleanup() {\n      return this._transport.startCleanup();\n    }\n\n    destroy() {\n      return this.loadingTask.destroy();\n    }\n\n    get loadingParams() {\n      return this._transport.loadingParams;\n    }\n\n    get loadingTask() {\n      return this._transport.loadingTask;\n    }\n\n    saveDocument(annotationStorage) {\n      return this._transport.saveDocument(annotationStorage);\n    }\n\n    getFieldObjects() {\n      return this._transport.getFieldObjects();\n    }\n\n    hasJSActions() {\n      return this._transport.hasJSActions();\n    }\n\n    getCalculationOrderIds() {\n      return this._transport.getCalculationOrderIds();\n    }\n\n  }\n\n  exports.PDFDocumentProxy = PDFDocumentProxy;\n\n  class PDFPageProxy {\n    constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n      this._pageIndex = pageIndex;\n      this._pageInfo = pageInfo;\n      this._ownerDocument = ownerDocument;\n      this._transport = transport;\n      this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n      this._pdfBug = pdfBug;\n      this.commonObjs = transport.commonObjs;\n      this.objs = new PDFObjects();\n      this.cleanupAfterRender = false;\n      this.pendingCleanup = false;\n      this._intentStates = new Map();\n      this.destroyed = false;\n    }\n\n    get pageNumber() {\n      return this._pageIndex + 1;\n    }\n\n    get rotate() {\n      return this._pageInfo.rotate;\n    }\n\n    get ref() {\n      return this._pageInfo.ref;\n    }\n\n    get userUnit() {\n      return this._pageInfo.userUnit;\n    }\n\n    get view() {\n      return this._pageInfo.view;\n    }\n\n    getViewport({\n      scale,\n      rotation = this.rotate,\n      offsetX = 0,\n      offsetY = 0,\n      dontFlip = false\n    } = {}) {\n      return new _display_utils.PageViewport({\n        viewBox: this.view,\n        scale,\n        rotation,\n        offsetX,\n        offsetY,\n        dontFlip\n      });\n    }\n\n    getAnnotations({\n      intent = null\n    } = {}) {\n      if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n        this.annotationsPromise = this._transport.getAnnotations(this._pageIndex, intent);\n        this.annotationsIntent = intent;\n      }\n\n      return this.annotationsPromise;\n    }\n\n    getJSActions() {\n      return this._jsActionsPromise || (this._jsActionsPromise = this._transport.getPageJSActions(this._pageIndex));\n    }\n\n    render({\n      canvasContext,\n      viewport,\n      intent = \"display\",\n      enableWebGL = false,\n      renderInteractiveForms = false,\n      transform = null,\n      imageLayer = null,\n      canvasFactory = null,\n      background = null,\n      annotationStorage = null,\n      optionalContentConfigPromise = null\n    }) {\n      if (this._stats) {\n        this._stats.time(\"Overall\");\n      }\n\n      const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n      this.pendingCleanup = false;\n\n      if (!optionalContentConfigPromise) {\n        optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n      }\n\n      let intentState = this._intentStates.get(renderingIntent);\n\n      if (!intentState) {\n        intentState = Object.create(null);\n\n        this._intentStates.set(renderingIntent, intentState);\n      }\n\n      if (intentState.streamReaderCancelTimeout) {\n        clearTimeout(intentState.streamReaderCancelTimeout);\n        intentState.streamReaderCancelTimeout = null;\n      }\n\n      const canvasFactoryInstance = canvasFactory || new DefaultCanvasFactory({\n        ownerDocument: this._ownerDocument\n      });\n      const webGLContext = new _webgl.WebGLContext({\n        enable: enableWebGL\n      });\n\n      if (!intentState.displayReadyCapability) {\n        intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n        intentState.operatorList = {\n          fnArray: [],\n          argsArray: [],\n          lastChunk: false\n        };\n\n        if (this._stats) {\n          this._stats.time(\"Page Request\");\n        }\n\n        this._pumpOperatorList({\n          pageIndex: this._pageIndex,\n          intent: renderingIntent,\n          renderInteractiveForms: renderInteractiveForms === true,\n          annotationStorage: annotationStorage && annotationStorage.getAll() || null  // lwf\n        });\n      }\n\n      const complete = error => {\n        const i = intentState.renderTasks.indexOf(internalRenderTask);\n\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n\n        if (this.cleanupAfterRender || renderingIntent === \"print\") {\n          this.pendingCleanup = true;\n        }\n\n        this._tryCleanup();\n\n        if (error) {\n          internalRenderTask.capability.reject(error);\n\n          this._abortOperatorList({\n            intentState,\n            reason: error\n          });\n        } else {\n          internalRenderTask.capability.resolve();\n        }\n\n        if (this._stats) {\n          this._stats.timeEnd(\"Rendering\");\n\n          this._stats.timeEnd(\"Overall\");\n        }\n      };\n\n      const internalRenderTask = new InternalRenderTask({\n        callback: complete,\n        params: {\n          canvasContext,\n          viewport,\n          transform,\n          imageLayer,\n          background\n        },\n        objs: this.objs,\n        commonObjs: this.commonObjs,\n        operatorList: intentState.operatorList,\n        pageIndex: this._pageIndex,\n        canvasFactory: canvasFactoryInstance,\n        webGLContext,\n        useRequestAnimationFrame: renderingIntent !== \"print\",\n        pdfBug: this._pdfBug\n      });\n\n      if (!intentState.renderTasks) {\n        intentState.renderTasks = [];\n      }\n\n      intentState.renderTasks.push(internalRenderTask);\n      const renderTask = internalRenderTask.task;\n      Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig\n        });\n        internalRenderTask.operatorListChanged();\n      }).catch(complete);\n      return renderTask;\n    }\n\n    getOperatorList() {\n      function operatorListChanged() {\n        if (intentState.operatorList.lastChunk) {\n          intentState.opListReadCapability.resolve(intentState.operatorList);\n          const i = intentState.renderTasks.indexOf(opListTask);\n\n          if (i >= 0) {\n            intentState.renderTasks.splice(i, 1);\n          }\n        }\n      }\n\n      const renderingIntent = \"oplist\";\n\n      let intentState = this._intentStates.get(renderingIntent);\n\n      if (!intentState) {\n        intentState = Object.create(null);\n\n        this._intentStates.set(renderingIntent, intentState);\n      }\n\n      let opListTask;\n\n      if (!intentState.opListReadCapability) {\n        opListTask = Object.create(null);\n        opListTask.operatorListChanged = operatorListChanged;\n        intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n        intentState.renderTasks = [];\n        intentState.renderTasks.push(opListTask);\n        intentState.operatorList = {\n          fnArray: [],\n          argsArray: [],\n          lastChunk: false\n        };\n\n        if (this._stats) {\n          this._stats.time(\"Page Request\");\n        }\n\n        this._pumpOperatorList({\n          pageIndex: this._pageIndex,\n          intent: renderingIntent\n        });\n      }\n\n      return intentState.opListReadCapability.promise;\n    }\n\n    streamTextContent({\n      normalizeWhitespace = false,\n      disableCombineTextItems = false\n    } = {}) {\n      const TEXT_CONTENT_CHUNK_SIZE = 100;\n      return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true\n      }, {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n\n        size(textContent) {\n          return textContent.items.length;\n        }\n\n      });\n    }\n\n    getTextContent(params = {}) {\n      const readableStream = this.streamTextContent(params);\n      return new Promise(function (resolve, reject) {\n        function pump() {\n          reader.read().then(function ({\n            value,\n            done\n          }) {\n            if (done) {\n              resolve(textContent);\n              return;\n            }\n\n            Object.assign(textContent.styles, value.styles);\n            textContent.items.push(...value.items);\n            pump();\n          }, reject);\n        }\n\n        const reader = readableStream.getReader();\n        const textContent = {\n          items: [],\n          styles: Object.create(null)\n        };\n        pump();\n      });\n    }\n\n    _destroy() {\n      this.destroyed = true;\n      this._transport.pageCache[this._pageIndex] = null;\n      const waitOn = [];\n\n      for (const [intent, intentState] of this._intentStates) {\n        this._abortOperatorList({\n          intentState,\n          reason: new Error(\"Page was destroyed.\"),\n          force: true\n        });\n\n        if (intent === \"oplist\") {\n          continue;\n        }\n\n        for (const internalRenderTask of intentState.renderTasks) {\n          waitOn.push(internalRenderTask.completed);\n          internalRenderTask.cancel();\n        }\n      }\n\n      this.objs.clear();\n      this.annotationsPromise = null;\n      this._jsActionsPromise = null;\n      this.pendingCleanup = false;\n      return Promise.all(waitOn);\n    }\n\n    cleanup(resetStats = false) {\n      this.pendingCleanup = true;\n      return this._tryCleanup(resetStats);\n    }\n\n    _tryCleanup(resetStats = false) {\n      if (!this.pendingCleanup) {\n        return false;\n      }\n\n      for (const {\n        renderTasks,\n        operatorList\n      } of this._intentStates.values()) {\n        if (renderTasks.length !== 0 || !operatorList.lastChunk) {\n          return false;\n        }\n      }\n\n      this._intentStates.clear();\n\n      this.objs.clear();\n      this.annotationsPromise = null;\n      this._jsActionsPromise = null;\n\n      if (resetStats && this._stats) {\n        this._stats = new _display_utils.StatTimer();\n      }\n\n      this.pendingCleanup = false;\n      return true;\n    }\n\n    _startRenderPage(transparency, intent) {\n      const intentState = this._intentStates.get(intent);\n\n      if (!intentState) {\n        return;\n      }\n\n      if (this._stats) {\n        this._stats.timeEnd(\"Page Request\");\n      }\n\n      if (intentState.displayReadyCapability) {\n        intentState.displayReadyCapability.resolve(transparency);\n      }\n    }\n\n    _renderPageChunk(operatorListChunk, intentState) {\n      for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n        intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n        intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n      }\n\n      intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n      for (let i = 0; i < intentState.renderTasks.length; i++) {\n        intentState.renderTasks[i].operatorListChanged();\n      }\n\n      if (operatorListChunk.lastChunk) {\n        this._tryCleanup();\n      }\n    }\n\n    _pumpOperatorList(args) {\n      (0, _util.assert)(args.intent, 'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.');\n\n      const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", args);\n\n      const reader = readableStream.getReader();\n\n      const intentState = this._intentStates.get(args.intent);\n\n      intentState.streamReader = reader;\n\n      const pump = () => {\n        reader.read().then(({\n          value,\n          done\n        }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n\n          if (this._transport.destroyed) {\n            return;\n          }\n\n          this._renderPageChunk(value, intentState);\n\n          pump();\n        }, reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return;\n          }\n\n          if (intentState.operatorList) {\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        });\n      };\n\n      pump();\n    }\n\n    _abortOperatorList({\n      intentState,\n      reason,\n      force = false\n    }) {\n      (0, _util.assert)(reason instanceof Error || typeof reason === \"object\" && reason !== null, 'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.');\n\n      if (!intentState.streamReader) {\n        return;\n      }\n\n      if (!force) {\n        if (intentState.renderTasks.length !== 0) {\n          return;\n        }\n\n        if (reason instanceof _display_utils.RenderingCancelledException) {\n          intentState.streamReaderCancelTimeout = setTimeout(() => {\n            this._abortOperatorList({\n              intentState,\n              reason,\n              force: true\n            });\n\n            intentState.streamReaderCancelTimeout = null;\n          }, RENDERING_CANCELLED_TIMEOUT);\n          return;\n        }\n      }\n\n      intentState.streamReader.cancel(new _util.AbortException(reason && reason.message)); // lwf\n      intentState.streamReader = null;\n\n      if (this._transport.destroyed) {\n        return;\n      }\n\n      for (const [intent, curIntentState] of this._intentStates) {\n        if (curIntentState === intentState) {\n          this._intentStates.delete(intent);\n\n          break;\n        }\n      }\n\n      this.cleanup();\n    }\n\n    get stats() {\n      return this._stats;\n    }\n\n  }\n\n  exports.PDFPageProxy = PDFPageProxy;\n\n  class LoopbackPort {\n    constructor(defer = true) {\n      this._listeners = [];\n      this._defer = defer;\n      this._deferred = Promise.resolve(undefined);\n    }\n\n    postMessage(obj, transfers) {\n      function cloneValue(value) {\n        if (typeof value !== \"object\" || value === null) {\n          return value;\n        }\n\n        if (cloned.has(value)) {\n          return cloned.get(value);\n        }\n\n        let buffer, result;\n\n        if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {\n          if (transfers && transfers.includes(buffer)) { // lwf\n            result = new value.constructor(buffer, value.byteOffset, value.byteLength);\n          } else {\n            result = new value.constructor(value);\n          }\n\n          cloned.set(value, result);\n          return result;\n        }\n\n        result = Array.isArray(value) ? [] : {};\n        cloned.set(value, result);\n\n        for (const i in value) {\n          let desc,\n              p = value;\n\n          while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n            p = Object.getPrototypeOf(p);\n          }\n\n          if (typeof desc.value === \"undefined\") {\n            continue;\n          }\n\n          if (typeof desc.value === \"function\") {\n            if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n              throw new Error(`LoopbackPort.postMessage - cannot clone: ${value[i]}`);\n            }\n\n            continue;\n          }\n\n          result[i] = cloneValue(desc.value);\n        }\n\n        return result;\n      }\n\n      if (!this._defer) {\n        this._listeners.forEach(listener => {\n          listener.call(this, {\n            data: obj\n          });\n        });\n\n        return;\n      }\n\n      const cloned = new WeakMap();\n      const e = {\n        data: cloneValue(obj)\n      };\n\n      this._deferred.then(() => {\n        this._listeners.forEach(listener => {\n          listener.call(this, e);\n        });\n      });\n    }\n\n    addEventListener(name, listener) {\n      this._listeners.push(listener);\n    }\n\n    removeEventListener(name, listener) {\n      const i = this._listeners.indexOf(listener);\n\n      this._listeners.splice(i, 1);\n    }\n\n    terminate() {\n      this._listeners.length = 0;\n    }\n\n  }\n\n  exports.LoopbackPort = LoopbackPort;\n\n  const PDFWorker = function PDFWorkerClosure() {\n    const pdfWorkerPorts = new WeakMap();\n    let isWorkerDisabled = false;\n    let fallbackWorkerSrc;\n    let nextFakeWorkerId = 0;\n    let fakeWorkerCapability;\n\n    if (_is_node.isNodeJS && typeof require === \"function\") {\n      isWorkerDisabled = true;\n      fallbackWorkerSrc = \"./skylark-pdfjs-worker-all.js\"; //\"./pdf.worker.js\";\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath = document.currentScript && document.currentScript.src; // lwf\n\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n      }\n    }\n\n    function getWorkerSrc() {\n      if (_worker_options.GlobalWorkerOptions.workerSrc) {\n        return _worker_options.GlobalWorkerOptions.workerSrc;\n      }\n\n      if (typeof fallbackWorkerSrc !== \"undefined\") {\n        if (!_is_node.isNodeJS) {\n          (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n        }\n\n        return fallbackWorkerSrc;\n      }\n\n      throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n    }\n\n    function getMainThreadWorkerMessageHandler() {\n      let mainWorkerMessageHandler;\n\n      try {\n        ///mainWorkerMessageHandler = globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;  // lwf\n        mainWorkerMessageHandler = pdfjs.worker.WorkerMessageHandler; \n      } catch (ex) {}\n\n      return mainWorkerMessageHandler || null;\n    }\n\n    function setupFakeWorkerGlobal() {\n      if (fakeWorkerCapability) {\n        return fakeWorkerCapability.promise;\n      }\n\n      fakeWorkerCapability = (0, _util.createPromiseCapability)();\n\n      const loader = async function () {\n        const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n        if (mainWorkerMessageHandler) {\n          return mainWorkerMessageHandler;\n        }\n\n        if (_is_node.isNodeJS && typeof require === \"function\") {\n          const worker = eval(\"require\")(getWorkerSrc());\n          return worker.WorkerMessageHandler;\n        }\n\n        await (0, _display_utils.loadScript)(getWorkerSrc());\n        return window.pdfjsWorker.WorkerMessageHandler;\n      };\n\n      loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n      return fakeWorkerCapability.promise;\n    }\n\n    function createCDNWrapper(url) {\n      const wrapper = \"importScripts('\" + url + \"');\";\n      return URL.createObjectURL(new Blob([wrapper]));\n    }\n\n    class PDFWorker {\n      constructor({\n        name = null,\n        port = null,\n        verbosity = (0, _util.getVerbosityLevel)()\n      } = {}) {\n        if (port && pdfWorkerPorts.has(port)) {\n          throw new Error(\"Cannot use more than one PDFWorker per port\");\n        }\n\n        this.name = name;\n        this.destroyed = false;\n        this.postMessageTransfers = true;\n        this.verbosity = verbosity;\n        this._readyCapability = (0, _util.createPromiseCapability)();\n        this._port = null;\n        this._webWorker = null;\n        this._messageHandler = null;\n\n        if (port) {\n          pdfWorkerPorts.set(port, this);\n\n          this._initializeFromPort(port);\n\n          return;\n        }\n\n        this._initialize();\n      }\n\n      get promise() {\n        return this._readyCapability.promise;\n      }\n\n      get port() {\n        return this._port;\n      }\n\n      get messageHandler() {\n        return this._messageHandler;\n      }\n\n      _initializeFromPort(port) {\n        this._port = port;\n        this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n\n        this._messageHandler.on(\"ready\", function () {});\n\n        this._readyCapability.resolve();\n      }\n\n      _initialize() {\n        if (typeof Worker !== \"undefined\" && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {\n          let workerSrc = getWorkerSrc();\n\n          try {\n            if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n              workerSrc = createCDNWrapper(new URL(workerSrc, window.location).href);\n            }\n\n            const worker = new Worker(workerSrc);\n            const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n\n            const terminateEarly = () => {\n              worker.removeEventListener(\"error\", onWorkerError);\n              messageHandler.destroy();\n              worker.terminate();\n\n              if (this.destroyed) {\n                this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n              } else {\n                this._setupFakeWorker();\n              }\n            };\n\n            const onWorkerError = () => {\n              if (!this._webWorker) {\n                terminateEarly();\n              }\n            };\n\n            worker.addEventListener(\"error\", onWorkerError);\n            messageHandler.on(\"test\", data => {\n              worker.removeEventListener(\"error\", onWorkerError);\n\n              if (this.destroyed) {\n                terminateEarly();\n                return;\n              }\n\n              if (data) {\n                this._messageHandler = messageHandler;\n                this._port = worker;\n                this._webWorker = worker;\n\n                if (!data.supportTransfers) {\n                  this.postMessageTransfers = false;\n                }\n\n                this._readyCapability.resolve();\n\n                messageHandler.send(\"configure\", {\n                  verbosity: this.verbosity\n                });\n              } else {\n                this._setupFakeWorker();\n\n                messageHandler.destroy();\n                worker.terminate();\n              }\n            });\n            messageHandler.on(\"ready\", data => {\n              worker.removeEventListener(\"error\", onWorkerError);\n\n              if (this.destroyed) {\n                terminateEarly();\n                return;\n              }\n\n              try {\n                sendTest();\n              } catch (e) {\n                this._setupFakeWorker();\n              }\n            });\n\n            const sendTest = () => {\n              const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]);\n\n              try {\n                messageHandler.send(\"test\", testObj, [testObj.buffer]);\n              } catch (ex) {\n                (0, _util.warn)(\"Cannot use postMessage transfers.\");\n                testObj[0] = 0;\n                messageHandler.send(\"test\", testObj);\n              }\n            };\n\n            sendTest();\n            return;\n          } catch (e) {\n            (0, _util.info)(\"The worker has been disabled.\");\n          }\n        }\n\n        this._setupFakeWorker();\n      }\n\n      _setupFakeWorker() {\n        if (!isWorkerDisabled) {\n          (0, _util.warn)(\"Setting up fake worker.\");\n          isWorkerDisabled = true;\n        }\n\n        setupFakeWorkerGlobal().then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n\n            return;\n          }\n\n          const port = new LoopbackPort();\n          this._port = port;\n          const id = \"fake\" + nextFakeWorkerId++;\n          const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n          const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n\n          this._readyCapability.resolve();\n\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity\n          });\n        }).catch(reason => {\n          this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n        });\n      }\n\n      destroy() {\n        this.destroyed = true;\n\n        if (this._webWorker) {\n          this._webWorker.terminate();\n\n          this._webWorker = null;\n        }\n\n        pdfWorkerPorts.delete(this._port);\n        this._port = null;\n\n        if (this._messageHandler) {\n          this._messageHandler.destroy();\n\n          this._messageHandler = null;\n        }\n      }\n\n      static fromPort(params) {\n        if (!params || !params.port) {\n          throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n        }\n\n        if (pdfWorkerPorts.has(params.port)) {\n          return pdfWorkerPorts.get(params.port);\n        }\n\n        return new PDFWorker(params);\n      }\n\n      static getWorkerSrc() {\n        return getWorkerSrc();\n      }\n\n    }\n\n    return PDFWorker;\n  }();\n\n  exports.PDFWorker = PDFWorker;\n\n  class WorkerTransport {\n    constructor(messageHandler, loadingTask, networkStream, params) {\n      this.messageHandler = messageHandler;\n      this.loadingTask = loadingTask;\n      this.commonObjs = new PDFObjects();\n      this.fontLoader = new _font_loader.FontLoader({\n        docId: loadingTask.docId,\n        onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n        ownerDocument: params.ownerDocument\n      });\n      this._params = params;\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: params.cMapUrl,\n        isCompressed: params.cMapPacked\n      });\n      this.destroyed = false;\n      this.destroyCapability = null;\n      this._passwordCapability = null;\n      this._networkStream = networkStream;\n      this._fullReader = null;\n      this._lastProgress = null;\n      this.pageCache = [];\n      this.pagePromises = [];\n      this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n      this.setupMessageHandler();\n    }\n\n    get loadingTaskSettled() {\n      return this.loadingTask._capability.settled;\n    }\n\n    destroy() {\n      if (this.destroyCapability) {\n        return this.destroyCapability.promise;\n      }\n\n      this.destroyed = true;\n      this.destroyCapability = (0, _util.createPromiseCapability)();\n\n      if (this._passwordCapability) {\n        this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n      }\n\n      const waitOn = [];\n      this.pageCache.forEach(function (page) {\n        if (page) {\n          waitOn.push(page._destroy());\n        }\n      });\n      this.pageCache.length = 0;\n      this.pagePromises.length = 0;\n      const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n      waitOn.push(terminated);\n\n      if (this.loadingTaskSettled) {\n        const annotationStorageResetModified = this.loadingTask.promise.then(pdfDocument => {\n          if (pdfDocument.hasOwnProperty(\"annotationStorage\")) {\n            pdfDocument.annotationStorage.resetModified();\n          }\n        }).catch(() => {});\n        waitOn.push(annotationStorageResetModified);\n      }\n\n      Promise.all(waitOn).then(() => {\n        this.commonObjs.clear();\n        this.fontLoader.clear();\n        this._hasJSActionsPromise = null;\n\n        if (this._networkStream) {\n          this._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n        }\n\n        if (this.messageHandler) {\n          this.messageHandler.destroy();\n          this.messageHandler = null;\n        }\n\n        this.destroyCapability.resolve();\n      }, this.destroyCapability.reject);\n      return this.destroyCapability.promise;\n    }\n\n    setupMessageHandler() {\n      const {\n        messageHandler,\n        loadingTask\n      } = this;\n      messageHandler.on(\"GetReader\", (data, sink) => {\n        (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n        this._fullReader = this._networkStream.getFullReader();\n\n        this._fullReader.onProgress = evt => {\n          this._lastProgress = {\n            loaded: evt.loaded,\n            total: evt.total\n          };\n        };\n\n        sink.onPull = () => {\n          this._fullReader.read().then(function ({\n            value,\n            done\n          }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n\n            (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\");\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          }).catch(reason => {\n            sink.error(reason);\n          });\n        };\n\n        sink.onCancel = reason => {\n          this._fullReader.cancel(reason);\n\n          sink.ready.catch(readyReason => {\n            if (this.destroyed) {\n              return;\n            }\n\n            throw readyReason;\n          });\n        };\n      });\n      messageHandler.on(\"ReaderHeadersReady\", data => {\n        const headersCapability = (0, _util.createPromiseCapability)();\n        const fullReader = this._fullReader;\n        fullReader.headersReady.then(() => {\n          if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n            if (this._lastProgress && loadingTask.onProgress) {\n              loadingTask.onProgress(this._lastProgress);\n            }\n\n            fullReader.onProgress = evt => {\n              if (loadingTask.onProgress) {\n                loadingTask.onProgress({\n                  loaded: evt.loaded,\n                  total: evt.total\n                });\n              }\n            };\n          }\n\n          headersCapability.resolve({\n            isStreamingSupported: fullReader.isStreamingSupported,\n            isRangeSupported: fullReader.isRangeSupported,\n            contentLength: fullReader.contentLength\n          });\n        }, headersCapability.reject);\n        return headersCapability.promise;\n      });\n      messageHandler.on(\"GetRangeReader\", (data, sink) => {\n        (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n\n        const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n\n        if (!rangeReader) {\n          sink.close();\n          return;\n        }\n\n        sink.onPull = () => {\n          rangeReader.read().then(function ({\n            value,\n            done\n          }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n\n            (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\");\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          }).catch(reason => {\n            sink.error(reason);\n          });\n        };\n\n        sink.onCancel = reason => {\n          rangeReader.cancel(reason);\n          sink.ready.catch(readyReason => {\n            if (this.destroyed) {\n              return;\n            }\n\n            throw readyReason;\n          });\n        };\n      });\n      messageHandler.on(\"GetDoc\", ({\n        pdfInfo\n      }) => {\n        this._numPages = pdfInfo.numPages;\n\n        loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n      });\n      messageHandler.on(\"DocException\", function (ex) {\n        let reason;\n\n        switch (ex.name) {\n          case \"PasswordException\":\n            reason = new _util.PasswordException(ex.message, ex.code);\n            break;\n\n          case \"InvalidPDFException\":\n            reason = new _util.InvalidPDFException(ex.message);\n            break;\n\n          case \"MissingPDFException\":\n            reason = new _util.MissingPDFException(ex.message);\n            break;\n\n          case \"UnexpectedResponseException\":\n            reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n            break;\n\n          case \"UnknownErrorException\":\n            reason = new _util.UnknownErrorException(ex.message, ex.details);\n            break;\n        }\n\n        if (!(reason instanceof Error)) {\n          const msg = \"DocException - expected a valid Error.\";\n          (0, _util.warn)(msg);\n        }\n\n        loadingTask._capability.reject(reason);\n      });\n      messageHandler.on(\"PasswordRequest\", exception => {\n        this._passwordCapability = (0, _util.createPromiseCapability)();\n\n        if (loadingTask.onPassword) {\n          const updatePassword = password => {\n            this._passwordCapability.resolve({\n              password\n            });\n          };\n\n          try {\n            loadingTask.onPassword(updatePassword, exception.code);\n          } catch (ex) {\n            this._passwordCapability.reject(ex);\n          }\n        } else {\n          this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n        }\n\n        return this._passwordCapability.promise;\n      });\n      messageHandler.on(\"DataLoaded\", data => {\n        if (loadingTask.onProgress) {\n          loadingTask.onProgress({\n            loaded: data.length,\n            total: data.length\n          });\n        }\n\n        this.downloadInfoCapability.resolve(data);\n      });\n      messageHandler.on(\"StartRenderPage\", data => {\n        if (this.destroyed) {\n          return;\n        }\n\n        const page = this.pageCache[data.pageIndex];\n\n        page._startRenderPage(data.transparency, data.intent);\n      });\n      messageHandler.on(\"commonobj\", data => {\n        if (this.destroyed) {\n          return;\n        }\n\n        const [id, type, exportedData] = data;\n\n        if (this.commonObjs.has(id)) {\n          return;\n        }\n\n        switch (type) {\n          case \"Font\":\n            const params = this._params;\n\n            if (\"error\" in exportedData) {\n              const exportedError = exportedData.error;\n              (0, _util.warn)(`Error during font loading: ${exportedError}`);\n              this.commonObjs.resolve(id, exportedError);\n              break;\n            }\n\n            let fontRegistry = null;\n\n            if (params.pdfBug && globalThis.FontInspector && globalThis.FontInspector.enabled) { //lwf\n              fontRegistry = {\n                registerFont(font, url) {\n                  globalThis.FontInspector.fontAdded(font, url);\n                }\n\n              };\n            }\n\n            const font = new _font_loader.FontFaceObject(exportedData, {\n              isEvalSupported: params.isEvalSupported,\n              disableFontFace: params.disableFontFace,\n              ignoreErrors: params.ignoreErrors,\n              onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n              fontRegistry\n            });\n            this.fontLoader.bind(font).catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", {\n                id\n              });\n            }).finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                font.data = null;\n              }\n\n              this.commonObjs.resolve(id, font);\n            });\n            break;\n\n          case \"FontPath\":\n          case \"Image\":\n            this.commonObjs.resolve(id, exportedData);\n            break;\n\n          default:\n            throw new Error(`Got unknown common object type ${type}`);\n        }\n      });\n      messageHandler.on(\"obj\", data => {\n        if (this.destroyed) {\n          return undefined;\n        }\n\n        const [id, pageIndex, type, imageData] = data;\n        const pageProxy = this.pageCache[pageIndex];\n\n        if (pageProxy.objs.has(id)) {\n          return undefined;\n        }\n\n        switch (type) {\n          case \"Image\":\n            pageProxy.objs.resolve(id, imageData);\n            const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n\n            if (imageData && imageData.data && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) { //lwf\n              pageProxy.cleanupAfterRender = true;\n            }\n\n            break;\n\n          default:\n            throw new Error(`Got unknown object type ${type}`);\n        }\n\n        return undefined;\n      });\n      messageHandler.on(\"DocProgress\", data => {\n        if (this.destroyed) {\n          return;\n        }\n\n        if (loadingTask.onProgress) {\n          loadingTask.onProgress({\n            loaded: data.loaded,\n            total: data.total\n          });\n        }\n      });\n      messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n      messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n        if (this.destroyed) {\n          sink.error(new Error(\"Worker was destroyed\"));\n          return;\n        }\n\n        let fetched = false;\n\n        sink.onPull = () => {\n          if (fetched) {\n            sink.close();\n            return;\n          }\n\n          fetched = true;\n          this.CMapReaderFactory.fetch(data).then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          }).catch(function (reason) {\n            sink.error(reason);\n          });\n        };\n      });\n    }\n\n    _onUnsupportedFeature({\n      featureId\n    }) {\n      if (this.destroyed) {\n        return;\n      }\n\n      if (this.loadingTask.onUnsupportedFeature) {\n        this.loadingTask.onUnsupportedFeature(featureId);\n      }\n    }\n\n    getData() {\n      return this.messageHandler.sendWithPromise(\"GetData\", null);\n    }\n\n    getPage(pageNumber) {\n      if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n        return Promise.reject(new Error(\"Invalid page request\"));\n      }\n\n      const pageIndex = pageNumber - 1;\n\n      if (pageIndex in this.pagePromises) {\n        return this.pagePromises[pageIndex];\n      }\n\n      const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n        pageIndex\n      }).then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n\n        const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.ownerDocument, this._params.pdfBug);\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n      this.pagePromises[pageIndex] = promise;\n      return promise;\n    }\n\n    getPageIndex(ref) {\n      return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n        ref\n      }).catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n    }\n\n    getAnnotations(pageIndex, intent) {\n      return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n        pageIndex,\n        intent\n      });\n    }\n\n    saveDocument(annotationStorage) {\n      return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n        numPages: this._numPages,\n        annotationStorage: annotationStorage && annotationStorage.getAll() || null,  // lwf\n        filename: this._fullReader && this._fullReader.filename || null // lwf\n      }).finally(() => {\n        if (annotationStorage) {\n          annotationStorage.resetModified();\n        }\n      });\n    }\n\n    getFieldObjects() {\n      return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n    }\n\n    hasJSActions() {\n      return this._hasJSActionsPromise || (this._hasJSActionsPromise = this.messageHandler.sendWithPromise(\"HasJSActions\", null));\n    }\n\n    getCalculationOrderIds() {\n      return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n    }\n\n    getDestinations() {\n      return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n    }\n\n    getDestination(id) {\n      if (typeof id !== \"string\") {\n        return Promise.reject(new Error(\"Invalid destination request.\"));\n      }\n\n      return this.messageHandler.sendWithPromise(\"GetDestination\", {\n        id\n      });\n    }\n\n    getPageLabels() {\n      return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n    }\n\n    getPageLayout() {\n      return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n    }\n\n    getPageMode() {\n      return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n    }\n\n    getViewerPreferences() {\n      return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n    }\n\n    getOpenAction() {\n      return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n    }\n\n    getAttachments() {\n      return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n    }\n\n    getJavaScript() {\n      return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n    }\n\n    getDocJSActions() {\n      return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n    }\n\n    getPageJSActions(pageIndex) {\n      return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n        pageIndex\n      });\n    }\n\n    getOutline() {\n      return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n    }\n\n    getOptionalContentConfig() {\n      return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(results => {\n        return new _optional_content_config.OptionalContentConfig(results);\n      });\n    }\n\n    getPermissions() {\n      return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n    }\n\n    getMetadata() {\n      return this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader && this._fullReader.filename || null, // lwf\n          contentLength: this._fullReader && this._fullReader.contentLength || null  // lwf\n        };\n      });\n    }\n\n    getMarkInfo() {\n      return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n    }\n\n    getStats() {\n      return this.messageHandler.sendWithPromise(\"GetStats\", null);\n    }\n\n    startCleanup() {\n      return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n        for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n          const page = this.pageCache[i];\n\n          if (page) {\n            const cleanupSuccessful = page.cleanup();\n\n            if (!cleanupSuccessful) {\n              throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n            }\n          }\n        }\n\n        this.commonObjs.clear();\n        this.fontLoader.clear();\n        this._hasJSActionsPromise = null;\n      });\n    }\n\n    get loadingParams() {\n      const params = this._params;\n      return (0, _util.shadow)(this, \"loadingParams\", {\n        disableAutoFetch: params.disableAutoFetch,\n        disableFontFace: params.disableFontFace\n      });\n    }\n\n  }\n\n  class PDFObjects {\n    constructor() {\n      this._objs = Object.create(null);\n    }\n\n    _ensureObj(objId) {\n      if (this._objs[objId]) {\n        return this._objs[objId];\n      }\n\n      return this._objs[objId] = {\n        capability: (0, _util.createPromiseCapability)(),\n        data: null,\n        resolved: false\n      };\n    }\n\n    get(objId, callback = null) {\n      if (callback) {\n        this._ensureObj(objId).capability.promise.then(callback);\n\n        return null;\n      }\n\n      const obj = this._objs[objId];\n\n      if (!obj || !obj.resolved) {\n        throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n      }\n\n      return obj.data;\n    }\n\n    has(objId) {\n      const obj = this._objs[objId];\n      return obj && obj.resolved || false; // lwf\n    }\n\n    resolve(objId, data) {\n      const obj = this._ensureObj(objId);\n\n      obj.resolved = true;\n      obj.data = data;\n      obj.capability.resolve(data);\n    }\n\n    clear() {\n      this._objs = Object.create(null);\n    }\n\n  }\n\n  class RenderTask {\n    constructor(internalRenderTask) {\n      this._internalRenderTask = internalRenderTask;\n      this.onContinue = null;\n    }\n\n    get promise() {\n      return this._internalRenderTask.capability.promise;\n    }\n\n    cancel() {\n      this._internalRenderTask.cancel();\n    }\n\n  }\n\n  const InternalRenderTask = function InternalRenderTaskClosure() {\n    const canvasInRendering = new WeakSet();\n\n    class InternalRenderTask {\n      constructor({\n        callback,\n        params,\n        objs,\n        commonObjs,\n        operatorList,\n        pageIndex,\n        canvasFactory,\n        webGLContext,\n        useRequestAnimationFrame = false,\n        pdfBug = false\n      }) {\n        this.callback = callback;\n        this.params = params;\n        this.objs = objs;\n        this.commonObjs = commonObjs;\n        this.operatorListIdx = null;\n        this.operatorList = operatorList;\n        this._pageIndex = pageIndex;\n        this.canvasFactory = canvasFactory;\n        this.webGLContext = webGLContext;\n        this._pdfBug = pdfBug;\n        this.running = false;\n        this.graphicsReadyCallback = null;\n        this.graphicsReady = false;\n        this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n        this.cancelled = false;\n        this.capability = (0, _util.createPromiseCapability)();\n        this.task = new RenderTask(this);\n        this._continueBound = this._continue.bind(this);\n        this._scheduleNextBound = this._scheduleNext.bind(this);\n        this._nextBound = this._next.bind(this);\n        this._canvas = params.canvasContext.canvas;\n      }\n\n      get completed() {\n        return this.capability.promise.catch(function () {});\n      }\n\n      initializeGraphics({\n        transparency = false,\n        optionalContentConfig\n      }) {\n        if (this.cancelled) {\n          return;\n        }\n\n        if (this._canvas) {\n          if (canvasInRendering.has(this._canvas)) {\n            throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n          }\n\n          canvasInRendering.add(this._canvas);\n        }\n\n        if (this._pdfBug && globalThis.StepperManager && globalThis.StepperManager.enabled) { // lwf\n          this.stepper = globalThis.StepperManager.create(this._pageIndex);\n          this.stepper.init(this.operatorList);\n          this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n        }\n\n        const {\n          canvasContext,\n          viewport,\n          transform,\n          imageLayer,\n          background\n        } = this.params;\n        this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext, imageLayer, optionalContentConfig);\n        this.gfx.beginDrawing({\n          transform,\n          viewport,\n          transparency,\n          background\n        });\n        this.operatorListIdx = 0;\n        this.graphicsReady = true;\n\n        if (this.graphicsReadyCallback) {\n          this.graphicsReadyCallback();\n        }\n      }\n\n      cancel(error = null) {\n        this.running = false;\n        this.cancelled = true;\n\n        if (this.gfx) {\n          this.gfx.endDrawing();\n        }\n\n        if (this._canvas) {\n          canvasInRendering.delete(this._canvas);\n        }\n\n        this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, \"canvas\"));\n      }\n\n      operatorListChanged() {\n        if (!this.graphicsReady) {\n          if (!this.graphicsReadyCallback) {\n            this.graphicsReadyCallback = this._continueBound;\n          }\n\n          return;\n        }\n\n        if (this.stepper) {\n          this.stepper.updateOperatorList(this.operatorList);\n        }\n\n        if (this.running) {\n          return;\n        }\n\n        this._continue();\n      }\n\n      _continue() {\n        this.running = true;\n\n        if (this.cancelled) {\n          return;\n        }\n\n        if (this.task.onContinue) {\n          this.task.onContinue(this._scheduleNextBound);\n        } else {\n          this._scheduleNext();\n        }\n      }\n\n      _scheduleNext() {\n        if (this._useRequestAnimationFrame) {\n          window.requestAnimationFrame(() => {\n            this._nextBound().catch(this.cancel.bind(this));\n          });\n        } else {\n          Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n        }\n      }\n\n      async _next() {\n        if (this.cancelled) {\n          return;\n        }\n\n        this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n\n        if (this.operatorListIdx === this.operatorList.argsArray.length) {\n          this.running = false;\n\n          if (this.operatorList.lastChunk) {\n            this.gfx.endDrawing();\n\n            if (this._canvas) {\n              canvasInRendering.delete(this._canvas);\n            }\n\n            this.callback();\n          }\n        }\n      }\n\n    }\n\n    return InternalRenderTask;\n  }();\n\n  const version = '2.7.570';\n  exports.version = version;\n  const build = 'f2c7338b0';\n  exports.build = build;\n\n  /***/ }),\n  /* 6 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.FontLoader = exports.FontFaceObject = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  class BaseFontLoader {\n    constructor({\n      docId,\n      onUnsupportedFeature,\n      ownerDocument = globalThis.document\n    }) {\n      if (this.constructor === BaseFontLoader) {\n        (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n      }\n\n      this.docId = docId;\n      this._onUnsupportedFeature = onUnsupportedFeature;\n      this._document = ownerDocument;\n      this.nativeFontFaces = [];\n      this.styleElement = null;\n    }\n\n    addNativeFontFace(nativeFontFace) {\n      this.nativeFontFaces.push(nativeFontFace);\n\n      this._document.fonts.add(nativeFontFace);\n    }\n\n    insertRule(rule) {\n      let styleElement = this.styleElement;\n\n      if (!styleElement) {\n        styleElement = this.styleElement = this._document.createElement(\"style\");\n        styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n\n        this._document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n      }\n\n      const styleSheet = styleElement.sheet;\n      styleSheet.insertRule(rule, styleSheet.cssRules.length);\n    }\n\n    clear() {\n      this.nativeFontFaces.forEach(nativeFontFace => {\n        this._document.fonts.delete(nativeFontFace);\n      });\n      this.nativeFontFaces.length = 0;\n\n      if (this.styleElement) {\n        this.styleElement.remove();\n        this.styleElement = null;\n      }\n    }\n\n    async bind(font) {\n      if (font.attached || font.missingFile) {\n        return;\n      }\n\n      font.attached = true;\n\n      if (this.isFontLoadingAPISupported) {\n        const nativeFontFace = font.createNativeFontFace();\n\n        if (nativeFontFace) {\n          this.addNativeFontFace(nativeFontFace);\n\n          try {\n            await nativeFontFace.loaded;\n          } catch (ex) {\n            this._onUnsupportedFeature({\n              featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadNative\n            });\n\n            (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n            font.disableFontFace = true;\n            throw ex;\n          }\n        }\n\n        return;\n      }\n\n      const rule = font.createFontFaceRule();\n\n      if (rule) {\n        this.insertRule(rule);\n\n        if (this.isSyncFontLoadingSupported) {\n          return;\n        }\n\n        await new Promise(resolve => {\n          const request = this._queueLoadingCallback(resolve);\n\n          this._prepareFontLoadEvent([rule], [font], request);\n        });\n      }\n    }\n\n    _queueLoadingCallback(callback) {\n      (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n    }\n\n    get isFontLoadingAPISupported() {\n      return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", !!(this._document && this._document.fonts)); // lwf\n    }\n\n    get isSyncFontLoadingSupported() {\n      (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n    }\n\n    get _loadTestFont() {\n      (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n    }\n\n    _prepareFontLoadEvent(rules, fontsToLoad, request) {\n      (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n    }\n\n  }\n\n  let FontLoader;\n  exports.FontLoader = FontLoader;\n  {\n    exports.FontLoader = FontLoader = class GenericFontLoader extends BaseFontLoader {\n      constructor(params) {\n        super(params);\n        this.loadingContext = {\n          requests: [],\n          nextRequestId: 0\n        };\n        this.loadTestFontId = 0;\n      }\n\n      get isSyncFontLoadingSupported() {\n        let supported = false;\n\n        if (typeof navigator === \"undefined\") {\n          supported = true;\n        } else {\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n\n          if (m && m[1] >= 14) { // lwf\n            supported = true;\n          }\n        }\n\n        return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n      }\n\n      _queueLoadingCallback(callback) {\n        function completeRequest() {\n          (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n          request.done = true;\n\n          while (context.requests.length > 0 && context.requests[0].done) {\n            const otherRequest = context.requests.shift();\n            setTimeout(otherRequest.callback, 0);\n          }\n        }\n\n        const context = this.loadingContext;\n        const request = {\n          id: `pdfjs-font-loading-${context.nextRequestId++}`,\n          done: false,\n          complete: completeRequest,\n          callback\n        };\n        context.requests.push(request);\n        return request;\n      }\n\n      get _loadTestFont() {\n        const getLoadTestFont = function () {\n          return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n        };\n\n        return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n      }\n\n      _prepareFontLoadEvent(rules, fonts, request) {\n        function int32(data, offset) {\n          return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n        }\n\n        function spliceString(s, offset, remove, insert) {\n          const chunk1 = s.substring(0, offset);\n          const chunk2 = s.substring(offset + remove);\n          return chunk1 + insert + chunk2;\n        }\n\n        let i, ii;\n\n        const canvas = this._document.createElement(\"canvas\");\n\n        canvas.width = 1;\n        canvas.height = 1;\n        const ctx = canvas.getContext(\"2d\");\n        let called = 0;\n\n        function isFontReady(name, callback) {\n          called++;\n\n          if (called > 30) {\n            (0, _util.warn)(\"Load test font never loaded.\");\n            callback();\n            return;\n          }\n\n          ctx.font = \"30px \" + name;\n          ctx.fillText(\".\", 0, 20);\n          const imageData = ctx.getImageData(0, 0, 1, 1);\n\n          if (imageData.data[3] > 0) {\n            callback();\n            return;\n          }\n\n          setTimeout(isFontReady.bind(null, name, callback));\n        }\n\n        const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n        let data = this._loadTestFont;\n        const COMMENT_OFFSET = 976;\n        data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n        const CFF_CHECKSUM_OFFSET = 16;\n        const XXXX_VALUE = 0x58585858;\n        let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n\n        for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n          checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n        }\n\n        if (i < loadTestFontId.length) {\n          checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n        }\n\n        data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n        const url = `url(data:font/opentype;base64,${btoa(data)});`;\n        const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n        this.insertRule(rule);\n        const names = [];\n\n        for (i = 0, ii = fonts.length; i < ii; i++) {\n          names.push(fonts[i].loadedName);\n        }\n\n        names.push(loadTestFontId);\n\n        const div = this._document.createElement(\"div\");\n\n        div.style.visibility = \"hidden\";\n        div.style.width = div.style.height = \"10px\";\n        div.style.position = \"absolute\";\n        div.style.top = div.style.left = \"0px\";\n\n        for (i = 0, ii = names.length; i < ii; ++i) {\n          const span = this._document.createElement(\"span\");\n\n          span.textContent = \"Hi\";\n          span.style.fontFamily = names[i];\n          div.appendChild(span);\n        }\n\n        this._document.body.appendChild(div);\n\n        isFontReady(loadTestFontId, () => {\n          this._document.body.removeChild(div);\n\n          request.complete();\n        });\n      }\n\n    };\n  }\n\n  class FontFaceObject {\n    constructor(translatedData, {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null\n    }) {\n      this.compiledGlyphs = Object.create(null);\n\n      for (const i in translatedData) {\n        this[i] = translatedData[i];\n      }\n\n      this.isEvalSupported = isEvalSupported !== false;\n      this.disableFontFace = disableFontFace === true;\n      this.ignoreErrors = ignoreErrors === true;\n      this._onUnsupportedFeature = onUnsupportedFeature;\n      this.fontRegistry = fontRegistry;\n    }\n\n    createNativeFontFace() {\n      if (!this.data || this.disableFontFace) {\n        return null;\n      }\n\n      const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n      if (this.fontRegistry) {\n        this.fontRegistry.registerFont(this);\n      }\n\n      return nativeFontFace;\n    }\n\n    createFontFaceRule() {\n      if (!this.data || this.disableFontFace) {\n        return null;\n      }\n\n      const data = (0, _util.bytesToString)(new Uint8Array(this.data));\n      const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n      if (this.fontRegistry) {\n        this.fontRegistry.registerFont(this, url);\n      }\n\n      return rule;\n    }\n\n    getPathGenerator(objs, character) {\n      if (this.compiledGlyphs[character] !== undefined) {\n        return this.compiledGlyphs[character];\n      }\n\n      let cmds, current;\n\n      try {\n        cmds = objs.get(this.loadedName + \"_path_\" + character);\n      } catch (ex) {\n        if (!this.ignoreErrors) {\n          throw ex;\n        }\n\n        if (this._onUnsupportedFeature) {\n          this._onUnsupportedFeature({\n            featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath\n          });\n        }\n\n        (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n        return this.compiledGlyphs[character] = function (c, size) {};\n      }\n\n      if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n        let args,\n            js = \"\";\n\n        for (let i = 0, ii = cmds.length; i < ii; i++) {\n          current = cmds[i];\n\n          if (current.args !== undefined) {\n            args = current.args.join(\",\");\n          } else {\n            args = \"\";\n          }\n\n          js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n        }\n\n        return this.compiledGlyphs[character] = new Function(\"c\", \"size\", js);\n      }\n\n      return this.compiledGlyphs[character] = function (c, size) {\n        for (let i = 0, ii = cmds.length; i < ii; i++) {\n          current = cmds[i];\n\n          if (current.cmd === \"scale\") {\n            current.args = [size, -size];\n          }\n\n          c[current.cmd].apply(c, current.args);\n        }\n      };\n    }\n\n  }\n\n  exports.FontFaceObject = FontFaceObject;\n\n  /***/ }),\n  /* 7 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.NodeCMapReaderFactory = exports.NodeCanvasFactory = void 0;\n\n  var _display_utils = __w_pdfjs_require__(1);\n\n  var _is_node = __w_pdfjs_require__(4);\n\n  var _util = __w_pdfjs_require__(2);\n\n  let NodeCanvasFactory = class {\n    constructor() {\n      (0, _util.unreachable)(\"Not implemented: NodeCanvasFactory\");\n    }\n\n  };\n  exports.NodeCanvasFactory = NodeCanvasFactory;\n  let NodeCMapReaderFactory = class {\n    constructor() {\n      (0, _util.unreachable)(\"Not implemented: NodeCMapReaderFactory\");\n    }\n\n  };\n  exports.NodeCMapReaderFactory = NodeCMapReaderFactory;\n\n  if (_is_node.isNodeJS) {\n    exports.NodeCanvasFactory = NodeCanvasFactory = class extends _display_utils.BaseCanvasFactory {\n      create(width, height) {\n        if (width <= 0 || height <= 0) {\n          throw new Error(\"Invalid canvas size\");\n        }\n\n        const Canvas = require(\"canvas\");\n\n        const canvas = Canvas.createCanvas(width, height);\n        return {\n          canvas,\n          context: canvas.getContext(\"2d\")\n        };\n      }\n\n    };\n    exports.NodeCMapReaderFactory = NodeCMapReaderFactory = class extends _display_utils.BaseCMapReaderFactory {\n      _fetchData(url, compressionType) {\n        return new Promise((resolve, reject) => {\n          const fs = require(\"fs\");\n\n          fs.readFile(url, (error, data) => {\n            if (error || !data) {\n              reject(new Error(error));\n              return;\n            }\n\n            resolve({\n              cMapData: new Uint8Array(data),\n              compressionType\n            });\n          });\n        });\n      }\n\n    };\n  }\n\n  /***/ }),\n  /* 8 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.AnnotationStorage = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  class AnnotationStorage {\n    constructor() {\n      this._storage = new Map();\n      this._modified = false;\n      this.onSetModified = null;\n      this.onResetModified = null;\n    }\n\n    getOrCreateValue(key, defaultValue) {\n      if (this._storage.has(key)) {\n        return this._storage.get(key);\n      }\n\n      this._storage.set(key, defaultValue);\n\n      return defaultValue;\n    }\n\n    setValue(key, value) {\n      const obj = this._storage.get(key);\n\n      let modified = false;\n\n      if (obj !== undefined) {\n        for (const [entry, val] of Object.entries(value)) {\n          if (obj[entry] !== val) {\n            modified = true;\n            obj[entry] = val;\n          }\n        }\n      } else {\n        this._storage.set(key, value);\n\n        modified = true;\n      }\n\n      if (modified) {\n        this._setModified();\n      }\n    }\n\n    getAll() {\n      if (this._storage.size === 0) {\n        return null;\n      }\n\n      return (0, _util.objectFromEntries)(this._storage);\n    }\n\n    get size() {\n      return this._storage.size;\n    }\n\n    _setModified() {\n      if (!this._modified) {\n        this._modified = true;\n\n        if (typeof this.onSetModified === \"function\") {\n          this.onSetModified();\n        }\n      }\n    }\n\n    resetModified() {\n      if (this._modified) {\n        this._modified = false;\n\n        if (typeof this.onResetModified === \"function\") {\n          this.onResetModified();\n        }\n      }\n    }\n\n  }\n\n  exports.AnnotationStorage = AnnotationStorage;\n\n  /***/ }),\n  /* 9 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.apiCompatibilityParams = void 0;\n\n  var _is_node = __w_pdfjs_require__(4);\n\n  const compatibilityParams = Object.create(null);\n  {\n    (function checkFontFace() {\n      if (_is_node.isNodeJS) {\n        compatibilityParams.disableFontFace = true;\n      }\n    })();\n  }\n  const apiCompatibilityParams = Object.freeze(compatibilityParams);\n  exports.apiCompatibilityParams = apiCompatibilityParams;\n\n  /***/ }),\n  /* 10 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.CanvasGraphics = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _pattern_helper = __w_pdfjs_require__(11);\n\n  const MIN_FONT_SIZE = 16;\n  const MAX_FONT_SIZE = 100;\n  const MAX_GROUP_SIZE = 4096;\n  const COMPILE_TYPE3_GLYPHS = true;\n  const MAX_SIZE_TO_COMPILE = 1000;\n  const FULL_CHUNK_HEIGHT = 16;\n\n  function addContextCurrentTransform(ctx) {\n    if (!ctx.mozCurrentTransform) {\n      ctx._originalSave = ctx.save;\n      ctx._originalRestore = ctx.restore;\n      ctx._originalRotate = ctx.rotate;\n      ctx._originalScale = ctx.scale;\n      ctx._originalTranslate = ctx.translate;\n      ctx._originalTransform = ctx.transform;\n      ctx._originalSetTransform = ctx.setTransform;\n      ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n      ctx._transformStack = [];\n      Object.defineProperty(ctx, \"mozCurrentTransform\", {\n        get: function getCurrentTransform() {\n          return this._transformMatrix;\n        }\n      });\n      Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n        get: function getCurrentTransformInverse() {\n          const m = this._transformMatrix;\n          const a = m[0],\n                b = m[1],\n                c = m[2],\n                d = m[3],\n                e = m[4],\n                f = m[5];\n          const ad_bc = a * d - b * c;\n          const bc_ad = b * c - a * d;\n          return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n        }\n      });\n\n      ctx.save = function ctxSave() {\n        const old = this._transformMatrix;\n\n        this._transformStack.push(old);\n\n        this._transformMatrix = old.slice(0, 6);\n\n        this._originalSave();\n      };\n\n      ctx.restore = function ctxRestore() {\n        const prev = this._transformStack.pop();\n\n        if (prev) {\n          this._transformMatrix = prev;\n\n          this._originalRestore();\n        }\n      };\n\n      ctx.translate = function ctxTranslate(x, y) {\n        const m = this._transformMatrix;\n        m[4] = m[0] * x + m[2] * y + m[4];\n        m[5] = m[1] * x + m[3] * y + m[5];\n\n        this._originalTranslate(x, y);\n      };\n\n      ctx.scale = function ctxScale(x, y) {\n        const m = this._transformMatrix;\n        m[0] = m[0] * x;\n        m[1] = m[1] * x;\n        m[2] = m[2] * y;\n        m[3] = m[3] * y;\n\n        this._originalScale(x, y);\n      };\n\n      ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n        const m = this._transformMatrix;\n        this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n\n        ctx._originalTransform(a, b, c, d, e, f);\n      };\n\n      ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n        this._transformMatrix = [a, b, c, d, e, f];\n\n        ctx._originalSetTransform(a, b, c, d, e, f);\n      };\n\n      ctx.rotate = function ctxRotate(angle) {\n        const cosValue = Math.cos(angle);\n        const sinValue = Math.sin(angle);\n        const m = this._transformMatrix;\n        this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n\n        this._originalRotate(angle);\n      };\n    }\n  }\n\n  const CachedCanvases = function CachedCanvasesClosure() {\n    function CachedCanvases(canvasFactory) {\n      this.canvasFactory = canvasFactory;\n      this.cache = Object.create(null);\n    }\n\n    CachedCanvases.prototype = {\n      getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {\n        let canvasEntry;\n\n        if (this.cache[id] !== undefined) {\n          canvasEntry = this.cache[id];\n          this.canvasFactory.reset(canvasEntry, width, height);\n          canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n        } else {\n          canvasEntry = this.canvasFactory.create(width, height);\n          this.cache[id] = canvasEntry;\n        }\n\n        if (trackTransform) {\n          addContextCurrentTransform(canvasEntry.context);\n        }\n\n        return canvasEntry;\n      },\n\n      clear() {\n        for (const id in this.cache) {\n          const canvasEntry = this.cache[id];\n          this.canvasFactory.destroy(canvasEntry);\n          delete this.cache[id];\n        }\n      }\n\n    };\n    return CachedCanvases;\n  }();\n\n  function compileType3Glyph(imgData) {\n    const POINT_TO_PROCESS_LIMIT = 1000;\n    const width = imgData.width,\n          height = imgData.height,\n          width1 = width + 1;\n    let i, ii, j, j0;\n    const points = new Uint8Array(width1 * (height + 1));\n    const POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n    const lineSize = width + 7 & ~7,\n          data0 = imgData.data;\n    const data = new Uint8Array(lineSize * height);\n    let pos = 0;\n\n    for (i = 0, ii = data0.length; i < ii; i++) {\n      const elem = data0[i];\n      let mask = 128;\n\n      while (mask > 0) {\n        data[pos++] = elem & mask ? 0 : 255;\n        mask >>= 1;\n      }\n    }\n\n    let count = 0;\n    pos = 0;\n\n    if (data[pos] !== 0) {\n      points[0] = 1;\n      ++count;\n    }\n\n    for (j = 1; j < width; j++) {\n      if (data[pos] !== data[pos + 1]) {\n        points[j] = data[pos] ? 2 : 1;\n        ++count;\n      }\n\n      pos++;\n    }\n\n    if (data[pos] !== 0) {\n      points[j] = 2;\n      ++count;\n    }\n\n    for (i = 1; i < height; i++) {\n      pos = i * lineSize;\n      j0 = i * width1;\n\n      if (data[pos - lineSize] !== data[pos]) {\n        points[j0] = data[pos] ? 1 : 8;\n        ++count;\n      }\n\n      let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n\n      for (j = 1; j < width; j++) {\n        sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n\n        if (POINT_TYPES[sum]) {\n          points[j0 + j] = POINT_TYPES[sum];\n          ++count;\n        }\n\n        pos++;\n      }\n\n      if (data[pos - lineSize] !== data[pos]) {\n        points[j0 + j] = data[pos] ? 2 : 4;\n        ++count;\n      }\n\n      if (count > POINT_TO_PROCESS_LIMIT) {\n        return null;\n      }\n    }\n\n    pos = lineSize * (height - 1);\n    j0 = i * width1;\n\n    if (data[pos] !== 0) {\n      points[j0] = 8;\n      ++count;\n    }\n\n    for (j = 1; j < width; j++) {\n      if (data[pos] !== data[pos + 1]) {\n        points[j0 + j] = data[pos] ? 4 : 8;\n        ++count;\n      }\n\n      pos++;\n    }\n\n    if (data[pos] !== 0) {\n      points[j0 + j] = 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n\n    const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n    const outlines = [];\n\n    for (i = 0; count && i <= height; i++) {\n      let p = i * width1;\n      const end = p + width;\n\n      while (p < end && !points[p]) {\n        p++;\n      }\n\n      if (p === end) {\n        continue;\n      }\n\n      const coords = [p % width1, i];\n      const p0 = p;\n      let type = points[p];\n\n      do {\n        const step = steps[type];\n\n        do {\n          p += step;\n        } while (!points[p]);\n\n        const pp = points[p];\n\n        if (pp !== 5 && pp !== 10) {\n          type = pp;\n          points[p] = 0;\n        } else {\n          type = pp & 0x33 * type >> 4;\n          points[p] &= type >> 2 | type << 2;\n        }\n\n        coords.push(p % width1);\n        coords.push(p / width1 | 0);\n\n        if (!points[p]) {\n          --count;\n        }\n      } while (p0 !== p);\n\n      outlines.push(coords);\n      --i;\n    }\n\n    const drawOutline = function (c) {\n      c.save();\n      c.scale(1 / width, -1 / height);\n      c.translate(0, -height);\n      c.beginPath();\n\n      for (let k = 0, kk = outlines.length; k < kk; k++) {\n        const o = outlines[k];\n        c.moveTo(o[0], o[1]);\n\n        for (let l = 2, ll = o.length; l < ll; l += 2) {\n          c.lineTo(o[l], o[l + 1]);\n        }\n      }\n\n      c.fill();\n      c.beginPath();\n      c.restore();\n    };\n\n    return drawOutline;\n  }\n\n  const CanvasExtraState = function CanvasExtraStateClosure() {\n    function CanvasExtraState() {\n      this.alphaIsShape = false;\n      this.fontSize = 0;\n      this.fontSizeScale = 1;\n      this.textMatrix = _util.IDENTITY_MATRIX;\n      this.textMatrixScale = 1;\n      this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.x = 0;\n      this.y = 0;\n      this.lineX = 0;\n      this.lineY = 0;\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRenderingMode = _util.TextRenderingMode.FILL;\n      this.textRise = 0;\n      this.fillColor = \"#000000\";\n      this.strokeColor = \"#000000\";\n      this.patternFill = false;\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.activeSMask = null;\n      this.resumeSMaskCtx = null;\n      this.transferMaps = null;\n    }\n\n    CanvasExtraState.prototype = {\n      clone: function CanvasExtraState_clone() {\n        return Object.create(this);\n      },\n      setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n        this.x = x;\n        this.y = y;\n      }\n    };\n    return CanvasExtraState;\n  }();\n\n  const CanvasGraphics = function CanvasGraphicsClosure() {\n    const EXECUTION_TIME = 15;\n    const EXECUTION_STEPS = 10;\n\n    function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, webGLContext, imageLayer, optionalContentConfig) {\n      this.ctx = canvasCtx;\n      this.current = new CanvasExtraState();\n      this.stateStack = [];\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n      this.res = null;\n      this.xobjs = null;\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this.imageLayer = imageLayer;\n      this.groupStack = [];\n      this.processingType3 = null;\n      this.baseTransform = null;\n      this.baseTransformStack = [];\n      this.groupLevel = 0;\n      this.smaskStack = [];\n      this.smaskCounter = 0;\n      this.tempSMask = null;\n      this.contentVisible = true;\n      this.markedContentStack = [];\n      this.optionalContentConfig = optionalContentConfig;\n      this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n\n      if (canvasCtx) {\n        addContextCurrentTransform(canvasCtx);\n      }\n\n      this._cachedGetSinglePixelWidth = null;\n    }\n\n    function putBinaryImageData(ctx, imgData, transferMaps = null) {\n      if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n        ctx.putImageData(imgData, 0, 0);\n        return;\n      }\n\n      const height = imgData.height,\n            width = imgData.width;\n      const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n      const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n      const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n      const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n      let srcPos = 0,\n          destPos;\n      const src = imgData.data;\n      const dest = chunkImgData.data;\n      let i, j, thisChunkHeight, elemsInThisChunk;\n      let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n\n      if (transferMaps) {\n        switch (transferMaps.length) {\n          case 1:\n            transferMapRed = transferMaps[0];\n            transferMapGreen = transferMaps[0];\n            transferMapBlue = transferMaps[0];\n            transferMapGray = transferMaps[0];\n            break;\n\n          case 4:\n            transferMapRed = transferMaps[0];\n            transferMapGreen = transferMaps[1];\n            transferMapBlue = transferMaps[2];\n            transferMapGray = transferMaps[3];\n            break;\n        }\n      }\n\n      if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n        const srcLength = src.byteLength;\n        const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n        const dest32DataLength = dest32.length;\n        const fullSrcDiff = width + 7 >> 3;\n        let white = 0xffffffff;\n        let black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n        if (transferMapGray) {\n          if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n            [white, black] = [black, white];\n          }\n        }\n\n        for (i = 0; i < totalChunks; i++) {\n          thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n          destPos = 0;\n\n          for (j = 0; j < thisChunkHeight; j++) {\n            const srcDiff = srcLength - srcPos;\n            let k = 0;\n            const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n            const kEndUnrolled = kEnd & ~7;\n            let mask = 0;\n            let srcByte = 0;\n\n            for (; k < kEndUnrolled; k += 8) {\n              srcByte = src[srcPos++];\n              dest32[destPos++] = srcByte & 128 ? white : black;\n              dest32[destPos++] = srcByte & 64 ? white : black;\n              dest32[destPos++] = srcByte & 32 ? white : black;\n              dest32[destPos++] = srcByte & 16 ? white : black;\n              dest32[destPos++] = srcByte & 8 ? white : black;\n              dest32[destPos++] = srcByte & 4 ? white : black;\n              dest32[destPos++] = srcByte & 2 ? white : black;\n              dest32[destPos++] = srcByte & 1 ? white : black;\n            }\n\n            for (; k < kEnd; k++) {\n              if (mask === 0) {\n                srcByte = src[srcPos++];\n                mask = 128;\n              }\n\n              dest32[destPos++] = srcByte & mask ? white : black;\n              mask >>= 1;\n            }\n          }\n\n          while (destPos < dest32DataLength) {\n            dest32[destPos++] = 0;\n          }\n\n          ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n        }\n      } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n        const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n        j = 0;\n        elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n\n        for (i = 0; i < fullChunks; i++) {\n          dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n          srcPos += elemsInThisChunk;\n\n          if (hasTransferMaps) {\n            for (let k = 0; k < elemsInThisChunk; k += 4) {\n              if (transferMapRed) {\n                dest[k + 0] = transferMapRed[dest[k + 0]];\n              }\n\n              if (transferMapGreen) {\n                dest[k + 1] = transferMapGreen[dest[k + 1]];\n              }\n\n              if (transferMapBlue) {\n                dest[k + 2] = transferMapBlue[dest[k + 2]];\n              }\n            }\n          }\n\n          ctx.putImageData(chunkImgData, 0, j);\n          j += FULL_CHUNK_HEIGHT;\n        }\n\n        if (i < totalChunks) {\n          elemsInThisChunk = width * partialChunkHeight * 4;\n          dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n          if (hasTransferMaps) {\n            for (let k = 0; k < elemsInThisChunk; k += 4) {\n              if (transferMapRed) {\n                dest[k + 0] = transferMapRed[dest[k + 0]];\n              }\n\n              if (transferMapGreen) {\n                dest[k + 1] = transferMapGreen[dest[k + 1]];\n              }\n\n              if (transferMapBlue) {\n                dest[k + 2] = transferMapBlue[dest[k + 2]];\n              }\n            }\n          }\n\n          ctx.putImageData(chunkImgData, 0, j);\n        }\n      } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n        const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n        thisChunkHeight = FULL_CHUNK_HEIGHT;\n        elemsInThisChunk = width * thisChunkHeight;\n\n        for (i = 0; i < totalChunks; i++) {\n          if (i >= fullChunks) {\n            thisChunkHeight = partialChunkHeight;\n            elemsInThisChunk = width * thisChunkHeight;\n          }\n\n          destPos = 0;\n\n          for (j = elemsInThisChunk; j--;) {\n            dest[destPos++] = src[srcPos++];\n            dest[destPos++] = src[srcPos++];\n            dest[destPos++] = src[srcPos++];\n            dest[destPos++] = 255;\n          }\n\n          if (hasTransferMaps) {\n            for (let k = 0; k < destPos; k += 4) {\n              if (transferMapRed) {\n                dest[k + 0] = transferMapRed[dest[k + 0]];\n              }\n\n              if (transferMapGreen) {\n                dest[k + 1] = transferMapGreen[dest[k + 1]];\n              }\n\n              if (transferMapBlue) {\n                dest[k + 2] = transferMapBlue[dest[k + 2]];\n              }\n            }\n          }\n\n          ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n        }\n      } else {\n        throw new Error(`bad image kind: ${imgData.kind}`);\n      }\n    }\n\n    function putBinaryImageMask(ctx, imgData) {\n      const height = imgData.height,\n            width = imgData.width;\n      const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n      const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n      const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n      const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n      let srcPos = 0;\n      const src = imgData.data;\n      const dest = chunkImgData.data;\n\n      for (let i = 0; i < totalChunks; i++) {\n        const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        let destPos = 3;\n\n        for (let j = 0; j < thisChunkHeight; j++) {\n          let elem,\n              mask = 0;\n\n          for (let k = 0; k < width; k++) {\n            if (!mask) {\n              elem = src[srcPos++];\n              mask = 128;\n            }\n\n            dest[destPos] = elem & mask ? 0 : 255;\n            destPos += 4;\n            mask >>= 1;\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    }\n\n    function copyCtxState(sourceCtx, destCtx) {\n      const properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n\n      for (let i = 0, ii = properties.length; i < ii; i++) {\n        const property = properties[i];\n\n        if (sourceCtx[property] !== undefined) {\n          destCtx[property] = sourceCtx[property];\n        }\n      }\n\n      if (sourceCtx.setLineDash !== undefined) {\n        destCtx.setLineDash(sourceCtx.getLineDash());\n        destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n      }\n    }\n\n    function resetCtxToDefault(ctx) {\n      ctx.strokeStyle = \"#000000\";\n      ctx.fillStyle = \"#000000\";\n      ctx.fillRule = \"nonzero\";\n      ctx.globalAlpha = 1;\n      ctx.lineWidth = 1;\n      ctx.lineCap = \"butt\";\n      ctx.lineJoin = \"miter\";\n      ctx.miterLimit = 10;\n      ctx.globalCompositeOperation = \"source-over\";\n      ctx.font = \"10px sans-serif\";\n\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash([]);\n        ctx.lineDashOffset = 0;\n      }\n    }\n\n    function composeSMaskBackdrop(bytes, r0, g0, b0) {\n      const length = bytes.length;\n\n      for (let i = 3; i < length; i += 4) {\n        const alpha = bytes[i];\n\n        if (alpha === 0) {\n          bytes[i - 3] = r0;\n          bytes[i - 2] = g0;\n          bytes[i - 1] = b0;\n        } else if (alpha < 255) {\n          const alpha_ = 255 - alpha;\n          bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n          bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n          bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n        }\n      }\n    }\n\n    function composeSMaskAlpha(maskData, layerData, transferMap) {\n      const length = maskData.length;\n      const scale = 1 / 255;\n\n      for (let i = 3; i < length; i += 4) {\n        const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n        layerData[i] = layerData[i] * alpha * scale | 0;\n      }\n    }\n\n    function composeSMaskLuminosity(maskData, layerData, transferMap) {\n      const length = maskData.length;\n\n      for (let i = 3; i < length; i += 4) {\n        const y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n        layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n      }\n    }\n\n    function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\n      const hasBackdrop = !!backdrop;\n      const r0 = hasBackdrop ? backdrop[0] : 0;\n      const g0 = hasBackdrop ? backdrop[1] : 0;\n      const b0 = hasBackdrop ? backdrop[2] : 0;\n      let composeFn;\n\n      if (subtype === \"Luminosity\") {\n        composeFn = composeSMaskLuminosity;\n      } else {\n        composeFn = composeSMaskAlpha;\n      }\n\n      const PIXELS_TO_PROCESS = 1048576;\n      const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n\n      for (let row = 0; row < height; row += chunkSize) {\n        const chunkHeight = Math.min(chunkSize, height - row);\n        const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n        const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n        if (hasBackdrop) {\n          composeSMaskBackdrop(maskData.data, r0, g0, b0);\n        }\n\n        composeFn(maskData.data, layerData.data, transferMap);\n        maskCtx.putImageData(layerData, 0, row);\n      }\n    }\n\n    function composeSMask(ctx, smask, layerCtx, webGLContext) {\n      const mask = smask.canvas;\n      const maskCtx = smask.context;\n      ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\n      const backdrop = smask.backdrop || null;\n\n      if (!smask.transferMap && webGLContext.isEnabled) {\n        const composed = webGLContext.composeSMask({\n          layer: layerCtx.canvas,\n          mask,\n          properties: {\n            subtype: smask.subtype,\n            backdrop\n          }\n        });\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n        return;\n      }\n\n      genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);\n      ctx.drawImage(mask, 0, 0);\n    }\n\n    const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n    const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n    const NORMAL_CLIP = {};\n    const EO_CLIP = {};\n    CanvasGraphics.prototype = {\n      beginDrawing({\n        transform,\n        viewport,\n        transparency = false,\n        background = null\n      }) {\n        const width = this.ctx.canvas.width;\n        const height = this.ctx.canvas.height;\n        this.ctx.save();\n        this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.restore();\n\n        if (transparency) {\n          const transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n          this.compositeCtx = this.ctx;\n          this.transparentCanvas = transparentCanvas.canvas;\n          this.ctx = transparentCanvas.context;\n          this.ctx.save();\n          this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n        }\n\n        this.ctx.save();\n        resetCtxToDefault(this.ctx);\n\n        if (transform) {\n          this.ctx.transform.apply(this.ctx, transform);\n        }\n\n        this.ctx.transform.apply(this.ctx, viewport.transform);\n        this.baseTransform = this.ctx.mozCurrentTransform.slice();\n        this._combinedScaleFactor = Math.hypot(this.baseTransform[0], this.baseTransform[2]);\n\n        if (this.imageLayer) {\n          this.imageLayer.beginLayout();\n        }\n      },\n\n      executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n        const argsArray = operatorList.argsArray;\n        const fnArray = operatorList.fnArray;\n        let i = executionStartIdx || 0;\n        const argsArrayLen = argsArray.length;\n\n        if (argsArrayLen === i) {\n          return i;\n        }\n\n        const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n        const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n        let steps = 0;\n        const commonObjs = this.commonObjs;\n        const objs = this.objs;\n        let fnId;\n\n        while (true) {\n          if (stepper !== undefined && i === stepper.nextBreakPoint) {\n            stepper.breakIt(i, continueCallback);\n            return i;\n          }\n\n          fnId = fnArray[i];\n\n          if (fnId !== _util.OPS.dependency) {\n            this[fnId].apply(this, argsArray[i]);\n          } else {\n            for (const depObjId of argsArray[i]) {\n              const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n              if (!objsPool.has(depObjId)) {\n                objsPool.get(depObjId, continueCallback);\n                return i;\n              }\n            }\n          }\n\n          i++;\n\n          if (i === argsArrayLen) {\n            return i;\n          }\n\n          if (chunkOperations && ++steps > EXECUTION_STEPS) {\n            if (Date.now() > endTime) {\n              continueCallback();\n              return i;\n            }\n\n            steps = 0;\n          }\n        }\n      },\n      endDrawing: function CanvasGraphics_endDrawing() {\n        while (this.stateStack.length || this.current.activeSMask !== null) {\n          this.restore();\n        }\n\n        this.ctx.restore();\n\n        if (this.transparentCanvas) {\n          this.ctx = this.compositeCtx;\n          this.ctx.save();\n          this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n          this.ctx.drawImage(this.transparentCanvas, 0, 0);\n          this.ctx.restore();\n          this.transparentCanvas = null;\n        }\n\n        this.cachedCanvases.clear();\n        this.webGLContext.clear();\n\n        if (this.imageLayer) {\n          this.imageLayer.endLayout();\n        }\n      },\n      setLineWidth: function CanvasGraphics_setLineWidth(width) {\n        this.current.lineWidth = width;\n        this.ctx.lineWidth = width;\n      },\n      setLineCap: function CanvasGraphics_setLineCap(style) {\n        this.ctx.lineCap = LINE_CAP_STYLES[style];\n      },\n      setLineJoin: function CanvasGraphics_setLineJoin(style) {\n        this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n      },\n      setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n        this.ctx.miterLimit = limit;\n      },\n      setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n        const ctx = this.ctx;\n\n        if (ctx.setLineDash !== undefined) {\n          ctx.setLineDash(dashArray);\n          ctx.lineDashOffset = dashPhase;\n        }\n      },\n\n      setRenderingIntent(intent) {},\n\n      setFlatness(flatness) {},\n\n      setGState: function CanvasGraphics_setGState(states) {\n        for (let i = 0, ii = states.length; i < ii; i++) {\n          const state = states[i];\n          const key = state[0];\n          const value = state[1];\n\n          switch (key) {\n            case \"LW\":\n              this.setLineWidth(value);\n              break;\n\n            case \"LC\":\n              this.setLineCap(value);\n              break;\n\n            case \"LJ\":\n              this.setLineJoin(value);\n              break;\n\n            case \"ML\":\n              this.setMiterLimit(value);\n              break;\n\n            case \"D\":\n              this.setDash(value[0], value[1]);\n              break;\n\n            case \"RI\":\n              this.setRenderingIntent(value);\n              break;\n\n            case \"FL\":\n              this.setFlatness(value);\n              break;\n\n            case \"Font\":\n              this.setFont(value[0], value[1]);\n              break;\n\n            case \"CA\":\n              this.current.strokeAlpha = state[1];\n              break;\n\n            case \"ca\":\n              this.current.fillAlpha = state[1];\n              this.ctx.globalAlpha = state[1];\n              break;\n\n            case \"BM\":\n              this.ctx.globalCompositeOperation = value;\n              break;\n\n            case \"SMask\":\n              if (this.current.activeSMask) {\n                if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\n                  this.suspendSMaskGroup();\n                } else {\n                  this.endSMaskGroup();\n                }\n              }\n\n              this.current.activeSMask = value ? this.tempSMask : null;\n\n              if (this.current.activeSMask) {\n                this.beginSMaskGroup();\n              }\n\n              this.tempSMask = null;\n              break;\n\n            case \"TR\":\n              this.current.transferMaps = value;\n          }\n        }\n      },\n      beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n        const activeSMask = this.current.activeSMask;\n        const drawnWidth = activeSMask.canvas.width;\n        const drawnHeight = activeSMask.canvas.height;\n        const cacheId = \"smaskGroupAt\" + this.groupLevel;\n        const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n        const currentCtx = this.ctx;\n        const currentTransform = currentCtx.mozCurrentTransform;\n        this.ctx.save();\n        const groupCtx = scratchCanvas.context;\n        groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n        groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n        groupCtx.transform.apply(groupCtx, currentTransform);\n        activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n        copyCtxState(currentCtx, groupCtx);\n        this.ctx = groupCtx;\n        this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n        this.groupStack.push(currentCtx);\n        this.groupLevel++;\n      },\n      suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n        const groupCtx = this.ctx;\n        this.groupLevel--;\n        this.ctx = this.groupStack.pop();\n        composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n        this.ctx.restore();\n        this.ctx.save();\n        copyCtxState(groupCtx, this.ctx);\n        this.current.resumeSMaskCtx = groupCtx;\n\n        const deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n        this.ctx.transform.apply(this.ctx, deltaTransform);\n        groupCtx.save();\n        groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n        groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n        groupCtx.restore();\n      },\n      resumeSMaskGroup: function CanvasGraphics_resumeSMaskGroup() {\n        const groupCtx = this.current.resumeSMaskCtx;\n        const currentCtx = this.ctx;\n        this.ctx = groupCtx;\n        this.groupStack.push(currentCtx);\n        this.groupLevel++;\n      },\n      endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n        const groupCtx = this.ctx;\n        this.groupLevel--;\n        this.ctx = this.groupStack.pop();\n        composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n        this.ctx.restore();\n        copyCtxState(groupCtx, this.ctx);\n\n        const deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n        this.ctx.transform.apply(this.ctx, deltaTransform);\n      },\n      save: function CanvasGraphics_save() {\n        this.ctx.save();\n        const old = this.current;\n        this.stateStack.push(old);\n        this.current = old.clone();\n        this.current.resumeSMaskCtx = null;\n      },\n      restore: function CanvasGraphics_restore() {\n        if (this.current.resumeSMaskCtx) {\n          this.resumeSMaskGroup();\n        }\n\n        if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\n          this.endSMaskGroup();\n        }\n\n        if (this.stateStack.length !== 0) {\n          this.current = this.stateStack.pop();\n          this.ctx.restore();\n          this.pendingClip = null;\n          this._cachedGetSinglePixelWidth = null;\n        } else {\n          this.current.activeSMask = null;\n        }\n      },\n      transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n        this.ctx.transform(a, b, c, d, e, f);\n        this._cachedGetSinglePixelWidth = null;\n      },\n      constructPath: function CanvasGraphics_constructPath(ops, args) {\n        const ctx = this.ctx;\n        const current = this.current;\n        let x = current.x,\n            y = current.y;\n\n        for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n          switch (ops[i] | 0) {\n            case _util.OPS.rectangle:\n              x = args[j++];\n              y = args[j++];\n              const width = args[j++];\n              const height = args[j++];\n              const xw = x + width;\n              const yh = y + height;\n              ctx.moveTo(x, y);\n\n              if (width === 0 || height === 0) {\n                ctx.lineTo(xw, yh);\n              } else {\n                ctx.lineTo(xw, y);\n                ctx.lineTo(xw, yh);\n                ctx.lineTo(x, yh);\n              }\n\n              ctx.closePath();\n              break;\n\n            case _util.OPS.moveTo:\n              x = args[j++];\n              y = args[j++];\n              ctx.moveTo(x, y);\n              break;\n\n            case _util.OPS.lineTo:\n              x = args[j++];\n              y = args[j++];\n              ctx.lineTo(x, y);\n              break;\n\n            case _util.OPS.curveTo:\n              x = args[j + 4];\n              y = args[j + 5];\n              ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n              j += 6;\n              break;\n\n            case _util.OPS.curveTo2:\n              ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n              x = args[j + 2];\n              y = args[j + 3];\n              j += 4;\n              break;\n\n            case _util.OPS.curveTo3:\n              x = args[j + 2];\n              y = args[j + 3];\n              ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n              j += 4;\n              break;\n\n            case _util.OPS.closePath:\n              ctx.closePath();\n              break;\n          }\n        }\n\n        current.setCurrentPoint(x, y);\n      },\n      closePath: function CanvasGraphics_closePath() {\n        this.ctx.closePath();\n      },\n      stroke: function CanvasGraphics_stroke(consumePath) {\n        consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n        const ctx = this.ctx;\n        const strokeColor = this.current.strokeColor;\n        ctx.globalAlpha = this.current.strokeAlpha;\n\n        if (this.contentVisible) {\n          if (typeof strokeColor === \"object\" && strokeColor && strokeColor.getPattern) { // lwf\n            ctx.save();\n            const transform = ctx.mozCurrentTransform;\n\n            const scale = _util.Util.singularValueDecompose2dScale(transform)[0];\n\n            ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n            const lineWidth = this.getSinglePixelWidth();\n            const scaledLineWidth = this.current.lineWidth * scale;\n\n            if (lineWidth < 0 && -lineWidth >= scaledLineWidth) {\n              ctx.resetTransform();\n              ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            } else {\n              ctx.lineWidth = Math.max(lineWidth, scaledLineWidth);\n            }\n\n            ctx.stroke();\n            ctx.restore();\n          } else {\n            const lineWidth = this.getSinglePixelWidth();\n\n            if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n              ctx.save();\n              ctx.resetTransform();\n              ctx.lineWidth = Math.round(this._combinedScaleFactor);\n              ctx.stroke();\n              ctx.restore();\n            } else {\n              ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n              ctx.stroke();\n            }\n          }\n        }\n\n        if (consumePath) {\n          this.consumePath();\n        }\n\n        ctx.globalAlpha = this.current.fillAlpha;\n      },\n      closeStroke: function CanvasGraphics_closeStroke() {\n        this.closePath();\n        this.stroke();\n      },\n      fill: function CanvasGraphics_fill(consumePath) {\n        consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n        const ctx = this.ctx;\n        const fillColor = this.current.fillColor;\n        const isPatternFill = this.current.patternFill;\n        let needRestore = false;\n\n        if (isPatternFill) {\n          ctx.save();\n\n          if (this.baseTransform) {\n            ctx.setTransform.apply(ctx, this.baseTransform);\n          }\n\n          ctx.fillStyle = fillColor.getPattern(ctx, this);\n          needRestore = true;\n        }\n\n        if (this.contentVisible) {\n          if (this.pendingEOFill) {\n            ctx.fill(\"evenodd\");\n            this.pendingEOFill = false;\n          } else {\n            ctx.fill();\n          }\n        }\n\n        if (needRestore) {\n          ctx.restore();\n        }\n\n        if (consumePath) {\n          this.consumePath();\n        }\n      },\n      eoFill: function CanvasGraphics_eoFill() {\n        this.pendingEOFill = true;\n        this.fill();\n      },\n      fillStroke: function CanvasGraphics_fillStroke() {\n        this.fill(false);\n        this.stroke(false);\n        this.consumePath();\n      },\n      eoFillStroke: function CanvasGraphics_eoFillStroke() {\n        this.pendingEOFill = true;\n        this.fillStroke();\n      },\n      closeFillStroke: function CanvasGraphics_closeFillStroke() {\n        this.closePath();\n        this.fillStroke();\n      },\n      closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n        this.pendingEOFill = true;\n        this.closePath();\n        this.fillStroke();\n      },\n      endPath: function CanvasGraphics_endPath() {\n        this.consumePath();\n      },\n      clip: function CanvasGraphics_clip() {\n        this.pendingClip = NORMAL_CLIP;\n      },\n      eoClip: function CanvasGraphics_eoClip() {\n        this.pendingClip = EO_CLIP;\n      },\n      beginText: function CanvasGraphics_beginText() {\n        this.current.textMatrix = _util.IDENTITY_MATRIX;\n        this.current.textMatrixScale = 1;\n        this.current.x = this.current.lineX = 0;\n        this.current.y = this.current.lineY = 0;\n      },\n      endText: function CanvasGraphics_endText() {\n        const paths = this.pendingTextPaths;\n        const ctx = this.ctx;\n\n        if (paths === undefined) {\n          ctx.beginPath();\n          return;\n        }\n\n        ctx.save();\n        ctx.beginPath();\n\n        for (let i = 0; i < paths.length; i++) {\n          const path = paths[i];\n          ctx.setTransform.apply(ctx, path.transform);\n          ctx.translate(path.x, path.y);\n          path.addToPath(ctx, path.fontSize);\n        }\n\n        ctx.restore();\n        ctx.clip();\n        ctx.beginPath();\n        delete this.pendingTextPaths;\n      },\n      setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n        this.current.charSpacing = spacing;\n      },\n      setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n        this.current.wordSpacing = spacing;\n      },\n      setHScale: function CanvasGraphics_setHScale(scale) {\n        this.current.textHScale = scale / 100;\n      },\n      setLeading: function CanvasGraphics_setLeading(leading) {\n        this.current.leading = -leading;\n      },\n      setFont: function CanvasGraphics_setFont(fontRefName, size) {\n        const fontObj = this.commonObjs.get(fontRefName);\n        const current = this.current;\n\n        if (!fontObj) {\n          throw new Error(`Can't find font for ${fontRefName}`);\n        }\n\n        current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n\n        if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n          (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n        }\n\n        if (size < 0) {\n          size = -size;\n          current.fontDirection = -1;\n        } else {\n          current.fontDirection = 1;\n        }\n\n        this.current.font = fontObj;\n        this.current.fontSize = size;\n\n        if (fontObj.isType3Font) {\n          return;\n        }\n\n        const name = fontObj.loadedName || \"sans-serif\";\n        let bold = \"normal\";\n\n        if (fontObj.black) {\n          bold = \"900\";\n        } else if (fontObj.bold) {\n          bold = \"bold\";\n        }\n\n        const italic = fontObj.italic ? \"italic\" : \"normal\";\n        const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n        let browserFontSize = size;\n\n        if (size < MIN_FONT_SIZE) {\n          browserFontSize = MIN_FONT_SIZE;\n        } else if (size > MAX_FONT_SIZE) {\n          browserFontSize = MAX_FONT_SIZE;\n        }\n\n        this.current.fontSizeScale = size / browserFontSize;\n        this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n      },\n      setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n        this.current.textRenderingMode = mode;\n      },\n      setTextRise: function CanvasGraphics_setTextRise(rise) {\n        this.current.textRise = rise;\n      },\n      moveText: function CanvasGraphics_moveText(x, y) {\n        this.current.x = this.current.lineX += x;\n        this.current.y = this.current.lineY += y;\n      },\n      setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n        this.setLeading(-y);\n        this.moveText(x, y);\n      },\n      setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n        this.current.textMatrix = [a, b, c, d, e, f];\n        this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n        this.current.x = this.current.lineX = 0;\n        this.current.y = this.current.lineY = 0;\n      },\n      nextLine: function CanvasGraphics_nextLine() {\n        this.moveText(0, this.current.leading);\n      },\n\n      paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n        const ctx = this.ctx;\n        const current = this.current;\n        const font = current.font;\n        const textRenderingMode = current.textRenderingMode;\n        const fontSize = current.fontSize / current.fontSizeScale;\n        const fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n        const isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n        const patternFill = current.patternFill && !font.missingFile;\n        let addToPath;\n\n        if (font.disableFontFace || isAddToPathSet || patternFill) {\n          addToPath = font.getPathGenerator(this.commonObjs, character);\n        }\n\n        if (font.disableFontFace || patternFill) {\n          ctx.save();\n          ctx.translate(x, y);\n          ctx.beginPath();\n          addToPath(ctx, fontSize);\n\n          if (patternTransform) {\n            ctx.setTransform.apply(ctx, patternTransform);\n          }\n\n          if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            ctx.fill();\n          }\n\n          if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            if (resetLineWidthToOne) {\n              ctx.resetTransform();\n              ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            }\n\n            ctx.stroke();\n          }\n\n          ctx.restore();\n        } else {\n          if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            ctx.fillText(character, x, y);\n          }\n\n          if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            if (resetLineWidthToOne) {\n              ctx.save();\n              ctx.moveTo(x, y);\n              ctx.resetTransform();\n              ctx.lineWidth = Math.round(this._combinedScaleFactor);\n              ctx.strokeText(character, 0, 0);\n              ctx.restore();\n            } else {\n              ctx.strokeText(character, x, y);\n            }\n          }\n        }\n\n        if (isAddToPathSet) {\n          const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n          paths.push({\n            transform: ctx.mozCurrentTransform,\n            x,\n            y,\n            fontSize,\n            addToPath\n          });\n        }\n      },\n\n      get isFontSubpixelAAEnabled() {\n        const {\n          context: ctx\n        } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n        ctx.scale(1.5, 1);\n        ctx.fillText(\"I\", 0, 10);\n        const data = ctx.getImageData(0, 0, 10, 10).data;\n        let enabled = false;\n\n        for (let i = 3; i < data.length; i += 4) {\n          if (data[i] > 0 && data[i] < 255) {\n            enabled = true;\n            break;\n          }\n        }\n\n        return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n      },\n\n      showText: function CanvasGraphics_showText(glyphs) {\n        const current = this.current;\n        const font = current.font;\n\n        if (font.isType3Font) {\n          return this.showType3Text(glyphs);\n        }\n\n        const fontSize = current.fontSize;\n\n        if (fontSize === 0) {\n          return undefined;\n        }\n\n        const ctx = this.ctx;\n        const fontSizeScale = current.fontSizeScale;\n        const charSpacing = current.charSpacing;\n        const wordSpacing = current.wordSpacing;\n        const fontDirection = current.fontDirection;\n        const textHScale = current.textHScale * fontDirection;\n        const glyphsLength = glyphs.length;\n        const vertical = font.vertical;\n        const spacingDir = vertical ? 1 : -1;\n        const defaultVMetrics = font.defaultVMetrics;\n        const widthAdvanceScale = fontSize * current.fontMatrix[0];\n        const simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n        ctx.save();\n        let patternTransform;\n\n        if (current.patternFill) {\n          ctx.save();\n          const pattern = current.fillColor.getPattern(ctx, this);\n          patternTransform = ctx.mozCurrentTransform;\n          ctx.restore();\n          ctx.fillStyle = pattern;\n        }\n\n        ctx.transform.apply(ctx, current.textMatrix);\n        ctx.translate(current.x, current.y + current.textRise);\n\n        if (fontDirection > 0) {\n          ctx.scale(textHScale, -1);\n        } else {\n          ctx.scale(textHScale, 1);\n        }\n\n        let lineWidth = current.lineWidth;\n        let resetLineWidthToOne = false;\n        const scale = current.textMatrixScale;\n\n        if (scale === 0 || lineWidth === 0) {\n          const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n          if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            this._cachedGetSinglePixelWidth = null;\n            lineWidth = this.getSinglePixelWidth();\n            resetLineWidthToOne = lineWidth < 0;\n          }\n        } else {\n          lineWidth /= scale;\n        }\n\n        if (fontSizeScale !== 1.0) {\n          ctx.scale(fontSizeScale, fontSizeScale);\n          lineWidth /= fontSizeScale;\n        }\n\n        ctx.lineWidth = lineWidth;\n        let x = 0,\n            i;\n\n        for (i = 0; i < glyphsLength; ++i) {\n          const glyph = glyphs[i];\n\n          if ((0, _util.isNum)(glyph)) {\n            x += spacingDir * glyph * fontSize / 1000;\n            continue;\n          }\n\n          let restoreNeeded = false;\n          const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n          const character = glyph.fontChar;\n          const accent = glyph.accent;\n          let scaledX, scaledY;\n          let width = glyph.width;\n\n          if (vertical) {\n            const vmetric = glyph.vmetric || defaultVMetrics;\n            const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n            const vy = vmetric[2] * widthAdvanceScale;\n            width = vmetric ? -vmetric[0] : width;\n            scaledX = vx / fontSizeScale;\n            scaledY = (x + vy) / fontSizeScale;\n          } else {\n            scaledX = x / fontSizeScale;\n            scaledY = 0;\n          }\n\n          if (font.remeasure && width > 0) {\n            const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n\n            if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n              const characterScaleX = width / measuredWidth;\n              restoreNeeded = true;\n              ctx.save();\n              ctx.scale(characterScaleX, 1);\n              scaledX /= characterScaleX;\n            } else if (width !== measuredWidth) {\n              scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n            }\n          }\n\n          if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n            if (simpleFillText && !accent) {\n              ctx.fillText(character, scaledX, scaledY);\n            } else {\n              this.paintChar(character, scaledX, scaledY, patternTransform, resetLineWidthToOne);\n\n              if (accent) {\n                const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n                const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n                this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform, resetLineWidthToOne);\n              }\n            }\n          }\n\n          let charWidth;\n\n          if (vertical) {\n            charWidth = width * widthAdvanceScale - spacing * fontDirection;\n          } else {\n            charWidth = width * widthAdvanceScale + spacing * fontDirection;\n          }\n\n          x += charWidth;\n\n          if (restoreNeeded) {\n            ctx.restore();\n          }\n        }\n\n        if (vertical) {\n          current.y -= x;\n        } else {\n          current.x += x * textHScale;\n        }\n\n        ctx.restore();\n      },\n      showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n        const ctx = this.ctx;\n        const current = this.current;\n        const font = current.font;\n        const fontSize = current.fontSize;\n        const fontDirection = current.fontDirection;\n        const spacingDir = font.vertical ? 1 : -1;\n        const charSpacing = current.charSpacing;\n        const wordSpacing = current.wordSpacing;\n        const textHScale = current.textHScale * fontDirection;\n        const fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        const glyphsLength = glyphs.length;\n        const isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n        let i, glyph, width, spacingLength;\n\n        if (isTextInvisible || fontSize === 0) {\n          return;\n        }\n\n        this._cachedGetSinglePixelWidth = null;\n        ctx.save();\n        ctx.transform.apply(ctx, current.textMatrix);\n        ctx.translate(current.x, current.y);\n        ctx.scale(textHScale, fontDirection);\n\n        for (i = 0; i < glyphsLength; ++i) {\n          glyph = glyphs[i];\n\n          if ((0, _util.isNum)(glyph)) {\n            spacingLength = spacingDir * glyph * fontSize / 1000;\n            this.ctx.translate(spacingLength, 0);\n            current.x += spacingLength * textHScale;\n            continue;\n          }\n\n          const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n          const operatorList = font.charProcOperatorList[glyph.operatorListId];\n\n          if (!operatorList) {\n            (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n            continue;\n          }\n\n          if (this.contentVisible) {\n            this.processingType3 = glyph;\n            this.save();\n            ctx.scale(fontSize, fontSize);\n            ctx.transform.apply(ctx, fontMatrix);\n            this.executeOperatorList(operatorList);\n            this.restore();\n          }\n\n          const transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n\n          width = transformed[0] * fontSize + spacing;\n          ctx.translate(width, 0);\n          current.x += width * textHScale;\n        }\n\n        ctx.restore();\n        this.processingType3 = null;\n      },\n      setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {},\n      setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n        this.ctx.rect(llx, lly, urx - llx, ury - lly);\n        this.clip();\n        this.endPath();\n      },\n      getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n        let pattern;\n\n        if (IR[0] === \"TilingPattern\") {\n          const color = IR[1];\n          const baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n          const canvasGraphicsFactory = {\n            createCanvasGraphics: ctx => {\n              return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext);\n            }\n          };\n          pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n        } else {\n          pattern = (0, _pattern_helper.getShadingPatternFromIR)(IR);\n        }\n\n        return pattern;\n      },\n      setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n        this.current.strokeColor = this.getColorN_Pattern(arguments);\n      },\n      setFillColorN: function CanvasGraphics_setFillColorN() {\n        this.current.fillColor = this.getColorN_Pattern(arguments);\n        this.current.patternFill = true;\n      },\n      setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n        const color = _util.Util.makeHexColor(r, g, b);\n\n        this.ctx.strokeStyle = color;\n        this.current.strokeColor = color;\n      },\n      setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n        const color = _util.Util.makeHexColor(r, g, b);\n\n        this.ctx.fillStyle = color;\n        this.current.fillColor = color;\n        this.current.patternFill = false;\n      },\n      shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const ctx = this.ctx;\n        this.save();\n        const pattern = (0, _pattern_helper.getShadingPatternFromIR)(patternIR);\n        ctx.fillStyle = pattern.getPattern(ctx, this, true);\n        const inv = ctx.mozCurrentTransformInverse;\n\n        if (inv) {\n          const canvas = ctx.canvas;\n          const width = canvas.width;\n          const height = canvas.height;\n\n          const bl = _util.Util.applyTransform([0, 0], inv);\n\n          const br = _util.Util.applyTransform([0, height], inv);\n\n          const ul = _util.Util.applyTransform([width, 0], inv);\n\n          const ur = _util.Util.applyTransform([width, height], inv);\n\n          const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n          const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n          const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n          const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n          this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n        } else {\n          this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n        }\n\n        this.restore();\n      },\n      beginInlineImage: function CanvasGraphics_beginInlineImage() {\n        (0, _util.unreachable)(\"Should not call beginInlineImage\");\n      },\n      beginImageData: function CanvasGraphics_beginImageData() {\n        (0, _util.unreachable)(\"Should not call beginImageData\");\n      },\n      paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        this.save();\n        this.baseTransformStack.push(this.baseTransform);\n\n        if (Array.isArray(matrix) && matrix.length === 6) {\n          this.transform.apply(this, matrix);\n        }\n\n        this.baseTransform = this.ctx.mozCurrentTransform;\n\n        if (bbox) {\n          const width = bbox[2] - bbox[0];\n          const height = bbox[3] - bbox[1];\n          this.ctx.rect(bbox[0], bbox[1], width, height);\n          this.clip();\n          this.endPath();\n        }\n      },\n      paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        this.restore();\n        this.baseTransform = this.baseTransformStack.pop();\n      },\n      beginGroup: function CanvasGraphics_beginGroup(group) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        this.save();\n        const currentCtx = this.ctx;\n\n        if (!group.isolated) {\n          (0, _util.info)(\"TODO: Support non-isolated groups.\");\n        }\n\n        if (group.knockout) {\n          (0, _util.warn)(\"Knockout groups not supported.\");\n        }\n\n        const currentTransform = currentCtx.mozCurrentTransform;\n\n        if (group.matrix) {\n          currentCtx.transform.apply(currentCtx, group.matrix);\n        }\n\n        if (!group.bbox) {\n          throw new Error(\"Bounding box is required.\");\n        }\n\n        let bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n\n        const canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n        bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n        const offsetX = Math.floor(bounds[0]);\n        const offsetY = Math.floor(bounds[1]);\n        let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n        let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n        let scaleX = 1,\n            scaleY = 1;\n\n        if (drawnWidth > MAX_GROUP_SIZE) {\n          scaleX = drawnWidth / MAX_GROUP_SIZE;\n          drawnWidth = MAX_GROUP_SIZE;\n        }\n\n        if (drawnHeight > MAX_GROUP_SIZE) {\n          scaleY = drawnHeight / MAX_GROUP_SIZE;\n          drawnHeight = MAX_GROUP_SIZE;\n        }\n\n        let cacheId = \"groupAt\" + this.groupLevel;\n\n        if (group.smask) {\n          cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n        }\n\n        const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n        const groupCtx = scratchCanvas.context;\n        groupCtx.scale(1 / scaleX, 1 / scaleY);\n        groupCtx.translate(-offsetX, -offsetY);\n        groupCtx.transform.apply(groupCtx, currentTransform);\n\n        if (group.smask) {\n          this.smaskStack.push({\n            canvas: scratchCanvas.canvas,\n            context: groupCtx,\n            offsetX,\n            offsetY,\n            scaleX,\n            scaleY,\n            subtype: group.smask.subtype,\n            backdrop: group.smask.backdrop,\n            transferMap: group.smask.transferMap || null,\n            startTransformInverse: null\n          });\n        } else {\n          currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n          currentCtx.translate(offsetX, offsetY);\n          currentCtx.scale(scaleX, scaleY);\n        }\n\n        copyCtxState(currentCtx, groupCtx);\n        this.ctx = groupCtx;\n        this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n        this.groupStack.push(currentCtx);\n        this.groupLevel++;\n        this.current.activeSMask = null;\n      },\n      endGroup: function CanvasGraphics_endGroup(group) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        this.groupLevel--;\n        const groupCtx = this.ctx;\n        this.ctx = this.groupStack.pop();\n\n        if (this.ctx.imageSmoothingEnabled !== undefined) {\n          this.ctx.imageSmoothingEnabled = false;\n        } else {\n          this.ctx.mozImageSmoothingEnabled = false;\n        }\n\n        if (group.smask) {\n          this.tempSMask = this.smaskStack.pop();\n        } else {\n          this.ctx.drawImage(groupCtx.canvas, 0, 0);\n        }\n\n        this.restore();\n      },\n      beginAnnotations: function CanvasGraphics_beginAnnotations() {\n        this.save();\n\n        if (this.baseTransform) {\n          this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n        }\n      },\n      endAnnotations: function CanvasGraphics_endAnnotations() {\n        this.restore();\n      },\n      beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {\n        this.save();\n        resetCtxToDefault(this.ctx);\n        this.current = new CanvasExtraState();\n\n        if (Array.isArray(rect) && rect.length === 4) {\n          const width = rect[2] - rect[0];\n          const height = rect[3] - rect[1];\n          this.ctx.rect(rect[0], rect[1], width, height);\n          this.clip();\n          this.endPath();\n        }\n\n        this.transform.apply(this, transform);\n        this.transform.apply(this, matrix);\n      },\n      endAnnotation: function CanvasGraphics_endAnnotation() {\n        this.restore();\n      },\n      paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const ctx = this.ctx;\n        const width = img.width,\n              height = img.height;\n        const fillColor = this.current.fillColor;\n        const isPatternFill = this.current.patternFill;\n        const glyph = this.processingType3;\n\n        if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n          if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n            glyph.compiled = compileType3Glyph({\n              data: img.data,\n              width,\n              height\n            });\n          } else {\n            glyph.compiled = null;\n          }\n        }\n\n        if (glyph && glyph.compiled) { // lwf\n          glyph.compiled(ctx);\n          return;\n        }\n\n        const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n        const maskCtx = maskCanvas.context;\n        maskCtx.save();\n        putBinaryImageMask(maskCtx, img);\n        maskCtx.globalCompositeOperation = \"source-in\";\n        maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n        maskCtx.restore();\n        this.paintInlineImageXObject(maskCanvas.canvas);\n      },\n\n      paintImageMaskXObjectRepeat(imgData, scaleX, skewX = 0, skewY = 0, scaleY, positions) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const width = imgData.width;\n        const height = imgData.height;\n        const fillColor = this.current.fillColor;\n        const isPatternFill = this.current.patternFill;\n        const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n        const maskCtx = maskCanvas.context;\n        maskCtx.save();\n        putBinaryImageMask(maskCtx, imgData);\n        maskCtx.globalCompositeOperation = \"source-in\";\n        maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n        maskCtx.restore();\n        const ctx = this.ctx;\n\n        for (let i = 0, ii = positions.length; i < ii; i += 2) {\n          ctx.save();\n          ctx.transform(scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]);\n          ctx.scale(1, -1);\n          ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n          ctx.restore();\n        }\n      },\n\n      paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const ctx = this.ctx;\n        const fillColor = this.current.fillColor;\n        const isPatternFill = this.current.patternFill;\n\n        for (let i = 0, ii = images.length; i < ii; i++) {\n          const image = images[i];\n          const width = image.width,\n                height = image.height;\n          const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n          const maskCtx = maskCanvas.context;\n          maskCtx.save();\n          putBinaryImageMask(maskCtx, image);\n          maskCtx.globalCompositeOperation = \"source-in\";\n          maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n          maskCtx.fillRect(0, 0, width, height);\n          maskCtx.restore();\n          ctx.save();\n          ctx.transform.apply(ctx, image.transform);\n          ctx.scale(1, -1);\n          ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n          ctx.restore();\n        }\n      },\n      paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n        if (!imgData) {\n          (0, _util.warn)(\"Dependent image isn't ready yet\");\n          return;\n        }\n\n        this.paintInlineImageXObject(imgData);\n      },\n      paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n        if (!imgData) {\n          (0, _util.warn)(\"Dependent image isn't ready yet\");\n          return;\n        }\n\n        const width = imgData.width;\n        const height = imgData.height;\n        const map = [];\n\n        for (let i = 0, ii = positions.length; i < ii; i += 2) {\n          map.push({\n            transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n            x: 0,\n            y: 0,\n            w: width,\n            h: height\n          });\n        }\n\n        this.paintInlineImageXObjectGroup(imgData, map);\n      },\n      paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const width = imgData.width;\n        const height = imgData.height;\n        const ctx = this.ctx;\n        this.save();\n        ctx.scale(1 / width, -1 / height);\n        const currentTransform = ctx.mozCurrentTransformInverse;\n        const a = currentTransform[0],\n              b = currentTransform[1];\n        let widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n        const c = currentTransform[2],\n              d = currentTransform[3];\n        let heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n        let imgToPaint, tmpCanvas, tmpCtx;\n\n        if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n          imgToPaint = imgData;\n        } else {\n          tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n          tmpCtx = tmpCanvas.context;\n          putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n          imgToPaint = tmpCanvas.canvas;\n        }\n\n        let paintWidth = width,\n            paintHeight = height;\n        let tmpCanvasId = \"prescale1\";\n\n        while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n          let newWidth = paintWidth,\n              newHeight = paintHeight;\n\n          if (widthScale > 2 && paintWidth > 1) {\n            newWidth = Math.ceil(paintWidth / 2);\n            widthScale /= paintWidth / newWidth;\n          }\n\n          if (heightScale > 2 && paintHeight > 1) {\n            newHeight = Math.ceil(paintHeight / 2);\n            heightScale /= paintHeight / newHeight;\n          }\n\n          tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n          tmpCtx = tmpCanvas.context;\n          tmpCtx.clearRect(0, 0, newWidth, newHeight);\n          tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n          imgToPaint = tmpCanvas.canvas;\n          paintWidth = newWidth;\n          paintHeight = newHeight;\n          tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n        }\n\n        ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);\n\n        if (this.imageLayer) {\n          const position = this.getCanvasPosition(0, -height);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: width / currentTransform[0],\n            height: height / currentTransform[3]\n          });\n        }\n\n        this.restore();\n      },\n      paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const ctx = this.ctx;\n        const w = imgData.width;\n        const h = imgData.height;\n        const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n        const tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n        for (let i = 0, ii = map.length; i < ii; i++) {\n          const entry = map[i];\n          ctx.save();\n          ctx.transform.apply(ctx, entry.transform);\n          ctx.scale(1, -1);\n          ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n\n          if (this.imageLayer) {\n            const position = this.getCanvasPosition(entry.x, entry.y);\n            this.imageLayer.appendImage({\n              imgData,\n              left: position[0],\n              top: position[1],\n              width: w,\n              height: h\n            });\n          }\n\n          ctx.restore();\n        }\n      },\n      paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        this.ctx.fillRect(0, 0, 1, 1);\n      },\n      markPoint: function CanvasGraphics_markPoint(tag) {},\n      markPointProps: function CanvasGraphics_markPointProps(tag, properties) {},\n      beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n        this.markedContentStack.push({\n          visible: true\n        });\n      },\n      beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {\n        if (tag === \"OC\") {\n          this.markedContentStack.push({\n            visible: this.optionalContentConfig.isVisible(properties)\n          });\n        } else {\n          this.markedContentStack.push({\n            visible: true\n          });\n        }\n\n        this.contentVisible = this.isContentVisible();\n      },\n      endMarkedContent: function CanvasGraphics_endMarkedContent() {\n        this.markedContentStack.pop();\n        this.contentVisible = this.isContentVisible();\n      },\n      beginCompat: function CanvasGraphics_beginCompat() {},\n      endCompat: function CanvasGraphics_endCompat() {},\n      consumePath: function CanvasGraphics_consumePath() {\n        const ctx = this.ctx;\n\n        if (this.pendingClip) {\n          if (this.pendingClip === EO_CLIP) {\n            ctx.clip(\"evenodd\");\n          } else {\n            ctx.clip();\n          }\n\n          this.pendingClip = null;\n        }\n\n        ctx.beginPath();\n      },\n\n      getSinglePixelWidth() {\n        if (this._cachedGetSinglePixelWidth === null) {\n          const m = this.ctx.mozCurrentTransform;\n          const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n          const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n          const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n          const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n\n          if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n            this._cachedGetSinglePixelWidth = -(this._combinedScaleFactor * pixelHeight);\n          } else if (absDet > Number.EPSILON) {\n            this._cachedGetSinglePixelWidth = pixelHeight * 1.0000001;\n          } else {\n            this._cachedGetSinglePixelWidth = 1;\n          }\n        }\n\n        return this._cachedGetSinglePixelWidth;\n      },\n\n      getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n        const transform = this.ctx.mozCurrentTransform;\n        return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n      },\n      isContentVisible: function CanvasGraphics_isContentVisible() {\n        for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n          if (!this.markedContentStack[i].visible) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    };\n\n    for (const op in _util.OPS) {\n      CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n    }\n\n    return CanvasGraphics;\n  }();\n\n  exports.CanvasGraphics = CanvasGraphics;\n\n  /***/ }),\n  /* 11 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.getShadingPatternFromIR = getShadingPatternFromIR;\n  exports.TilingPattern = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  const ShadingIRs = {};\n\n  function applyBoundingBox(ctx, bbox) {\n    if (!bbox || typeof Path2D === \"undefined\") {\n      return;\n    }\n\n    const width = bbox[2] - bbox[0];\n    const height = bbox[3] - bbox[1];\n    const region = new Path2D();\n    region.rect(bbox[0], bbox[1], width, height);\n    ctx.clip(region);\n  }\n\n  ShadingIRs.RadialAxial = {\n    fromIR: function RadialAxial_fromIR(raw) {\n      const type = raw[1];\n      const bbox = raw[2];\n      const colorStops = raw[3];\n      const p0 = raw[4];\n      const p1 = raw[5];\n      const r0 = raw[6];\n      const r1 = raw[7];\n      return {\n        getPattern: function RadialAxial_getPattern(ctx) {\n          applyBoundingBox(ctx, bbox);\n          let grad;\n\n          if (type === \"axial\") {\n            grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n          } else if (type === \"radial\") {\n            grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n          }\n\n          for (let i = 0, ii = colorStops.length; i < ii; ++i) {\n            const c = colorStops[i];\n            grad.addColorStop(c[0], c[1]);\n          }\n\n          return grad;\n        }\n      };\n    }\n  };\n\n  const createMeshCanvas = function createMeshCanvasClosure() {\n    function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n      const coords = context.coords,\n            colors = context.colors;\n      const bytes = data.data,\n            rowSize = data.width * 4;\n      let tmp;\n\n      if (coords[p1 + 1] > coords[p2 + 1]) {\n        tmp = p1;\n        p1 = p2;\n        p2 = tmp;\n        tmp = c1;\n        c1 = c2;\n        c2 = tmp;\n      }\n\n      if (coords[p2 + 1] > coords[p3 + 1]) {\n        tmp = p2;\n        p2 = p3;\n        p3 = tmp;\n        tmp = c2;\n        c2 = c3;\n        c3 = tmp;\n      }\n\n      if (coords[p1 + 1] > coords[p2 + 1]) {\n        tmp = p1;\n        p1 = p2;\n        p2 = tmp;\n        tmp = c1;\n        c1 = c2;\n        c2 = tmp;\n      }\n\n      const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n      const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n      const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n      const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n      const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n      const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n\n      if (y1 >= y3) {\n        return;\n      }\n\n      const c1r = colors[c1],\n            c1g = colors[c1 + 1],\n            c1b = colors[c1 + 2];\n      const c2r = colors[c2],\n            c2g = colors[c2 + 1],\n            c2b = colors[c2 + 2];\n      const c3r = colors[c3],\n            c3g = colors[c3 + 1],\n            c3b = colors[c3 + 2];\n      const minY = Math.round(y1),\n            maxY = Math.round(y3);\n      let xa, car, cag, cab;\n      let xb, cbr, cbg, cbb;\n\n      for (let y = minY; y <= maxY; y++) {\n        if (y < y2) {\n          let k;\n\n          if (y < y1) {\n            k = 0;\n          } else if (y1 === y2) {\n            k = 1;\n          } else {\n            k = (y1 - y) / (y1 - y2);\n          }\n\n          xa = x1 - (x1 - x2) * k;\n          car = c1r - (c1r - c2r) * k;\n          cag = c1g - (c1g - c2g) * k;\n          cab = c1b - (c1b - c2b) * k;\n        } else {\n          let k;\n\n          if (y > y3) {\n            k = 1;\n          } else if (y2 === y3) {\n            k = 0;\n          } else {\n            k = (y2 - y) / (y2 - y3);\n          }\n\n          xa = x2 - (x2 - x3) * k;\n          car = c2r - (c2r - c3r) * k;\n          cag = c2g - (c2g - c3g) * k;\n          cab = c2b - (c2b - c3b) * k;\n        }\n\n        let k;\n\n        if (y < y1) {\n          k = 0;\n        } else if (y > y3) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y3);\n        }\n\n        xb = x1 - (x1 - x3) * k;\n        cbr = c1r - (c1r - c3r) * k;\n        cbg = c1g - (c1g - c3g) * k;\n        cbb = c1b - (c1b - c3b) * k;\n        const x1_ = Math.round(Math.min(xa, xb));\n        const x2_ = Math.round(Math.max(xa, xb));\n        let j = rowSize * y + x1_ * 4;\n\n        for (let x = x1_; x <= x2_; x++) {\n          k = (xa - x) / (xa - xb);\n\n          if (k < 0) {\n            k = 0;\n          } else if (k > 1) {\n            k = 1;\n          }\n\n          bytes[j++] = car - (car - cbr) * k | 0;\n          bytes[j++] = cag - (cag - cbg) * k | 0;\n          bytes[j++] = cab - (cab - cbb) * k | 0;\n          bytes[j++] = 255;\n        }\n      }\n    }\n\n    function drawFigure(data, figure, context) {\n      const ps = figure.coords;\n      const cs = figure.colors;\n      let i, ii;\n\n      switch (figure.type) {\n        case \"lattice\":\n          const verticesPerRow = figure.verticesPerRow;\n          const rows = Math.floor(ps.length / verticesPerRow) - 1;\n          const cols = verticesPerRow - 1;\n\n          for (i = 0; i < rows; i++) {\n            let q = i * verticesPerRow;\n\n            for (let j = 0; j < cols; j++, q++) {\n              drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n              drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n            }\n          }\n\n          break;\n\n        case \"triangles\":\n          for (i = 0, ii = ps.length; i < ii; i += 3) {\n            drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n          }\n\n          break;\n\n        default:\n          throw new Error(\"illegal figure\");\n      }\n    }\n\n    function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases, webGLContext) {\n      const EXPECTED_SCALE = 1.1;\n      const MAX_PATTERN_SIZE = 3000;\n      const BORDER_SIZE = 2;\n      const offsetX = Math.floor(bounds[0]);\n      const offsetY = Math.floor(bounds[1]);\n      const boundsWidth = Math.ceil(bounds[2]) - offsetX;\n      const boundsHeight = Math.ceil(bounds[3]) - offsetY;\n      const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n      const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n      const scaleX = boundsWidth / width;\n      const scaleY = boundsHeight / height;\n      const context = {\n        coords,\n        colors,\n        offsetX: -offsetX,\n        offsetY: -offsetY,\n        scaleX: 1 / scaleX,\n        scaleY: 1 / scaleY\n      };\n      const paddedWidth = width + BORDER_SIZE * 2;\n      const paddedHeight = height + BORDER_SIZE * 2;\n      let canvas, tmpCanvas, i, ii;\n\n      if (webGLContext.isEnabled) {\n        canvas = webGLContext.drawFigures({\n          width,\n          height,\n          backgroundColor,\n          figures,\n          context\n        });\n        tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n        tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n        canvas = tmpCanvas.canvas;\n      } else {\n        tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n        const tmpCtx = tmpCanvas.context;\n        const data = tmpCtx.createImageData(width, height);\n\n        if (backgroundColor) {\n          const bytes = data.data;\n\n          for (i = 0, ii = bytes.length; i < ii; i += 4) {\n            bytes[i] = backgroundColor[0];\n            bytes[i + 1] = backgroundColor[1];\n            bytes[i + 2] = backgroundColor[2];\n            bytes[i + 3] = 255;\n          }\n        }\n\n        for (i = 0; i < figures.length; i++) {\n          drawFigure(data, figures[i], context);\n        }\n\n        tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n        canvas = tmpCanvas.canvas;\n      }\n\n      return {\n        canvas,\n        offsetX: offsetX - BORDER_SIZE * scaleX,\n        offsetY: offsetY - BORDER_SIZE * scaleY,\n        scaleX,\n        scaleY\n      };\n    }\n\n    return createMeshCanvas;\n  }();\n\n  ShadingIRs.Mesh = {\n    fromIR: function Mesh_fromIR(raw) {\n      const coords = raw[2];\n      const colors = raw[3];\n      const figures = raw[4];\n      const bounds = raw[5];\n      const matrix = raw[6];\n      const bbox = raw[7];\n      const background = raw[8];\n      return {\n        getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n          applyBoundingBox(ctx, bbox);\n          let scale;\n\n          if (shadingFill) {\n            scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n          } else {\n            scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n\n            if (matrix) {\n              const matrixScale = _util.Util.singularValueDecompose2dScale(matrix);\n\n              scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n            }\n          }\n\n          const temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases, owner.webGLContext);\n\n          if (!shadingFill) {\n            ctx.setTransform.apply(ctx, owner.baseTransform);\n\n            if (matrix) {\n              ctx.transform.apply(ctx, matrix);\n            }\n          }\n\n          ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n          ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n          return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n        }\n      };\n    }\n  };\n  ShadingIRs.Dummy = {\n    fromIR: function Dummy_fromIR() {\n      return {\n        getPattern: function Dummy_fromIR_getPattern() {\n          return \"hotpink\";\n        }\n      };\n    }\n  };\n\n  function getShadingPatternFromIR(raw) {\n    const shadingIR = ShadingIRs[raw[0]];\n\n    if (!shadingIR) {\n      throw new Error(`Unknown IR type: ${raw[0]}`);\n    }\n\n    return shadingIR.fromIR(raw);\n  }\n\n  const TilingPattern = function TilingPatternClosure() {\n    const PaintType = {\n      COLORED: 1,\n      UNCOLORED: 2\n    };\n    const MAX_PATTERN_SIZE = 3000;\n\n    function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n      this.operatorList = IR[2];\n      this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n      this.bbox = IR[4];\n      this.xstep = IR[5];\n      this.ystep = IR[6];\n      this.paintType = IR[7];\n      this.tilingType = IR[8];\n      this.color = color;\n      this.canvasGraphicsFactory = canvasGraphicsFactory;\n      this.baseTransform = baseTransform;\n      this.ctx = ctx;\n    }\n\n    TilingPattern.prototype = {\n      createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n        const operatorList = this.operatorList;\n        const bbox = this.bbox;\n        const xstep = this.xstep;\n        const ystep = this.ystep;\n        const paintType = this.paintType;\n        const tilingType = this.tilingType;\n        const color = this.color;\n        const canvasGraphicsFactory = this.canvasGraphicsFactory;\n        (0, _util.info)(\"TilingType: \" + tilingType);\n        const x0 = bbox[0],\n              y0 = bbox[1],\n              x1 = bbox[2],\n              y1 = bbox[3];\n\n        const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n        const curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n\n        const combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n        const dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n        const dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n        const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n        const tmpCtx = tmpCanvas.context;\n        const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n        graphics.groupLevel = owner.groupLevel;\n        this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n        graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n        graphics.transform(1, 0, 0, 1, -x0, -y0);\n        this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n        graphics.executeOperatorList(operatorList);\n        this.ctx.transform(1, 0, 0, 1, x0, y0);\n        this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n        return tmpCanvas.canvas;\n      },\n      getSizeAndScale: function TilingPattern_getSizeAndScale(step, realOutputSize, scale) {\n        step = Math.abs(step);\n        const maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n        let size = Math.ceil(step * scale);\n\n        if (size >= maxSize) {\n          size = maxSize;\n        } else {\n          scale = size / step;\n        }\n\n        return {\n          scale,\n          size\n        };\n      },\n      clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n        if (Array.isArray(bbox) && bbox.length === 4) {\n          const bboxWidth = x1 - x0;\n          const bboxHeight = y1 - y0;\n          graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n          graphics.clip();\n          graphics.endPath();\n        }\n      },\n      setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\n        const context = graphics.ctx,\n              current = graphics.current;\n\n        switch (paintType) {\n          case PaintType.COLORED:\n            const ctx = this.ctx;\n            context.fillStyle = ctx.fillStyle;\n            context.strokeStyle = ctx.strokeStyle;\n            current.fillColor = ctx.fillStyle;\n            current.strokeColor = ctx.strokeStyle;\n            break;\n\n          case PaintType.UNCOLORED:\n            const cssColor = _util.Util.makeHexColor(color[0], color[1], color[2]);\n\n            context.fillStyle = cssColor;\n            context.strokeStyle = cssColor;\n            current.fillColor = cssColor;\n            current.strokeColor = cssColor;\n            break;\n\n          default:\n            throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n        }\n      },\n      getPattern: function TilingPattern_getPattern(ctx, owner) {\n        ctx = this.ctx;\n        ctx.setTransform.apply(ctx, this.baseTransform);\n        ctx.transform.apply(ctx, this.matrix);\n        const temporaryPatternCanvas = this.createPatternCanvas(owner);\n        return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n      }\n    };\n    return TilingPattern;\n  }();\n\n  exports.TilingPattern = TilingPattern;\n\n  /***/ }),\n  /* 12 */\n  /***/ ((__unused_webpack_module, exports) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.GlobalWorkerOptions = void 0;\n  const GlobalWorkerOptions = Object.create(null);\n  exports.GlobalWorkerOptions = GlobalWorkerOptions;\n  GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n  GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n\n  /***/ }),\n  /* 13 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.MessageHandler = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  const CallbackKind = {\n    UNKNOWN: 0,\n    DATA: 1,\n    ERROR: 2\n  };\n  const StreamKind = {\n    UNKNOWN: 0,\n    CANCEL: 1,\n    CANCEL_COMPLETE: 2,\n    CLOSE: 3,\n    ENQUEUE: 4,\n    ERROR: 5,\n    PULL: 6,\n    PULL_COMPLETE: 7,\n    START_COMPLETE: 8\n  };\n\n  function wrapReason(reason) {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n\n    switch (reason.name) {\n      case \"AbortException\":\n        return new _util.AbortException(reason.message);\n\n      case \"MissingPDFException\":\n        return new _util.MissingPDFException(reason.message);\n\n      case \"UnexpectedResponseException\":\n        return new _util.UnexpectedResponseException(reason.message, reason.status);\n\n      case \"UnknownErrorException\":\n        return new _util.UnknownErrorException(reason.message, reason.details);\n\n      default:\n        return new _util.UnknownErrorException(reason.message, reason.toString());\n    }\n  }\n\n  class MessageHandler {\n    constructor(sourceName, targetName, comObj) {\n      this.sourceName = sourceName;\n      this.targetName = targetName;\n      this.comObj = comObj;\n      this.callbackId = 1;\n      this.streamId = 1;\n      this.postMessageTransfers = true;\n      this.streamSinks = Object.create(null);\n      this.streamControllers = Object.create(null);\n      this.callbackCapabilities = Object.create(null);\n      this.actionHandler = Object.create(null);\n\n      this._onComObjOnMessage = event => {\n        const data = event.data;\n\n        if (data.targetName !== this.sourceName) {\n          return;\n        }\n\n        if (data.stream) {\n          this._processStreamMessage(data);\n\n          return;\n        }\n\n        if (data.callback) {\n          const callbackId = data.callbackId;\n          const capability = this.callbackCapabilities[callbackId];\n\n          if (!capability) {\n            throw new Error(`Cannot resolve callback ${callbackId}`);\n          }\n\n          delete this.callbackCapabilities[callbackId];\n\n          if (data.callback === CallbackKind.DATA) {\n            capability.resolve(data.data);\n          } else if (data.callback === CallbackKind.ERROR) {\n            capability.reject(wrapReason(data.reason));\n          } else {\n            throw new Error(\"Unexpected callback case\");\n          }\n\n          return;\n        }\n\n        const action = this.actionHandler[data.action];\n\n        if (!action) {\n          throw new Error(`Unknown action from worker: ${data.action}`);\n        }\n\n        if (data.callbackId) {\n          const cbSourceName = this.sourceName;\n          const cbTargetName = data.sourceName;\n          new Promise(function (resolve) {\n            resolve(action(data.data));\n          }).then(function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result\n            });\n          }, function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason)\n            });\n          });\n          return;\n        }\n\n        if (data.streamId) {\n          this._createStreamSink(data);\n\n          return;\n        }\n\n        action(data.data);\n      };\n\n      comObj.addEventListener(\"message\", this._onComObjOnMessage);\n    }\n\n    on(actionName, handler) {\n      const ah = this.actionHandler;\n\n      if (ah[actionName]) {\n        throw new Error(`There is already an actionName called \"${actionName}\"`);\n      }\n\n      ah[actionName] = handler;\n    }\n\n    send(actionName, data, transfers) {\n      this._postMessage({\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data\n      }, transfers);\n    }\n\n    sendWithPromise(actionName, data, transfers) {\n      const callbackId = this.callbackId++;\n      const capability = (0, _util.createPromiseCapability)();\n      this.callbackCapabilities[callbackId] = capability;\n\n      try {\n        this._postMessage({\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data\n        }, transfers);\n      } catch (ex) {\n        capability.reject(ex);\n      }\n\n      return capability.promise;\n    }\n\n    sendWithStream(actionName, data, queueingStrategy, transfers) {\n      const streamId = this.streamId++;\n      const sourceName = this.sourceName;\n      const targetName = this.targetName;\n      const comObj = this.comObj;\n      return new ReadableStream({\n        start: controller => {\n          const startCapability = (0, _util.createPromiseCapability)();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false\n          };\n\n          this._postMessage({\n            sourceName,\n            targetName,\n            action: actionName,\n            streamId,\n            data,\n            desiredSize: controller.desiredSize\n          }, transfers);\n\n          return startCapability.promise;\n        },\n        pull: controller => {\n          const pullCapability = (0, _util.createPromiseCapability)();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize\n          });\n          return pullCapability.promise;\n        },\n        cancel: reason => {\n          (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = (0, _util.createPromiseCapability)();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason)\n          });\n          return cancelCapability.promise;\n        }\n      }, queueingStrategy);\n    }\n\n    _createStreamSink(data) {\n      const self = this;\n      const action = this.actionHandler[data.action];\n      const streamId = data.streamId;\n      const sourceName = this.sourceName;\n      const targetName = data.sourceName;\n      const comObj = this.comObj;\n      const streamSink = {\n        enqueue(chunk, size = 1, transfers) {\n          if (this.isCancelled) {\n            return;\n          }\n\n          const lastDesiredSize = this.desiredSize;\n          this.desiredSize -= size;\n\n          if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n            this.sinkCapability = (0, _util.createPromiseCapability)();\n            this.ready = this.sinkCapability.promise;\n          }\n\n          self._postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk\n          }, transfers);\n        },\n\n        close() {\n          if (this.isCancelled) {\n            return;\n          }\n\n          this.isCancelled = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CLOSE,\n            streamId\n          });\n          delete self.streamSinks[streamId];\n        },\n\n        error(reason) {\n          (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n\n          if (this.isCancelled) {\n            return;\n          }\n\n          this.isCancelled = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.ERROR,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        },\n\n        sinkCapability: (0, _util.createPromiseCapability)(),\n        onPull: null,\n        onCancel: null,\n        isCancelled: false,\n        desiredSize: data.desiredSize,\n        ready: null\n      };\n      streamSink.sinkCapability.resolve();\n      streamSink.ready = streamSink.sinkCapability.promise;\n      this.streamSinks[streamId] = streamSink;\n      new Promise(function (resolve) {\n        resolve(action(data.data, streamSink));\n      }).then(function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true\n        });\n      }, function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason)\n        });\n      });\n    }\n\n    _processStreamMessage(data) {\n      const streamId = data.streamId;\n      const sourceName = this.sourceName;\n      const targetName = data.sourceName;\n      const comObj = this.comObj;\n\n      switch (data.stream) {\n        case StreamKind.START_COMPLETE:\n          if (data.success) {\n            this.streamControllers[streamId].startCall.resolve();\n          } else {\n            this.streamControllers[streamId].startCall.reject(wrapReason(data.reason));\n          }\n\n          break;\n\n        case StreamKind.PULL_COMPLETE:\n          if (data.success) {\n            this.streamControllers[streamId].pullCall.resolve();\n          } else {\n            this.streamControllers[streamId].pullCall.reject(wrapReason(data.reason));\n          }\n\n          break;\n\n        case StreamKind.PULL:\n          if (!this.streamSinks[streamId]) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true\n            });\n            break;\n          }\n\n          if (this.streamSinks[streamId].desiredSize <= 0 && data.desiredSize > 0) {\n            this.streamSinks[streamId].sinkCapability.resolve();\n          }\n\n          this.streamSinks[streamId].desiredSize = data.desiredSize;\n          const {\n            onPull\n          } = this.streamSinks[data.streamId];\n          new Promise(function (resolve) {\n            resolve(onPull && onPull());\n          }).then(function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true\n            });\n          }, function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason)\n            });\n          });\n          break;\n\n        case StreamKind.ENQUEUE:\n          (0, _util.assert)(this.streamControllers[streamId], \"enqueue should have stream controller\");\n\n          if (this.streamControllers[streamId].isClosed) {\n            break;\n          }\n\n          this.streamControllers[streamId].controller.enqueue(data.chunk);\n          break;\n\n        case StreamKind.CLOSE:\n          (0, _util.assert)(this.streamControllers[streamId], \"close should have stream controller\");\n\n          if (this.streamControllers[streamId].isClosed) {\n            break;\n          }\n\n          this.streamControllers[streamId].isClosed = true;\n          this.streamControllers[streamId].controller.close();\n\n          this._deleteStreamController(streamId);\n\n          break;\n\n        case StreamKind.ERROR:\n          (0, _util.assert)(this.streamControllers[streamId], \"error should have stream controller\");\n          this.streamControllers[streamId].controller.error(wrapReason(data.reason));\n\n          this._deleteStreamController(streamId);\n\n          break;\n\n        case StreamKind.CANCEL_COMPLETE:\n          if (data.success) {\n            this.streamControllers[streamId].cancelCall.resolve();\n          } else {\n            this.streamControllers[streamId].cancelCall.reject(wrapReason(data.reason));\n          }\n\n          this._deleteStreamController(streamId);\n\n          break;\n\n        case StreamKind.CANCEL:\n          if (!this.streamSinks[streamId]) {\n            break;\n          }\n\n          const {\n            onCancel\n          } = this.streamSinks[data.streamId];\n          new Promise(function (resolve) {\n            resolve(onCancel && onCancel(wrapReason(data.reason)));\n          }).then(function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true\n            });\n          }, function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason)\n            });\n          });\n          this.streamSinks[streamId].sinkCapability.reject(wrapReason(data.reason));\n          this.streamSinks[streamId].isCancelled = true;\n          delete this.streamSinks[streamId];\n          break;\n\n        default:\n          throw new Error(\"Unexpected stream case\");\n      }\n    }\n\n    async _deleteStreamController(streamId) {\n      await Promise.allSettled([this.streamControllers[streamId].startCall, this.streamControllers[streamId].pullCall, this.streamControllers[streamId].cancelCall].map(function (capability) {\n        return capability && capability.promise;\n      }));\n      delete this.streamControllers[streamId];\n    }\n\n    _postMessage(message, transfers) {\n      if (transfers && this.postMessageTransfers) {\n        this.comObj.postMessage(message, transfers);\n      } else {\n        this.comObj.postMessage(message);\n      }\n    }\n\n    destroy() {\n      this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n    }\n\n  }\n\n  exports.MessageHandler = MessageHandler;\n\n  /***/ }),\n  /* 14 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.Metadata = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _xml_parser = __w_pdfjs_require__(15);\n\n  class Metadata {\n    constructor(data) {\n      (0, _util.assert)(typeof data === \"string\", \"Metadata: input is not a string\");\n      data = this._repair(data);\n      const parser = new _xml_parser.SimpleXMLParser({\n        lowerCaseName: true\n      });\n      const xmlDocument = parser.parseFromString(data);\n      this._metadataMap = new Map();\n\n      if (xmlDocument) {\n        this._parse(xmlDocument);\n      }\n\n      this._data = data;\n    }\n\n    _repair(data) {\n      return data.replace(/^[^<]+/, \"\").replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n        const bytes = codes.replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n          return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n        }).replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n          switch (name) {\n            case \"amp\":\n              return \"&\";\n\n            case \"apos\":\n              return \"'\";\n\n            case \"gt\":\n              return \">\";\n\n            case \"lt\":\n              return \"<\";\n\n            case \"quot\":\n              return '\"';\n          }\n\n          throw new Error(`_repair: ${name} isn't defined.`);\n        });\n        let chars = \"\";\n\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n\n          if (code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n    }\n\n    _getSequence(entry) {\n      const name = entry.nodeName;\n\n      if (name !== \"rdf:bag\" && name !== \"rdf:seq\" && name !== \"rdf:alt\") {\n        return null;\n      }\n\n      return entry.childNodes.filter(node => node.nodeName === \"rdf:li\");\n    }\n\n    _getCreators(entry) {\n      if (entry.nodeName !== \"dc:creator\") {\n        return false;\n      }\n\n      if (!entry.hasChildNodes()) {\n        return true;\n      }\n\n      const seqNode = entry.childNodes[0];\n      const authors = this._getSequence(seqNode) || [];\n\n      this._metadataMap.set(entry.nodeName, authors.map(node => node.textContent.trim()));\n\n      return true;\n    }\n\n    _parse(xmlDocument) {\n      let rdf = xmlDocument.documentElement;\n\n      if (rdf.nodeName !== \"rdf:rdf\") {\n        rdf = rdf.firstChild;\n\n        while (rdf && rdf.nodeName !== \"rdf:rdf\") {\n          rdf = rdf.nextSibling;\n        }\n      }\n\n      if (!rdf || rdf.nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n        return;\n      }\n\n      for (const desc of rdf.childNodes) {\n        if (desc.nodeName !== \"rdf:description\") {\n          continue;\n        }\n\n        for (const entry of desc.childNodes) {\n          const name = entry.nodeName;\n\n          if (name === \"#text\") {\n            continue;\n          }\n\n          if (this._getCreators(entry)) {\n            continue;\n          }\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n\n    getRaw() {\n      return this._data;\n    }\n\n    get(name) {\n      return this._metadataMap.get(name) || null; //lwf\n    }\n\n    getAll() {\n      return (0, _util.objectFromEntries)(this._metadataMap);\n    }\n\n    has(name) {\n      return this._metadataMap.has(name);\n    }\n\n  }\n\n  exports.Metadata = Metadata;\n\n  /***/ }),\n  /* 15 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.SimpleXMLParser = exports.SimpleDOMNode = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  const XMLParserErrorCode = {\n    NoError: 0,\n    EndOfDocument: -1,\n    UnterminatedCdat: -2,\n    UnterminatedXmlDeclaration: -3,\n    UnterminatedDoctypeDeclaration: -4,\n    UnterminatedComment: -5,\n    MalformedElement: -6,\n    OutOfMemory: -7,\n    UnterminatedAttributeValue: -8,\n    UnterminatedElement: -9,\n    ElementNeverBegun: -10\n  };\n\n  function isWhitespace(s, index) {\n    const ch = s[index];\n    return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n  }\n\n  function isWhitespaceString(s) {\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (!isWhitespace(s, i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  class XMLParserBase {\n    _resolveEntities(s) {\n      return s.replace(/&([^;]+);/g, (all, entity) => {\n        if (entity.substring(0, 2) === \"#x\") {\n          return String.fromCodePoint(parseInt(entity.substring(2), 16));\n        } else if (entity.substring(0, 1) === \"#\") {\n          return String.fromCodePoint(parseInt(entity.substring(1), 10));\n        }\n\n        switch (entity) {\n          case \"lt\":\n            return \"<\";\n\n          case \"gt\":\n            return \">\";\n\n          case \"amp\":\n            return \"&\";\n\n          case \"quot\":\n            return '\"';\n        }\n\n        return this.onResolveEntity(entity);\n      });\n    }\n\n    _parseContent(s, start) {\n      const attributes = [];\n      let pos = start;\n\n      function skipWs() {\n        while (pos < s.length && isWhitespace(s, pos)) {\n          ++pos;\n        }\n      }\n\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n        ++pos;\n      }\n\n      const name = s.substring(start, pos);\n      skipWs();\n\n      while (pos < s.length && s[pos] !== \">\" && s[pos] !== \"/\" && s[pos] !== \"?\") {\n        skipWs();\n        let attrName = \"\",\n            attrValue = \"\";\n\n        while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n          attrName += s[pos];\n          ++pos;\n        }\n\n        skipWs();\n\n        if (s[pos] !== \"=\") {\n          return null;\n        }\n\n        ++pos;\n        skipWs();\n        const attrEndChar = s[pos];\n\n        if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n          return null;\n        }\n\n        const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n\n        if (attrEndIndex < 0) {\n          return null;\n        }\n\n        attrValue = s.substring(pos, attrEndIndex);\n        attributes.push({\n          name: attrName,\n          value: this._resolveEntities(attrValue)\n        });\n        pos = attrEndIndex + 1;\n        skipWs();\n      }\n\n      return {\n        name,\n        attributes,\n        parsed: pos - start\n      };\n    }\n\n    _parseProcessingInstruction(s, start) {\n      let pos = start;\n\n      function skipWs() {\n        while (pos < s.length && isWhitespace(s, pos)) {\n          ++pos;\n        }\n      }\n\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n        ++pos;\n      }\n\n      const name = s.substring(start, pos);\n      skipWs();\n      const attrStart = pos;\n\n      while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n        ++pos;\n      }\n\n      const value = s.substring(attrStart, pos);\n      return {\n        name,\n        value,\n        parsed: pos - start\n      };\n    }\n\n    parseXml(s) {\n      let i = 0;\n\n      while (i < s.length) {\n        const ch = s[i];\n        let j = i;\n\n        if (ch === \"<\") {\n          ++j;\n          const ch2 = s[j];\n          let q;\n\n          switch (ch2) {\n            case \"/\":\n              ++j;\n              q = s.indexOf(\">\", j);\n\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedElement);\n                return;\n              }\n\n              this.onEndElement(s.substring(j, q));\n              j = q + 1;\n              break;\n\n            case \"?\":\n              ++j;\n\n              const pi = this._parseProcessingInstruction(s, j);\n\n              if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n                this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n                return;\n              }\n\n              this.onPi(pi.name, pi.value);\n              j += pi.parsed + 2;\n              break;\n\n            case \"!\":\n              if (s.substring(j + 1, j + 3) === \"--\") {\n                q = s.indexOf(\"-->\", j + 3);\n\n                if (q < 0) {\n                  this.onError(XMLParserErrorCode.UnterminatedComment);\n                  return;\n                }\n\n                this.onComment(s.substring(j + 3, q));\n                j = q + 3;\n              } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n                q = s.indexOf(\"]]>\", j + 8);\n\n                if (q < 0) {\n                  this.onError(XMLParserErrorCode.UnterminatedCdat);\n                  return;\n                }\n\n                this.onCdata(s.substring(j + 8, q));\n                j = q + 3;\n              } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n                const q2 = s.indexOf(\"[\", j + 8);\n                let complexDoctype = false;\n                q = s.indexOf(\">\", j + 8);\n\n                if (q < 0) {\n                  this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                  return;\n                }\n\n                if (q2 > 0 && q > q2) {\n                  q = s.indexOf(\"]>\", j + 8);\n\n                  if (q < 0) {\n                    this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                    return;\n                  }\n\n                  complexDoctype = true;\n                }\n\n                const doctypeContent = s.substring(j + 8, q + (complexDoctype ? 1 : 0));\n                this.onDoctype(doctypeContent);\n                j = q + (complexDoctype ? 2 : 1);\n              } else {\n                this.onError(XMLParserErrorCode.MalformedElement);\n                return;\n              }\n\n              break;\n\n            default:\n              const content = this._parseContent(s, j);\n\n              if (content === null) {\n                this.onError(XMLParserErrorCode.MalformedElement);\n                return;\n              }\n\n              let isClosed = false;\n\n              if (s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\") {\n                isClosed = true;\n              } else if (s.substring(j + content.parsed, j + content.parsed + 1) !== \">\") {\n                this.onError(XMLParserErrorCode.UnterminatedElement);\n                return;\n              }\n\n              this.onBeginElement(content.name, content.attributes, isClosed);\n              j += content.parsed + (isClosed ? 2 : 1);\n              break;\n          }\n        } else {\n          while (j < s.length && s[j] !== \"<\") {\n            j++;\n          }\n\n          const text = s.substring(i, j);\n          this.onText(this._resolveEntities(text));\n        }\n\n        i = j;\n      }\n    }\n\n    onResolveEntity(name) {\n      return `&${name};`;\n    }\n\n    onPi(name, value) {}\n\n    onComment(text) {}\n\n    onCdata(text) {}\n\n    onDoctype(doctypeContent) {}\n\n    onText(text) {}\n\n    onBeginElement(name, attributes, isEmpty) {}\n\n    onEndElement(name) {}\n\n    onError(code) {}\n\n  }\n\n  class SimpleDOMNode {\n    constructor(nodeName, nodeValue) {\n      this.nodeName = nodeName;\n      this.nodeValue = nodeValue;\n      Object.defineProperty(this, \"parentNode\", {\n        value: null,\n        writable: true\n      });\n    }\n\n    get firstChild() {\n      return this.childNodes && this.childNodes[0];\n    }\n\n    get nextSibling() {\n      const childNodes = this.parentNode.childNodes;\n\n      if (!childNodes) {\n        return undefined;\n      }\n\n      const index = childNodes.indexOf(this);\n\n      if (index === -1) {\n        return undefined;\n      }\n\n      return childNodes[index + 1];\n    }\n\n    get textContent() {\n      if (!this.childNodes) {\n        return this.nodeValue || \"\";\n      }\n\n      return this.childNodes.map(function (child) {\n        return child.textContent;\n      }).join(\"\");\n    }\n\n    hasChildNodes() {\n      return this.childNodes && this.childNodes.length > 0;\n    }\n\n    searchNode(paths, pos) {\n      if (pos >= paths.length) {\n        return this;\n      }\n\n      const component = paths[pos];\n      const stack = [];\n      let node = this;\n\n      while (true) {\n        if (component.name === node.nodeName) {\n          if (component.pos === 0) {\n            const res = node.searchNode(paths, pos + 1);\n\n            if (res !== null) {\n              return res;\n            }\n          } else if (stack.length === 0) {\n            return null;\n          } else {\n            const [parent] = stack.pop();\n            let siblingPos = 0;\n\n            for (const child of parent.childNodes) {\n              if (component.name === child.nodeName) {\n                if (siblingPos === component.pos) {\n                  return child.searchNode(paths, pos + 1);\n                }\n\n                siblingPos++;\n              }\n            }\n\n            return node.searchNode(paths, pos + 1);\n          }\n        }\n\n        if (node.childNodes && node.childNodes.length !== 0) {\n          stack.push([node, 0]);\n          node = node.childNodes[0];\n        } else if (stack.length === 0) {\n          return null;\n        } else {\n          while (stack.length !== 0) {\n            const [parent, currentPos] = stack.pop();\n            const newPos = currentPos + 1;\n\n            if (newPos < parent.childNodes.length) {\n              stack.push([parent, newPos]);\n              node = parent.childNodes[newPos];\n              break;\n            }\n          }\n\n          if (stack.length === 0) {\n            return null;\n          }\n        }\n      }\n    }\n\n    dump(buffer) {\n      if (this.nodeName === \"#text\") {\n        buffer.push((0, _util.encodeToXmlString)(this.nodeValue));\n        return;\n      }\n\n      buffer.push(`<${this.nodeName}`);\n\n      if (this.attributes) {\n        for (const attribute of this.attributes) {\n          buffer.push(` ${attribute.name}=\"${(0, _util.encodeToXmlString)(attribute.value)}\"`);\n        }\n      }\n\n      if (this.hasChildNodes()) {\n        buffer.push(\">\");\n\n        for (const child of this.childNodes) {\n          child.dump(buffer);\n        }\n\n        buffer.push(`</${this.nodeName}>`);\n      } else if (this.nodeValue) {\n        buffer.push(`>${(0, _util.encodeToXmlString)(this.nodeValue)}</${this.nodeName}>`);\n      } else {\n        buffer.push(\"/>\");\n      }\n    }\n\n  }\n\n  exports.SimpleDOMNode = SimpleDOMNode;\n\n  class SimpleXMLParser extends XMLParserBase {\n    constructor({\n      hasAttributes = false,\n      lowerCaseName = false\n    }) {\n      super();\n      this._currentFragment = null;\n      this._stack = null;\n      this._errorCode = XMLParserErrorCode.NoError;\n      this._hasAttributes = hasAttributes;\n      this._lowerCaseName = lowerCaseName;\n    }\n\n    parseFromString(data) {\n      this._currentFragment = [];\n      this._stack = [];\n      this._errorCode = XMLParserErrorCode.NoError;\n      this.parseXml(data);\n\n      if (this._errorCode !== XMLParserErrorCode.NoError) {\n        return undefined;\n      }\n\n      const [documentElement] = this._currentFragment;\n\n      if (!documentElement) {\n        return undefined;\n      }\n\n      return {\n        documentElement\n      };\n    }\n\n    onResolveEntity(name) {\n      switch (name) {\n        case \"apos\":\n          return \"'\";\n      }\n\n      return super.onResolveEntity(name);\n    }\n\n    onText(text) {\n      if (isWhitespaceString(text)) {\n        return;\n      }\n\n      const node = new SimpleDOMNode(\"#text\", text);\n\n      this._currentFragment.push(node);\n    }\n\n    onCdata(text) {\n      const node = new SimpleDOMNode(\"#text\", text);\n\n      this._currentFragment.push(node);\n    }\n\n    onBeginElement(name, attributes, isEmpty) {\n      if (this._lowerCaseName) {\n        name = name.toLowerCase();\n      }\n\n      const node = new SimpleDOMNode(name);\n      node.childNodes = [];\n\n      if (this._hasAttributes) {\n        node.attributes = attributes;\n      }\n\n      this._currentFragment.push(node);\n\n      if (isEmpty) {\n        return;\n      }\n\n      this._stack.push(this._currentFragment);\n\n      this._currentFragment = node.childNodes;\n    }\n\n    onEndElement(name) {\n      this._currentFragment = this._stack.pop() || [];\n      const lastElement = this._currentFragment[this._currentFragment.length - 1];\n\n      if (!lastElement) {\n        return;\n      }\n\n      for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n        lastElement.childNodes[i].parentNode = lastElement;\n      }\n    }\n\n    onError(code) {\n      this._errorCode = code;\n    }\n\n  }\n\n  exports.SimpleXMLParser = SimpleXMLParser;\n\n  /***/ }),\n  /* 16 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.OptionalContentConfig = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  class OptionalContentGroup {\n    constructor(name, intent) {\n      this.visible = true;\n      this.name = name;\n      this.intent = intent;\n    }\n\n  }\n\n  class OptionalContentConfig {\n    constructor(data) {\n      this.name = null;\n      this.creator = null;\n      this._order = null;\n      this._groups = new Map();\n\n      if (data === null) {\n        return;\n      }\n\n      this.name = data.name;\n      this.creator = data.creator;\n      this._order = data.order;\n\n      for (const group of data.groups) {\n        this._groups.set(group.id, new OptionalContentGroup(group.name, group.intent));\n      }\n\n      if (data.baseState === \"OFF\") {\n        for (const group of this._groups) {\n          group.visible = false;\n        }\n      }\n\n      for (const on of data.on) {\n        this._groups.get(on).visible = true;\n      }\n\n      for (const off of data.off) {\n        this._groups.get(off).visible = false;\n      }\n    }\n\n    isVisible(group) {\n      if (group.type === \"OCG\") {\n        if (!this._groups.has(group.id)) {\n          (0, _util.warn)(`Optional content group not found: ${group.id}`);\n          return true;\n        }\n\n        return this._groups.get(group.id).visible;\n      } else if (group.type === \"OCMD\") {\n        if (group.expression) {\n          (0, _util.warn)(\"Visibility expression not supported yet.\");\n        }\n\n        if (!group.policy || group.policy === \"AnyOn\") {\n          for (const id of group.ids) {\n            if (!this._groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return true;\n            }\n\n            if (this._groups.get(id).visible) {\n              return true;\n            }\n          }\n\n          return false;\n        } else if (group.policy === \"AllOn\") {\n          for (const id of group.ids) {\n            if (!this._groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return true;\n            }\n\n            if (!this._groups.get(id).visible) {\n              return false;\n            }\n          }\n\n          return true;\n        } else if (group.policy === \"AnyOff\") {\n          for (const id of group.ids) {\n            if (!this._groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return true;\n            }\n\n            if (!this._groups.get(id).visible) {\n              return true;\n            }\n          }\n\n          return false;\n        } else if (group.policy === \"AllOff\") {\n          for (const id of group.ids) {\n            if (!this._groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return true;\n            }\n\n            if (this._groups.get(id).visible) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        (0, _util.warn)(`Unknown optional content policy ${group.policy}.`);\n        return true;\n      }\n\n      (0, _util.warn)(`Unknown group type ${group.type}.`);\n      return true;\n    }\n\n    setVisibility(id, visible = true) {\n      if (!this._groups.has(id)) {\n        (0, _util.warn)(`Optional content group not found: ${id}`);\n        return;\n      }\n\n      this._groups.get(id).visible = !!visible;\n    }\n\n    getOrder() {\n      if (!this._groups.size) {\n        return null;\n      }\n\n      if (this._order) {\n        return this._order.slice();\n      }\n\n      return Array.from(this._groups.keys());\n    }\n\n    getGroups() {\n      if (!this._groups.size) {\n        return null;\n      }\n\n      return (0, _util.objectFromEntries)(this._groups);\n    }\n\n    getGroup(id) {\n      return this._groups.get(id) || null;\n    }\n\n  }\n\n  exports.OptionalContentConfig = OptionalContentConfig;\n\n  /***/ }),\n  /* 17 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.PDFDataTransportStream = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  class PDFDataTransportStream {\n    constructor(params, pdfDataRangeTransport) {\n      (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n      this._queuedChunks = [];\n      this._progressiveDone = params.progressiveDone || false;\n      const initialData = params.initialData;\n\n      if (initialData && initialData.length > 0) { // lwf\n        const buffer = new Uint8Array(initialData).buffer;\n\n        this._queuedChunks.push(buffer);\n      }\n\n      this._pdfDataRangeTransport = pdfDataRangeTransport;\n      this._isStreamingSupported = !params.disableStream;\n      this._isRangeSupported = !params.disableRange;\n      this._contentLength = params.length;\n      this._fullRequestReader = null;\n      this._rangeReaders = [];\n\n      this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n        this._onReceiveData({\n          begin,\n          chunk\n        });\n      });\n\n      this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n        this._onProgress({\n          loaded,\n          total\n        });\n      });\n\n      this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n        this._onReceiveData({\n          chunk\n        });\n      });\n\n      this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n        this._onProgressiveDone();\n      });\n\n      this._pdfDataRangeTransport.transportReady();\n    }\n\n    _onReceiveData(args) {\n      const buffer = new Uint8Array(args.chunk).buffer;\n\n      if (args.begin === undefined) {\n        if (this._fullRequestReader) {\n          this._fullRequestReader._enqueue(buffer);\n        } else {\n          this._queuedChunks.push(buffer);\n        }\n      } else {\n        const found = this._rangeReaders.some(function (rangeReader) {\n          if (rangeReader._begin !== args.begin) {\n            return false;\n          }\n\n          rangeReader._enqueue(buffer);\n\n          return true;\n        });\n\n        (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n      }\n    }\n\n    get _progressiveDataLength() {\n      return this._fullRequestReader && this._fullRequestReader._loaded || 0; // lwf\n    }\n\n    _onProgress(evt) {\n      if (evt.total === undefined) {\n        const firstReader = this._rangeReaders[0];\n\n        if (firstReader && firstReader.onProgress) { // lwf\n          firstReader.onProgress({\n            loaded: evt.loaded\n          });\n        }\n      } else {\n        const fullReader = this._fullRequestReader;\n\n        if (fullReader && fullReader.onProgress) { // lwf\n          fullReader.onProgress({\n            loaded: evt.loaded,\n            total: evt.total\n          });\n        }\n      }\n    }\n\n    _onProgressiveDone() {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.progressiveDone();\n      }\n\n      this._progressiveDone = true;\n    }\n\n    _removeRangeReader(reader) {\n      const i = this._rangeReaders.indexOf(reader);\n\n      if (i >= 0) {\n        this._rangeReaders.splice(i, 1);\n      }\n    }\n\n    getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n      const queuedChunks = this._queuedChunks;\n      this._queuedChunks = null;\n      return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone);\n    }\n\n    getRangeReader(begin, end) {\n      if (end <= this._progressiveDataLength) {\n        return null;\n      }\n\n      const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n\n      this._pdfDataRangeTransport.requestDataRange(begin, end);\n\n      this._rangeReaders.push(reader);\n\n      return reader;\n    }\n\n    cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n\n      const readers = this._rangeReaders.slice(0);\n\n      readers.forEach(function (rangeReader) {\n        rangeReader.cancel(reason);\n      });\n\n      this._pdfDataRangeTransport.abort();\n    }\n\n  }\n\n  exports.PDFDataTransportStream = PDFDataTransportStream;\n\n  class PDFDataTransportStreamReader {\n    constructor(stream, queuedChunks, progressiveDone = false) {\n      this._stream = stream;\n      this._done = progressiveDone || false;\n      this._filename = null;\n      this._queuedChunks = queuedChunks || [];\n      this._loaded = 0;\n\n      for (const chunk of this._queuedChunks) {\n        this._loaded += chunk.byteLength;\n      }\n\n      this._requests = [];\n      this._headersReady = Promise.resolve();\n      stream._fullRequestReader = this;\n      this.onProgress = null;\n    }\n\n    _enqueue(chunk) {\n      if (this._done) {\n        return;\n      }\n\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n\n        requestCapability.resolve({\n          value: chunk,\n          done: false\n        });\n      } else {\n        this._queuedChunks.push(chunk);\n      }\n\n      this._loaded += chunk.byteLength;\n    }\n\n    get headersReady() {\n      return this._headersReady;\n    }\n\n    get filename() {\n      return this._filename;\n    }\n\n    get isRangeSupported() {\n      return this._stream._isRangeSupported;\n    }\n\n    get isStreamingSupported() {\n      return this._stream._isStreamingSupported;\n    }\n\n    get contentLength() {\n      return this._stream._contentLength;\n    }\n\n    async read() {\n      if (this._queuedChunks.length > 0) {\n        const chunk = this._queuedChunks.shift();\n\n        return {\n          value: chunk,\n          done: false\n        };\n      }\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      const requestCapability = (0, _util.createPromiseCapability)();\n\n      this._requests.push(requestCapability);\n\n      return requestCapability.promise;\n    }\n\n    cancel(reason) {\n      this._done = true;\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n    }\n\n    progressiveDone() {\n      if (this._done) {\n        return;\n      }\n\n      this._done = true;\n    }\n\n  }\n\n  class PDFDataTransportStreamRangeReader {\n    constructor(stream, begin, end) {\n      this._stream = stream;\n      this._begin = begin;\n      this._end = end;\n      this._queuedChunk = null;\n      this._requests = [];\n      this._done = false;\n      this.onProgress = null;\n    }\n\n    _enqueue(chunk) {\n      if (this._done) {\n        return;\n      }\n\n      if (this._requests.length === 0) {\n        this._queuedChunk = chunk;\n      } else {\n        const requestsCapability = this._requests.shift();\n\n        requestsCapability.resolve({\n          value: chunk,\n          done: false\n        });\n\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.resolve({\n            value: undefined,\n            done: true\n          });\n        });\n\n        this._requests = [];\n      }\n\n      this._done = true;\n\n      this._stream._removeRangeReader(this);\n    }\n\n    get isStreamingSupported() {\n      return false;\n    }\n\n    async read() {\n      if (this._queuedChunk) {\n        const chunk = this._queuedChunk;\n        this._queuedChunk = null;\n        return {\n          value: chunk,\n          done: false\n        };\n      }\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      const requestCapability = (0, _util.createPromiseCapability)();\n\n      this._requests.push(requestCapability);\n\n      return requestCapability.promise;\n    }\n\n    cancel(reason) {\n      this._done = true;\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n\n      this._stream._removeRangeReader(this);\n    }\n\n  }\n\n  /***/ }),\n  /* 18 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.WebGLContext = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  class WebGLContext {\n    constructor({\n      enable = false\n    }) {\n      this._enabled = enable === true;\n    }\n\n    get isEnabled() {\n      let enabled = this._enabled;\n\n      if (enabled) {\n        enabled = WebGLUtils.tryInitGL();\n      }\n\n      return (0, _util.shadow)(this, \"isEnabled\", enabled);\n    }\n\n    composeSMask({\n      layer,\n      mask,\n      properties\n    }) {\n      return WebGLUtils.composeSMask(layer, mask, properties);\n    }\n\n    drawFigures({\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    }) {\n      return WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);\n    }\n\n    clear() {\n      WebGLUtils.cleanup();\n    }\n\n  }\n\n  exports.WebGLContext = WebGLContext;\n\n  const WebGLUtils = function WebGLUtilsClosure() {\n    function loadShader(gl, code, shaderType) {\n      const shader = gl.createShader(shaderType);\n      gl.shaderSource(shader, code);\n      gl.compileShader(shader);\n      const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n      if (!compiled) {\n        const errorMsg = gl.getShaderInfoLog(shader);\n        throw new Error(\"Error during shader compilation: \" + errorMsg);\n      }\n\n      return shader;\n    }\n\n    function createVertexShader(gl, code) {\n      return loadShader(gl, code, gl.VERTEX_SHADER);\n    }\n\n    function createFragmentShader(gl, code) {\n      return loadShader(gl, code, gl.FRAGMENT_SHADER);\n    }\n\n    function createProgram(gl, shaders) {\n      const program = gl.createProgram();\n\n      for (let i = 0, ii = shaders.length; i < ii; ++i) {\n        gl.attachShader(program, shaders[i]);\n      }\n\n      gl.linkProgram(program);\n      const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n      if (!linked) {\n        const errorMsg = gl.getProgramInfoLog(program);\n        throw new Error(\"Error during program linking: \" + errorMsg);\n      }\n\n      return program;\n    }\n\n    function createTexture(gl, image, textureId) {\n      gl.activeTexture(textureId);\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n      return texture;\n    }\n\n    let currentGL, currentCanvas;\n\n    function generateGL() {\n      if (currentGL) {\n        return;\n      }\n\n      currentCanvas = document.createElement(\"canvas\");\n      currentGL = currentCanvas.getContext(\"webgl\", {\n        premultipliedalpha: false\n      });\n    }\n\n    const smaskVertexShaderCode = \"\\\n    attribute vec2 a_position;                                    \\\n    attribute vec2 a_texCoord;                                    \\\n                                                                  \\\n    uniform vec2 u_resolution;                                    \\\n                                                                  \\\n    varying vec2 v_texCoord;                                      \\\n                                                                  \\\n    void main() {                                                 \\\n      vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n      gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                  \\\n      v_texCoord = a_texCoord;                                    \\\n    }                                                             \";\n    const smaskFragmentShaderCode = \"\\\n    precision mediump float;                                      \\\n                                                                  \\\n    uniform vec4 u_backdrop;                                      \\\n    uniform int u_subtype;                                        \\\n    uniform sampler2D u_image;                                    \\\n    uniform sampler2D u_mask;                                     \\\n                                                                  \\\n    varying vec2 v_texCoord;                                      \\\n                                                                  \\\n    void main() {                                                 \\\n      vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n      vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n      if (u_backdrop.a > 0.0) {                                   \\\n        maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                        u_backdrop.rgb * (1.0 - maskColor.a);     \\\n      }                                                           \\\n      float lum;                                                  \\\n      if (u_subtype == 0) {                                       \\\n        lum = maskColor.a;                                        \\\n      } else {                                                    \\\n        lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n              maskColor.b * 0.11;                                 \\\n      }                                                           \\\n      imageColor.a *= lum;                                        \\\n      imageColor.rgb *= imageColor.a;                             \\\n      gl_FragColor = imageColor;                                  \\\n    }                                                             \";\n    let smaskCache = null;\n\n    function initSmaskGL() {\n      generateGL();\n      const canvas = currentCanvas;\n      currentCanvas = null;\n      const gl = currentGL;\n      currentGL = null;\n      const vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n      const fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n      const program = createProgram(gl, [vertexShader, fragmentShader]);\n      gl.useProgram(program);\n      const cache = {};\n      cache.gl = gl;\n      cache.canvas = canvas;\n      cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n      cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n      cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n      cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n      const texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n      const texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n      const texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n      const texCoordBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(texCoordLocation);\n      gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n      gl.uniform1i(texLayerLocation, 0);\n      gl.uniform1i(texMaskLocation, 1);\n      smaskCache = cache;\n    }\n\n    function composeSMask(layer, mask, properties) {\n      const width = layer.width,\n            height = layer.height;\n\n      if (!smaskCache) {\n        initSmaskGL();\n      }\n\n      const cache = smaskCache,\n            canvas = cache.canvas,\n            gl = cache.gl;\n      canvas.width = width;\n      canvas.height = height;\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n      gl.uniform2f(cache.resolutionLocation, width, height);\n\n      if (properties.backdrop) {\n        gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);\n      } else {\n        gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n      }\n\n      gl.uniform1i(cache.subtypeLocation, properties.subtype === \"Luminosity\" ? 1 : 0);\n      const texture = createTexture(gl, layer, gl.TEXTURE0);\n      const maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n      const buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, width, 0, 0, height, 0, height, width, 0, width, height]), gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(cache.positionLocation);\n      gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n      gl.clearColor(0, 0, 0, 0);\n      gl.enable(gl.BLEND);\n      gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n      gl.flush();\n      gl.deleteTexture(texture);\n      gl.deleteTexture(maskTexture);\n      gl.deleteBuffer(buffer);\n      return canvas;\n    }\n\n    const figuresVertexShaderCode = \"\\\n    attribute vec2 a_position;                                    \\\n    attribute vec3 a_color;                                       \\\n                                                                  \\\n    uniform vec2 u_resolution;                                    \\\n    uniform vec2 u_scale;                                         \\\n    uniform vec2 u_offset;                                        \\\n                                                                  \\\n    varying vec4 v_color;                                         \\\n                                                                  \\\n    void main() {                                                 \\\n      vec2 position = (a_position + u_offset) * u_scale;          \\\n      vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n      gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                  \\\n      v_color = vec4(a_color / 255.0, 1.0);                       \\\n    }                                                             \";\n    const figuresFragmentShaderCode = \"\\\n    precision mediump float;                                      \\\n                                                                  \\\n    varying vec4 v_color;                                         \\\n                                                                  \\\n    void main() {                                                 \\\n      gl_FragColor = v_color;                                     \\\n    }                                                             \";\n    let figuresCache = null;\n\n    function initFiguresGL() {\n      generateGL();\n      const canvas = currentCanvas;\n      currentCanvas = null;\n      const gl = currentGL;\n      currentGL = null;\n      const vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n      const fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n      const program = createProgram(gl, [vertexShader, fragmentShader]);\n      gl.useProgram(program);\n      const cache = {};\n      cache.gl = gl;\n      cache.canvas = canvas;\n      cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n      cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n      cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n      cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n      cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n      figuresCache = cache;\n    }\n\n    function drawFigures(width, height, backgroundColor, figures, context) {\n      if (!figuresCache) {\n        initFiguresGL();\n      }\n\n      const cache = figuresCache,\n            canvas = cache.canvas,\n            gl = cache.gl;\n      canvas.width = width;\n      canvas.height = height;\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n      gl.uniform2f(cache.resolutionLocation, width, height);\n      let count = 0;\n\n      for (let i = 0, ii = figures.length; i < ii; i++) {\n        switch (figures[i].type) {\n          case \"lattice\":\n            const rows = figures[i].coords.length / figures[i].verticesPerRow | 0;\n            count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n            break;\n\n          case \"triangles\":\n            count += figures[i].coords.length;\n            break;\n        }\n      }\n\n      const coords = new Float32Array(count * 2);\n      const colors = new Uint8Array(count * 3);\n      const coordsMap = context.coords,\n            colorsMap = context.colors;\n      let pIndex = 0,\n          cIndex = 0;\n\n      for (let i = 0, ii = figures.length; i < ii; i++) {\n        const figure = figures[i],\n              ps = figure.coords,\n              cs = figure.colors;\n\n        switch (figure.type) {\n          case \"lattice\":\n            const cols = figure.verticesPerRow;\n            const rows = ps.length / cols | 0;\n\n            for (let row = 1; row < rows; row++) {\n              let offset = row * cols + 1;\n\n              for (let col = 1; col < cols; col++, offset++) {\n                coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n                coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n                coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n                coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n                coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n                coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n                colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n                colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n                colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n                colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n                colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n                colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n                colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n                colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n                colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n                coords[pIndex + 6] = coords[pIndex + 2];\n                coords[pIndex + 7] = coords[pIndex + 3];\n                coords[pIndex + 8] = coords[pIndex + 4];\n                coords[pIndex + 9] = coords[pIndex + 5];\n                coords[pIndex + 10] = coordsMap[ps[offset]];\n                coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n                colors[cIndex + 9] = colors[cIndex + 3];\n                colors[cIndex + 10] = colors[cIndex + 4];\n                colors[cIndex + 11] = colors[cIndex + 5];\n                colors[cIndex + 12] = colors[cIndex + 6];\n                colors[cIndex + 13] = colors[cIndex + 7];\n                colors[cIndex + 14] = colors[cIndex + 8];\n                colors[cIndex + 15] = colorsMap[cs[offset]];\n                colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n                colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n                pIndex += 12;\n                cIndex += 18;\n              }\n            }\n\n            break;\n\n          case \"triangles\":\n            for (let j = 0, jj = ps.length; j < jj; j++) {\n              coords[pIndex] = coordsMap[ps[j]];\n              coords[pIndex + 1] = coordsMap[ps[j] + 1];\n              colors[cIndex] = colorsMap[cs[j]];\n              colors[cIndex + 1] = colorsMap[cs[j] + 1];\n              colors[cIndex + 2] = colorsMap[cs[j] + 2];\n              pIndex += 2;\n              cIndex += 3;\n            }\n\n            break;\n        }\n      }\n\n      if (backgroundColor) {\n        gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);\n      } else {\n        gl.clearColor(0, 0, 0, 0);\n      }\n\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      const coordsBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(cache.positionLocation);\n      gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n      const colorsBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(cache.colorLocation);\n      gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);\n      gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n      gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n      gl.drawArrays(gl.TRIANGLES, 0, count);\n      gl.flush();\n      gl.deleteBuffer(coordsBuffer);\n      gl.deleteBuffer(colorsBuffer);\n      return canvas;\n    }\n\n    return {\n      tryInitGL() {\n        try {\n          generateGL();\n          return !!currentGL;\n        } catch (ex) {}\n\n        return false;\n      },\n\n      composeSMask,\n      drawFigures,\n\n      cleanup() {\n        if (smaskCache && smaskCache.canvas) { // lwf\n          smaskCache.canvas.width = 0;\n          smaskCache.canvas.height = 0;\n        }\n\n        if (figuresCache && figuresCache.canvas) { // lwf\n          figuresCache.canvas.width = 0;\n          figuresCache.canvas.height = 0;\n        }\n\n        smaskCache = null;\n        figuresCache = null;\n      }\n\n    };\n  }();\n\n  /***/ }),\n  /* 19 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.AnnotationLayer = void 0;\n\n  var _display_utils = __w_pdfjs_require__(1);\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _annotation_storage = __w_pdfjs_require__(8);\n\n  var _scripting_utils = __w_pdfjs_require__(20);\n\n  class AnnotationElementFactory {\n    static create(parameters) {\n      const subtype = parameters.data.annotationType;\n\n      switch (subtype) {\n        case _util.AnnotationType.LINK:\n          return new LinkAnnotationElement(parameters);\n\n        case _util.AnnotationType.TEXT:\n          return new TextAnnotationElement(parameters);\n\n        case _util.AnnotationType.WIDGET:\n          const fieldType = parameters.data.fieldType;\n\n          switch (fieldType) {\n            case \"Tx\":\n              return new TextWidgetAnnotationElement(parameters);\n\n            case \"Btn\":\n              if (parameters.data.radioButton) {\n                return new RadioButtonWidgetAnnotationElement(parameters);\n              } else if (parameters.data.checkBox) {\n                return new CheckboxWidgetAnnotationElement(parameters);\n              }\n\n              return new PushButtonWidgetAnnotationElement(parameters);\n\n            case \"Ch\":\n              return new ChoiceWidgetAnnotationElement(parameters);\n          }\n\n          return new WidgetAnnotationElement(parameters);\n\n        case _util.AnnotationType.POPUP:\n          return new PopupAnnotationElement(parameters);\n\n        case _util.AnnotationType.FREETEXT:\n          return new FreeTextAnnotationElement(parameters);\n\n        case _util.AnnotationType.LINE:\n          return new LineAnnotationElement(parameters);\n\n        case _util.AnnotationType.SQUARE:\n          return new SquareAnnotationElement(parameters);\n\n        case _util.AnnotationType.CIRCLE:\n          return new CircleAnnotationElement(parameters);\n\n        case _util.AnnotationType.POLYLINE:\n          return new PolylineAnnotationElement(parameters);\n\n        case _util.AnnotationType.CARET:\n          return new CaretAnnotationElement(parameters);\n\n        case _util.AnnotationType.INK:\n          return new InkAnnotationElement(parameters);\n\n        case _util.AnnotationType.POLYGON:\n          return new PolygonAnnotationElement(parameters);\n\n        case _util.AnnotationType.HIGHLIGHT:\n          return new HighlightAnnotationElement(parameters);\n\n        case _util.AnnotationType.UNDERLINE:\n          return new UnderlineAnnotationElement(parameters);\n\n        case _util.AnnotationType.SQUIGGLY:\n          return new SquigglyAnnotationElement(parameters);\n\n        case _util.AnnotationType.STRIKEOUT:\n          return new StrikeOutAnnotationElement(parameters);\n\n        case _util.AnnotationType.STAMP:\n          return new StampAnnotationElement(parameters);\n\n        case _util.AnnotationType.FILEATTACHMENT:\n          return new FileAttachmentAnnotationElement(parameters);\n\n        default:\n          return new AnnotationElement(parameters);\n      }\n    }\n\n  }\n\n  class AnnotationElement {\n    constructor(parameters, {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false\n    } = {}) {\n      this.isRenderable = isRenderable;\n      this.data = parameters.data;\n      this.layer = parameters.layer;\n      this.page = parameters.page;\n      this.viewport = parameters.viewport;\n      this.linkService = parameters.linkService;\n      this.downloadManager = parameters.downloadManager;\n      this.imageResourcesPath = parameters.imageResourcesPath;\n      this.renderInteractiveForms = parameters.renderInteractiveForms;\n      this.svgFactory = parameters.svgFactory;\n      this.annotationStorage = parameters.annotationStorage;\n      this.enableScripting = parameters.enableScripting;\n      this.hasJSActions = parameters.hasJSActions;\n      this._mouseState = parameters.mouseState;\n\n      if (isRenderable) {\n        this.container = this._createContainer(ignoreBorder);\n      }\n\n      if (createQuadrilaterals) {\n        this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n      }\n    }\n\n    _createContainer(ignoreBorder = false) {\n      const data = this.data,\n            page = this.page,\n            viewport = this.viewport;\n      const container = document.createElement(\"section\");\n      let width = data.rect[2] - data.rect[0];\n      let height = data.rect[3] - data.rect[1];\n      container.setAttribute(\"data-annotation-id\", data.id);\n\n      const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n      container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n      container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n      if (!ignoreBorder && data.borderStyle.width > 0) {\n        container.style.borderWidth = `${data.borderStyle.width}px`;\n\n        if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n          width = width - 2 * data.borderStyle.width;\n          height = height - 2 * data.borderStyle.width;\n        }\n\n        const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n        const verticalRadius = data.borderStyle.verticalCornerRadius;\n\n        if (horizontalRadius > 0 || verticalRadius > 0) {\n          const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n          container.style.borderRadius = radius;\n        }\n\n        switch (data.borderStyle.style) {\n          case _util.AnnotationBorderStyleType.SOLID:\n            container.style.borderStyle = \"solid\";\n            break;\n\n          case _util.AnnotationBorderStyleType.DASHED:\n            container.style.borderStyle = \"dashed\";\n            break;\n\n          case _util.AnnotationBorderStyleType.BEVELED:\n            (0, _util.warn)(\"Unimplemented border style: beveled\");\n            break;\n\n          case _util.AnnotationBorderStyleType.INSET:\n            (0, _util.warn)(\"Unimplemented border style: inset\");\n            break;\n\n          case _util.AnnotationBorderStyleType.UNDERLINE:\n            container.style.borderBottomStyle = \"solid\";\n            break;\n\n          default:\n            break;\n        }\n\n        if (data.color) {\n          container.style.borderColor = _util.Util.makeHexColor(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n        } else {\n          container.style.borderWidth = 0;\n        }\n      }\n\n      container.style.left = `${rect[0]}px`;\n      container.style.top = `${rect[1]}px`;\n      container.style.width = `${width}px`;\n      container.style.height = `${height}px`;\n      return container;\n    }\n\n    _createQuadrilaterals(ignoreBorder = false) {\n      if (!this.data.quadPoints) {\n        return null;\n      }\n\n      const quadrilaterals = [];\n      const savedRect = this.data.rect;\n\n      for (const quadPoint of this.data.quadPoints) {\n        this.data.rect = [quadPoint[2].x, quadPoint[2].y, quadPoint[1].x, quadPoint[1].y];\n        quadrilaterals.push(this._createContainer(ignoreBorder));\n      }\n\n      this.data.rect = savedRect;\n      return quadrilaterals;\n    }\n\n    _createPopup(trigger, data) {\n      let container = this.container;\n\n      if (this.quadrilaterals) {\n        trigger = trigger || this.quadrilaterals;\n        container = this.quadrilaterals[0];\n      }\n\n      if (!trigger) {\n        trigger = document.createElement(\"div\");\n        trigger.style.height = container.style.height;\n        trigger.style.width = container.style.width;\n        container.appendChild(trigger);\n      }\n\n      const popupElement = new PopupElement({\n        container,\n        trigger,\n        color: data.color,\n        title: data.title,\n        modificationDate: data.modificationDate,\n        contents: data.contents,\n        hideWrapper: true\n      });\n      const popup = popupElement.render();\n      popup.style.left = container.style.width;\n      container.appendChild(popup);\n    }\n\n    _renderQuadrilaterals(className) {\n      this.quadrilaterals.forEach(quadrilateral => {\n        quadrilateral.className = className;\n      });\n      return this.quadrilaterals;\n    }\n\n    render() {\n      (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n    }\n\n  }\n\n  class LinkAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action || parameters.data.isTooltipOnly || parameters.data.actions && (parameters.data.actions.Action || parameters.data.actions[\"Mouse Up\"] || parameters.data.actions[\"Mouse Down\"]));\n      super(parameters, {\n        isRenderable,\n        createQuadrilaterals: true\n      });\n    }\n\n    render() {\n      const {\n        data,\n        linkService\n      } = this;\n      const link = document.createElement(\"a\");\n\n      if (data.url) {\n        (0, _display_utils.addLinkAttributes)(link, {\n          url: data.url,\n          target: data.newWindow ? _display_utils.LinkTarget.BLANK : linkService.externalLinkTarget,\n          rel: linkService.externalLinkRel,\n          enabled: linkService.externalLinkEnabled\n        });\n      } else if (data.action) {\n        this._bindNamedAction(link, data.action);\n      } else if (data.dest) {\n        this._bindLink(link, data.dest);\n      } else if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n        this._bindJSAction(link, data);\n      } else {\n        this._bindLink(link, \"\");\n      }\n\n      if (this.quadrilaterals) {\n        return this._renderQuadrilaterals(\"linkAnnotation\").map((quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        });\n      }\n\n      this.container.className = \"linkAnnotation\";\n      this.container.appendChild(link);\n      return this.container;\n    }\n\n    _bindLink(link, destination) {\n      link.href = this.linkService.getDestinationHash(destination);\n\n      link.onclick = () => {\n        if (destination) {\n          this.linkService.goToDestination(destination);\n        }\n\n        return false;\n      };\n\n      if (destination || destination === \"\") {\n        link.className = \"internalLink\";\n      }\n    }\n\n    _bindNamedAction(link, action) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n\n      link.onclick = () => {\n        this.linkService.executeNamedAction(action);\n        return false;\n      };\n\n      link.className = \"internalLink\";\n    }\n\n    _bindJSAction(link, data) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n      const map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\n\n      for (const name of Object.keys(data.actions)) {\n        const jsName = map.get(name);\n\n        if (!jsName) {\n          continue;\n        }\n\n        link[jsName] = () => {\n          this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n            source: this,\n            detail: {\n              id: data.id,\n              name\n            }\n          });\n          return false;\n        };\n      }\n\n      link.className = \"internalLink\";\n    }\n\n  }\n\n  class TextAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable\n      });\n    }\n\n    render() {\n      this.container.className = \"textAnnotation\";\n      const image = document.createElement(\"img\");\n      image.style.height = this.container.style.height;\n      image.style.width = this.container.style.width;\n      image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n      image.alt = \"[{{type}} Annotation]\";\n      image.dataset.l10nId = \"text_annotation_type\";\n      image.dataset.l10nArgs = JSON.stringify({\n        type: this.data.name\n      });\n\n      if (!this.data.hasPopup) {\n        this._createPopup(image, this.data);\n      }\n\n      this.container.appendChild(image);\n      return this.container;\n    }\n\n  }\n\n  class WidgetAnnotationElement extends AnnotationElement {\n    render() {\n      if (this.data.alternativeText) {\n        this.container.title = this.data.alternativeText;\n      }\n\n      return this.container;\n    }\n\n    _getKeyModifier(event) {\n      return navigator.platform.includes(\"Win\") && event.ctrlKey || navigator.platform.includes(\"Mac\") && event.metaKey;\n    }\n\n    _setEventListener(element, baseName, eventName, valueGetter) {\n      if (baseName.includes(\"mouse\")) {\n        element.addEventListener(baseName, event => {\n          this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n            source: this,\n            detail: {\n              id: this.data.id,\n              name: eventName,\n              value: valueGetter(event),\n              shift: event.shiftKey,\n              modifier: this._getKeyModifier(event)\n            }\n          });\n        });\n      } else {\n        element.addEventListener(baseName, event => {\n          this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n            source: this,\n            detail: {\n              id: this.data.id,\n              name: eventName,\n              value: event.target.checked\n            }\n          });\n        });\n      }\n    }\n\n    _setEventListeners(element, names, getter) {\n      for (const [baseName, eventName] of names) {\n        if (eventName === \"Action\" || this.data.actions && this.data.actions[eventName]) { // lwf\n          this._setEventListener(element, baseName, eventName, getter);\n        }\n      }\n    }\n\n  }\n\n  class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n    constructor(parameters) {\n      const isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n      super(parameters, {\n        isRenderable\n      });\n    }\n\n    render() {\n      const storage = this.annotationStorage;\n      const id = this.data.id;\n      this.container.className = \"textWidgetAnnotation\";\n      let element = null;\n\n      if (this.renderInteractiveForms) {\n        const textContent = storage.getOrCreateValue(id, {\n          value: this.data.fieldValue\n        }).value;\n        const elementData = {\n          userValue: null,\n          formattedValue: null,\n          beforeInputSelectionRange: null,\n          beforeInputValue: null\n        };\n\n        if (this.data.multiLine) {\n          element = document.createElement(\"textarea\");\n          element.textContent = textContent;\n        } else {\n          element = document.createElement(\"input\");\n          element.type = \"text\";\n          element.setAttribute(\"value\", textContent);\n        }\n\n        elementData.userValue = textContent;\n        element.setAttribute(\"id\", id);\n        element.addEventListener(\"input\", function (event) {\n          storage.setValue(id, {\n            value: event.target.value\n          });\n        });\n\n        let blurListener = event => {\n          if (elementData.formattedValue) {\n            event.target.value = elementData.formattedValue;\n          }\n\n          event.target.setSelectionRange(0, 0);\n          elementData.beforeInputSelectionRange = null;\n        };\n\n        if (this.enableScripting && this.hasJSActions) {\n          element.addEventListener(\"focus\", event => {\n            if (elementData.userValue) {\n              event.target.value = elementData.userValue;\n            }\n          });\n          element.addEventListener(\"updatefromsandbox\", function (event) {\n            const {\n              detail\n            } = event;\n            const actions = {\n              value() {\n                elementData.userValue = detail.value || \"\";\n                storage.setValue(id, {\n                  value: elementData.userValue.toString()\n                });\n\n                if (!elementData.formattedValue) {\n                  event.target.value = elementData.userValue;\n                }\n              },\n\n              valueAsString() {\n                elementData.formattedValue = detail.valueAsString || \"\";\n\n                if (event.target !== document.activeElement) {\n                  event.target.value = elementData.formattedValue;\n                }\n\n                storage.setValue(id, {\n                  formattedValue: elementData.formattedValue\n                });\n              },\n\n              focus() {\n                setTimeout(() => event.target.focus({\n                  preventScroll: false\n                }), 0);\n              },\n\n              userName() {\n                event.target.title = detail.userName;\n              },\n\n              hidden() {\n                event.target.style.visibility = detail.hidden ? \"hidden\" : \"visible\";\n                storage.setValue(id, {\n                  hidden: detail.hidden\n                });\n              },\n\n              editable() {\n                event.target.disabled = !detail.editable;\n              },\n\n              selRange() {\n                const [selStart, selEnd] = detail.selRange;\n\n                if (selStart >= 0 && selEnd < event.target.value.length) {\n                  event.target.setSelectionRange(selStart, selEnd);\n                }\n              },\n\n              strokeColor() {\n                const color = detail.strokeColor;\n                event.target.style.color = _scripting_utils.ColorConverters[`${color[0]}_HTML`](color.slice(1));\n              }\n\n            };\n            Object.keys(detail).filter(name => name in actions).forEach(name => actions[name]());\n          });\n\n          if (this.data.actions) {\n            element.addEventListener(\"keydown\", event => {\n              elementData.beforeInputValue = event.target.value;\n              let commitKey = -1;\n\n              if (event.key === \"Escape\") {\n                commitKey = 0;\n              } else if (event.key === \"Enter\") {\n                commitKey = 2;\n              } else if (event.key === \"Tab\") {\n                commitKey = 3;\n              }\n\n              if (commitKey === -1) {\n                return;\n              }\n\n              elementData.userValue = event.target.value;\n              this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n                source: this,\n                detail: {\n                  id,\n                  name: \"Keystroke\",\n                  value: event.target.value,\n                  willCommit: true,\n                  commitKey,\n                  selStart: event.target.selectionStart,\n                  selEnd: event.target.selectionEnd\n                }\n              });\n            });\n            const _blurListener = blurListener;\n            blurListener = null;\n            element.addEventListener(\"blur\", event => {\n              if (this._mouseState.isDown) {\n                elementData.userValue = event.target.value;\n                this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n                  source: this,\n                  detail: {\n                    id,\n                    name: \"Keystroke\",\n                    value: event.target.value,\n                    willCommit: true,\n                    commitKey: 1,\n                    selStart: event.target.selectionStart,\n                    selEnd: event.target.selectionEnd\n                  }\n                });\n              }\n\n              _blurListener(event);\n            });\n            element.addEventListener(\"mousedown\", event => {\n              elementData.beforeInputValue = event.target.value;\n              elementData.beforeInputSelectionRange = null;\n            });\n            element.addEventListener(\"keyup\", event => {\n              if (event.target.selectionStart === event.target.selectionEnd) {\n                elementData.beforeInputSelectionRange = null;\n              }\n            });\n            element.addEventListener(\"select\", event => {\n              elementData.beforeInputSelectionRange = [event.target.selectionStart, event.target.selectionEnd];\n            });\n\n            if (\"Keystroke\" in this.data.actions) {\n              element.addEventListener(\"input\", event => {\n                let selStart = -1;\n                let selEnd = -1;\n\n                if (elementData.beforeInputSelectionRange) {\n                  [selStart, selEnd] = elementData.beforeInputSelectionRange;\n                }\n\n                this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n                  source: this,\n                  detail: {\n                    id,\n                    name: \"Keystroke\",\n                    value: elementData.beforeInputValue,\n                    change: event.data,\n                    willCommit: false,\n                    selStart,\n                    selEnd\n                  }\n                });\n              });\n            }\n\n            this._setEventListeners(element, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.value);\n          }\n        }\n\n        if (blurListener) {\n          element.addEventListener(\"blur\", blurListener);\n        }\n\n        element.disabled = this.data.readOnly;\n        element.name = this.data.fieldName;\n\n        if (this.data.maxLen !== null) {\n          element.maxLength = this.data.maxLen;\n        }\n\n        if (this.data.comb) {\n          const fieldWidth = this.data.rect[2] - this.data.rect[0];\n          const combWidth = fieldWidth / this.data.maxLen;\n          element.classList.add(\"comb\");\n          element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n        }\n      } else {\n        element = document.createElement(\"div\");\n        element.textContent = this.data.fieldValue;\n        element.style.verticalAlign = \"middle\";\n        element.style.display = \"table-cell\";\n      }\n\n      this._setTextStyle(element);\n\n      this.container.appendChild(element);\n      return this.container;\n    }\n\n    _setTextStyle(element) {\n      const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n      const {\n        fontSize,\n        fontColor\n      } = this.data.defaultAppearanceData;\n      const style = element.style;\n\n      if (fontSize) {\n        style.fontSize = `${fontSize}px`;\n      }\n\n      style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n      if (this.data.textAlignment !== null) {\n        style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n      }\n    }\n\n  }\n\n  class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n    constructor(parameters) {\n      super(parameters, {\n        isRenderable: parameters.renderInteractiveForms\n      });\n    }\n\n    render() {\n      const storage = this.annotationStorage;\n      const data = this.data;\n      const id = data.id;\n      const value = storage.getOrCreateValue(id, {\n        value: data.fieldValue && data.fieldValue !== \"Off\"\n      }).value;\n      this.container.className = \"buttonWidgetAnnotation checkBox\";\n      const element = document.createElement(\"input\");\n      element.disabled = data.readOnly;\n      element.type = \"checkbox\";\n      element.name = this.data.fieldName;\n\n      if (value) {\n        element.setAttribute(\"checked\", true);\n      }\n\n      element.setAttribute(\"id\", id);\n      element.addEventListener(\"change\", function (event) {\n        const name = event.target.name;\n\n        for (const checkbox of document.getElementsByName(name)) {\n          if (checkbox !== event.target) {\n            checkbox.checked = false;\n            storage.setValue(checkbox.parentNode.getAttribute(\"data-annotation-id\"), {\n              value: false\n            });\n          }\n        }\n\n        storage.setValue(id, {\n          value: event.target.checked\n        });\n      });\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"updatefromsandbox\", event => {\n          const {\n            detail\n          } = event;\n          const actions = {\n            value() {\n              event.target.checked = detail.value !== \"Off\";\n              storage.setValue(id, {\n                value: event.target.checked\n              });\n            },\n\n            focus() {\n              setTimeout(() => event.target.focus({\n                preventScroll: false\n              }), 0);\n            },\n\n            hidden() {\n              event.target.style.visibility = detail.hidden ? \"hidden\" : \"visible\";\n              storage.setValue(id, {\n                hidden: detail.hidden\n              });\n            },\n\n            editable() {\n              event.target.disabled = !detail.editable;\n            }\n\n          };\n          Object.keys(detail).filter(name => name in actions).forEach(name => actions[name]());\n        });\n\n        this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n      }\n\n      this.container.appendChild(element);\n      return this.container;\n    }\n\n  }\n\n  class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n    constructor(parameters) {\n      super(parameters, {\n        isRenderable: parameters.renderInteractiveForms\n      });\n    }\n\n    render() {\n      this.container.className = \"buttonWidgetAnnotation radioButton\";\n      const storage = this.annotationStorage;\n      const data = this.data;\n      const id = data.id;\n      const value = storage.getOrCreateValue(id, {\n        value: data.fieldValue === data.buttonValue\n      }).value;\n      const element = document.createElement(\"input\");\n      element.disabled = data.readOnly;\n      element.type = \"radio\";\n      element.name = data.fieldName;\n\n      if (value) {\n        element.setAttribute(\"checked\", true);\n      }\n\n      element.setAttribute(\"pdfButtonValue\", data.buttonValue);\n      element.setAttribute(\"id\", id);\n      element.addEventListener(\"change\", function (event) {\n        const {\n          target\n        } = event;\n\n        for (const radio of document.getElementsByName(target.name)) {\n          if (radio !== target) {\n            storage.setValue(radio.getAttribute(\"id\"), {\n              value: false\n            });\n          }\n        }\n\n        storage.setValue(id, {\n          value: target.checked\n        });\n      });\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"updatefromsandbox\", event => {\n          const {\n            detail\n          } = event;\n          const actions = {\n            value() {\n              const fieldValue = detail.value;\n\n              for (const radio of document.getElementsByName(event.target.name)) {\n                const radioId = radio.getAttribute(\"id\");\n\n                if (fieldValue === radio.getAttribute(\"pdfButtonValue\")) {\n                  radio.setAttribute(\"checked\", true);\n                  storage.setValue(radioId, {\n                    value: true\n                  });\n                } else {\n                  storage.setValue(radioId, {\n                    value: false\n                  });\n                }\n              }\n            },\n\n            focus() {\n              setTimeout(() => event.target.focus({\n                preventScroll: false\n              }), 0);\n            },\n\n            hidden() {\n              event.target.style.visibility = detail.hidden ? \"hidden\" : \"visible\";\n              storage.setValue(id, {\n                hidden: detail.hidden\n              });\n            },\n\n            editable() {\n              event.target.disabled = !detail.editable;\n            }\n\n          };\n          Object.keys(detail).filter(name => name in actions).forEach(name => actions[name]());\n        });\n\n        this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n      }\n\n      this.container.appendChild(element);\n      return this.container;\n    }\n\n  }\n\n  class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n    render() {\n      const container = super.render();\n      container.className = \"buttonWidgetAnnotation pushButton\";\n\n      if (this.data.alternativeText) {\n        container.title = this.data.alternativeText;\n      }\n\n      return container;\n    }\n\n  }\n\n  class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n    constructor(parameters) {\n      super(parameters, {\n        isRenderable: parameters.renderInteractiveForms\n      });\n    }\n\n    render() {\n      this.container.className = \"choiceWidgetAnnotation\";\n      const storage = this.annotationStorage;\n      const id = this.data.id;\n      storage.getOrCreateValue(id, {\n        value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined\n      });\n      const selectElement = document.createElement(\"select\");\n      selectElement.disabled = this.data.readOnly;\n      selectElement.name = this.data.fieldName;\n      selectElement.setAttribute(\"id\", id);\n\n      if (!this.data.combo) {\n        selectElement.size = this.data.options.length;\n\n        if (this.data.multiSelect) {\n          selectElement.multiple = true;\n        }\n      }\n\n      for (const option of this.data.options) {\n        const optionElement = document.createElement(\"option\");\n        optionElement.textContent = option.displayValue;\n        optionElement.value = option.exportValue;\n\n        if (this.data.fieldValue.includes(option.exportValue)) {\n          optionElement.setAttribute(\"selected\", true);\n        }\n\n        selectElement.appendChild(optionElement);\n      }\n\n      function getValue(event) {\n        const options = event.target.options;\n        return options[options.selectedIndex].value;\n      }\n\n      if (this.enableScripting && this.hasJSActions) {\n        selectElement.addEventListener(\"updatefromsandbox\", event => {\n          const {\n            detail\n          } = event;\n          const actions = {\n            value() {\n              const options = event.target.options;\n              const value = detail.value;\n              const i = options.indexOf(value);\n\n              if (i !== -1) {\n                options.selectedIndex = i;\n                storage.setValue(id, {\n                  value\n                });\n              }\n            },\n\n            focus() {\n              setTimeout(() => event.target.focus({\n                preventScroll: false\n              }), 0);\n            },\n\n            hidden() {\n              event.target.style.visibility = detail.hidden ? \"hidden\" : \"visible\";\n              storage.setValue(id, {\n                hidden: detail.hidden\n              });\n            },\n\n            editable() {\n              event.target.disabled = !detail.editable;\n            }\n\n          };\n          Object.keys(detail).filter(name => name in actions).forEach(name => actions[name]());\n        });\n        selectElement.addEventListener(\"input\", event => {\n          const value = getValue(event);\n          storage.setValue(id, {\n            value\n          });\n          this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { //lwf\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              changeEx: value,\n              willCommit: true,\n              commitKey: 1,\n              keyDown: false\n            }\n          });\n        });\n\n        this._setEventListeners(selectElement, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n      } else {\n        selectElement.addEventListener(\"input\", function (event) {\n          storage.setValue(id, {\n            value: getValue(event)\n          });\n        });\n      }\n\n      this.container.appendChild(selectElement);\n      return this.container;\n    }\n\n  }\n\n  class PopupAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable\n      });\n    }\n\n    render() {\n      const IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n      this.container.className = \"popupAnnotation\";\n\n      if (IGNORE_TYPES.includes(this.data.parentType)) {\n        return this.container;\n      }\n\n      const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n      const parentElements = this.layer.querySelectorAll(selector);\n\n      if (parentElements.length === 0) {\n        return this.container;\n      }\n\n      const popup = new PopupElement({\n        container: this.container,\n        trigger: Array.from(parentElements),\n        color: this.data.color,\n        title: this.data.title,\n        modificationDate: this.data.modificationDate,\n        contents: this.data.contents\n      });\n      const page = this.page;\n\n      const rect = _util.Util.normalizeRect([this.data.parentRect[0], page.view[3] - this.data.parentRect[1] + page.view[1], this.data.parentRect[2], page.view[3] - this.data.parentRect[3] + page.view[1]]);\n\n      const popupLeft = rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n      const popupTop = rect[1];\n      this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n      this.container.style.left = `${popupLeft}px`;\n      this.container.style.top = `${popupTop}px`;\n      this.container.appendChild(popup.render());\n      return this.container;\n    }\n\n  }\n\n  class PopupElement {\n    constructor(parameters) {\n      this.container = parameters.container;\n      this.trigger = parameters.trigger;\n      this.color = parameters.color;\n      this.title = parameters.title;\n      this.modificationDate = parameters.modificationDate;\n      this.contents = parameters.contents;\n      this.hideWrapper = parameters.hideWrapper || false;\n      this.pinned = false;\n    }\n\n    render() {\n      const BACKGROUND_ENLIGHT = 0.7;\n      const wrapper = document.createElement(\"div\");\n      wrapper.className = \"popupWrapper\";\n      this.hideElement = this.hideWrapper ? wrapper : this.container;\n      this.hideElement.setAttribute(\"hidden\", true);\n      const popup = document.createElement(\"div\");\n      popup.className = \"popup\";\n      const color = this.color;\n\n      if (color) {\n        const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n        const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n        const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n        popup.style.backgroundColor = _util.Util.makeHexColor(r | 0, g | 0, b | 0);\n      }\n\n      const title = document.createElement(\"h1\");\n      title.textContent = this.title;\n      popup.appendChild(title);\n\n      const dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n\n      if (dateObject) {\n        const modificationDate = document.createElement(\"span\");\n        modificationDate.textContent = \"{{date}}, {{time}}\";\n        modificationDate.dataset.l10nId = \"annotation_date_string\";\n        modificationDate.dataset.l10nArgs = JSON.stringify({\n          date: dateObject.toLocaleDateString(),\n          time: dateObject.toLocaleTimeString()\n        });\n        popup.appendChild(modificationDate);\n      }\n\n      const contents = this._formatContents(this.contents);\n\n      popup.appendChild(contents);\n\n      if (!Array.isArray(this.trigger)) {\n        this.trigger = [this.trigger];\n      }\n\n      this.trigger.forEach(element => {\n        element.addEventListener(\"click\", this._toggle.bind(this));\n        element.addEventListener(\"mouseover\", this._show.bind(this, false));\n        element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n      });\n      popup.addEventListener(\"click\", this._hide.bind(this, true));\n      wrapper.appendChild(popup);\n      return wrapper;\n    }\n\n    _formatContents(contents) {\n      const p = document.createElement(\"p\");\n      const lines = contents.split(/(?:\\r\\n?|\\n)/);\n\n      for (let i = 0, ii = lines.length; i < ii; ++i) {\n        const line = lines[i];\n        p.appendChild(document.createTextNode(line));\n\n        if (i < ii - 1) {\n          p.appendChild(document.createElement(\"br\"));\n        }\n      }\n\n      return p;\n    }\n\n    _toggle() {\n      if (this.pinned) {\n        this._hide(true);\n      } else {\n        this._show(true);\n      }\n    }\n\n    _show(pin = false) {\n      if (pin) {\n        this.pinned = true;\n      }\n\n      if (this.hideElement.hasAttribute(\"hidden\")) {\n        this.hideElement.removeAttribute(\"hidden\");\n        this.container.style.zIndex += 1;\n      }\n    }\n\n    _hide(unpin = true) {\n      if (unpin) {\n        this.pinned = false;\n      }\n\n      if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n        this.hideElement.setAttribute(\"hidden\", true);\n        this.container.style.zIndex -= 1;\n      }\n    }\n\n  }\n\n  class FreeTextAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"freeTextAnnotation\";\n\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      return this.container;\n    }\n\n  }\n\n  class LineAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"lineAnnotation\";\n      const data = this.data;\n      const width = data.rect[2] - data.rect[0];\n      const height = data.rect[3] - data.rect[1];\n      const svg = this.svgFactory.create(width, height);\n      const line = this.svgFactory.createElement(\"svg:line\");\n      line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n      line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n      line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n      line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n      line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      line.setAttribute(\"stroke\", \"transparent\");\n      svg.appendChild(line);\n      this.container.append(svg);\n\n      this._createPopup(line, data);\n\n      return this.container;\n    }\n\n  }\n\n  class SquareAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"squareAnnotation\";\n      const data = this.data;\n      const width = data.rect[2] - data.rect[0];\n      const height = data.rect[3] - data.rect[1];\n      const svg = this.svgFactory.create(width, height);\n      const borderWidth = data.borderStyle.width;\n      const square = this.svgFactory.createElement(\"svg:rect\");\n      square.setAttribute(\"x\", borderWidth / 2);\n      square.setAttribute(\"y\", borderWidth / 2);\n      square.setAttribute(\"width\", width - borderWidth);\n      square.setAttribute(\"height\", height - borderWidth);\n      square.setAttribute(\"stroke-width\", borderWidth || 1);\n      square.setAttribute(\"stroke\", \"transparent\");\n      square.setAttribute(\"fill\", \"none\");\n      svg.appendChild(square);\n      this.container.append(svg);\n\n      this._createPopup(square, data);\n\n      return this.container;\n    }\n\n  }\n\n  class CircleAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"circleAnnotation\";\n      const data = this.data;\n      const width = data.rect[2] - data.rect[0];\n      const height = data.rect[3] - data.rect[1];\n      const svg = this.svgFactory.create(width, height);\n      const borderWidth = data.borderStyle.width;\n      const circle = this.svgFactory.createElement(\"svg:ellipse\");\n      circle.setAttribute(\"cx\", width / 2);\n      circle.setAttribute(\"cy\", height / 2);\n      circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n      circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n      circle.setAttribute(\"stroke-width\", borderWidth || 1);\n      circle.setAttribute(\"stroke\", \"transparent\");\n      circle.setAttribute(\"fill\", \"none\");\n      svg.appendChild(circle);\n      this.container.append(svg);\n\n      this._createPopup(circle, data);\n\n      return this.container;\n    }\n\n  }\n\n  class PolylineAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n      this.containerClassName = \"polylineAnnotation\";\n      this.svgElementName = \"svg:polyline\";\n    }\n\n    render() {\n      this.container.className = this.containerClassName;\n      const data = this.data;\n      const width = data.rect[2] - data.rect[0];\n      const height = data.rect[3] - data.rect[1];\n      const svg = this.svgFactory.create(width, height);\n      let points = [];\n\n      for (const coordinate of data.vertices) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(x + \",\" + y);\n      }\n\n      points = points.join(\" \");\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n      svg.appendChild(polyline);\n      this.container.append(svg);\n\n      this._createPopup(polyline, data);\n\n      return this.container;\n    }\n\n  }\n\n  class PolygonAnnotationElement extends PolylineAnnotationElement {\n    constructor(parameters) {\n      super(parameters);\n      this.containerClassName = \"polygonAnnotation\";\n      this.svgElementName = \"svg:polygon\";\n    }\n\n  }\n\n  class CaretAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"caretAnnotation\";\n\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      return this.container;\n    }\n\n  }\n\n  class InkAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n      this.containerClassName = \"inkAnnotation\";\n      this.svgElementName = \"svg:polyline\";\n    }\n\n    render() {\n      this.container.className = this.containerClassName;\n      const data = this.data;\n      const width = data.rect[2] - data.rect[0];\n      const height = data.rect[3] - data.rect[1];\n      const svg = this.svgFactory.create(width, height);\n\n      for (const inkList of data.inkLists) {\n        let points = [];\n\n        for (const coordinate of inkList) {\n          const x = coordinate.x - data.rect[0];\n          const y = data.rect[3] - coordinate.y;\n          points.push(`${x},${y}`);\n        }\n\n        points = points.join(\" \");\n        const polyline = this.svgFactory.createElement(this.svgElementName);\n        polyline.setAttribute(\"points\", points);\n        polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n        polyline.setAttribute(\"stroke\", \"transparent\");\n        polyline.setAttribute(\"fill\", \"none\");\n\n        this._createPopup(polyline, data);\n\n        svg.appendChild(polyline);\n      }\n\n      this.container.append(svg);\n      return this.container;\n    }\n\n  }\n\n  class HighlightAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true,\n        createQuadrilaterals: true\n      });\n    }\n\n    render() {\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      if (this.quadrilaterals) {\n        return this._renderQuadrilaterals(\"highlightAnnotation\");\n      }\n\n      this.container.className = \"highlightAnnotation\";\n      return this.container;\n    }\n\n  }\n\n  class UnderlineAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true,\n        createQuadrilaterals: true\n      });\n    }\n\n    render() {\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      if (this.quadrilaterals) {\n        return this._renderQuadrilaterals(\"underlineAnnotation\");\n      }\n\n      this.container.className = \"underlineAnnotation\";\n      return this.container;\n    }\n\n  }\n\n  class SquigglyAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true,\n        createQuadrilaterals: true\n      });\n    }\n\n    render() {\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      if (this.quadrilaterals) {\n        return this._renderQuadrilaterals(\"squigglyAnnotation\");\n      }\n\n      this.container.className = \"squigglyAnnotation\";\n      return this.container;\n    }\n\n  }\n\n  class StrikeOutAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true,\n        createQuadrilaterals: true\n      });\n    }\n\n    render() {\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      if (this.quadrilaterals) {\n        return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n      }\n\n      this.container.className = \"strikeoutAnnotation\";\n      return this.container;\n    }\n\n  }\n\n  class StampAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"stampAnnotation\";\n\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      return this.container;\n    }\n\n  }\n\n  class FileAttachmentAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      super(parameters, {\n        isRenderable: true\n      });\n      const {\n        filename,\n        content\n      } = this.data.file;\n      this.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n      this.content = content;\n      this.linkService.eventBus && this.linkService.eventBus.dispatch(\"fileattachmentannotation\", { // lwf\n        source: this,\n        id: (0, _util.stringToPDFString)(filename),\n        filename,\n        content\n      });\n    }\n\n    render() {\n      this.container.className = \"fileAttachmentAnnotation\";\n      const trigger = document.createElement(\"div\");\n      trigger.style.height = this.container.style.height;\n      trigger.style.width = this.container.style.width;\n      trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n      if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n        this._createPopup(trigger, this.data);\n      }\n\n      this.container.appendChild(trigger);\n      return this.container;\n    }\n\n    _download() {\n      if (!this.downloadManager) {\n        (0, _util.warn)(\"Download cannot be started due to unavailable download manager\");\n        return;\n      }\n\n      this.downloadManager.downloadData(this.content, this.filename, \"\");\n    }\n\n  }\n\n  class AnnotationLayer {\n    static render(parameters) {\n      const sortedAnnotations = [],\n            popupAnnotations = [];\n\n      for (const data of parameters.annotations) {\n        if (!data) {\n          continue;\n        }\n\n        if (data.annotationType === _util.AnnotationType.POPUP) {\n          popupAnnotations.push(data);\n          continue;\n        }\n\n        sortedAnnotations.push(data);\n      }\n\n      if (popupAnnotations.length) {\n        sortedAnnotations.push(...popupAnnotations);\n      }\n\n      for (const data of sortedAnnotations) {\n        const element = AnnotationElementFactory.create({\n          data,\n          layer: parameters.div,\n          page: parameters.page,\n          viewport: parameters.viewport,\n          linkService: parameters.linkService,\n          downloadManager: parameters.downloadManager,\n          imageResourcesPath: parameters.imageResourcesPath || \"\",\n          renderInteractiveForms: typeof parameters.renderInteractiveForms === \"boolean\" ? parameters.renderInteractiveForms : true,\n          svgFactory: new _display_utils.DOMSVGFactory(),\n          annotationStorage: parameters.annotationStorage || new _annotation_storage.AnnotationStorage(),\n          enableScripting: parameters.enableScripting,\n          hasJSActions: parameters.hasJSActions,\n          mouseState: parameters.mouseState || {\n            isDown: false\n          }\n        });\n\n        if (element.isRenderable) {\n          const rendered = element.render();\n\n          if (data.hidden) {\n            rendered.style.visibility = \"hidden\";\n          }\n\n          if (Array.isArray(rendered)) {\n            for (const renderedElement of rendered) {\n              parameters.div.appendChild(renderedElement);\n            }\n          } else {\n            if (element instanceof PopupAnnotationElement) {\n              parameters.div.prepend(rendered);\n            } else {\n              parameters.div.appendChild(rendered);\n            }\n          }\n        }\n      }\n    }\n\n    static update(parameters) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n\n      for (const data of parameters.annotations) {\n        const elements = parameters.div.querySelectorAll(`[data-annotation-id=\"${data.id}\"]`);\n\n        if (elements) {\n          elements.forEach(element => {\n            element.style.transform = transform;\n          });\n        }\n      }\n\n      parameters.div.removeAttribute(\"hidden\");\n    }\n\n  }\n\n  exports.AnnotationLayer = AnnotationLayer;\n\n  /***/ }),\n  /* 20 */\n  /***/ ((__unused_webpack_module, exports) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.ColorConverters = void 0;\n\n  function makeColorComp(n) {\n    return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n  }\n\n  class ColorConverters {\n    static CMYK_G([c, y, m, k]) {\n      return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n    }\n\n    static G_CMYK([g]) {\n      return [\"CMYK\", 0, 0, 0, 1 - g];\n    }\n\n    static G_RGB([g]) {\n      return [\"RGB\", g, g, g];\n    }\n\n    static G_HTML([g]) {\n      const G = makeColorComp(g);\n      return `#${G}${G}${G}`;\n    }\n\n    static RGB_G([r, g, b]) {\n      return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n    }\n\n    static RGB_HTML([r, g, b]) {\n      const R = makeColorComp(r);\n      const G = makeColorComp(g);\n      const B = makeColorComp(b);\n      return `#${R}${G}${B}`;\n    }\n\n    static T_HTML() {\n      return \"#00000000\";\n    }\n\n    static CMYK_RGB([c, y, m, k]) {\n      return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n    }\n\n    static CMYK_HTML(components) {\n      return this.RGB_HTML(this.CMYK_RGB(components));\n    }\n\n    static RGB_CMYK([r, g, b]) {\n      const c = 1 - r;\n      const m = 1 - g;\n      const y = 1 - b;\n      const k = Math.min(c, m, y);\n      return [\"CMYK\", c, m, y, k];\n    }\n\n  }\n\n  exports.ColorConverters = ColorConverters;\n\n  /***/ }),\n  /* 21 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.renderTextLayer = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  const renderTextLayer = function renderTextLayerClosure() {\n    const MAX_TEXT_DIVS_TO_RENDER = 100000;\n    const NonWhitespaceRegexp = /\\S/;\n\n    function isAllWhitespace(str) {\n      return !NonWhitespaceRegexp.test(str);\n    }\n\n    function appendText(task, geom, styles) {\n      const textDiv = document.createElement(\"span\");\n      const textDivProperties = {\n        angle: 0,\n        canvasWidth: 0,\n        isWhitespace: false,\n        originalTransform: null,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        scale: 1\n      };\n\n      task._textDivs.push(textDiv);\n\n      if (isAllWhitespace(geom.str)) {\n        textDivProperties.isWhitespace = true;\n\n        task._textDivProperties.set(textDiv, textDivProperties);\n\n        return;\n      }\n\n      const tx = _util.Util.transform(task._viewport.transform, geom.transform);\n\n      let angle = Math.atan2(tx[1], tx[0]);\n      const style = styles[geom.fontName];\n\n      if (style.vertical) {\n        angle += Math.PI / 2;\n      }\n\n      const fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n      let fontAscent = fontHeight;\n\n      if (style.ascent) {\n        fontAscent = style.ascent * fontAscent;\n      } else if (style.descent) {\n        fontAscent = (1 + style.descent) * fontAscent;\n      }\n\n      let left, top;\n\n      if (angle === 0) {\n        left = tx[4];\n        top = tx[5] - fontAscent;\n      } else {\n        left = tx[4] + fontAscent * Math.sin(angle);\n        top = tx[5] - fontAscent * Math.cos(angle);\n      }\n\n      textDiv.style.left = `${left}px`;\n      textDiv.style.top = `${top}px`;\n      textDiv.style.fontSize = `${fontHeight}px`;\n      textDiv.style.fontFamily = style.fontFamily;\n      textDiv.textContent = geom.str;\n\n      if (task._fontInspectorEnabled) {\n        textDiv.dataset.fontName = geom.fontName;\n      }\n\n      if (angle !== 0) {\n        textDivProperties.angle = angle * (180 / Math.PI);\n      }\n\n      let shouldScaleText = false;\n\n      if (geom.str.length > 1) {\n        shouldScaleText = true;\n      } else if (geom.transform[0] !== geom.transform[3]) {\n        const absScaleX = Math.abs(geom.transform[0]),\n              absScaleY = Math.abs(geom.transform[3]);\n\n        if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n          shouldScaleText = true;\n        }\n      }\n\n      if (shouldScaleText) {\n        if (style.vertical) {\n          textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n        } else {\n          textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n        }\n      }\n\n      task._textDivProperties.set(textDiv, textDivProperties);\n\n      if (task._textContentStream) {\n        task._layoutText(textDiv);\n      }\n\n      if (task._enhanceTextSelection) {\n        let angleCos = 1,\n            angleSin = 0;\n\n        if (angle !== 0) {\n          angleCos = Math.cos(angle);\n          angleSin = Math.sin(angle);\n        }\n\n        const divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n        const divHeight = fontHeight;\n        let m, b;\n\n        if (angle !== 0) {\n          m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n          b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n        } else {\n          b = [left, top, left + divWidth, top + divHeight];\n        }\n\n        task._bounds.push({\n          left: b[0],\n          top: b[1],\n          right: b[2],\n          bottom: b[3],\n          div: textDiv,\n          size: [divWidth, divHeight],\n          m\n        });\n      }\n    }\n\n    function render(task) {\n      if (task._canceled) {\n        return;\n      }\n\n      const textDivs = task._textDivs;\n      const capability = task._capability;\n      const textDivsLength = textDivs.length;\n\n      if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n        task._renderingDone = true;\n        capability.resolve();\n        return;\n      }\n\n      if (!task._textContentStream) {\n        for (let i = 0; i < textDivsLength; i++) {\n          task._layoutText(textDivs[i]);\n        }\n      }\n\n      task._renderingDone = true;\n      capability.resolve();\n    }\n\n    function findPositiveMin(ts, offset, count) {\n      let result = 0;\n\n      for (let i = 0; i < count; i++) {\n        const t = ts[offset++];\n\n        if (t > 0) {\n          result = result ? Math.min(t, result) : t;\n        }\n      }\n\n      return result;\n    }\n\n    function expand(task) {\n      const bounds = task._bounds;\n      const viewport = task._viewport;\n      const expanded = expandBounds(viewport.width, viewport.height, bounds);\n\n      for (let i = 0; i < expanded.length; i++) {\n        const div = bounds[i].div;\n\n        const divProperties = task._textDivProperties.get(div);\n\n        if (divProperties.angle === 0) {\n          divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n          divProperties.paddingTop = bounds[i].top - expanded[i].top;\n          divProperties.paddingRight = expanded[i].right - bounds[i].right;\n          divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n\n          task._textDivProperties.set(div, divProperties);\n\n          continue;\n        }\n\n        const e = expanded[i],\n              b = bounds[i];\n        const m = b.m,\n              c = m[0],\n              s = m[1];\n        const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n        const ts = new Float64Array(64);\n        points.forEach(function (p, j) {\n          const t = _util.Util.applyTransform(p, m);\n\n          ts[j + 0] = c && (e.left - t[0]) / c;\n          ts[j + 4] = s && (e.top - t[1]) / s;\n          ts[j + 8] = c && (e.right - t[0]) / c;\n          ts[j + 12] = s && (e.bottom - t[1]) / s;\n          ts[j + 16] = s && (e.left - t[0]) / -s;\n          ts[j + 20] = c && (e.top - t[1]) / c;\n          ts[j + 24] = s && (e.right - t[0]) / -s;\n          ts[j + 28] = c && (e.bottom - t[1]) / c;\n          ts[j + 32] = c && (e.left - t[0]) / -c;\n          ts[j + 36] = s && (e.top - t[1]) / -s;\n          ts[j + 40] = c && (e.right - t[0]) / -c;\n          ts[j + 44] = s && (e.bottom - t[1]) / -s;\n          ts[j + 48] = s && (e.left - t[0]) / s;\n          ts[j + 52] = c && (e.top - t[1]) / -c;\n          ts[j + 56] = s && (e.right - t[0]) / s;\n          ts[j + 60] = c && (e.bottom - t[1]) / -c;\n        });\n        const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n        divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n        divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n        divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n        divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n\n        task._textDivProperties.set(div, divProperties);\n      }\n    }\n\n    function expandBounds(width, height, boxes) {\n      const bounds = boxes.map(function (box, i) {\n        return {\n          x1: box.left,\n          y1: box.top,\n          x2: box.right,\n          y2: box.bottom,\n          index: i,\n          x1New: undefined,\n          x2New: undefined\n        };\n      });\n      expandBoundsLTR(width, bounds);\n      const expanded = new Array(boxes.length);\n      bounds.forEach(function (b) {\n        const i = b.index;\n        expanded[i] = {\n          left: b.x1New,\n          top: 0,\n          right: b.x2New,\n          bottom: 0\n        };\n      });\n      boxes.map(function (box, i) {\n        const e = expanded[i],\n              b = bounds[i];\n        b.x1 = box.top;\n        b.y1 = width - e.right;\n        b.x2 = box.bottom;\n        b.y2 = width - e.left;\n        b.index = i;\n        b.x1New = undefined;\n        b.x2New = undefined;\n      });\n      expandBoundsLTR(height, bounds);\n      bounds.forEach(function (b) {\n        const i = b.index;\n        expanded[i].top = b.x1New;\n        expanded[i].bottom = b.x2New;\n      });\n      return expanded;\n    }\n\n    function expandBoundsLTR(width, bounds) {\n      bounds.sort(function (a, b) {\n        return a.x1 - b.x1 || a.index - b.index;\n      });\n      const fakeBoundary = {\n        x1: -Infinity,\n        y1: -Infinity,\n        x2: 0,\n        y2: Infinity,\n        index: -1,\n        x1New: 0,\n        x2New: 0\n      };\n      const horizon = [{\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary\n      }];\n      bounds.forEach(function (boundary) {\n        let i = 0;\n\n        while (i < horizon.length && horizon[i].end <= boundary.y1) {\n          i++;\n        }\n\n        let j = horizon.length - 1;\n\n        while (j >= 0 && horizon[j].start >= boundary.y2) {\n          j--;\n        }\n\n        let horizonPart, affectedBoundary;\n        let q,\n            k,\n            maxXNew = -Infinity;\n\n        for (q = i; q <= j; q++) {\n          horizonPart = horizon[q];\n          affectedBoundary = horizonPart.boundary;\n          let xNew;\n\n          if (affectedBoundary.x2 > boundary.x1) {\n            xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n          } else if (affectedBoundary.x2New === undefined) {\n            xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n          } else {\n            xNew = affectedBoundary.x2New;\n          }\n\n          if (xNew > maxXNew) {\n            maxXNew = xNew;\n          }\n        }\n\n        boundary.x1New = maxXNew;\n\n        for (q = i; q <= j; q++) {\n          horizonPart = horizon[q];\n          affectedBoundary = horizonPart.boundary;\n\n          if (affectedBoundary.x2New === undefined) {\n            if (affectedBoundary.x2 > boundary.x1) {\n              if (affectedBoundary.index > boundary.index) {\n                affectedBoundary.x2New = affectedBoundary.x2;\n              }\n            } else {\n              affectedBoundary.x2New = maxXNew;\n            }\n          } else if (affectedBoundary.x2New > maxXNew) {\n            affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n          }\n        }\n\n        const changedHorizon = [];\n        let lastBoundary = null;\n\n        for (q = i; q <= j; q++) {\n          horizonPart = horizon[q];\n          affectedBoundary = horizonPart.boundary;\n          const useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n\n          if (lastBoundary === useBoundary) {\n            changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n          } else {\n            changedHorizon.push({\n              start: horizonPart.start,\n              end: horizonPart.end,\n              boundary: useBoundary\n            });\n            lastBoundary = useBoundary;\n          }\n        }\n\n        if (horizon[i].start < boundary.y1) {\n          changedHorizon[0].start = boundary.y1;\n          changedHorizon.unshift({\n            start: horizon[i].start,\n            end: boundary.y1,\n            boundary: horizon[i].boundary\n          });\n        }\n\n        if (boundary.y2 < horizon[j].end) {\n          changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n          changedHorizon.push({\n            start: boundary.y2,\n            end: horizon[j].end,\n            boundary: horizon[j].boundary\n          });\n        }\n\n        for (q = i; q <= j; q++) {\n          horizonPart = horizon[q];\n          affectedBoundary = horizonPart.boundary;\n\n          if (affectedBoundary.x2New !== undefined) {\n            continue;\n          }\n\n          let used = false;\n\n          for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n            used = horizon[k].boundary === affectedBoundary;\n          }\n\n          for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n            used = horizon[k].boundary === affectedBoundary;\n          }\n\n          for (k = 0; !used && k < changedHorizon.length; k++) {\n            used = changedHorizon[k].boundary === affectedBoundary;\n          }\n\n          if (!used) {\n            affectedBoundary.x2New = maxXNew;\n          }\n        }\n\n        Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n      });\n      horizon.forEach(function (horizonPart) {\n        const affectedBoundary = horizonPart.boundary;\n\n        if (affectedBoundary.x2New === undefined) {\n          affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n        }\n      });\n    }\n\n    function TextLayerRenderTask({\n      textContent,\n      textContentStream,\n      container,\n      viewport,\n      textDivs,\n      textContentItemsStr,\n      enhanceTextSelection\n    }) {\n      this._textContent = textContent;\n      this._textContentStream = textContentStream;\n      this._container = container;\n      this._document = container.ownerDocument;\n      this._viewport = viewport;\n      this._textDivs = textDivs || [];\n      this._textContentItemsStr = textContentItemsStr || [];\n      this._enhanceTextSelection = !!enhanceTextSelection;\n      this._fontInspectorEnabled = !!(globalThis.FontInspector && globalThis.FontInspector.enabled); // lwf\n      this._reader = null;\n      this._layoutTextLastFontSize = null;\n      this._layoutTextLastFontFamily = null;\n      this._layoutTextCtx = null;\n      this._textDivProperties = new WeakMap();\n      this._renderingDone = false;\n      this._canceled = false;\n      this._capability = (0, _util.createPromiseCapability)();\n      this._renderTimer = null;\n      this._bounds = [];\n\n      this._capability.promise.finally(() => {\n        if (this._layoutTextCtx) {\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      }).catch(() => {});\n    }\n\n    TextLayerRenderTask.prototype = {\n      get promise() {\n        return this._capability.promise;\n      },\n\n      cancel: function TextLayer_cancel() {\n        this._canceled = true;\n\n        if (this._reader) {\n          this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\"));\n\n          this._reader = null;\n        }\n\n        if (this._renderTimer !== null) {\n          clearTimeout(this._renderTimer);\n          this._renderTimer = null;\n        }\n\n        this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n      },\n\n      _processItems(items, styleCache) {\n        for (let i = 0, len = items.length; i < len; i++) {\n          this._textContentItemsStr.push(items[i].str);\n\n          appendText(this, items[i], styleCache);\n        }\n      },\n\n      _layoutText(textDiv) {\n        const textDivProperties = this._textDivProperties.get(textDiv);\n\n        if (textDivProperties.isWhitespace) {\n          return;\n        }\n\n        let transform = \"\";\n\n        if (textDivProperties.canvasWidth !== 0) {\n          const {\n            fontSize,\n            fontFamily\n          } = textDiv.style;\n\n          if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n            this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n            this._layoutTextLastFontSize = fontSize;\n            this._layoutTextLastFontFamily = fontFamily;\n          }\n\n          const {\n            width\n          } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n          if (width > 0) {\n            textDivProperties.scale = textDivProperties.canvasWidth / width;\n            transform = `scaleX(${textDivProperties.scale})`;\n          }\n        }\n\n        if (textDivProperties.angle !== 0) {\n          transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n        }\n\n        if (transform.length > 0) {\n          if (this._enhanceTextSelection) {\n            textDivProperties.originalTransform = transform;\n          }\n\n          textDiv.style.transform = transform;\n        }\n\n        this._textDivProperties.set(textDiv, textDivProperties);\n\n        this._container.appendChild(textDiv);\n      },\n\n      _render: function TextLayer_render(timeout) {\n        const capability = (0, _util.createPromiseCapability)();\n        let styleCache = Object.create(null);\n\n        const canvas = this._document.createElement(\"canvas\");\n\n        canvas.mozOpaque = true;\n        this._layoutTextCtx = canvas.getContext(\"2d\", {\n          alpha: false\n        });\n\n        if (this._textContent) {\n          const textItems = this._textContent.items;\n          const textStyles = this._textContent.styles;\n\n          this._processItems(textItems, textStyles);\n\n          capability.resolve();\n        } else if (this._textContentStream) {\n          const pump = () => {\n            this._reader.read().then(({\n              value,\n              done\n            }) => {\n              if (done) {\n                capability.resolve();\n                return;\n              }\n\n              Object.assign(styleCache, value.styles);\n\n              this._processItems(value.items, styleCache);\n\n              pump();\n            }, capability.reject);\n          };\n\n          this._reader = this._textContentStream.getReader();\n          pump();\n        } else {\n          throw new Error('Neither \"textContent\" nor \"textContentStream\"' + \" parameters specified.\");\n        }\n\n        capability.promise.then(() => {\n          styleCache = null;\n\n          if (!timeout) {\n            render(this);\n          } else {\n            this._renderTimer = setTimeout(() => {\n              render(this);\n              this._renderTimer = null;\n            }, timeout);\n          }\n        }, this._capability.reject);\n      },\n      expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n        if (!this._enhanceTextSelection || !this._renderingDone) {\n          return;\n        }\n\n        if (this._bounds !== null) {\n          expand(this);\n          this._bounds = null;\n        }\n\n        const transformBuf = [],\n              paddingBuf = [];\n\n        for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n          const div = this._textDivs[i];\n\n          const divProps = this._textDivProperties.get(div);\n\n          if (divProps.isWhitespace) {\n            continue;\n          }\n\n          if (expandDivs) {\n            transformBuf.length = 0;\n            paddingBuf.length = 0;\n\n            if (divProps.originalTransform) {\n              transformBuf.push(divProps.originalTransform);\n            }\n\n            if (divProps.paddingTop > 0) {\n              paddingBuf.push(`${divProps.paddingTop}px`);\n              transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n            } else {\n              paddingBuf.push(0);\n            }\n\n            if (divProps.paddingRight > 0) {\n              paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n            } else {\n              paddingBuf.push(0);\n            }\n\n            if (divProps.paddingBottom > 0) {\n              paddingBuf.push(`${divProps.paddingBottom}px`);\n            } else {\n              paddingBuf.push(0);\n            }\n\n            if (divProps.paddingLeft > 0) {\n              paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n              transformBuf.push(`translateX(${-divProps.paddingLeft / divProps.scale}px)`);\n            } else {\n              paddingBuf.push(0);\n            }\n\n            div.style.padding = paddingBuf.join(\" \");\n\n            if (transformBuf.length) {\n              div.style.transform = transformBuf.join(\" \");\n            }\n          } else {\n            div.style.padding = null;\n            div.style.transform = divProps.originalTransform;\n          }\n        }\n      }\n    };\n\n    function renderTextLayer(renderParameters) {\n      const task = new TextLayerRenderTask({\n        textContent: renderParameters.textContent,\n        textContentStream: renderParameters.textContentStream,\n        container: renderParameters.container,\n        viewport: renderParameters.viewport,\n        textDivs: renderParameters.textDivs,\n        textContentItemsStr: renderParameters.textContentItemsStr,\n        enhanceTextSelection: renderParameters.enhanceTextSelection\n      });\n\n      task._render(renderParameters.timeout);\n\n      return task;\n    }\n\n    return renderTextLayer;\n  }();\n\n  exports.renderTextLayer = renderTextLayer;\n\n  /***/ }),\n  /* 22 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.SVGGraphics = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _display_utils = __w_pdfjs_require__(1);\n\n  var _is_node = __w_pdfjs_require__(4);\n\n  let SVGGraphics = function () {\n    throw new Error(\"Not implemented: SVGGraphics\");\n  };\n\n  exports.SVGGraphics = SVGGraphics;\n  {\n    const SVG_DEFAULTS = {\n      fontStyle: \"normal\",\n      fontWeight: \"normal\",\n      fillColor: \"#000000\"\n    };\n    const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n    const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n    const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n    const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n    const convertImgDataToPng = function () {\n      const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n      const CHUNK_WRAPPER_SIZE = 12;\n      const crcTable = new Int32Array(256);\n\n      for (let i = 0; i < 256; i++) {\n        let c = i;\n\n        for (let h = 0; h < 8; h++) {\n          if (c & 1) {\n            c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n          } else {\n            c = c >> 1 & 0x7fffffff;\n          }\n        }\n\n        crcTable[i] = c;\n      }\n\n      function crc32(data, start, end) {\n        let crc = -1;\n\n        for (let i = start; i < end; i++) {\n          const a = (crc ^ data[i]) & 0xff;\n          const b = crcTable[a];\n          crc = crc >>> 8 ^ b;\n        }\n\n        return crc ^ -1;\n      }\n\n      function writePngChunk(type, body, data, offset) {\n        let p = offset;\n        const len = body.length;\n        data[p] = len >> 24 & 0xff;\n        data[p + 1] = len >> 16 & 0xff;\n        data[p + 2] = len >> 8 & 0xff;\n        data[p + 3] = len & 0xff;\n        p += 4;\n        data[p] = type.charCodeAt(0) & 0xff;\n        data[p + 1] = type.charCodeAt(1) & 0xff;\n        data[p + 2] = type.charCodeAt(2) & 0xff;\n        data[p + 3] = type.charCodeAt(3) & 0xff;\n        p += 4;\n        data.set(body, p);\n        p += body.length;\n        const crc = crc32(data, offset + 4, p);\n        data[p] = crc >> 24 & 0xff;\n        data[p + 1] = crc >> 16 & 0xff;\n        data[p + 2] = crc >> 8 & 0xff;\n        data[p + 3] = crc & 0xff;\n      }\n\n      function adler32(data, start, end) {\n        let a = 1;\n        let b = 0;\n\n        for (let i = start; i < end; ++i) {\n          a = (a + (data[i] & 0xff)) % 65521;\n          b = (b + a) % 65521;\n        }\n\n        return b << 16 | a;\n      }\n\n      function deflateSync(literals) {\n        if (!_is_node.isNodeJS) {\n          return deflateSyncUncompressed(literals);\n        }\n\n        try {\n          let input;\n\n          if (parseInt(process.versions.node) >= 8) {\n            input = literals;\n          } else {\n            input = Buffer.from(literals);\n          }\n\n          const output = require(\"zlib\").deflateSync(input, {\n            level: 9\n          });\n\n          return output instanceof Uint8Array ? output : new Uint8Array(output);\n        } catch (e) {\n          (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n        }\n\n        return deflateSyncUncompressed(literals);\n      }\n\n      function deflateSyncUncompressed(literals) {\n        let len = literals.length;\n        const maxBlockLength = 0xffff;\n        const deflateBlocks = Math.ceil(len / maxBlockLength);\n        const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n        let pi = 0;\n        idat[pi++] = 0x78;\n        idat[pi++] = 0x9c;\n        let pos = 0;\n\n        while (len > maxBlockLength) {\n          idat[pi++] = 0x00;\n          idat[pi++] = 0xff;\n          idat[pi++] = 0xff;\n          idat[pi++] = 0x00;\n          idat[pi++] = 0x00;\n          idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n          pi += maxBlockLength;\n          pos += maxBlockLength;\n          len -= maxBlockLength;\n        }\n\n        idat[pi++] = 0x01;\n        idat[pi++] = len & 0xff;\n        idat[pi++] = len >> 8 & 0xff;\n        idat[pi++] = ~len & 0xffff & 0xff;\n        idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n        idat.set(literals.subarray(pos), pi);\n        pi += literals.length - pos;\n        const adler = adler32(literals, 0, literals.length);\n        idat[pi++] = adler >> 24 & 0xff;\n        idat[pi++] = adler >> 16 & 0xff;\n        idat[pi++] = adler >> 8 & 0xff;\n        idat[pi++] = adler & 0xff;\n        return idat;\n      }\n\n      function encode(imgData, kind, forceDataSchema, isMask) {\n        const width = imgData.width;\n        const height = imgData.height;\n        let bitDepth, colorType, lineSize;\n        const bytes = imgData.data;\n\n        switch (kind) {\n          case _util.ImageKind.GRAYSCALE_1BPP:\n            colorType = 0;\n            bitDepth = 1;\n            lineSize = width + 7 >> 3;\n            break;\n\n          case _util.ImageKind.RGB_24BPP:\n            colorType = 2;\n            bitDepth = 8;\n            lineSize = width * 3;\n            break;\n\n          case _util.ImageKind.RGBA_32BPP:\n            colorType = 6;\n            bitDepth = 8;\n            lineSize = width * 4;\n            break;\n\n          default:\n            throw new Error(\"invalid format\");\n        }\n\n        const literals = new Uint8Array((1 + lineSize) * height);\n        let offsetLiterals = 0,\n            offsetBytes = 0;\n\n        for (let y = 0; y < height; ++y) {\n          literals[offsetLiterals++] = 0;\n          literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n          offsetBytes += lineSize;\n          offsetLiterals += lineSize;\n        }\n\n        if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n          offsetLiterals = 0;\n\n          for (let y = 0; y < height; y++) {\n            offsetLiterals++;\n\n            for (let i = 0; i < lineSize; i++) {\n              literals[offsetLiterals++] ^= 0xff;\n            }\n          }\n        }\n\n        const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n        const idat = deflateSync(literals);\n        const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n        const data = new Uint8Array(pngLength);\n        let offset = 0;\n        data.set(PNG_HEADER, offset);\n        offset += PNG_HEADER.length;\n        writePngChunk(\"IHDR\", ihdr, data, offset);\n        offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n        writePngChunk(\"IDATA\", idat, data, offset);\n        offset += CHUNK_WRAPPER_SIZE + idat.length;\n        writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n        return (0, _util.createObjectURL)(data, \"image/png\", forceDataSchema);\n      }\n\n      return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n        const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n        return encode(imgData, kind, forceDataSchema, isMask);\n      };\n    }();\n\n    class SVGExtraState {\n      constructor() {\n        this.fontSizeScale = 1;\n        this.fontWeight = SVG_DEFAULTS.fontWeight;\n        this.fontSize = 0;\n        this.textMatrix = _util.IDENTITY_MATRIX;\n        this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n        this.leading = 0;\n        this.textRenderingMode = _util.TextRenderingMode.FILL;\n        this.textMatrixScale = 1;\n        this.x = 0;\n        this.y = 0;\n        this.lineX = 0;\n        this.lineY = 0;\n        this.charSpacing = 0;\n        this.wordSpacing = 0;\n        this.textHScale = 1;\n        this.textRise = 0;\n        this.fillColor = SVG_DEFAULTS.fillColor;\n        this.strokeColor = \"#000000\";\n        this.fillAlpha = 1;\n        this.strokeAlpha = 1;\n        this.lineWidth = 1;\n        this.lineJoin = \"\";\n        this.lineCap = \"\";\n        this.miterLimit = 0;\n        this.dashArray = [];\n        this.dashPhase = 0;\n        this.dependencies = [];\n        this.activeClipUrl = null;\n        this.clipGroup = null;\n        this.maskId = \"\";\n      }\n\n      clone() {\n        return Object.create(this);\n      }\n\n      setCurrentPoint(x, y) {\n        this.x = x;\n        this.y = y;\n      }\n\n    }\n\n    function opListToTree(opList) {\n      let opTree = [];\n      const tmp = [];\n\n      for (const opListElement of opList) {\n        if (opListElement.fn === \"save\") {\n          opTree.push({\n            fnId: 92,\n            fn: \"group\",\n            items: []\n          });\n          tmp.push(opTree);\n          opTree = opTree[opTree.length - 1].items;\n          continue;\n        }\n\n        if (opListElement.fn === \"restore\") {\n          opTree = tmp.pop();\n        } else {\n          opTree.push(opListElement);\n        }\n      }\n\n      return opTree;\n    }\n\n    function pf(value) {\n      if (Number.isInteger(value)) {\n        return value.toString();\n      }\n\n      const s = value.toFixed(10);\n      let i = s.length - 1;\n\n      if (s[i] !== \"0\") {\n        return s;\n      }\n\n      do {\n        i--;\n      } while (s[i] === \"0\");\n\n      return s.substring(0, s[i] === \".\" ? i : i + 1);\n    }\n\n    function pm(m) {\n      if (m[4] === 0 && m[5] === 0) {\n        if (m[1] === 0 && m[2] === 0) {\n          if (m[0] === 1 && m[3] === 1) {\n            return \"\";\n          }\n\n          return `scale(${pf(m[0])} ${pf(m[3])})`;\n        }\n\n        if (m[0] === m[3] && m[1] === -m[2]) {\n          const a = Math.acos(m[0]) * 180 / Math.PI;\n          return `rotate(${pf(a)})`;\n        }\n      } else {\n        if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n          return `translate(${pf(m[4])} ${pf(m[5])})`;\n        }\n      }\n\n      return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n    }\n\n    let clipCount = 0;\n    let maskCount = 0;\n    let shadingCount = 0;\n    exports.SVGGraphics = SVGGraphics = class SVGGraphics {\n      constructor(commonObjs, objs, forceDataSchema = false) {\n        this.svgFactory = new _display_utils.DOMSVGFactory();\n        this.current = new SVGExtraState();\n        this.transformMatrix = _util.IDENTITY_MATRIX;\n        this.transformStack = [];\n        this.extraStack = [];\n        this.commonObjs = commonObjs;\n        this.objs = objs;\n        this.pendingClip = null;\n        this.pendingEOFill = false;\n        this.embedFonts = false;\n        this.embeddedFonts = Object.create(null);\n        this.cssStyle = null;\n        this.forceDataSchema = !!forceDataSchema;\n        this._operatorIdMapping = [];\n\n        for (const op in _util.OPS) {\n          this._operatorIdMapping[_util.OPS[op]] = op;\n        }\n      }\n\n      save() {\n        this.transformStack.push(this.transformMatrix);\n        const old = this.current;\n        this.extraStack.push(old);\n        this.current = old.clone();\n      }\n\n      restore() {\n        this.transformMatrix = this.transformStack.pop();\n        this.current = this.extraStack.pop();\n        this.pendingClip = null;\n        this.tgrp = null;\n      }\n\n      group(items) {\n        this.save();\n        this.executeOpTree(items);\n        this.restore();\n      }\n\n      loadDependencies(operatorList) {\n        const fnArray = operatorList.fnArray;\n        const argsArray = operatorList.argsArray;\n\n        for (let i = 0, ii = fnArray.length; i < ii; i++) {\n          if (fnArray[i] !== _util.OPS.dependency) {\n            continue;\n          }\n\n          for (const obj of argsArray[i]) {\n            const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n            const promise = new Promise(resolve => {\n              objsPool.get(obj, resolve);\n            });\n            this.current.dependencies.push(promise);\n          }\n        }\n\n        return Promise.all(this.current.dependencies);\n      }\n\n      transform(a, b, c, d, e, f) {\n        const transformMatrix = [a, b, c, d, e, f];\n        this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n        this.tgrp = null;\n      }\n\n      getSVG(operatorList, viewport) {\n        this.viewport = viewport;\n\n        const svgElement = this._initialize(viewport);\n\n        return this.loadDependencies(operatorList).then(() => {\n          this.transformMatrix = _util.IDENTITY_MATRIX;\n          this.executeOpTree(this.convertOpList(operatorList));\n          return svgElement;\n        });\n      }\n\n      convertOpList(operatorList) {\n        const operatorIdMapping = this._operatorIdMapping;\n        const argsArray = operatorList.argsArray;\n        const fnArray = operatorList.fnArray;\n        const opList = [];\n\n        for (let i = 0, ii = fnArray.length; i < ii; i++) {\n          const fnId = fnArray[i];\n          opList.push({\n            fnId,\n            fn: operatorIdMapping[fnId],\n            args: argsArray[i]\n          });\n        }\n\n        return opListToTree(opList);\n      }\n\n      executeOpTree(opTree) {\n        for (const opTreeElement of opTree) {\n          const fn = opTreeElement.fn;\n          const fnId = opTreeElement.fnId;\n          const args = opTreeElement.args;\n\n          switch (fnId | 0) {\n            case _util.OPS.beginText:\n              this.beginText();\n              break;\n\n            case _util.OPS.dependency:\n              break;\n\n            case _util.OPS.setLeading:\n              this.setLeading(args);\n              break;\n\n            case _util.OPS.setLeadingMoveText:\n              this.setLeadingMoveText(args[0], args[1]);\n              break;\n\n            case _util.OPS.setFont:\n              this.setFont(args);\n              break;\n\n            case _util.OPS.showText:\n              this.showText(args[0]);\n              break;\n\n            case _util.OPS.showSpacedText:\n              this.showText(args[0]);\n              break;\n\n            case _util.OPS.endText:\n              this.endText();\n              break;\n\n            case _util.OPS.moveText:\n              this.moveText(args[0], args[1]);\n              break;\n\n            case _util.OPS.setCharSpacing:\n              this.setCharSpacing(args[0]);\n              break;\n\n            case _util.OPS.setWordSpacing:\n              this.setWordSpacing(args[0]);\n              break;\n\n            case _util.OPS.setHScale:\n              this.setHScale(args[0]);\n              break;\n\n            case _util.OPS.setTextMatrix:\n              this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n\n            case _util.OPS.setTextRise:\n              this.setTextRise(args[0]);\n              break;\n\n            case _util.OPS.setTextRenderingMode:\n              this.setTextRenderingMode(args[0]);\n              break;\n\n            case _util.OPS.setLineWidth:\n              this.setLineWidth(args[0]);\n              break;\n\n            case _util.OPS.setLineJoin:\n              this.setLineJoin(args[0]);\n              break;\n\n            case _util.OPS.setLineCap:\n              this.setLineCap(args[0]);\n              break;\n\n            case _util.OPS.setMiterLimit:\n              this.setMiterLimit(args[0]);\n              break;\n\n            case _util.OPS.setFillRGBColor:\n              this.setFillRGBColor(args[0], args[1], args[2]);\n              break;\n\n            case _util.OPS.setStrokeRGBColor:\n              this.setStrokeRGBColor(args[0], args[1], args[2]);\n              break;\n\n            case _util.OPS.setStrokeColorN:\n              this.setStrokeColorN(args);\n              break;\n\n            case _util.OPS.setFillColorN:\n              this.setFillColorN(args);\n              break;\n\n            case _util.OPS.shadingFill:\n              this.shadingFill(args[0]);\n              break;\n\n            case _util.OPS.setDash:\n              this.setDash(args[0], args[1]);\n              break;\n\n            case _util.OPS.setRenderingIntent:\n              this.setRenderingIntent(args[0]);\n              break;\n\n            case _util.OPS.setFlatness:\n              this.setFlatness(args[0]);\n              break;\n\n            case _util.OPS.setGState:\n              this.setGState(args[0]);\n              break;\n\n            case _util.OPS.fill:\n              this.fill();\n              break;\n\n            case _util.OPS.eoFill:\n              this.eoFill();\n              break;\n\n            case _util.OPS.stroke:\n              this.stroke();\n              break;\n\n            case _util.OPS.fillStroke:\n              this.fillStroke();\n              break;\n\n            case _util.OPS.eoFillStroke:\n              this.eoFillStroke();\n              break;\n\n            case _util.OPS.clip:\n              this.clip(\"nonzero\");\n              break;\n\n            case _util.OPS.eoClip:\n              this.clip(\"evenodd\");\n              break;\n\n            case _util.OPS.paintSolidColorImageMask:\n              this.paintSolidColorImageMask();\n              break;\n\n            case _util.OPS.paintImageXObject:\n              this.paintImageXObject(args[0]);\n              break;\n\n            case _util.OPS.paintInlineImageXObject:\n              this.paintInlineImageXObject(args[0]);\n              break;\n\n            case _util.OPS.paintImageMaskXObject:\n              this.paintImageMaskXObject(args[0]);\n              break;\n\n            case _util.OPS.paintFormXObjectBegin:\n              this.paintFormXObjectBegin(args[0], args[1]);\n              break;\n\n            case _util.OPS.paintFormXObjectEnd:\n              this.paintFormXObjectEnd();\n              break;\n\n            case _util.OPS.closePath:\n              this.closePath();\n              break;\n\n            case _util.OPS.closeStroke:\n              this.closeStroke();\n              break;\n\n            case _util.OPS.closeFillStroke:\n              this.closeFillStroke();\n              break;\n\n            case _util.OPS.closeEOFillStroke:\n              this.closeEOFillStroke();\n              break;\n\n            case _util.OPS.nextLine:\n              this.nextLine();\n              break;\n\n            case _util.OPS.transform:\n              this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n\n            case _util.OPS.constructPath:\n              this.constructPath(args[0], args[1]);\n              break;\n\n            case _util.OPS.endPath:\n              this.endPath();\n              break;\n\n            case 92:\n              this.group(opTreeElement.items);\n              break;\n\n            default:\n              (0, _util.warn)(`Unimplemented operator ${fn}`);\n              break;\n          }\n        }\n      }\n\n      setWordSpacing(wordSpacing) {\n        this.current.wordSpacing = wordSpacing;\n      }\n\n      setCharSpacing(charSpacing) {\n        this.current.charSpacing = charSpacing;\n      }\n\n      nextLine() {\n        this.moveText(0, this.current.leading);\n      }\n\n      setTextMatrix(a, b, c, d, e, f) {\n        const current = this.current;\n        current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n        current.textMatrixScale = Math.sqrt(a * a + b * b);\n        current.x = current.lineX = 0;\n        current.y = current.lineY = 0;\n        current.xcoords = [];\n        current.ycoords = [];\n        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n        current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n        current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n        current.txtElement = this.svgFactory.createElement(\"svg:text\");\n        current.txtElement.appendChild(current.tspan);\n      }\n\n      beginText() {\n        const current = this.current;\n        current.x = current.lineX = 0;\n        current.y = current.lineY = 0;\n        current.textMatrix = _util.IDENTITY_MATRIX;\n        current.lineMatrix = _util.IDENTITY_MATRIX;\n        current.textMatrixScale = 1;\n        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n        current.txtElement = this.svgFactory.createElement(\"svg:text\");\n        current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n        current.xcoords = [];\n        current.ycoords = [];\n      }\n\n      moveText(x, y) {\n        const current = this.current;\n        current.x = current.lineX += x;\n        current.y = current.lineY += y;\n        current.xcoords = [];\n        current.ycoords = [];\n        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n        current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n        current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      showText(glyphs) {\n        const current = this.current;\n        const font = current.font;\n        const fontSize = current.fontSize;\n\n        if (fontSize === 0) {\n          return;\n        }\n\n        const fontSizeScale = current.fontSizeScale;\n        const charSpacing = current.charSpacing;\n        const wordSpacing = current.wordSpacing;\n        const fontDirection = current.fontDirection;\n        const textHScale = current.textHScale * fontDirection;\n        const vertical = font.vertical;\n        const spacingDir = vertical ? 1 : -1;\n        const defaultVMetrics = font.defaultVMetrics;\n        const widthAdvanceScale = fontSize * current.fontMatrix[0];\n        let x = 0;\n\n        for (const glyph of glyphs) {\n          if (glyph === null) {\n            x += fontDirection * wordSpacing;\n            continue;\n          } else if ((0, _util.isNum)(glyph)) {\n            x += spacingDir * glyph * fontSize / 1000;\n            continue;\n          }\n\n          const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n          const character = glyph.fontChar;\n          let scaledX, scaledY;\n          let width = glyph.width;\n\n          if (vertical) {\n            let vx;\n            const vmetric = glyph.vmetric || defaultVMetrics;\n            vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n            vx = -vx * widthAdvanceScale;\n            const vy = vmetric[2] * widthAdvanceScale;\n            width = vmetric ? -vmetric[0] : width;\n            scaledX = vx / fontSizeScale;\n            scaledY = (x + vy) / fontSizeScale;\n          } else {\n            scaledX = x / fontSizeScale;\n            scaledY = 0;\n          }\n\n          if (glyph.isInFont || font.missingFile) {\n            current.xcoords.push(current.x + scaledX);\n\n            if (vertical) {\n              current.ycoords.push(-current.y + scaledY);\n            }\n\n            current.tspan.textContent += character;\n          } else {}\n\n          let charWidth;\n\n          if (vertical) {\n            charWidth = width * widthAdvanceScale - spacing * fontDirection;\n          } else {\n            charWidth = width * widthAdvanceScale + spacing * fontDirection;\n          }\n\n          x += charWidth;\n        }\n\n        current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n\n        if (vertical) {\n          current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n        } else {\n          current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n        }\n\n        if (vertical) {\n          current.y -= x;\n        } else {\n          current.x += x * textHScale;\n        }\n\n        current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n        current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n\n        if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n          current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n        }\n\n        if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n          current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n        }\n\n        const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n        if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n            current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n          }\n\n          if (current.fillAlpha < 1) {\n            current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n          }\n        } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n          current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n        } else {\n          current.tspan.setAttributeNS(null, \"fill\", \"none\");\n        }\n\n        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          const lineWidthScale = 1 / (current.textMatrixScale || 1);\n\n          this._setStrokeAttributes(current.tspan, lineWidthScale);\n        }\n\n        let textMatrix = current.textMatrix;\n\n        if (current.textRise !== 0) {\n          textMatrix = textMatrix.slice();\n          textMatrix[5] += current.textRise;\n        }\n\n        current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n        current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n        current.txtElement.appendChild(current.tspan);\n        current.txtgrp.appendChild(current.txtElement);\n\n        this._ensureTransformGroup().appendChild(current.txtElement);\n      }\n\n      setLeadingMoveText(x, y) {\n        this.setLeading(-y);\n        this.moveText(x, y);\n      }\n\n      addFontStyle(fontObj) {\n        if (!fontObj.data) {\n          throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n        }\n\n        if (!this.cssStyle) {\n          this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n          this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n          this.defs.appendChild(this.cssStyle);\n        }\n\n        const url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n        this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n      }\n\n      setFont(details) {\n        const current = this.current;\n        const fontObj = this.commonObjs.get(details[0]);\n        let size = details[1];\n        current.font = fontObj;\n\n        if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n          this.addFontStyle(fontObj);\n          this.embeddedFonts[fontObj.loadedName] = fontObj;\n        }\n\n        current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        let bold = \"normal\";\n\n        if (fontObj.black) {\n          bold = \"900\";\n        } else if (fontObj.bold) {\n          bold = \"bold\";\n        }\n\n        const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n        if (size < 0) {\n          size = -size;\n          current.fontDirection = -1;\n        } else {\n          current.fontDirection = 1;\n        }\n\n        current.fontSize = size;\n        current.fontFamily = fontObj.loadedName;\n        current.fontWeight = bold;\n        current.fontStyle = italic;\n        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n        current.xcoords = [];\n        current.ycoords = [];\n      }\n\n      endText() {\n        const current = this.current;\n\n        if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement && current.txtElement.hasChildNodes()) { // lwf\n          current.element = current.txtElement;\n          this.clip(\"nonzero\");\n          this.endPath();\n        }\n      }\n\n      setLineWidth(width) {\n        if (width > 0) {\n          this.current.lineWidth = width;\n        }\n      }\n\n      setLineCap(style) {\n        this.current.lineCap = LINE_CAP_STYLES[style];\n      }\n\n      setLineJoin(style) {\n        this.current.lineJoin = LINE_JOIN_STYLES[style];\n      }\n\n      setMiterLimit(limit) {\n        this.current.miterLimit = limit;\n      }\n\n      setStrokeAlpha(strokeAlpha) {\n        this.current.strokeAlpha = strokeAlpha;\n      }\n\n      setStrokeRGBColor(r, g, b) {\n        this.current.strokeColor = _util.Util.makeHexColor(r, g, b);\n      }\n\n      setFillAlpha(fillAlpha) {\n        this.current.fillAlpha = fillAlpha;\n      }\n\n      setFillRGBColor(r, g, b) {\n        this.current.fillColor = _util.Util.makeHexColor(r, g, b);\n        this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n        this.current.xcoords = [];\n        this.current.ycoords = [];\n      }\n\n      setStrokeColorN(args) {\n        this.current.strokeColor = this._makeColorN_Pattern(args);\n      }\n\n      setFillColorN(args) {\n        this.current.fillColor = this._makeColorN_Pattern(args);\n      }\n\n      shadingFill(args) {\n        const width = this.viewport.width;\n        const height = this.viewport.height;\n\n        const inv = _util.Util.inverseTransform(this.transformMatrix);\n\n        const bl = _util.Util.applyTransform([0, 0], inv);\n\n        const br = _util.Util.applyTransform([0, height], inv);\n\n        const ul = _util.Util.applyTransform([width, 0], inv);\n\n        const ur = _util.Util.applyTransform([width, height], inv);\n\n        const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n        const rect = this.svgFactory.createElement(\"svg:rect\");\n        rect.setAttributeNS(null, \"x\", x0);\n        rect.setAttributeNS(null, \"y\", y0);\n        rect.setAttributeNS(null, \"width\", x1 - x0);\n        rect.setAttributeNS(null, \"height\", y1 - y0);\n        rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n\n        if (this.current.fillAlpha < 1) {\n          rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n        }\n\n        this._ensureTransformGroup().appendChild(rect);\n      }\n\n      _makeColorN_Pattern(args) {\n        if (args[0] === \"TilingPattern\") {\n          return this._makeTilingPattern(args);\n        }\n\n        return this._makeShadingPattern(args);\n      }\n\n      _makeTilingPattern(args) {\n        const color = args[1];\n        const operatorList = args[2];\n        const matrix = args[3] || _util.IDENTITY_MATRIX;\n        const [x0, y0, x1, y1] = args[4];\n        const xstep = args[5];\n        const ystep = args[6];\n        const paintType = args[7];\n        const tilingId = `shading${shadingCount++}`;\n\n        const [tx0, ty0] = _util.Util.applyTransform([x0, y0], matrix);\n\n        const [tx1, ty1] = _util.Util.applyTransform([x1, y1], matrix);\n\n        const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n\n        const txstep = xstep * xscale;\n        const tystep = ystep * yscale;\n        const tiling = this.svgFactory.createElement(\"svg:pattern\");\n        tiling.setAttributeNS(null, \"id\", tilingId);\n        tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n        tiling.setAttributeNS(null, \"width\", txstep);\n        tiling.setAttributeNS(null, \"height\", tystep);\n        tiling.setAttributeNS(null, \"x\", `${tx0}`);\n        tiling.setAttributeNS(null, \"y\", `${ty0}`);\n        const svg = this.svg;\n        const transformMatrix = this.transformMatrix;\n        const fillColor = this.current.fillColor;\n        const strokeColor = this.current.strokeColor;\n        const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n        this.svg = bbox;\n        this.transformMatrix = matrix;\n\n        if (paintType === 2) {\n          const cssColor = _util.Util.makeHexColor(...color);\n\n          this.current.fillColor = cssColor;\n          this.current.strokeColor = cssColor;\n        }\n\n        this.executeOpTree(this.convertOpList(operatorList));\n        this.svg = svg;\n        this.transformMatrix = transformMatrix;\n        this.current.fillColor = fillColor;\n        this.current.strokeColor = strokeColor;\n        tiling.appendChild(bbox.childNodes[0]);\n        this.defs.appendChild(tiling);\n        return `url(#${tilingId})`;\n      }\n\n      _makeShadingPattern(args) {\n        switch (args[0]) {\n          case \"RadialAxial\":\n            const shadingId = `shading${shadingCount++}`;\n            const colorStops = args[3];\n            let gradient;\n\n            switch (args[1]) {\n              case \"axial\":\n                const point0 = args[4];\n                const point1 = args[5];\n                gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                gradient.setAttributeNS(null, \"id\", shadingId);\n                gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                gradient.setAttributeNS(null, \"x1\", point0[0]);\n                gradient.setAttributeNS(null, \"y1\", point0[1]);\n                gradient.setAttributeNS(null, \"x2\", point1[0]);\n                gradient.setAttributeNS(null, \"y2\", point1[1]);\n                break;\n\n              case \"radial\":\n                const focalPoint = args[4];\n                const circlePoint = args[5];\n                const focalRadius = args[6];\n                const circleRadius = args[7];\n                gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                gradient.setAttributeNS(null, \"id\", shadingId);\n                gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                gradient.setAttributeNS(null, \"r\", circleRadius);\n                gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                gradient.setAttributeNS(null, \"fr\", focalRadius);\n                break;\n\n              default:\n                throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n            }\n\n            for (const colorStop of colorStops) {\n              const stop = this.svgFactory.createElement(\"svg:stop\");\n              stop.setAttributeNS(null, \"offset\", colorStop[0]);\n              stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n              gradient.appendChild(stop);\n            }\n\n            this.defs.appendChild(gradient);\n            return `url(#${shadingId})`;\n\n          case \"Mesh\":\n            (0, _util.warn)(\"Unimplemented pattern Mesh\");\n            return null;\n\n          case \"Dummy\":\n            return \"hotpink\";\n\n          default:\n            throw new Error(`Unknown IR type: ${args[0]}`);\n        }\n      }\n\n      setDash(dashArray, dashPhase) {\n        this.current.dashArray = dashArray;\n        this.current.dashPhase = dashPhase;\n      }\n\n      constructPath(ops, args) {\n        const current = this.current;\n        let x = current.x,\n            y = current.y;\n        let d = [];\n        let j = 0;\n\n        for (const op of ops) {\n          switch (op | 0) {\n            case _util.OPS.rectangle:\n              x = args[j++];\n              y = args[j++];\n              const width = args[j++];\n              const height = args[j++];\n              const xw = x + width;\n              const yh = y + height;\n              d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n              break;\n\n            case _util.OPS.moveTo:\n              x = args[j++];\n              y = args[j++];\n              d.push(\"M\", pf(x), pf(y));\n              break;\n\n            case _util.OPS.lineTo:\n              x = args[j++];\n              y = args[j++];\n              d.push(\"L\", pf(x), pf(y));\n              break;\n\n            case _util.OPS.curveTo:\n              x = args[j + 4];\n              y = args[j + 5];\n              d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n              j += 6;\n              break;\n\n            case _util.OPS.curveTo2:\n              d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n              x = args[j + 2];\n              y = args[j + 3];\n              j += 4;\n              break;\n\n            case _util.OPS.curveTo3:\n              x = args[j + 2];\n              y = args[j + 3];\n              d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n              j += 4;\n              break;\n\n            case _util.OPS.closePath:\n              d.push(\"Z\");\n              break;\n          }\n        }\n\n        d = d.join(\" \");\n\n        if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n          d = current.path.getAttributeNS(null, \"d\") + d;\n        } else {\n          current.path = this.svgFactory.createElement(\"svg:path\");\n\n          this._ensureTransformGroup().appendChild(current.path);\n        }\n\n        current.path.setAttributeNS(null, \"d\", d);\n        current.path.setAttributeNS(null, \"fill\", \"none\");\n        current.element = current.path;\n        current.setCurrentPoint(x, y);\n      }\n\n      endPath() {\n        const current = this.current;\n        current.path = null;\n\n        if (!this.pendingClip) {\n          return;\n        }\n\n        if (!current.element) {\n          this.pendingClip = null;\n          return;\n        }\n\n        const clipId = `clippath${clipCount++}`;\n        const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n        clipPath.setAttributeNS(null, \"id\", clipId);\n        clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        const clipElement = current.element.cloneNode(true);\n\n        if (this.pendingClip === \"evenodd\") {\n          clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n        } else {\n          clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n        }\n\n        this.pendingClip = null;\n        clipPath.appendChild(clipElement);\n        this.defs.appendChild(clipPath);\n\n        if (current.activeClipUrl) {\n          current.clipGroup = null;\n          this.extraStack.forEach(function (prev) {\n            prev.clipGroup = null;\n          });\n          clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n        }\n\n        current.activeClipUrl = `url(#${clipId})`;\n        this.tgrp = null;\n      }\n\n      clip(type) {\n        this.pendingClip = type;\n      }\n\n      closePath() {\n        const current = this.current;\n\n        if (current.path) {\n          const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n          current.path.setAttributeNS(null, \"d\", d);\n        }\n      }\n\n      setLeading(leading) {\n        this.current.leading = -leading;\n      }\n\n      setTextRise(textRise) {\n        this.current.textRise = textRise;\n      }\n\n      setTextRenderingMode(textRenderingMode) {\n        this.current.textRenderingMode = textRenderingMode;\n      }\n\n      setHScale(scale) {\n        this.current.textHScale = scale / 100;\n      }\n\n      setRenderingIntent(intent) {}\n\n      setFlatness(flatness) {}\n\n      setGState(states) {\n        for (const [key, value] of states) {\n          switch (key) {\n            case \"LW\":\n              this.setLineWidth(value);\n              break;\n\n            case \"LC\":\n              this.setLineCap(value);\n              break;\n\n            case \"LJ\":\n              this.setLineJoin(value);\n              break;\n\n            case \"ML\":\n              this.setMiterLimit(value);\n              break;\n\n            case \"D\":\n              this.setDash(value[0], value[1]);\n              break;\n\n            case \"RI\":\n              this.setRenderingIntent(value);\n              break;\n\n            case \"FL\":\n              this.setFlatness(value);\n              break;\n\n            case \"Font\":\n              this.setFont(value);\n              break;\n\n            case \"CA\":\n              this.setStrokeAlpha(value);\n              break;\n\n            case \"ca\":\n              this.setFillAlpha(value);\n              break;\n\n            default:\n              (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n              break;\n          }\n        }\n      }\n\n      fill() {\n        const current = this.current;\n\n        if (current.element) {\n          current.element.setAttributeNS(null, \"fill\", current.fillColor);\n          current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n          this.endPath();\n        }\n      }\n\n      stroke() {\n        const current = this.current;\n\n        if (current.element) {\n          this._setStrokeAttributes(current.element);\n\n          current.element.setAttributeNS(null, \"fill\", \"none\");\n          this.endPath();\n        }\n      }\n\n      _setStrokeAttributes(element, lineWidthScale = 1) {\n        const current = this.current;\n        let dashArray = current.dashArray;\n\n        if (lineWidthScale !== 1 && dashArray.length > 0) {\n          dashArray = dashArray.map(function (value) {\n            return lineWidthScale * value;\n          });\n        }\n\n        element.setAttributeNS(null, \"stroke\", current.strokeColor);\n        element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n        element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n        element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n        element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n        element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n        element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n        element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n      }\n\n      eoFill() {\n        if (this.current.element) {\n          this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n        }\n\n        this.fill();\n      }\n\n      fillStroke() {\n        this.stroke();\n        this.fill();\n      }\n\n      eoFillStroke() {\n        if (this.current.element) {\n          this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n        }\n\n        this.fillStroke();\n      }\n\n      closeStroke() {\n        this.closePath();\n        this.stroke();\n      }\n\n      closeFillStroke() {\n        this.closePath();\n        this.fillStroke();\n      }\n\n      closeEOFillStroke() {\n        this.closePath();\n        this.eoFillStroke();\n      }\n\n      paintSolidColorImageMask() {\n        const rect = this.svgFactory.createElement(\"svg:rect\");\n        rect.setAttributeNS(null, \"x\", \"0\");\n        rect.setAttributeNS(null, \"y\", \"0\");\n        rect.setAttributeNS(null, \"width\", \"1px\");\n        rect.setAttributeNS(null, \"height\", \"1px\");\n        rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n        this._ensureTransformGroup().appendChild(rect);\n      }\n\n      paintImageXObject(objId) {\n        const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n        if (!imgData) {\n          (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n          return;\n        }\n\n        this.paintInlineImageXObject(imgData);\n      }\n\n      paintInlineImageXObject(imgData, mask) {\n        const width = imgData.width;\n        const height = imgData.height;\n        const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", \"0\");\n        cliprect.setAttributeNS(null, \"y\", \"0\");\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        const imgEl = this.svgFactory.createElement(\"svg:image\");\n        imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n        imgEl.setAttributeNS(null, \"x\", \"0\");\n        imgEl.setAttributeNS(null, \"y\", pf(-height));\n        imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n        imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n        imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n\n        if (mask) {\n          mask.appendChild(imgEl);\n        } else {\n          this._ensureTransformGroup().appendChild(imgEl);\n        }\n      }\n\n      paintImageMaskXObject(imgData) {\n        const current = this.current;\n        const width = imgData.width;\n        const height = imgData.height;\n        const fillColor = current.fillColor;\n        current.maskId = `mask${maskCount++}`;\n        const mask = this.svgFactory.createElement(\"svg:mask\");\n        mask.setAttributeNS(null, \"id\", current.maskId);\n        const rect = this.svgFactory.createElement(\"svg:rect\");\n        rect.setAttributeNS(null, \"x\", \"0\");\n        rect.setAttributeNS(null, \"y\", \"0\");\n        rect.setAttributeNS(null, \"width\", pf(width));\n        rect.setAttributeNS(null, \"height\", pf(height));\n        rect.setAttributeNS(null, \"fill\", fillColor);\n        rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n        this.defs.appendChild(mask);\n\n        this._ensureTransformGroup().appendChild(rect);\n\n        this.paintInlineImageXObject(imgData, mask);\n      }\n\n      paintFormXObjectBegin(matrix, bbox) {\n        if (Array.isArray(matrix) && matrix.length === 6) {\n          this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n        }\n\n        if (bbox) {\n          const width = bbox[2] - bbox[0];\n          const height = bbox[3] - bbox[1];\n          const cliprect = this.svgFactory.createElement(\"svg:rect\");\n          cliprect.setAttributeNS(null, \"x\", bbox[0]);\n          cliprect.setAttributeNS(null, \"y\", bbox[1]);\n          cliprect.setAttributeNS(null, \"width\", pf(width));\n          cliprect.setAttributeNS(null, \"height\", pf(height));\n          this.current.element = cliprect;\n          this.clip(\"nonzero\");\n          this.endPath();\n        }\n      }\n\n      paintFormXObjectEnd() {}\n\n      _initialize(viewport) {\n        const svg = this.svgFactory.create(viewport.width, viewport.height);\n        const definitions = this.svgFactory.createElement(\"svg:defs\");\n        svg.appendChild(definitions);\n        this.defs = definitions;\n        const rootGroup = this.svgFactory.createElement(\"svg:g\");\n        rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n        svg.appendChild(rootGroup);\n        this.svg = rootGroup;\n        return svg;\n      }\n\n      _ensureClipGroup() {\n        if (!this.current.clipGroup) {\n          const clipGroup = this.svgFactory.createElement(\"svg:g\");\n          clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n          this.svg.appendChild(clipGroup);\n          this.current.clipGroup = clipGroup;\n        }\n\n        return this.current.clipGroup;\n      }\n\n      _ensureTransformGroup() {\n        if (!this.tgrp) {\n          this.tgrp = this.svgFactory.createElement(\"svg:g\");\n          this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n          if (this.current.activeClipUrl) {\n            this._ensureClipGroup().appendChild(this.tgrp);\n          } else {\n            this.svg.appendChild(this.tgrp);\n          }\n        }\n\n        return this.tgrp;\n      }\n\n    };\n  }\n\n  /***/ }),\n  /* 23 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.PDFNodeStream = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _network_utils = __w_pdfjs_require__(24);\n\n  ;\n\n  const fs = require(\"fs\");\n\n  const http = require(\"http\");\n\n  const https = require(\"https\");\n\n  const url = require(\"url\");\n\n  const fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\n  function parseUrl(sourceUrl) {\n    const parsedUrl = url.parse(sourceUrl);\n\n    if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n      return parsedUrl;\n    }\n\n    if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n      return url.parse(`file:///${sourceUrl}`);\n    }\n\n    if (!parsedUrl.host) {\n      parsedUrl.protocol = \"file:\";\n    }\n\n    return parsedUrl;\n  }\n\n  class PDFNodeStream {\n    constructor(source) {\n      this.source = source;\n      this.url = parseUrl(source.url);\n      this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n      this.isFsUrl = this.url.protocol === \"file:\";\n      this.httpHeaders = this.isHttp && source.httpHeaders || {};\n      this._fullRequestReader = null;\n      this._rangeRequestReaders = [];\n    }\n\n    get _progressiveDataLength() {\n      return this._fullRequestReader && this._fullRequestReader._loaded || 0; // lwf\n    }\n\n    getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n      this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n      return this._fullRequestReader;\n    }\n\n    getRangeReader(start, end) {\n      if (end <= this._progressiveDataLength) {\n        return null;\n      }\n\n      const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n\n      this._rangeRequestReaders.push(rangeReader);\n\n      return rangeReader;\n    }\n\n    cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n\n      const readers = this._rangeRequestReaders.slice(0);\n\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n\n  }\n\n  exports.PDFNodeStream = PDFNodeStream;\n\n  class BaseFullReader {\n    constructor(stream) {\n      this._url = stream.url;\n      this._done = false;\n      this._storedError = null;\n      this.onProgress = null;\n      const source = stream.source;\n      this._contentLength = source.length;\n      this._loaded = 0;\n      this._filename = null;\n      this._disableRange = source.disableRange || false;\n      this._rangeChunkSize = source.rangeChunkSize;\n\n      if (!this._rangeChunkSize && !this._disableRange) {\n        this._disableRange = true;\n      }\n\n      this._isStreamingSupported = !source.disableStream;\n      this._isRangeSupported = !source.disableRange;\n      this._readableStream = null;\n      this._readCapability = (0, _util.createPromiseCapability)();\n      this._headersCapability = (0, _util.createPromiseCapability)();\n    }\n\n    get headersReady() {\n      return this._headersCapability.promise;\n    }\n\n    get filename() {\n      return this._filename;\n    }\n\n    get contentLength() {\n      return this._contentLength;\n    }\n\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    }\n\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    }\n\n    async read() {\n      await this._readCapability.promise;\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      if (this._storedError) {\n        throw this._storedError;\n      }\n\n      const chunk = this._readableStream.read();\n\n      if (chunk === null) {\n        this._readCapability = (0, _util.createPromiseCapability)();\n        return this.read();\n      }\n\n      this._loaded += chunk.length;\n\n      if (this.onProgress) {\n        this.onProgress({\n          loaded: this._loaded,\n          total: this._contentLength\n        });\n      }\n\n      const buffer = new Uint8Array(chunk).buffer;\n      return {\n        value: buffer,\n        done: false\n      };\n    }\n\n    cancel(reason) {\n      if (!this._readableStream) {\n        this._error(reason);\n\n        return;\n      }\n\n      this._readableStream.destroy(reason);\n    }\n\n    _error(reason) {\n      this._storedError = reason;\n\n      this._readCapability.resolve();\n    }\n\n    _setReadableStream(readableStream) {\n      this._readableStream = readableStream;\n      readableStream.on(\"readable\", () => {\n        this._readCapability.resolve();\n      });\n      readableStream.on(\"end\", () => {\n        readableStream.destroy();\n        this._done = true;\n\n        this._readCapability.resolve();\n      });\n      readableStream.on(\"error\", reason => {\n        this._error(reason);\n      });\n\n      if (!this._isStreamingSupported && this._isRangeSupported) {\n        this._error(new _util.AbortException(\"streaming is disabled\"));\n      }\n\n      if (this._storedError) {\n        this._readableStream.destroy(this._storedError);\n      }\n    }\n\n  }\n\n  class BaseRangeReader {\n    constructor(stream) {\n      this._url = stream.url;\n      this._done = false;\n      this._storedError = null;\n      this.onProgress = null;\n      this._loaded = 0;\n      this._readableStream = null;\n      this._readCapability = (0, _util.createPromiseCapability)();\n      const source = stream.source;\n      this._isStreamingSupported = !source.disableStream;\n    }\n\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    }\n\n    async read() {\n      await this._readCapability.promise;\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      if (this._storedError) {\n        throw this._storedError;\n      }\n\n      const chunk = this._readableStream.read();\n\n      if (chunk === null) {\n        this._readCapability = (0, _util.createPromiseCapability)();\n        return this.read();\n      }\n\n      this._loaded += chunk.length;\n\n      if (this.onProgress) {\n        this.onProgress({\n          loaded: this._loaded\n        });\n      }\n\n      const buffer = new Uint8Array(chunk).buffer;\n      return {\n        value: buffer,\n        done: false\n      };\n    }\n\n    cancel(reason) {\n      if (!this._readableStream) {\n        this._error(reason);\n\n        return;\n      }\n\n      this._readableStream.destroy(reason);\n    }\n\n    _error(reason) {\n      this._storedError = reason;\n\n      this._readCapability.resolve();\n    }\n\n    _setReadableStream(readableStream) {\n      this._readableStream = readableStream;\n      readableStream.on(\"readable\", () => {\n        this._readCapability.resolve();\n      });\n      readableStream.on(\"end\", () => {\n        readableStream.destroy();\n        this._done = true;\n\n        this._readCapability.resolve();\n      });\n      readableStream.on(\"error\", reason => {\n        this._error(reason);\n      });\n\n      if (this._storedError) {\n        this._readableStream.destroy(this._storedError);\n      }\n    }\n\n  }\n\n  function createRequestOptions(parsedUrl, headers) {\n    return {\n      protocol: parsedUrl.protocol,\n      auth: parsedUrl.auth,\n      host: parsedUrl.hostname,\n      port: parsedUrl.port,\n      path: parsedUrl.path,\n      method: \"GET\",\n      headers\n    };\n  }\n\n  class PDFNodeStreamFullReader extends BaseFullReader {\n    constructor(stream) {\n      super(stream);\n\n      const handleResponse = response => {\n        if (response.statusCode === 404) {\n          const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n          this._storedError = error;\n\n          this._headersCapability.reject(error);\n\n          return;\n        }\n\n        this._headersCapability.resolve();\n\n        this._setReadableStream(response);\n\n        const getResponseHeader = name => {\n          return this._readableStream.headers[name.toLowerCase()];\n        };\n\n        const {\n          allowRangeRequests,\n          suggestedLength\n        } = (0, _network_utils.validateRangeRequestCapabilities)({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange\n        });\n        this._isRangeSupported = allowRangeRequests;\n        this._contentLength = suggestedLength || this._contentLength;\n        this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n      };\n\n      this._request = null;\n\n      if (this._url.protocol === \"http:\") {\n        this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n      } else {\n        this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n      }\n\n      this._request.on(\"error\", reason => {\n        this._storedError = reason;\n\n        this._headersCapability.reject(reason);\n      });\n\n      this._request.end();\n    }\n\n  }\n\n  class PDFNodeStreamRangeReader extends BaseRangeReader {\n    constructor(stream, start, end) {\n      super(stream);\n      this._httpHeaders = {};\n\n      for (const property in stream.httpHeaders) {\n        const value = stream.httpHeaders[property];\n\n        if (typeof value === \"undefined\") {\n          continue;\n        }\n\n        this._httpHeaders[property] = value;\n      }\n\n      this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n      const handleResponse = response => {\n        if (response.statusCode === 404) {\n          const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n          this._storedError = error;\n          return;\n        }\n\n        this._setReadableStream(response);\n      };\n\n      this._request = null;\n\n      if (this._url.protocol === \"http:\") {\n        this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n      } else {\n        this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n      }\n\n      this._request.on(\"error\", reason => {\n        this._storedError = reason;\n      });\n\n      this._request.end();\n    }\n\n  }\n\n  class PDFNodeStreamFsFullReader extends BaseFullReader {\n    constructor(stream) {\n      super(stream);\n      let path = decodeURIComponent(this._url.path);\n\n      if (fileUriRegex.test(this._url.href)) {\n        path = path.replace(/^\\//, \"\");\n      }\n\n      fs.lstat(path, (error, stat) => {\n        if (error) {\n          if (error.code === \"ENOENT\") {\n            error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n          }\n\n          this._storedError = error;\n\n          this._headersCapability.reject(error);\n\n          return;\n        }\n\n        this._contentLength = stat.size;\n\n        this._setReadableStream(fs.createReadStream(path));\n\n        this._headersCapability.resolve();\n      });\n    }\n\n  }\n\n  class PDFNodeStreamFsRangeReader extends BaseRangeReader {\n    constructor(stream, start, end) {\n      super(stream);\n      let path = decodeURIComponent(this._url.path);\n\n      if (fileUriRegex.test(this._url.href)) {\n        path = path.replace(/^\\//, \"\");\n      }\n\n      this._setReadableStream(fs.createReadStream(path, {\n        start,\n        end: end - 1\n      }));\n    }\n\n  }\n\n  /***/ }),\n  /* 24 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.createResponseStatusError = createResponseStatusError;\n  exports.extractFilenameFromHeader = extractFilenameFromHeader;\n  exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n  exports.validateResponseStatus = validateResponseStatus;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _content_disposition = __w_pdfjs_require__(25);\n\n  function validateRangeRequestCapabilities({\n    getResponseHeader,\n    isHttp,\n    rangeChunkSize,\n    disableRange\n  }) {\n    (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n    const returnValues = {\n      allowRangeRequests: false,\n      suggestedLength: undefined\n    };\n    const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n\n    if (!Number.isInteger(length)) {\n      return returnValues;\n    }\n\n    returnValues.suggestedLength = length;\n\n    if (length <= 2 * rangeChunkSize) {\n      return returnValues;\n    }\n\n    if (disableRange || !isHttp) {\n      return returnValues;\n    }\n\n    if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n      return returnValues;\n    }\n\n    const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n\n    if (contentEncoding !== \"identity\") {\n      return returnValues;\n    }\n\n    returnValues.allowRangeRequests = true;\n    return returnValues;\n  }\n\n  function extractFilenameFromHeader(getResponseHeader) {\n    const contentDisposition = getResponseHeader(\"Content-Disposition\");\n\n    if (contentDisposition) {\n      let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n\n      if (filename.includes(\"%\")) {\n        try {\n          filename = decodeURIComponent(filename);\n        } catch (ex) {}\n      }\n\n      if (/\\.pdf$/i.test(filename)) {\n        return filename;\n      }\n    }\n\n    return null;\n  }\n\n  function createResponseStatusError(status, url) {\n    if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n      return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n    }\n\n    return new _util.UnexpectedResponseException(\"Unexpected server response (\" + status + ') while retrieving PDF \"' + url + '\".', status);\n  }\n\n  function validateResponseStatus(status) {\n    return status === 200 || status === 206;\n  }\n\n  /***/ }),\n  /* 25 */\n  /***/ ((__unused_webpack_module, exports) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n\n  function getFilenameFromContentDispositionHeader(contentDisposition) {\n    let needsEncodingFixup = true;\n    let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n\n    if (tmp) {\n      tmp = tmp[1];\n      let filename = rfc2616unquote(tmp);\n      filename = unescape(filename);\n      filename = rfc5987decode(filename);\n      filename = rfc2047decode(filename);\n      return fixupEncoding(filename);\n    }\n\n    tmp = rfc2231getparam(contentDisposition);\n\n    if (tmp) {\n      const filename = rfc2047decode(tmp);\n      return fixupEncoding(filename);\n    }\n\n    tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n\n    if (tmp) {\n      tmp = tmp[1];\n      let filename = rfc2616unquote(tmp);\n      filename = rfc2047decode(filename);\n      return fixupEncoding(filename);\n    }\n\n    function toParamRegExp(attributePattern, flags) {\n      return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n    }\n\n    function textdecode(encoding, value) {\n      if (encoding) {\n        if (!/^[\\x00-\\xFF]+$/.test(value)) {\n          return value;\n        }\n\n        try {\n          const decoder = new TextDecoder(encoding, {\n            fatal: true\n          });\n          const bytes = Array.from(value, function (ch) {\n            return ch.charCodeAt(0) & 0xff;\n          });\n          value = decoder.decode(new Uint8Array(bytes));\n          needsEncodingFixup = false;\n        } catch (e) {\n          if (/^utf-?8$/i.test(encoding)) {\n            try {\n              value = decodeURIComponent(escape(value));\n              needsEncodingFixup = false;\n            } catch (err) {}\n          }\n        }\n      }\n\n      return value;\n    }\n\n    function fixupEncoding(value) {\n      if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n        value = textdecode(\"utf-8\", value);\n\n        if (needsEncodingFixup) {\n          value = textdecode(\"iso-8859-1\", value);\n        }\n      }\n\n      return value;\n    }\n\n    function rfc2231getparam(contentDispositionStr) {\n      const matches = [];\n      let match;\n      const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n\n      while ((match = iter.exec(contentDispositionStr)) !== null) {\n        let [, n, quot, part] = match;\n        n = parseInt(n, 10);\n\n        if (n in matches) {\n          if (n === 0) {\n            break;\n          }\n\n          continue;\n        }\n\n        matches[n] = [quot, part];\n      }\n\n      const parts = [];\n\n      for (let n = 0; n < matches.length; ++n) {\n        if (!(n in matches)) {\n          break;\n        }\n\n        let [quot, part] = matches[n];\n        part = rfc2616unquote(part);\n\n        if (quot) {\n          part = unescape(part);\n\n          if (n === 0) {\n            part = rfc5987decode(part);\n          }\n        }\n\n        parts.push(part);\n      }\n\n      return parts.join(\"\");\n    }\n\n    function rfc2616unquote(value) {\n      if (value.startsWith('\"')) {\n        const parts = value.slice(1).split('\\\\\"');\n\n        for (let i = 0; i < parts.length; ++i) {\n          const quotindex = parts[i].indexOf('\"');\n\n          if (quotindex !== -1) {\n            parts[i] = parts[i].slice(0, quotindex);\n            parts.length = i + 1;\n          }\n\n          parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n        }\n\n        value = parts.join('\"');\n      }\n\n      return value;\n    }\n\n    function rfc5987decode(extvalue) {\n      const encodingend = extvalue.indexOf(\"'\");\n\n      if (encodingend === -1) {\n        return extvalue;\n      }\n\n      const encoding = extvalue.slice(0, encodingend);\n      const langvalue = extvalue.slice(encodingend + 1);\n      const value = langvalue.replace(/^[^']*'/, \"\");\n      return textdecode(encoding, value);\n    }\n\n    function rfc2047decode(value) {\n      if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n        return value;\n      }\n\n      return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        }\n\n        try {\n          text = atob(text);\n        } catch (e) {}\n\n        return textdecode(charset, text);\n      });\n    }\n\n    return \"\";\n  }\n\n  /***/ }),\n  /* 26 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.PDFNetworkStream = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _network_utils = __w_pdfjs_require__(24);\n\n  ;\n  const OK_RESPONSE = 200;\n  const PARTIAL_CONTENT_RESPONSE = 206;\n\n  function getArrayBuffer(xhr) {\n    const data = xhr.response;\n\n    if (typeof data !== \"string\") {\n      return data;\n    }\n\n    const array = (0, _util.stringToBytes)(data);\n    return array.buffer;\n  }\n\n  class NetworkManager {\n    constructor(url, args) {\n      this.url = url;\n      args = args || {};\n      this.isHttp = /^https?:/i.test(url);\n      this.httpHeaders = this.isHttp && args.httpHeaders || {};\n      this.withCredentials = args.withCredentials || false;\n\n      this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n      this.currXhrId = 0;\n      this.pendingRequests = Object.create(null);\n    }\n\n    requestRange(begin, end, listeners) {\n      const args = {\n        begin,\n        end\n      };\n\n      for (const prop in listeners) {\n        args[prop] = listeners[prop];\n      }\n\n      return this.request(args);\n    }\n\n    requestFull(listeners) {\n      return this.request(listeners);\n    }\n\n    request(args) {\n      const xhr = this.getXhr();\n      const xhrId = this.currXhrId++;\n      const pendingRequest = this.pendingRequests[xhrId] = {\n        xhr\n      };\n      xhr.open(\"GET\", this.url);\n      xhr.withCredentials = this.withCredentials;\n\n      for (const property in this.httpHeaders) {\n        const value = this.httpHeaders[property];\n\n        if (typeof value === \"undefined\") {\n          continue;\n        }\n\n        xhr.setRequestHeader(property, value);\n      }\n\n      if (this.isHttp && \"begin\" in args && \"end\" in args) {\n        xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n        pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n      } else {\n        pendingRequest.expectedStatus = OK_RESPONSE;\n      }\n\n      xhr.responseType = \"arraybuffer\";\n\n      if (args.onError) {\n        xhr.onerror = function (evt) {\n          args.onError(xhr.status);\n        };\n      }\n\n      xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n      xhr.onprogress = this.onProgress.bind(this, xhrId);\n      pendingRequest.onHeadersReceived = args.onHeadersReceived;\n      pendingRequest.onDone = args.onDone;\n      pendingRequest.onError = args.onError;\n      pendingRequest.onProgress = args.onProgress;\n      xhr.send(null);\n      return xhrId;\n    }\n\n    onProgress(xhrId, evt) {\n      const pendingRequest = this.pendingRequests[xhrId];\n\n      if (!pendingRequest) {\n        return;\n      }\n\n      if (pendingRequest.onProgress) {\n        pendingRequest.onProgress(evt);\n      }\n    }\n\n    onStateChange(xhrId, evt) {\n      const pendingRequest = this.pendingRequests[xhrId];\n\n      if (!pendingRequest) {\n        return;\n      }\n\n      const xhr = pendingRequest.xhr;\n\n      if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n        pendingRequest.onHeadersReceived();\n        delete pendingRequest.onHeadersReceived;\n      }\n\n      if (xhr.readyState !== 4) {\n        return;\n      }\n\n      if (!(xhrId in this.pendingRequests)) {\n        return;\n      }\n\n      delete this.pendingRequests[xhrId];\n\n      if (xhr.status === 0 && this.isHttp) {\n        if (pendingRequest.onError) {\n          pendingRequest.onError(xhr.status);\n        }\n\n        return;\n      }\n\n      const xhrStatus = xhr.status || OK_RESPONSE;\n      const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n      if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n        if (pendingRequest.onError) {\n          pendingRequest.onError(xhr.status);\n        }\n\n        return;\n      }\n\n      const chunk = getArrayBuffer(xhr);\n\n      if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n        const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n        const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n        pendingRequest.onDone({\n          begin: parseInt(matches[1], 10),\n          chunk\n        });\n      } else if (chunk) {\n        pendingRequest.onDone({\n          begin: 0,\n          chunk\n        });\n      } else if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n    }\n\n    getRequestXhr(xhrId) {\n      return this.pendingRequests[xhrId].xhr;\n    }\n\n    isPendingRequest(xhrId) {\n      return xhrId in this.pendingRequests;\n    }\n\n    abortRequest(xhrId) {\n      const xhr = this.pendingRequests[xhrId].xhr;\n      delete this.pendingRequests[xhrId];\n      xhr.abort();\n    }\n\n  }\n\n  class PDFNetworkStream {\n    constructor(source) {\n      this._source = source;\n      this._manager = new NetworkManager(source.url, {\n        httpHeaders: source.httpHeaders,\n        withCredentials: source.withCredentials\n      });\n      this._rangeChunkSize = source.rangeChunkSize;\n      this._fullRequestReader = null;\n      this._rangeRequestReaders = [];\n    }\n\n    _onRangeRequestReaderClosed(reader) {\n      const i = this._rangeRequestReaders.indexOf(reader);\n\n      if (i >= 0) {\n        this._rangeRequestReaders.splice(i, 1);\n      }\n    }\n\n    getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n      this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n      return this._fullRequestReader;\n    }\n\n    getRangeReader(begin, end) {\n      const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n      reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n\n      this._rangeRequestReaders.push(reader);\n\n      return reader;\n    }\n\n    cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n\n      const readers = this._rangeRequestReaders.slice(0);\n\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n\n  }\n\n  exports.PDFNetworkStream = PDFNetworkStream;\n\n  class PDFNetworkStreamFullRequestReader {\n    constructor(manager, source) {\n      this._manager = manager;\n      const args = {\n        onHeadersReceived: this._onHeadersReceived.bind(this),\n        onDone: this._onDone.bind(this),\n        onError: this._onError.bind(this),\n        onProgress: this._onProgress.bind(this)\n      };\n      this._url = source.url;\n      this._fullRequestId = manager.requestFull(args);\n      this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n      this._disableRange = source.disableRange || false;\n      this._contentLength = source.length;\n      this._rangeChunkSize = source.rangeChunkSize;\n\n      if (!this._rangeChunkSize && !this._disableRange) {\n        this._disableRange = true;\n      }\n\n      this._isStreamingSupported = false;\n      this._isRangeSupported = false;\n      this._cachedChunks = [];\n      this._requests = [];\n      this._done = false;\n      this._storedError = undefined;\n      this._filename = null;\n      this.onProgress = null;\n    }\n\n    _onHeadersReceived() {\n      const fullRequestXhrId = this._fullRequestId;\n\n      const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n      const getResponseHeader = name => {\n        return fullRequestXhr.getResponseHeader(name);\n      };\n\n      const {\n        allowRangeRequests,\n        suggestedLength\n      } = (0, _network_utils.validateRangeRequestCapabilities)({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange\n      });\n\n      if (allowRangeRequests) {\n        this._isRangeSupported = true;\n      }\n\n      this._contentLength = suggestedLength || this._contentLength;\n      this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n      if (this._isRangeSupported) {\n        this._manager.abortRequest(fullRequestXhrId);\n      }\n\n      this._headersReceivedCapability.resolve();\n    }\n\n    _onDone(args) {\n      if (args) {\n        if (this._requests.length > 0) {\n          const requestCapability = this._requests.shift();\n\n          requestCapability.resolve({\n            value: args.chunk,\n            done: false\n          });\n        } else {\n          this._cachedChunks.push(args.chunk);\n        }\n      }\n\n      this._done = true;\n\n      if (this._cachedChunks.length > 0) {\n        return;\n      }\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n    }\n\n    _onError(status) {\n      const url = this._url;\n      const exception = (0, _network_utils.createResponseStatusError)(status, url);\n      this._storedError = exception;\n\n      this._headersReceivedCapability.reject(exception);\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.reject(exception);\n      });\n\n      this._requests = [];\n      this._cachedChunks = [];\n    }\n\n    _onProgress(data) {\n      if (this.onProgress) {\n        this.onProgress({\n          loaded: data.loaded,\n          total: data.lengthComputable ? data.total : this._contentLength\n        });\n      }\n    }\n\n    get filename() {\n      return this._filename;\n    }\n\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    }\n\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    }\n\n    get contentLength() {\n      return this._contentLength;\n    }\n\n    get headersReady() {\n      return this._headersReceivedCapability.promise;\n    }\n\n    async read() {\n      if (this._storedError) {\n        throw this._storedError;\n      }\n\n      if (this._cachedChunks.length > 0) {\n        const chunk = this._cachedChunks.shift();\n\n        return {\n          value: chunk,\n          done: false\n        };\n      }\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      const requestCapability = (0, _util.createPromiseCapability)();\n\n      this._requests.push(requestCapability);\n\n      return requestCapability.promise;\n    }\n\n    cancel(reason) {\n      this._done = true;\n\n      this._headersReceivedCapability.reject(reason);\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n\n      if (this._manager.isPendingRequest(this._fullRequestId)) {\n        this._manager.abortRequest(this._fullRequestId);\n      }\n\n      this._fullRequestReader = null;\n    }\n\n  }\n\n  class PDFNetworkStreamRangeRequestReader {\n    constructor(manager, begin, end) {\n      this._manager = manager;\n      const args = {\n        onDone: this._onDone.bind(this),\n        onProgress: this._onProgress.bind(this)\n      };\n      this._requestId = manager.requestRange(begin, end, args);\n      this._requests = [];\n      this._queuedChunk = null;\n      this._done = false;\n      this.onProgress = null;\n      this.onClosed = null;\n    }\n\n    _close() {\n      if (this.onClosed) {\n        this.onClosed(this);\n      }\n    }\n\n    _onDone(data) {\n      const chunk = data.chunk;\n\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n\n        requestCapability.resolve({\n          value: chunk,\n          done: false\n        });\n      } else {\n        this._queuedChunk = chunk;\n      }\n\n      this._done = true;\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n\n      this._close();\n    }\n\n    _onProgress(evt) {\n      if (!this.isStreamingSupported && this.onProgress) {\n        this.onProgress({\n          loaded: evt.loaded\n        });\n      }\n    }\n\n    get isStreamingSupported() {\n      return false;\n    }\n\n    async read() {\n      if (this._queuedChunk !== null) {\n        const chunk = this._queuedChunk;\n        this._queuedChunk = null;\n        return {\n          value: chunk,\n          done: false\n        };\n      }\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      const requestCapability = (0, _util.createPromiseCapability)();\n\n      this._requests.push(requestCapability);\n\n      return requestCapability.promise;\n    }\n\n    cancel(reason) {\n      this._done = true;\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n\n      if (this._manager.isPendingRequest(this._requestId)) {\n        this._manager.abortRequest(this._requestId);\n      }\n\n      this._close();\n    }\n\n  }\n\n  /***/ }),\n  /* 27 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.PDFFetchStream = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _network_utils = __w_pdfjs_require__(24);\n\n  ;\n\n  function createFetchOptions(headers, withCredentials, abortController) {\n    return {\n      method: \"GET\",\n      headers,\n      signal: abortController && abortController.signal, // lwf\n      mode: \"cors\",\n      credentials: withCredentials ? \"include\" : \"same-origin\",\n      redirect: \"follow\"\n    };\n  }\n\n  function createHeaders(httpHeaders) {\n    const headers = new Headers();\n\n    for (const property in httpHeaders) {\n      const value = httpHeaders[property];\n\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n\n      headers.append(property, value);\n    }\n\n    return headers;\n  }\n\n  class PDFFetchStream {\n    constructor(source) {\n      this.source = source;\n      this.isHttp = /^https?:/i.test(source.url);\n      this.httpHeaders = this.isHttp && source.httpHeaders || {};\n      this._fullRequestReader = null;\n      this._rangeRequestReaders = [];\n    }\n\n    get _progressiveDataLength() {\n      return this._fullRequestReader && this._fullRequestReader._loaded || 0; // lwf\n    }\n\n    getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n      this._fullRequestReader = new PDFFetchStreamReader(this);\n      return this._fullRequestReader;\n    }\n\n    getRangeReader(begin, end) {\n      if (end <= this._progressiveDataLength) {\n        return null;\n      }\n\n      const reader = new PDFFetchStreamRangeReader(this, begin, end);\n\n      this._rangeRequestReaders.push(reader);\n\n      return reader;\n    }\n\n    cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n\n      const readers = this._rangeRequestReaders.slice(0);\n\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n\n  }\n\n  exports.PDFFetchStream = PDFFetchStream;\n\n  class PDFFetchStreamReader {\n    constructor(stream) {\n      this._stream = stream;\n      this._reader = null;\n      this._loaded = 0;\n      this._filename = null;\n      const source = stream.source;\n      this._withCredentials = source.withCredentials || false;\n      this._contentLength = source.length;\n      this._headersCapability = (0, _util.createPromiseCapability)();\n      this._disableRange = source.disableRange || false;\n      this._rangeChunkSize = source.rangeChunkSize;\n\n      if (!this._rangeChunkSize && !this._disableRange) {\n        this._disableRange = true;\n      }\n\n      if (typeof AbortController !== \"undefined\") {\n        this._abortController = new AbortController();\n      }\n\n      this._isStreamingSupported = !source.disableStream;\n      this._isRangeSupported = !source.disableRange;\n      this._headers = createHeaders(this._stream.httpHeaders);\n      const url = source.url;\n      fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n        if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n          throw (0, _network_utils.createResponseStatusError)(response.status, url);\n        }\n\n        this._reader = response.body.getReader();\n\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n\n        const {\n          allowRangeRequests,\n          suggestedLength\n        } = (0, _network_utils.validateRangeRequestCapabilities)({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange\n        });\n        this._isRangeSupported = allowRangeRequests;\n        this._contentLength = suggestedLength || this._contentLength;\n        this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n        }\n      }).catch(this._headersCapability.reject);\n      this.onProgress = null;\n    }\n\n    get headersReady() {\n      return this._headersCapability.promise;\n    }\n\n    get filename() {\n      return this._filename;\n    }\n\n    get contentLength() {\n      return this._contentLength;\n    }\n\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    }\n\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    }\n\n    async read() {\n      await this._headersCapability.promise;\n      const {\n        value,\n        done\n      } = await this._reader.read();\n\n      if (done) {\n        return {\n          value,\n          done\n        };\n      }\n\n      this._loaded += value.byteLength;\n\n      if (this.onProgress) {\n        this.onProgress({\n          loaded: this._loaded,\n          total: this._contentLength\n        });\n      }\n\n      const buffer = new Uint8Array(value).buffer;\n      return {\n        value: buffer,\n        done: false\n      };\n    }\n\n    cancel(reason) {\n      if (this._reader) {\n        this._reader.cancel(reason);\n      }\n\n      if (this._abortController) {\n        this._abortController.abort();\n      }\n    }\n\n  }\n\n  class PDFFetchStreamRangeReader {\n    constructor(stream, begin, end) {\n      this._stream = stream;\n      this._reader = null;\n      this._loaded = 0;\n      const source = stream.source;\n      this._withCredentials = source.withCredentials || false;\n      this._readCapability = (0, _util.createPromiseCapability)();\n      this._isStreamingSupported = !source.disableStream;\n\n      if (typeof AbortController !== \"undefined\") {\n        this._abortController = new AbortController();\n      }\n\n      this._headers = createHeaders(this._stream.httpHeaders);\n\n      this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n      const url = source.url;\n      fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n        if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n          throw (0, _network_utils.createResponseStatusError)(response.status, url);\n        }\n\n        this._readCapability.resolve();\n\n        this._reader = response.body.getReader();\n      }).catch(reason => {\n        if (reason && reason.name === \"AbortError\") { // lwf\n          return;\n        }\n\n        throw reason;\n      });\n      this.onProgress = null;\n    }\n\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    }\n\n    async read() {\n      await this._readCapability.promise;\n      const {\n        value,\n        done\n      } = await this._reader.read();\n\n      if (done) {\n        return {\n          value,\n          done\n        };\n      }\n\n      this._loaded += value.byteLength;\n\n      if (this.onProgress) {\n        this.onProgress({\n          loaded: this._loaded\n        });\n      }\n\n      const buffer = new Uint8Array(value).buffer;\n      return {\n        value: buffer,\n        done: false\n      };\n    }\n\n    cancel(reason) {\n      if (this._reader) {\n        this._reader.cancel(reason);\n      }\n\n      if (this._abortController) {\n        this._abortController.abort();\n      }\n    }\n\n  }\n/***/ })\n/******/  ]);\n/************************************************************************/\n/******/  // The module cache\n/******/  var __webpack_module_cache__ = {};\n/******/  \n/******/  // The require function\n/******/  function __w_pdfjs_require__(moduleId) {\n/******/    // Check if module is in cache\n/******/    if(__webpack_module_cache__[moduleId]) {\n/******/      return __webpack_module_cache__[moduleId].exports;\n/******/    }\n/******/    // Create a new module (and put it into the cache)\n/******/    var module = __webpack_module_cache__[moduleId] = {\n/******/      // no module.id needed\n/******/      // no module.loaded needed\n/******/      exports: {}\n/******/    };\n/******/  \n/******/    // Execute the module function\n/******/    __webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n/******/  \n/******/    // Return the exports of the module\n/******/    return module.exports;\n/******/  }\n/******/  \n/************************************************************************/\n/******/  // module exports must be returned from runtime so entry inlining is disabled\n/******/  // startup\n/******/  // Load entry module and return exports\n/******/  return __w_pdfjs_require__(0);\n/******/ })()\n;\n});\n\ndefine('skylark-pdfjs-display/main',[\r\n\t\"./display\"\r\n],function(display) {\r\n\treturn display;\r\n});\ndefine('skylark-pdfjs-display', ['skylark-pdfjs-display/main'], function (main) { return main; });\n\ndefine('skylark-pdfjs-viewer/viewer',[\n  \"skylark-pdfjs-display\"\n],function(pdfjsLib){\n\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"PDFViewerApplicationOptions\", ({\n  enumerable: true,\n  get: function () {\n    return _app_options.AppOptions;\n  }\n}));\nObject.defineProperty(exports, \"PDFViewerApplication\", ({\n  enumerable: true,\n  get: function () {\n    return _app.PDFViewerApplication;\n  }\n}));\n\nvar _app_options = __webpack_require__(1);\n\nvar _app = __webpack_require__(3);\n\nconst pdfjsVersion = '2.7.570';\nconst pdfjsBuild = 'f2c7338b0';\nwindow.PDFViewerApplication = _app.PDFViewerApplication;\nwindow.PDFViewerApplicationOptions = _app_options.AppOptions;\n;\n;\n{\n  __webpack_require__(35);\n}\n;\n{\n  __webpack_require__(41);\n}\n\nfunction getViewerConfiguration() {\n  return {\n    appContainer: document.body,\n    mainContainer: document.getElementById(\"viewerContainer\"),\n    viewerContainer: document.getElementById(\"viewer\"),\n    eventBus: null,\n    toolbar: {\n      container: document.getElementById(\"toolbarViewer\"),\n      numPages: document.getElementById(\"numPages\"),\n      pageNumber: document.getElementById(\"pageNumber\"),\n      scaleSelectContainer: document.getElementById(\"scaleSelectContainer\"),\n      scaleSelect: document.getElementById(\"scaleSelect\"),\n      customScaleOption: document.getElementById(\"customScaleOption\"),\n      previous: document.getElementById(\"previous\"),\n      next: document.getElementById(\"next\"),\n      zoomIn: document.getElementById(\"zoomIn\"),\n      zoomOut: document.getElementById(\"zoomOut\"),\n      viewFind: document.getElementById(\"viewFind\"),\n      openFile: document.getElementById(\"openFile\"),\n      print: document.getElementById(\"print\"),\n      presentationModeButton: document.getElementById(\"presentationMode\"),\n      download: document.getElementById(\"download\"),\n      viewBookmark: document.getElementById(\"viewBookmark\")\n    },\n    secondaryToolbar: {\n      toolbar: document.getElementById(\"secondaryToolbar\"),\n      toggleButton: document.getElementById(\"secondaryToolbarToggle\"),\n      toolbarButtonContainer: document.getElementById(\"secondaryToolbarButtonContainer\"),\n      presentationModeButton: document.getElementById(\"secondaryPresentationMode\"),\n      openFileButton: document.getElementById(\"secondaryOpenFile\"),\n      printButton: document.getElementById(\"secondaryPrint\"),\n      downloadButton: document.getElementById(\"secondaryDownload\"),\n      viewBookmarkButton: document.getElementById(\"secondaryViewBookmark\"),\n      firstPageButton: document.getElementById(\"firstPage\"),\n      lastPageButton: document.getElementById(\"lastPage\"),\n      pageRotateCwButton: document.getElementById(\"pageRotateCw\"),\n      pageRotateCcwButton: document.getElementById(\"pageRotateCcw\"),\n      cursorSelectToolButton: document.getElementById(\"cursorSelectTool\"),\n      cursorHandToolButton: document.getElementById(\"cursorHandTool\"),\n      scrollVerticalButton: document.getElementById(\"scrollVertical\"),\n      scrollHorizontalButton: document.getElementById(\"scrollHorizontal\"),\n      scrollWrappedButton: document.getElementById(\"scrollWrapped\"),\n      spreadNoneButton: document.getElementById(\"spreadNone\"),\n      spreadOddButton: document.getElementById(\"spreadOdd\"),\n      spreadEvenButton: document.getElementById(\"spreadEven\"),\n      documentPropertiesButton: document.getElementById(\"documentProperties\")\n    },\n    fullscreen: {\n      contextFirstPage: document.getElementById(\"contextFirstPage\"),\n      contextLastPage: document.getElementById(\"contextLastPage\"),\n      contextPageRotateCw: document.getElementById(\"contextPageRotateCw\"),\n      contextPageRotateCcw: document.getElementById(\"contextPageRotateCcw\")\n    },\n    sidebar: {\n      outerContainer: document.getElementById(\"outerContainer\"),\n      viewerContainer: document.getElementById(\"viewerContainer\"),\n      toggleButton: document.getElementById(\"sidebarToggle\"),\n      thumbnailButton: document.getElementById(\"viewThumbnail\"),\n      outlineButton: document.getElementById(\"viewOutline\"),\n      attachmentsButton: document.getElementById(\"viewAttachments\"),\n      layersButton: document.getElementById(\"viewLayers\"),\n      thumbnailView: document.getElementById(\"thumbnailView\"),\n      outlineView: document.getElementById(\"outlineView\"),\n      attachmentsView: document.getElementById(\"attachmentsView\"),\n      layersView: document.getElementById(\"layersView\"),\n      outlineOptionsContainer: document.getElementById(\"outlineOptionsContainer\"),\n      currentOutlineItemButton: document.getElementById(\"currentOutlineItem\")\n    },\n    sidebarResizer: {\n      outerContainer: document.getElementById(\"outerContainer\"),\n      resizer: document.getElementById(\"sidebarResizer\")\n    },\n    findBar: {\n      bar: document.getElementById(\"findbar\"),\n      toggleButton: document.getElementById(\"viewFind\"),\n      findField: document.getElementById(\"findInput\"),\n      highlightAllCheckbox: document.getElementById(\"findHighlightAll\"),\n      caseSensitiveCheckbox: document.getElementById(\"findMatchCase\"),\n      entireWordCheckbox: document.getElementById(\"findEntireWord\"),\n      findMsg: document.getElementById(\"findMsg\"),\n      findResultsCount: document.getElementById(\"findResultsCount\"),\n      findPreviousButton: document.getElementById(\"findPrevious\"),\n      findNextButton: document.getElementById(\"findNext\")\n    },\n    passwordOverlay: {\n      overlayName: \"passwordOverlay\",\n      container: document.getElementById(\"passwordOverlay\"),\n      label: document.getElementById(\"passwordText\"),\n      input: document.getElementById(\"password\"),\n      submitButton: document.getElementById(\"passwordSubmit\"),\n      cancelButton: document.getElementById(\"passwordCancel\")\n    },\n    documentProperties: {\n      overlayName: \"documentPropertiesOverlay\",\n      container: document.getElementById(\"documentPropertiesOverlay\"),\n      closeButton: document.getElementById(\"documentPropertiesClose\"),\n      fields: {\n        fileName: document.getElementById(\"fileNameField\"),\n        fileSize: document.getElementById(\"fileSizeField\"),\n        title: document.getElementById(\"titleField\"),\n        author: document.getElementById(\"authorField\"),\n        subject: document.getElementById(\"subjectField\"),\n        keywords: document.getElementById(\"keywordsField\"),\n        creationDate: document.getElementById(\"creationDateField\"),\n        modificationDate: document.getElementById(\"modificationDateField\"),\n        creator: document.getElementById(\"creatorField\"),\n        producer: document.getElementById(\"producerField\"),\n        version: document.getElementById(\"versionField\"),\n        pageCount: document.getElementById(\"pageCountField\"),\n        pageSize: document.getElementById(\"pageSizeField\"),\n        linearized: document.getElementById(\"linearizedField\")\n      }\n    },\n    errorWrapper: {\n      container: document.getElementById(\"errorWrapper\"),\n      errorMessage: document.getElementById(\"errorMessage\"),\n      closeButton: document.getElementById(\"errorClose\"),\n      errorMoreInfo: document.getElementById(\"errorMoreInfo\"),\n      moreInfoButton: document.getElementById(\"errorShowMore\"),\n      lessInfoButton: document.getElementById(\"errorShowLess\")\n    },\n    printContainer: document.getElementById(\"printContainer\"),\n    openFileInputName: \"fileInput\",\n    debuggerScriptPath: \"./debugger.js\"\n  };\n}\n\nfunction webViewerLoad() {\n  const config = getViewerConfiguration();\n  const event = document.createEvent(\"CustomEvent\");\n  event.initCustomEvent(\"webviewerloaded\", true, true, {\n    source: window\n  });\n\n  try {\n    parent.document.dispatchEvent(event);\n  } catch (ex) {\n    console.error(`webviewerloaded: ${ex}`);\n    document.dispatchEvent(event);\n  }\n\n  _app.PDFViewerApplication.run(config);\n}\n\nif (document.readyState === \"interactive\" || document.readyState === \"complete\") {\n  webViewerLoad();\n} else {\n  document.addEventListener(\"DOMContentLoaded\", webViewerLoad, true);\n}\n\n/***/ }),\n/* 1 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.OptionKind = exports.AppOptions = void 0;\n\nvar _viewer_compatibility = __webpack_require__(2);\n\nconst OptionKind = {\n  VIEWER: 0x02,\n  API: 0x04,\n  WORKER: 0x08,\n  PREFERENCE: 0x80\n};\nexports.OptionKind = OptionKind;\nconst defaultOptions = {\n  cursorToolOnLoad: {\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  defaultUrl: {\n    value: \"compressed.tracemonkey-pldi-09.pdf\",\n    kind: OptionKind.VIEWER\n  },\n  defaultZoomValue: {\n    value: \"\",\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  disableHistory: {\n    value: false,\n    kind: OptionKind.VIEWER\n  },\n  disablePageLabels: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enablePermissions: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enablePrintAutoRotate: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enableScripting: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enableWebGL: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  externalLinkRel: {\n    value: \"noopener noreferrer nofollow\",\n    kind: OptionKind.VIEWER\n  },\n  externalLinkTarget: {\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  historyUpdateUrl: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  ignoreDestinationZoom: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  imageResourcesPath: {\n    value: \"./images/\",\n    kind: OptionKind.VIEWER\n  },\n  maxCanvasPixels: {\n    value: 16777216,\n    compatibility: _viewer_compatibility.viewerCompatibilityParams.maxCanvasPixels,\n    kind: OptionKind.VIEWER\n  },\n  pdfBugEnabled: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  printResolution: {\n    value: 150,\n    kind: OptionKind.VIEWER\n  },\n  renderer: {\n    value: \"canvas\",\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  renderInteractiveForms: {\n    value: true,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  sidebarViewOnLoad: {\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  scrollModeOnLoad: {\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  spreadModeOnLoad: {\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  textLayerMode: {\n    value: 1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  useOnlyCssZoom: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  viewerCssTheme: {\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  viewOnLoad: {\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  cMapPacked: {\n    value: true,\n    kind: OptionKind.API\n  },\n  cMapUrl: {\n    value: \"../web/cmaps/\",\n    kind: OptionKind.API\n  },\n  disableAutoFetch: {\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  disableFontFace: {\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  disableRange: {\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  disableStream: {\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  docBaseUrl: {\n    value: \"\",\n    kind: OptionKind.API\n  },\n  fontExtraProperties: {\n    value: false,\n    kind: OptionKind.API\n  },\n  isEvalSupported: {\n    value: true,\n    kind: OptionKind.API\n  },\n  maxImageSize: {\n    value: -1,\n    kind: OptionKind.API\n  },\n  pdfBug: {\n    value: false,\n    kind: OptionKind.API\n  },\n  verbosity: {\n    value: 1,\n    kind: OptionKind.API\n  },\n  workerPort: {\n    value: null,\n    kind: OptionKind.WORKER\n  },\n  workerSrc: {\n    value: \"skylark-pdfjs-worker-all.js\", //\"../build/pdf.worker.js\",\n    kind: OptionKind.WORKER\n  }\n};\n{\n  defaultOptions.disablePreferences = {\n    value: false,\n    kind: OptionKind.VIEWER\n  };\n  defaultOptions.locale = {\n    value: typeof navigator !== \"undefined\" ? navigator.language : \"en-US\",\n    kind: OptionKind.VIEWER\n  };\n  defaultOptions.sandboxBundleSrc = {\n    value: \"../build/pdf.sandbox.js\",\n    kind: OptionKind.VIEWER\n  };\n}\nconst userOptions = Object.create(null);\n\nclass AppOptions {\n  constructor() {\n    throw new Error(\"Cannot initialize AppOptions.\");\n  }\n\n  static get(name) {\n    const userOption = userOptions[name];\n\n    if (userOption !== undefined) {\n      return userOption;\n    }\n\n    const defaultOption = defaultOptions[name];\n\n    if (defaultOption !== undefined) {\n      return defaultOption.compatibility || defaultOption.value;\n    }\n\n    return undefined;\n  }\n\n  static getAll(kind = null) {\n    const options = Object.create(null);\n\n    for (const name in defaultOptions) {\n      const defaultOption = defaultOptions[name];\n\n      if (kind) {\n        if ((kind & defaultOption.kind) === 0) {\n          continue;\n        }\n\n        if (kind === OptionKind.PREFERENCE) {\n          const value = defaultOption.value,\n                valueType = typeof value;\n\n          if (valueType === \"boolean\" || valueType === \"string\" || valueType === \"number\" && Number.isInteger(value)) {\n            options[name] = value;\n            continue;\n          }\n\n          throw new Error(`Invalid type for preference: ${name}`);\n        }\n      }\n\n      const userOption = userOptions[name];\n      options[name] = userOption !== undefined ? userOption : defaultOption.compatibility || defaultOption.value;\n    }\n\n    return options;\n  }\n\n  static set(name, value) {\n    userOptions[name] = value;\n  }\n\n  static setAll(options) {\n    for (const name in options) {\n      userOptions[name] = options[name];\n    }\n  }\n\n  static remove(name) {\n    delete userOptions[name];\n  }\n\n}\n\nexports.AppOptions = AppOptions;\n\n/***/ }),\n/* 2 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.viewerCompatibilityParams = void 0;\nconst compatibilityParams = Object.create(null);\n{\n  const userAgent = typeof navigator !== \"undefined\" && navigator.userAgent || \"\";\n  const platform = typeof navigator !== \"undefined\" && navigator.platform || \"\";\n  const maxTouchPoints = typeof navigator !== \"undefined\" && navigator.maxTouchPoints || 1;\n  const isAndroid = /Android/.test(userAgent);\n  const isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent) || platform === \"MacIntel\" && maxTouchPoints > 1;\n  const isIOSChrome = /CriOS/.test(userAgent);\n\n  (function checkOnBlobSupport() {\n    if (isIOSChrome) {\n      compatibilityParams.disableCreateObjectURL = true;\n    }\n  })();\n\n  (function checkCanvasSizeLimitation() {\n    if (isIOS || isAndroid) {\n      compatibilityParams.maxCanvasPixels = 5242880;\n    }\n  })();\n}\nconst viewerCompatibilityParams = Object.freeze(compatibilityParams);\nexports.viewerCompatibilityParams = viewerCompatibilityParams;\n\n/***/ }),\n/* 3 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFViewerApplication = exports.PDFPrintServiceFactory = exports.DefaultExternalServices = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _app_options = __webpack_require__(1);\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _pdf_cursor_tools = __webpack_require__(6);\n\nvar _pdf_rendering_queue = __webpack_require__(8);\n\nvar _overlay_manager = __webpack_require__(9);\n\nvar _password_prompt = __webpack_require__(10);\n\nvar _pdf_attachment_viewer = __webpack_require__(11);\n\nvar _pdf_document_properties = __webpack_require__(13);\n\nvar _pdf_find_bar = __webpack_require__(14);\n\nvar _pdf_find_controller = __webpack_require__(15);\n\nvar _pdf_history = __webpack_require__(17);\n\nvar _pdf_layer_viewer = __webpack_require__(18);\n\nvar _pdf_link_service = __webpack_require__(19);\n\nvar _pdf_outline_viewer = __webpack_require__(20);\n\nvar _pdf_presentation_mode = __webpack_require__(21);\n\nvar _pdf_sidebar = __webpack_require__(22);\n\nvar _pdf_sidebar_resizer = __webpack_require__(23);\n\nvar _pdf_thumbnail_viewer = __webpack_require__(24);\n\nvar _pdf_viewer = __webpack_require__(26);\n\nvar _secondary_toolbar = __webpack_require__(31);\n\nvar _toolbar = __webpack_require__(33);\n\nvar _viewer_compatibility = __webpack_require__(2);\n\nvar _view_history = __webpack_require__(34);\n\nconst DEFAULT_SCALE_DELTA = 1.1;\nconst DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT = 5000;\nconst FORCE_PAGES_LOADED_TIMEOUT = 10000;\nconst WHEEL_ZOOM_DISABLED_TIMEOUT = 1000;\nconst ENABLE_PERMISSIONS_CLASS = \"enablePermissions\";\nconst ViewOnLoad = {\n  UNKNOWN: -1,\n  PREVIOUS: 0,\n  INITIAL: 1\n};\nconst ViewerCssTheme = {\n  AUTOMATIC: 0,\n  LIGHT: 1,\n  DARK: 2\n};\nconst KNOWN_VERSIONS = [\"1.0\", \"1.1\", \"1.2\", \"1.3\", \"1.4\", \"1.5\", \"1.6\", \"1.7\", \"1.8\", \"1.9\", \"2.0\", \"2.1\", \"2.2\", \"2.3\"];\nconst KNOWN_GENERATORS = [\"acrobat distiller\", \"acrobat pdfwriter\", \"adobe livecycle\", \"adobe pdf library\", \"adobe photoshop\", \"ghostscript\", \"tcpdf\", \"cairo\", \"dvipdfm\", \"dvips\", \"pdftex\", \"pdfkit\", \"itext\", \"prince\", \"quarkxpress\", \"mac os x\", \"microsoft\", \"openoffice\", \"oracle\", \"luradocument\", \"pdf-xchange\", \"antenna house\", \"aspose.cells\", \"fpdf\"];\n\nclass DefaultExternalServices {\n  constructor() {\n    throw new Error(\"Cannot initialize DefaultExternalServices.\");\n  }\n\n  static updateFindControlState(data) {}\n\n  static updateFindMatchesCount(data) {}\n\n  static initPassiveLoading(callbacks) {}\n\n  static async fallback(data) {}\n\n  static reportTelemetry(data) {}\n\n  static createDownloadManager(options) {\n    throw new Error(\"Not implemented: createDownloadManager\");\n  }\n\n  static createPreferences() {\n    throw new Error(\"Not implemented: createPreferences\");\n  }\n\n  static createL10n(options) {\n    throw new Error(\"Not implemented: createL10n\");\n  }\n\n  static createScripting(options) {\n    throw new Error(\"Not implemented: createScripting\");\n  }\n\n  static get supportsIntegratedFind() {\n    return (0, _pdfjsLib.shadow)(this, \"supportsIntegratedFind\", false);\n  }\n\n  static get supportsDocumentFonts() {\n    return (0, _pdfjsLib.shadow)(this, \"supportsDocumentFonts\", true);\n  }\n\n  static get supportedMouseWheelZoomModifierKeys() {\n    return (0, _pdfjsLib.shadow)(this, \"supportedMouseWheelZoomModifierKeys\", {\n      ctrlKey: true,\n      metaKey: true\n    });\n  }\n\n  static get isInAutomation() {\n    return (0, _pdfjsLib.shadow)(this, \"isInAutomation\", false);\n  }\n\n}\n\nexports.DefaultExternalServices = DefaultExternalServices;\nconst PDFViewerApplication = {\n  initialBookmark: document.location.hash.substring(1),\n  _initializedCapability: (0, _pdfjsLib.createPromiseCapability)(),\n  fellback: false,\n  appConfig: null,\n  pdfDocument: null,\n  pdfLoadingTask: null,\n  printService: null,\n  pdfViewer: null,\n  pdfThumbnailViewer: null,\n  pdfRenderingQueue: null,\n  pdfPresentationMode: null,\n  pdfDocumentProperties: null,\n  pdfLinkService: null,\n  pdfHistory: null,\n  pdfSidebar: null,\n  pdfSidebarResizer: null,\n  pdfOutlineViewer: null,\n  pdfAttachmentViewer: null,\n  pdfLayerViewer: null,\n  pdfCursorTools: null,\n  store: null,\n  downloadManager: null,\n  overlayManager: null,\n  preferences: null,\n  toolbar: null,\n  secondaryToolbar: null,\n  eventBus: null,\n  l10n: null,\n  isInitialViewSet: false,\n  downloadComplete: false,\n  isViewerEmbedded: window.parent !== window,\n  url: \"\",\n  baseUrl: \"\",\n  externalServices: DefaultExternalServices,\n  _boundEvents: Object.create(null),\n  documentInfo: null,\n  metadata: null,\n  _contentDispositionFilename: null,\n  _contentLength: null,\n  triggerDelayedFallback: null,\n  _saveInProgress: false,\n  _wheelUnusedTicks: 0,\n  _idleCallbacks: new Set(),\n  _scriptingInstance: null,\n  _mouseState: Object.create(null),\n\n  async initialize(appConfig) {\n    this.preferences = this.externalServices.createPreferences();\n    this.appConfig = appConfig;\n    await this._readPreferences();\n    await this._parseHashParameters();\n\n    this._forceCssTheme();\n\n    await this._initializeL10n();\n\n    if (this.isViewerEmbedded && _app_options.AppOptions.get(\"externalLinkTarget\") === _pdfjsLib.LinkTarget.NONE) {\n      _app_options.AppOptions.set(\"externalLinkTarget\", _pdfjsLib.LinkTarget.TOP);\n    }\n\n    await this._initializeViewerComponents();\n    this.bindEvents();\n    this.bindWindowEvents();\n    const appContainer = appConfig.appContainer || document.documentElement;\n    this.l10n.translate(appContainer).then(() => {\n      this.eventBus.dispatch(\"localized\", {\n        source: this\n      });\n    });\n\n    this._initializedCapability.resolve();\n  },\n\n  async _readPreferences() {\n    if (_app_options.AppOptions.get(\"disablePreferences\")) {\n      return;\n    }\n\n    try {\n      _app_options.AppOptions.setAll(await this.preferences.getAll());\n    } catch (reason) {\n      console.error(`_readPreferences: \"${reason && reason.message}\".`); // reason?.message // modified by lwf\n    }\n  },\n\n  async _parseHashParameters() {\n    if (!_app_options.AppOptions.get(\"pdfBugEnabled\")) {\n      return undefined;\n    }\n\n    const hash = document.location.hash.substring(1);\n\n    if (!hash) {\n      return undefined;\n    }\n\n    const hashParams = (0, _ui_utils.parseQueryString)(hash),\n          waitOn = [];\n\n    if (\"disableworker\" in hashParams && hashParams.disableworker === \"true\") {\n      waitOn.push(loadFakeWorker());\n    }\n\n    if (\"disablerange\" in hashParams) {\n      _app_options.AppOptions.set(\"disableRange\", hashParams.disablerange === \"true\");\n    }\n\n    if (\"disablestream\" in hashParams) {\n      _app_options.AppOptions.set(\"disableStream\", hashParams.disablestream === \"true\");\n    }\n\n    if (\"disableautofetch\" in hashParams) {\n      _app_options.AppOptions.set(\"disableAutoFetch\", hashParams.disableautofetch === \"true\");\n    }\n\n    if (\"disablefontface\" in hashParams) {\n      _app_options.AppOptions.set(\"disableFontFace\", hashParams.disablefontface === \"true\");\n    }\n\n    if (\"disablehistory\" in hashParams) {\n      _app_options.AppOptions.set(\"disableHistory\", hashParams.disablehistory === \"true\");\n    }\n\n    if (\"webgl\" in hashParams) {\n      _app_options.AppOptions.set(\"enableWebGL\", hashParams.webgl === \"true\");\n    }\n\n    if (\"verbosity\" in hashParams) {\n      _app_options.AppOptions.set(\"verbosity\", hashParams.verbosity | 0);\n    }\n\n    if (\"textlayer\" in hashParams) {\n      switch (hashParams.textlayer) {\n        case \"off\":\n          _app_options.AppOptions.set(\"textLayerMode\", _ui_utils.TextLayerMode.DISABLE);\n\n          break;\n\n        case \"visible\":\n        case \"shadow\":\n        case \"hover\":\n          const viewer = this.appConfig.viewerContainer;\n          viewer.classList.add(\"textLayer-\" + hashParams.textlayer);\n          break;\n      }\n    }\n\n    if (\"pdfbug\" in hashParams) {\n      _app_options.AppOptions.set(\"pdfBug\", true);\n\n      _app_options.AppOptions.set(\"fontExtraProperties\", true);\n\n      const enabled = hashParams.pdfbug.split(\",\");\n      waitOn.push(loadAndEnablePDFBug(enabled));\n    }\n\n    if (\"locale\" in hashParams) {\n      _app_options.AppOptions.set(\"locale\", hashParams.locale);\n    }\n\n    if (waitOn.length === 0) {\n      return undefined;\n    }\n\n    return Promise.all(waitOn).catch(reason => {\n      console.error(`_parseHashParameters: \"${reason.message}\".`);\n    });\n  },\n\n  async _initializeL10n() {\n    this.l10n = this.externalServices.createL10n({\n      locale: _app_options.AppOptions.get(\"locale\")\n    });\n    const dir = await this.l10n.getDirection();\n    document.getElementsByTagName(\"html\")[0].dir = dir;\n  },\n\n  _forceCssTheme() {\n    const cssTheme = _app_options.AppOptions.get(\"viewerCssTheme\");\n\n    if (cssTheme === ViewerCssTheme.AUTOMATIC || !Object.values(ViewerCssTheme).includes(cssTheme)) {\n      return;\n    }\n\n    try {\n      const styleSheet = document.styleSheets[0];\n      const cssRules = styleSheet && styleSheet.cssRules || []; //styleSheet?.cssRules modified by lwf\n\n      for (let i = 0, ii = cssRules.length; i < ii; i++) {\n        const rule = cssRules[i];\n\n        if (rule instanceof CSSMediaRule && rule.media && rule.media[0] === \"(prefers-color-scheme: dark)\") { //rule.media?.[0] modified by lwf\n          if (cssTheme === ViewerCssTheme.LIGHT) {\n            styleSheet.deleteRule(i);\n            return;\n          }\n\n          const darkRules = /^@media \\(prefers-color-scheme: dark\\) {\\n\\s*([\\w\\s-.,:;/\\\\{}()]+)\\n}$/.exec(rule.cssText);\n\n          if (darkRules && darkRule[1]) { //darkRules?.[1] modified by lwf\n            styleSheet.deleteRule(i);\n            styleSheet.insertRule(darkRules[1], i);\n          }\n\n          return;\n        }\n      }\n    } catch (reason) {\n      console.error(`_forceCssTheme: \"${reason && reason.message}\".`); //reason?.message  modified by lwf\n    }\n  },\n\n  async _initializeViewerComponents() {\n    const appConfig = this.appConfig;\n    const eventBus = appConfig.eventBus || new _ui_utils.EventBus({\n      isInAutomation: this.externalServices.isInAutomation\n    });\n    this.eventBus = eventBus;\n    this.overlayManager = new _overlay_manager.OverlayManager();\n    const pdfRenderingQueue = new _pdf_rendering_queue.PDFRenderingQueue();\n    pdfRenderingQueue.onIdle = this.cleanup.bind(this);\n    this.pdfRenderingQueue = pdfRenderingQueue;\n    const pdfLinkService = new _pdf_link_service.PDFLinkService({\n      eventBus,\n      externalLinkTarget: _app_options.AppOptions.get(\"externalLinkTarget\"),\n      externalLinkRel: _app_options.AppOptions.get(\"externalLinkRel\"),\n      ignoreDestinationZoom: _app_options.AppOptions.get(\"ignoreDestinationZoom\")\n    });\n    this.pdfLinkService = pdfLinkService;\n    const downloadManager = this.externalServices.createDownloadManager();\n    this.downloadManager = downloadManager;\n    const findController = new _pdf_find_controller.PDFFindController({\n      linkService: pdfLinkService,\n      eventBus\n    });\n    this.findController = findController;\n    const container = appConfig.mainContainer;\n    const viewer = appConfig.viewerContainer;\n    this.pdfViewer = new _pdf_viewer.PDFViewer({\n      container,\n      viewer,\n      eventBus,\n      renderingQueue: pdfRenderingQueue,\n      linkService: pdfLinkService,\n      downloadManager,\n      findController,\n      renderer: _app_options.AppOptions.get(\"renderer\"),\n      enableWebGL: _app_options.AppOptions.get(\"enableWebGL\"),\n      l10n: this.l10n,\n      textLayerMode: _app_options.AppOptions.get(\"textLayerMode\"),\n      imageResourcesPath: _app_options.AppOptions.get(\"imageResourcesPath\"),\n      renderInteractiveForms: _app_options.AppOptions.get(\"renderInteractiveForms\"),\n      enablePrintAutoRotate: _app_options.AppOptions.get(\"enablePrintAutoRotate\"),\n      useOnlyCssZoom: _app_options.AppOptions.get(\"useOnlyCssZoom\"),\n      maxCanvasPixels: _app_options.AppOptions.get(\"maxCanvasPixels\"),\n      enableScripting: _app_options.AppOptions.get(\"enableScripting\"),\n      mouseState: this._mouseState\n    });\n    pdfRenderingQueue.setViewer(this.pdfViewer);\n    pdfLinkService.setViewer(this.pdfViewer);\n    this.pdfThumbnailViewer = new _pdf_thumbnail_viewer.PDFThumbnailViewer({\n      container: appConfig.sidebar.thumbnailView,\n      eventBus,\n      renderingQueue: pdfRenderingQueue,\n      linkService: pdfLinkService,\n      l10n: this.l10n\n    });\n    pdfRenderingQueue.setThumbnailViewer(this.pdfThumbnailViewer);\n    this.pdfHistory = new _pdf_history.PDFHistory({\n      linkService: pdfLinkService,\n      eventBus\n    });\n    pdfLinkService.setHistory(this.pdfHistory);\n\n    if (!this.supportsIntegratedFind) {\n      this.findBar = new _pdf_find_bar.PDFFindBar(appConfig.findBar, eventBus, this.l10n);\n    }\n\n    this.pdfDocumentProperties = new _pdf_document_properties.PDFDocumentProperties(appConfig.documentProperties, this.overlayManager, eventBus, this.l10n);\n    this.pdfCursorTools = new _pdf_cursor_tools.PDFCursorTools({\n      container,\n      eventBus,\n      cursorToolOnLoad: _app_options.AppOptions.get(\"cursorToolOnLoad\")\n    });\n    this.toolbar = new _toolbar.Toolbar(appConfig.toolbar, eventBus, this.l10n);\n    this.secondaryToolbar = new _secondary_toolbar.SecondaryToolbar(appConfig.secondaryToolbar, container, eventBus);\n\n    if (this.supportsFullscreen) {\n      this.pdfPresentationMode = new _pdf_presentation_mode.PDFPresentationMode({\n        container,\n        pdfViewer: this.pdfViewer,\n        eventBus,\n        contextMenuItems: appConfig.fullscreen\n      });\n    }\n\n    this.passwordPrompt = new _password_prompt.PasswordPrompt(appConfig.passwordOverlay, this.overlayManager, this.l10n);\n    this.pdfOutlineViewer = new _pdf_outline_viewer.PDFOutlineViewer({\n      container: appConfig.sidebar.outlineView,\n      eventBus,\n      linkService: pdfLinkService\n    });\n    this.pdfAttachmentViewer = new _pdf_attachment_viewer.PDFAttachmentViewer({\n      container: appConfig.sidebar.attachmentsView,\n      eventBus,\n      downloadManager\n    });\n    this.pdfLayerViewer = new _pdf_layer_viewer.PDFLayerViewer({\n      container: appConfig.sidebar.layersView,\n      eventBus,\n      l10n: this.l10n\n    });\n    this.pdfSidebar = new _pdf_sidebar.PDFSidebar({\n      elements: appConfig.sidebar,\n      pdfViewer: this.pdfViewer,\n      pdfThumbnailViewer: this.pdfThumbnailViewer,\n      eventBus,\n      l10n: this.l10n\n    });\n    this.pdfSidebar.onToggled = this.forceRendering.bind(this);\n    this.pdfSidebarResizer = new _pdf_sidebar_resizer.PDFSidebarResizer(appConfig.sidebarResizer, eventBus, this.l10n);\n  },\n\n  run(config) {\n    this.initialize(config).then(webViewerInitialized);\n  },\n\n  get initialized() {\n    return this._initializedCapability.settled;\n  },\n\n  get initializedPromise() {\n    return this._initializedCapability.promise;\n  },\n\n  zoomIn(ticks) {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n\n    let newScale = this.pdfViewer.currentScale;\n\n    do {\n      newScale = (newScale * DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.ceil(newScale * 10) / 10;\n      newScale = Math.min(_ui_utils.MAX_SCALE, newScale);\n    } while (--ticks > 0 && newScale < _ui_utils.MAX_SCALE);\n\n    this.pdfViewer.currentScaleValue = newScale;\n  },\n\n  zoomOut(ticks) {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n\n    let newScale = this.pdfViewer.currentScale;\n\n    do {\n      newScale = (newScale / DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.floor(newScale * 10) / 10;\n      newScale = Math.max(_ui_utils.MIN_SCALE, newScale);\n    } while (--ticks > 0 && newScale > _ui_utils.MIN_SCALE);\n\n    this.pdfViewer.currentScaleValue = newScale;\n  },\n\n  zoomReset() {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n\n    this.pdfViewer.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n  },\n\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  },\n\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  },\n\n  set page(val) {\n    this.pdfViewer.currentPageNumber = val;\n  },\n\n  get supportsPrinting() {\n    return PDFPrintServiceFactory.instance.supportsPrinting;\n  },\n\n  get supportsFullscreen() {\n    let support;\n    const doc = document.documentElement;\n    support = !!(doc.requestFullscreen || doc.mozRequestFullScreen || doc.webkitRequestFullScreen);\n\n    if (document.fullscreenEnabled === false || document.mozFullScreenEnabled === false || document.webkitFullscreenEnabled === false) {\n      support = false;\n    }\n\n    return (0, _pdfjsLib.shadow)(this, \"supportsFullscreen\", support);\n  },\n\n  get supportsIntegratedFind() {\n    return this.externalServices.supportsIntegratedFind;\n  },\n\n  get supportsDocumentFonts() {\n    return this.externalServices.supportsDocumentFonts;\n  },\n\n  get loadingBar() {\n    const bar = new _ui_utils.ProgressBar(\"#loadingBar\");\n    return (0, _pdfjsLib.shadow)(this, \"loadingBar\", bar);\n  },\n\n  get supportedMouseWheelZoomModifierKeys() {\n    return this.externalServices.supportedMouseWheelZoomModifierKeys;\n  },\n\n  initPassiveLoading() {\n    throw new Error(\"Not implemented: initPassiveLoading\");\n  },\n\n  setTitleUsingUrl(url = \"\") {\n    this.url = url;\n    this.baseUrl = url.split(\"#\")[0];\n    let title = (0, _ui_utils.getPDFFileNameFromURL)(url, \"\");\n\n    if (!title) {\n      try {\n        title = decodeURIComponent((0, _pdfjsLib.getFilenameFromUrl)(url)) || url;\n      } catch (ex) {\n        title = url;\n      }\n    }\n\n    this.setTitle(title);\n  },\n\n  setTitle(title) {\n    if (this.isViewerEmbedded) {\n      return;\n    }\n\n    document.title = title;\n  },\n\n  get _docFilename() {\n    return this._contentDispositionFilename || (0, _ui_utils.getPDFFileNameFromURL)(this.url);\n  },\n\n  _cancelIdleCallbacks() {\n    if (!this._idleCallbacks.size) {\n      return;\n    }\n\n    for (const callback of this._idleCallbacks) {\n      window.cancelIdleCallback(callback);\n    }\n\n    this._idleCallbacks.clear();\n  },\n\n  async _destroyScriptingInstance() {\n    if (!this._scriptingInstance) {\n      return;\n    }\n\n    const {\n      scripting,\n      internalEvents,\n      domEvents\n    } = this._scriptingInstance;\n\n    try {\n      await scripting.destroySandbox();\n    } catch (ex) {}\n\n    for (const [name, listener] of internalEvents) {\n      this.eventBus._off(name, listener);\n    }\n\n    internalEvents.clear();\n\n    for (const [name, listener] of domEvents) {\n      window.removeEventListener(name, listener);\n    }\n\n    domEvents.clear();\n    delete this._mouseState.isDown;\n    this._scriptingInstance = null;\n  },\n\n  async close() {\n    const errorWrapper = this.appConfig.errorWrapper.container;\n    errorWrapper.setAttribute(\"hidden\", \"true\");\n\n    if (!this.pdfLoadingTask) {\n      return undefined;\n    }\n\n    const promises = [];\n    promises.push(this.pdfLoadingTask.destroy());\n    this.pdfLoadingTask = null;\n\n    if (this.pdfDocument) {\n      this.pdfDocument = null;\n      this.pdfThumbnailViewer.setDocument(null);\n      this.pdfViewer.setDocument(null);\n      this.pdfLinkService.setDocument(null);\n      this.pdfDocumentProperties.setDocument(null);\n    }\n\n    webViewerResetPermissions();\n    this.store = null;\n    this.isInitialViewSet = false;\n    this.downloadComplete = false;\n    this.url = \"\";\n    this.baseUrl = \"\";\n    this.documentInfo = null;\n    this.metadata = null;\n    this._contentDispositionFilename = null;\n    this._contentLength = null;\n    this.triggerDelayedFallback = null;\n    this._saveInProgress = false;\n\n    this._cancelIdleCallbacks();\n\n    promises.push(this._destroyScriptingInstance());\n    this.pdfSidebar.reset();\n    this.pdfOutlineViewer.reset();\n    this.pdfAttachmentViewer.reset();\n    this.pdfLayerViewer.reset();\n\n    if (this.pdfHistory) {\n      this.pdfHistory.reset();\n    }\n\n    if (this.findBar) {\n      this.findBar.reset();\n    }\n\n    this.toolbar.reset();\n    this.secondaryToolbar.reset();\n\n    if (typeof PDFBug !== \"undefined\") {\n      PDFBug.cleanup();\n    }\n\n    await Promise.all(promises);\n    return undefined;\n  },\n\n  async open(file, args) {\n    if (this.pdfLoadingTask) {\n      await this.close();\n    }\n\n    const workerParameters = _app_options.AppOptions.getAll(_app_options.OptionKind.WORKER);\n\n    for (const key in workerParameters) {\n      _pdfjsLib.GlobalWorkerOptions[key] = workerParameters[key];\n    }\n\n    const parameters = Object.create(null);\n\n    if (typeof file === \"string\") {\n      this.setTitleUsingUrl(file);\n      parameters.url = file;\n    } else if (file && \"byteLength\" in file) {\n      parameters.data = file;\n    } else if (file.url && file.originalUrl) {\n      this.setTitleUsingUrl(file.originalUrl);\n      parameters.url = file.url;\n    }\n\n    const apiParameters = _app_options.AppOptions.getAll(_app_options.OptionKind.API);\n\n    for (const key in apiParameters) {\n      let value = apiParameters[key];\n\n      if (key === \"docBaseUrl\" && !value) {}\n\n      parameters[key] = value;\n    }\n\n    if (args) {\n      for (const key in args) {\n        parameters[key] = args[key];\n      }\n    }\n\n    const loadingTask = (0, _pdfjsLib.getDocument)(parameters);\n    this.pdfLoadingTask = loadingTask;\n\n    loadingTask.onPassword = (updateCallback, reason) => {\n      this.pdfLinkService.externalLinkEnabled = false;\n      this.passwordPrompt.setUpdateCallback(updateCallback, reason);\n      this.passwordPrompt.open();\n    };\n\n    loadingTask.onProgress = ({\n      loaded,\n      total\n    }) => {\n      this.progress(loaded / total);\n    };\n\n    loadingTask.onUnsupportedFeature = this.fallback.bind(this);\n    return loadingTask.promise.then(pdfDocument => {\n      this.load(pdfDocument);\n    }, exception => {\n      if (loadingTask !== this.pdfLoadingTask) {\n        return undefined;\n      }\n\n      const message = exception && exception.message; // exception?.message modified by lwf\n      let loadingErrorMessage;\n\n      if (exception instanceof _pdfjsLib.InvalidPDFException) {\n        loadingErrorMessage = this.l10n.get(\"invalid_file_error\", null, \"Invalid or corrupted PDF file.\");\n      } else if (exception instanceof _pdfjsLib.MissingPDFException) {\n        loadingErrorMessage = this.l10n.get(\"missing_file_error\", null, \"Missing PDF file.\");\n      } else if (exception instanceof _pdfjsLib.UnexpectedResponseException) {\n        loadingErrorMessage = this.l10n.get(\"unexpected_response_error\", null, \"Unexpected server response.\");\n      } else {\n        loadingErrorMessage = this.l10n.get(\"loading_error\", null, \"An error occurred while loading the PDF.\");\n      }\n\n      return loadingErrorMessage.then(msg => {\n        this.error(msg, {\n          message\n        });\n        throw exception;\n      });\n    });\n  },\n\n  download({\n    sourceEventType = \"download\"\n  } = {}) {\n    function downloadByUrl() {\n      downloadManager.downloadUrl(url, filename);\n    }\n\n    const downloadManager = this.downloadManager,\n          url = this.baseUrl,\n          filename = this._docFilename;\n\n    if (!this.pdfDocument || !this.downloadComplete) {\n      downloadByUrl();\n      return;\n    }\n\n    this.pdfDocument.getData().then(function (data) {\n      const blob = new Blob([data], {\n        type: \"application/pdf\"\n      });\n      downloadManager.download(blob, url, filename, sourceEventType);\n    }).catch(downloadByUrl);\n  },\n\n  async save({\n    sourceEventType = \"download\"\n  } = {}) {\n    if (this._saveInProgress) {\n      return;\n    }\n\n    const downloadManager = this.downloadManager,\n          url = this.baseUrl,\n          filename = this._docFilename;\n\n    if (!this.pdfDocument || !this.downloadComplete) {\n      this.download({\n        sourceEventType\n      });\n      return;\n    }\n\n    this._saveInProgress = true;\n    await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({ // ?.\n      id: \"doc\",\n      name: \"WillSave\"\n    });\n    this.pdfDocument.saveDocument(this.pdfDocument.annotationStorage).then(data => {\n      const blob = new Blob([data], {\n        type: \"application/pdf\"\n      });\n      downloadManager.download(blob, url, filename, sourceEventType);\n    }).catch(() => {\n      this.download({\n        sourceEventType\n      });\n    }).finally(async () => {\n      await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({ //?.\n        id: \"doc\",\n        name: \"DidSave\"\n      });\n      this._saveInProgress = false;\n    });\n  },\n\n  downloadOrSave(options) {\n    if (this.pdfDocument && this.pdfDocument.annotationStorage.size > 0) { //?.\n      this.save(options);\n    } else {\n      this.download(options);\n    }\n  },\n\n  _delayedFallback(featureId) {\n    this.externalServices.reportTelemetry({\n      type: \"unsupportedFeature\",\n      featureId\n    });\n\n    if (!this.triggerDelayedFallback) {\n      this.triggerDelayedFallback = () => {\n        this.fallback(featureId);\n        this.triggerDelayedFallback = null;\n      };\n    }\n  },\n\n  fallback(featureId) {\n    this.externalServices.reportTelemetry({\n      type: \"unsupportedFeature\",\n      featureId\n    });\n\n    if (this.fellback) {\n      return;\n    }\n\n    this.fellback = true;\n    this.externalServices.fallback({\n      featureId,\n      url: this.baseUrl\n    }).then(download => {\n      if (!download) {\n        return;\n      }\n\n      this.download({\n        sourceEventType: \"download\"\n      });\n    });\n  },\n\n  error(message, moreInfo) {\n    const moreInfoText = [this.l10n.get(\"error_version_info\", {\n      version: _pdfjsLib.version || \"?\",\n      build: _pdfjsLib.build || \"?\"\n    }, \"PDF.js v{{version}} (build: {{build}})\")];\n\n    if (moreInfo) {\n      moreInfoText.push(this.l10n.get(\"error_message\", {\n        message: moreInfo.message\n      }, \"Message: {{message}}\"));\n\n      if (moreInfo.stack) {\n        moreInfoText.push(this.l10n.get(\"error_stack\", {\n          stack: moreInfo.stack\n        }, \"Stack: {{stack}}\"));\n      } else {\n        if (moreInfo.filename) {\n          moreInfoText.push(this.l10n.get(\"error_file\", {\n            file: moreInfo.filename\n          }, \"File: {{file}}\"));\n        }\n\n        if (moreInfo.lineNumber) {\n          moreInfoText.push(this.l10n.get(\"error_line\", {\n            line: moreInfo.lineNumber\n          }, \"Line: {{line}}\"));\n        }\n      }\n    }\n\n    const errorWrapperConfig = this.appConfig.errorWrapper;\n    const errorWrapper = errorWrapperConfig.container;\n    errorWrapper.removeAttribute(\"hidden\");\n    const errorMessage = errorWrapperConfig.errorMessage;\n    errorMessage.textContent = message;\n    const closeButton = errorWrapperConfig.closeButton;\n\n    closeButton.onclick = function () {\n      errorWrapper.setAttribute(\"hidden\", \"true\");\n    };\n\n    const errorMoreInfo = errorWrapperConfig.errorMoreInfo;\n    const moreInfoButton = errorWrapperConfig.moreInfoButton;\n    const lessInfoButton = errorWrapperConfig.lessInfoButton;\n\n    moreInfoButton.onclick = function () {\n      errorMoreInfo.removeAttribute(\"hidden\");\n      moreInfoButton.setAttribute(\"hidden\", \"true\");\n      lessInfoButton.removeAttribute(\"hidden\");\n      errorMoreInfo.style.height = errorMoreInfo.scrollHeight + \"px\";\n    };\n\n    lessInfoButton.onclick = function () {\n      errorMoreInfo.setAttribute(\"hidden\", \"true\");\n      moreInfoButton.removeAttribute(\"hidden\");\n      lessInfoButton.setAttribute(\"hidden\", \"true\");\n    };\n\n    moreInfoButton.oncontextmenu = _ui_utils.noContextMenuHandler;\n    lessInfoButton.oncontextmenu = _ui_utils.noContextMenuHandler;\n    closeButton.oncontextmenu = _ui_utils.noContextMenuHandler;\n    moreInfoButton.removeAttribute(\"hidden\");\n    lessInfoButton.setAttribute(\"hidden\", \"true\");\n    Promise.all(moreInfoText).then(parts => {\n      errorMoreInfo.value = parts.join(\"\\n\");\n    });\n  },\n\n  progress(level) {\n    if (this.downloadComplete) {\n      return;\n    }\n\n    const percent = Math.round(level * 100);\n\n    if (percent > this.loadingBar.percent || isNaN(percent)) {\n      this.loadingBar.percent = percent;\n      const disableAutoFetch = this.pdfDocument ? this.pdfDocument.loadingParams.disableAutoFetch : _app_options.AppOptions.get(\"disableAutoFetch\");\n\n      if (disableAutoFetch && percent) {\n        if (this.disableAutoFetchLoadingBarTimeout) {\n          clearTimeout(this.disableAutoFetchLoadingBarTimeout);\n          this.disableAutoFetchLoadingBarTimeout = null;\n        }\n\n        this.loadingBar.show();\n        this.disableAutoFetchLoadingBarTimeout = setTimeout(() => {\n          this.loadingBar.hide();\n          this.disableAutoFetchLoadingBarTimeout = null;\n        }, DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT);\n      }\n    }\n  },\n\n  load(pdfDocument) {\n    this.pdfDocument = pdfDocument;\n    pdfDocument.getDownloadInfo().then(({\n      length\n    }) => {\n      this._contentLength = length;\n      this.downloadComplete = true;\n      this.loadingBar.hide();\n      firstPagePromise.then(() => {\n        this.eventBus.dispatch(\"documentloaded\", {\n          source: this\n        });\n      });\n    });\n    const pageLayoutPromise = pdfDocument.getPageLayout().catch(function () {});\n    const pageModePromise = pdfDocument.getPageMode().catch(function () {});\n    const openActionPromise = pdfDocument.getOpenAction().catch(function () {});\n    this.toolbar.setPagesCount(pdfDocument.numPages, false);\n    this.secondaryToolbar.setPagesCount(pdfDocument.numPages);\n    let baseDocumentUrl;\n    baseDocumentUrl = null;\n    this.pdfLinkService.setDocument(pdfDocument, baseDocumentUrl);\n    this.pdfDocumentProperties.setDocument(pdfDocument, this.url);\n    const pdfViewer = this.pdfViewer;\n    pdfViewer.setDocument(pdfDocument);\n    const {\n      firstPagePromise,\n      onePageRendered,\n      pagesPromise\n    } = pdfViewer;\n    const pdfThumbnailViewer = this.pdfThumbnailViewer;\n    pdfThumbnailViewer.setDocument(pdfDocument);\n    const storedPromise = (this.store = new _view_history.ViewHistory(pdfDocument.fingerprint)).getMultiple({\n      page: null,\n      zoom: _ui_utils.DEFAULT_SCALE_VALUE,\n      scrollLeft: \"0\",\n      scrollTop: \"0\",\n      rotation: null,\n      sidebarView: _ui_utils.SidebarView.UNKNOWN,\n      scrollMode: _ui_utils.ScrollMode.UNKNOWN,\n      spreadMode: _ui_utils.SpreadMode.UNKNOWN\n    }).catch(() => {\n      return Object.create(null);\n    });\n    firstPagePromise.then(pdfPage => {\n      this.loadingBar.setWidth(this.appConfig.viewerContainer);\n\n      this._initializeAnnotationStorageCallbacks(pdfDocument);\n\n      Promise.all([_ui_utils.animationStarted, storedPromise, pageLayoutPromise, pageModePromise, openActionPromise]).then(async ([timeStamp, stored, pageLayout, pageMode, openAction]) => {\n        const viewOnLoad = _app_options.AppOptions.get(\"viewOnLoad\");\n\n        this._initializePdfHistory({\n          fingerprint: pdfDocument.fingerprint,\n          viewOnLoad,\n          initialDest: openAction && openAction.dest\n        });\n\n        const initialBookmark = this.initialBookmark;\n\n        const zoom = _app_options.AppOptions.get(\"defaultZoomValue\");\n\n        let hash = zoom ? `zoom=${zoom}` : null;\n        let rotation = null;\n\n        let sidebarView = _app_options.AppOptions.get(\"sidebarViewOnLoad\");\n\n        let scrollMode = _app_options.AppOptions.get(\"scrollModeOnLoad\");\n\n        let spreadMode = _app_options.AppOptions.get(\"spreadModeOnLoad\");\n\n        if (stored.page && viewOnLoad !== ViewOnLoad.INITIAL) {\n          hash = `page=${stored.page}&zoom=${zoom || stored.zoom},` + `${stored.scrollLeft},${stored.scrollTop}`;\n          rotation = parseInt(stored.rotation, 10);\n\n          if (sidebarView === _ui_utils.SidebarView.UNKNOWN) {\n            sidebarView = stored.sidebarView | 0;\n          }\n\n          if (scrollMode === _ui_utils.ScrollMode.UNKNOWN) {\n            scrollMode = stored.scrollMode | 0;\n          }\n\n          if (spreadMode === _ui_utils.SpreadMode.UNKNOWN) {\n            spreadMode = stored.spreadMode | 0;\n          }\n        }\n\n        if (pageMode && sidebarView === _ui_utils.SidebarView.UNKNOWN) {\n          sidebarView = apiPageModeToSidebarView(pageMode);\n        }\n\n        if (pageLayout && spreadMode === _ui_utils.SpreadMode.UNKNOWN) {\n          spreadMode = apiPageLayoutToSpreadMode(pageLayout);\n        }\n\n        this.setInitialView(hash, {\n          rotation,\n          sidebarView,\n          scrollMode,\n          spreadMode\n        });\n        this.eventBus.dispatch(\"documentinit\", {\n          source: this\n        });\n\n        if (!this.isViewerEmbedded) {\n          pdfViewer.focus();\n        }\n\n        this._initializePermissions(pdfDocument);\n\n        await Promise.race([pagesPromise, new Promise(resolve => {\n          setTimeout(resolve, FORCE_PAGES_LOADED_TIMEOUT);\n        })]);\n\n        if (!initialBookmark && !hash) {\n          return;\n        }\n\n        if (pdfViewer.hasEqualPageSizes) {\n          return;\n        }\n\n        this.initialBookmark = initialBookmark;\n        pdfViewer.currentScaleValue = pdfViewer.currentScaleValue;\n        this.setInitialView(hash);\n      }).catch(() => {\n        this.setInitialView();\n      }).then(function () {\n        pdfViewer.update();\n      });\n    });\n    pagesPromise.then(() => {\n      this._initializeAutoPrint(pdfDocument, openActionPromise);\n    });\n    onePageRendered.then(() => {\n      pdfDocument.getOutline().then(outline => {\n        this.pdfOutlineViewer.render({\n          outline,\n          pdfDocument\n        });\n      });\n      pdfDocument.getAttachments().then(attachments => {\n        this.pdfAttachmentViewer.render({\n          attachments\n        });\n      });\n      pdfViewer.optionalContentConfigPromise.then(optionalContentConfig => {\n        this.pdfLayerViewer.render({\n          optionalContentConfig,\n          pdfDocument\n        });\n      });\n\n      if (\"requestIdleCallback\" in window) {\n        const callback = window.requestIdleCallback(() => {\n          this._collectTelemetry(pdfDocument);\n\n          this._idleCallbacks.delete(callback);\n        }, {\n          timeout: 1000\n        });\n\n        this._idleCallbacks.add(callback);\n      }\n\n      this._initializeJavaScript(pdfDocument);\n    });\n\n    this._initializePageLabels(pdfDocument);\n\n    this._initializeMetadata(pdfDocument);\n  },\n\n  async _initializeJavaScript(pdfDocument) {\n    if (!_app_options.AppOptions.get(\"enableScripting\")) {\n      return;\n    }\n\n    const [objects, calculationOrder, docActions] = await Promise.all([pdfDocument.getFieldObjects(), pdfDocument.getCalculationOrderIds(), pdfDocument.getJSActions()]);\n\n    if (!objects && !docActions) {\n      return;\n    }\n\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n\n    const scripting = this.externalServices.createScripting({\n      sandboxBundleSrc: _app_options.AppOptions.get(\"sandboxBundleSrc\")\n    });\n    const internalEvents = new Map(),\n          domEvents = new Map();\n    this._scriptingInstance = {\n      scripting,\n      ready: false,\n      internalEvents,\n      domEvents\n    };\n\n    if (!this.documentInfo) {\n      await new Promise(resolve => {\n        this.eventBus._on(\"metadataloaded\", evt => {\n          resolve();\n        }, {\n          once: true\n        });\n      });\n\n      if (pdfDocument !== this.pdfDocument) {\n        return;\n      }\n    }\n\n    if (!this._contentLength) {\n      await new Promise(resolve => {\n        this.eventBus._on(\"documentloaded\", evt => {\n          resolve();\n        }, {\n          once: true\n        });\n      });\n\n      if (pdfDocument !== this.pdfDocument) {\n        return;\n      }\n    }\n\n    const updateFromSandbox = ({\n      detail\n    }) => {\n      const {\n        id,\n        command,\n        value\n      } = detail;\n\n      if (!id) {\n        switch (command) {\n          case \"clear\":\n            console.clear();\n            break;\n\n          case \"error\":\n            console.error(value);\n            break;\n\n          case \"layout\":\n            this.pdfViewer.spreadMode = apiPageLayoutToSpreadMode(value);\n            break;\n\n          case \"page-num\":\n            this.pdfViewer.currentPageNumber = value + 1;\n            break;\n\n          case \"print\":\n            this.pdfViewer.pagesPromise.then(() => {\n              this.triggerPrinting();\n            });\n            break;\n\n          case \"println\":\n            console.log(value);\n            break;\n\n          case \"zoom\":\n            this.pdfViewer.currentScaleValue = value;\n            break;\n        }\n\n        return;\n      }\n\n      const element = document.getElementById(id);\n\n      if (element) {\n        element.dispatchEvent(new CustomEvent(\"updatefromsandbox\", {\n          detail\n        }));\n      } else {\n        if (value !== undefined && value !== null) {\n          pdfDocument.annotationStorage.setValue(id, value);\n        }\n      }\n    };\n\n    internalEvents.set(\"updatefromsandbox\", updateFromSandbox);\n    const visitedPages = new Map();\n\n    const pageOpen = ({\n      pageNumber,\n      actionsPromise\n    }) => {\n      visitedPages.set(pageNumber, (async () => {\n        let actions = null;\n\n        if (!visitedPages.has(pageNumber)) {\n          actions = await actionsPromise;\n\n          if (pdfDocument !== this.pdfDocument) {\n            return;\n          }\n        }\n\n        await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({  //?.\n          id: \"page\",\n          name: \"PageOpen\",\n          pageNumber,\n          actions\n        });\n      })());\n    };\n\n    const pageClose = async ({\n      pageNumber\n    }) => {\n      const actionsPromise = visitedPages.get(pageNumber);\n\n      if (!actionsPromise) {\n        return;\n      }\n\n      visitedPages.set(pageNumber, null);\n      await actionsPromise;\n\n      if (pdfDocument !== this.pdfDocument) {\n        return;\n      }\n\n      await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({ //?.\n        id: \"page\",\n        name: \"PageClose\",\n        pageNumber\n      });\n    };\n\n    internalEvents.set(\"pageopen\", pageOpen);\n    internalEvents.set(\"pageclose\", pageClose);\n\n    const dispatchEventInSandbox = ({\n      detail\n    }) => {\n      scripting.dispatchEventInSandbox(detail);\n    };\n\n    internalEvents.set(\"dispatcheventinsandbox\", dispatchEventInSandbox);\n\n    const mouseDown = event => {\n      this._mouseState.isDown = true;\n    };\n\n    domEvents.set(\"mousedown\", mouseDown);\n\n    const mouseUp = event => {\n      this._mouseState.isDown = false;\n    };\n\n    domEvents.set(\"mouseup\", mouseUp);\n\n    for (const [name, listener] of internalEvents) {\n      this.eventBus._on(name, listener);\n    }\n\n    for (const [name, listener] of domEvents) {\n      window.addEventListener(name, listener);\n    }\n\n    try {\n      await scripting.createSandbox({\n        objects,\n        calculationOrder,\n        appInfo: {\n          platform: navigator.platform,\n          language: navigator.language\n        },\n        docInfo: { ...this.documentInfo,\n          baseURL: this.baseUrl,\n          filesize: this._contentLength,\n          filename: this._docFilename,\n          metadata: this.metadata && this.metadata.getRaw(), //?.\n          authors: this.metadata && this.metadata.get(\"dc:creator\"), //?.\n          numPages: pdfDocument.numPages,\n          URL: this.url,\n          actions: docActions\n        }\n      });\n\n      if (this.externalServices.isInAutomation) {\n        this.eventBus.dispatch(\"sandboxcreated\", {\n          source: this\n        });\n      }\n    } catch (error) {\n      console.error(`_initializeJavaScript: \"${error && error.message}\".`); //?.\n\n      this._destroyScriptingInstance();\n\n      return;\n    }\n\n    await scripting.dispatchEventInSandbox({\n      id: \"doc\",\n      name: \"Open\"\n    });\n    await this.pdfViewer.initializeScriptingEvents();\n    Promise.resolve().then(() => {\n      if (this._scriptingInstance) {\n        this._scriptingInstance.ready = true;\n      }\n    });\n  },\n\n  async _collectTelemetry(pdfDocument) {\n    const markInfo = await this.pdfDocument.getMarkInfo();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n\n    const tagged =markInfo && markInfo.Marked || false;  //?.\n    this.externalServices.reportTelemetry({\n      type: \"tagged\",\n      tagged\n    });\n  },\n\n  async _initializeAutoPrint(pdfDocument, openActionPromise) {\n    const [openAction, javaScript] = await Promise.all([openActionPromise, !_app_options.AppOptions.get(\"enableScripting\") ? pdfDocument.getJavaScript() : null]);\n\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n\n    let triggerAutoPrint = false;\n\n    if (openAction && openAction.action === \"Print\") { //?.\n      triggerAutoPrint = true;\n    }\n\n    if (javaScript) {\n      javaScript.some(js => {\n        if (!js) {\n          return false;\n        }\n\n        console.warn(\"Warning: JavaScript is not supported\");\n\n        this._delayedFallback(_pdfjsLib.UNSUPPORTED_FEATURES.javaScript);\n\n        return true;\n      });\n\n      if (!triggerAutoPrint) {\n        for (const js of javaScript) {\n          if (js && _ui_utils.AutoPrintRegExp.test(js)) {\n            triggerAutoPrint = true;\n            break;\n          }\n        }\n      }\n    }\n\n    if (triggerAutoPrint) {\n      this.triggerPrinting();\n    }\n  },\n\n  async _initializeMetadata(pdfDocument) {\n    const {\n      info,\n      metadata,\n      contentDispositionFilename,\n      contentLength\n    } = await pdfDocument.getMetadata();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n\n    this.documentInfo = info;\n    this.metadata = metadata;\n    this._contentDispositionFilename = contentDispositionFilename;\n    this._contentLength ||  (this._contentLength = contentLength); // ??\n    console.log(`PDF ${pdfDocument.fingerprint} [${info.PDFFormatVersion} ` + `${(info.Producer || \"-\").trim()} / ${(info.Creator || \"-\").trim()}] ` + `(PDF.js: ${_pdfjsLib.version || \"-\"}` + `${this.pdfViewer.enableWebGL ? \" [WebGL]\" : \"\"})`);\n    let pdfTitle;\n    const infoTitle = info && info.Title;\n\n    if (infoTitle) {\n      pdfTitle = infoTitle;\n    }\n\n    const metadataTitle = metadata && metadata.get(\"dc:title\");\n\n    if (metadataTitle) {\n      if (metadataTitle !== \"Untitled\" && !/[\\uFFF0-\\uFFFF]/g.test(metadataTitle)) {\n        pdfTitle = metadataTitle;\n      }\n    }\n\n    if (pdfTitle) {\n      this.setTitle(`${pdfTitle} - ${contentDispositionFilename || document.title}`);\n    } else if (contentDispositionFilename) {\n      this.setTitle(contentDispositionFilename);\n    }\n\n    if (info.IsXFAPresent && !info.IsAcroFormPresent) {\n      console.warn(\"Warning: XFA is not supported\");\n\n      this._delayedFallback(_pdfjsLib.UNSUPPORTED_FEATURES.forms);\n    } else if ((info.IsAcroFormPresent || info.IsXFAPresent) && !this.pdfViewer.renderInteractiveForms) {\n      console.warn(\"Warning: Interactive form support is not enabled\");\n\n      this._delayedFallback(_pdfjsLib.UNSUPPORTED_FEATURES.forms);\n    }\n\n    let versionId = \"other\";\n\n    if (KNOWN_VERSIONS.includes(info.PDFFormatVersion)) {\n      versionId = `v${info.PDFFormatVersion.replace(\".\", \"_\")}`;\n    }\n\n    let generatorId = \"other\";\n\n    if (info.Producer) {\n      const producer = info.Producer.toLowerCase();\n      KNOWN_GENERATORS.some(function (generator) {\n        if (!producer.includes(generator)) {\n          return false;\n        }\n\n        generatorId = generator.replace(/[ .-]/g, \"_\");\n        return true;\n      });\n    }\n\n    let formType = null;\n\n    if (info.IsXFAPresent) {\n      formType = \"xfa\";\n    } else if (info.IsAcroFormPresent) {\n      formType = \"acroform\";\n    }\n\n    this.externalServices.reportTelemetry({\n      type: \"documentInfo\",\n      version: versionId,\n      generator: generatorId,\n      formType\n    });\n    this.eventBus.dispatch(\"metadataloaded\", {\n      source: this\n    });\n  },\n\n  async _initializePageLabels(pdfDocument) {\n    const labels = await pdfDocument.getPageLabels();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n\n    if (!labels || _app_options.AppOptions.get(\"disablePageLabels\")) {\n      return;\n    }\n\n    const numLabels = labels.length;\n\n    if (numLabels !== this.pagesCount) {\n      console.error(\"The number of Page Labels does not match the number of pages in the document.\");\n      return;\n    }\n\n    let i = 0;\n\n    while (i < numLabels && labels[i] === (i + 1).toString()) {\n      i++;\n    }\n\n    if (i === numLabels) {\n      return;\n    }\n\n    const {\n      pdfViewer,\n      pdfThumbnailViewer,\n      toolbar\n    } = this;\n    pdfViewer.setPageLabels(labels);\n    pdfThumbnailViewer.setPageLabels(labels);\n    toolbar.setPagesCount(numLabels, true);\n    toolbar.setPageNumber(pdfViewer.currentPageNumber, pdfViewer.currentPageLabel);\n  },\n\n  _initializePdfHistory({\n    fingerprint,\n    viewOnLoad,\n    initialDest = null\n  }) {\n    if (this.isViewerEmbedded || _app_options.AppOptions.get(\"disableHistory\")) {\n      return;\n    }\n\n    this.pdfHistory.initialize({\n      fingerprint,\n      resetHistory: viewOnLoad === ViewOnLoad.INITIAL,\n      updateUrl: _app_options.AppOptions.get(\"historyUpdateUrl\")\n    });\n\n    if (this.pdfHistory.initialBookmark) {\n      this.initialBookmark = this.pdfHistory.initialBookmark;\n      this.initialRotation = this.pdfHistory.initialRotation;\n    }\n\n    if (initialDest && !this.initialBookmark && viewOnLoad === ViewOnLoad.UNKNOWN) {\n      this.initialBookmark = JSON.stringify(initialDest);\n      this.pdfHistory.push({\n        explicitDest: initialDest,\n        pageNumber: null\n      });\n    }\n  },\n\n  async _initializePermissions(pdfDocument) {\n    const permissions = await pdfDocument.getPermissions();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n\n    if (!permissions || !_app_options.AppOptions.get(\"enablePermissions\")) {\n      return;\n    }\n\n    if (!permissions.includes(_pdfjsLib.PermissionFlag.COPY)) {\n      this.appConfig.viewerContainer.classList.add(ENABLE_PERMISSIONS_CLASS);\n    }\n  },\n\n  _initializeAnnotationStorageCallbacks(pdfDocument) {\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n\n    const {\n      annotationStorage\n    } = pdfDocument;\n\n    annotationStorage.onSetModified = function () {\n      window.addEventListener(\"beforeunload\", beforeUnload);\n    };\n\n    annotationStorage.onResetModified = function () {\n      window.removeEventListener(\"beforeunload\", beforeUnload);\n    };\n  },\n\n  setInitialView(storedHash, {\n    rotation,\n    sidebarView,\n    scrollMode,\n    spreadMode\n  } = {}) {\n    const setRotation = angle => {\n      if ((0, _ui_utils.isValidRotation)(angle)) {\n        this.pdfViewer.pagesRotation = angle;\n      }\n    };\n\n    const setViewerModes = (scroll, spread) => {\n      if ((0, _ui_utils.isValidScrollMode)(scroll)) {\n        this.pdfViewer.scrollMode = scroll;\n      }\n\n      if ((0, _ui_utils.isValidSpreadMode)(spread)) {\n        this.pdfViewer.spreadMode = spread;\n      }\n    };\n\n    this.isInitialViewSet = true;\n    this.pdfSidebar.setInitialView(sidebarView);\n    setViewerModes(scrollMode, spreadMode);\n\n    if (this.initialBookmark) {\n      setRotation(this.initialRotation);\n      delete this.initialRotation;\n      this.pdfLinkService.setHash(this.initialBookmark);\n      this.initialBookmark = null;\n    } else if (storedHash) {\n      setRotation(rotation);\n      this.pdfLinkService.setHash(storedHash);\n    }\n\n    this.toolbar.setPageNumber(this.pdfViewer.currentPageNumber, this.pdfViewer.currentPageLabel);\n    this.secondaryToolbar.setPageNumber(this.pdfViewer.currentPageNumber);\n\n    if (!this.pdfViewer.currentScaleValue) {\n      this.pdfViewer.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n    }\n  },\n\n  cleanup() {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    this.pdfViewer.cleanup();\n    this.pdfThumbnailViewer.cleanup();\n\n    if (this.pdfViewer.renderer !== _ui_utils.RendererType.SVG) {\n      this.pdfDocument.cleanup();\n    }\n  },\n\n  forceRendering() {\n    this.pdfRenderingQueue.printing = !!this.printService;\n    this.pdfRenderingQueue.isThumbnailViewEnabled = this.pdfSidebar.isThumbnailViewVisible;\n    this.pdfRenderingQueue.renderHighestPriority();\n  },\n\n  beforePrint() {\n    this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({  //?\n      id: \"doc\",\n      name: \"WillPrint\"\n    });\n\n    if (this.printService) {\n      return;\n    }\n\n    if (!this.supportsPrinting) {\n      this.l10n.get(\"printing_not_supported\", null, \"Warning: Printing is not fully supported by this browser.\").then(printMessage => {\n        this.error(printMessage);\n      });\n      return;\n    }\n\n    if (!this.pdfViewer.pageViewsReady) {\n      this.l10n.get(\"printing_not_ready\", null, \"Warning: The PDF is not fully loaded for printing.\").then(notReadyMessage => {\n        window.alert(notReadyMessage);\n      });\n      return;\n    }\n\n    const pagesOverview = this.pdfViewer.getPagesOverview();\n    const printContainer = this.appConfig.printContainer;\n\n    const printResolution = _app_options.AppOptions.get(\"printResolution\");\n\n    const optionalContentConfigPromise = this.pdfViewer.optionalContentConfigPromise;\n    const printService = PDFPrintServiceFactory.instance.createPrintService(this.pdfDocument, pagesOverview, printContainer, printResolution, optionalContentConfigPromise, this.l10n);\n    this.printService = printService;\n    this.forceRendering();\n    printService.layout();\n    this.externalServices.reportTelemetry({\n      type: \"print\"\n    });\n  },\n\n  afterPrint() {\n    this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({ //?.\n      id: \"doc\",\n      name: \"DidPrint\"\n    });\n\n    if (this.printService) {\n      this.printService.destroy();\n      this.printService = null;\n\n      if (this.pdfDocument) {\n        this.pdfDocument.annotationStorage.resetModified();\n      }\n    }\n\n    this.forceRendering();\n  },\n\n  rotatePages(delta) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    const newRotation = (this.pdfViewer.pagesRotation + 360 + delta) % 360;\n    this.pdfViewer.pagesRotation = newRotation;\n  },\n\n  requestPresentationMode() {\n    if (!this.pdfPresentationMode) {\n      return;\n    }\n\n    this.pdfPresentationMode.request();\n  },\n\n  triggerPrinting() {\n    if (!this.supportsPrinting) {\n      return;\n    }\n\n    window.print();\n  },\n\n  bindEvents() {\n    const {\n      eventBus,\n      _boundEvents\n    } = this;\n    _boundEvents.beforePrint = this.beforePrint.bind(this);\n    _boundEvents.afterPrint = this.afterPrint.bind(this);\n\n    eventBus._on(\"resize\", webViewerResize);\n\n    eventBus._on(\"hashchange\", webViewerHashchange);\n\n    eventBus._on(\"beforeprint\", _boundEvents.beforePrint);\n\n    eventBus._on(\"afterprint\", _boundEvents.afterPrint);\n\n    eventBus._on(\"pagerendered\", webViewerPageRendered);\n\n    eventBus._on(\"updateviewarea\", webViewerUpdateViewarea);\n\n    eventBus._on(\"pagechanging\", webViewerPageChanging);\n\n    eventBus._on(\"scalechanging\", webViewerScaleChanging);\n\n    eventBus._on(\"rotationchanging\", webViewerRotationChanging);\n\n    eventBus._on(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n\n    eventBus._on(\"pagemode\", webViewerPageMode);\n\n    eventBus._on(\"namedaction\", webViewerNamedAction);\n\n    eventBus._on(\"presentationmodechanged\", webViewerPresentationModeChanged);\n\n    eventBus._on(\"presentationmode\", webViewerPresentationMode);\n\n    eventBus._on(\"print\", webViewerPrint);\n\n    eventBus._on(\"download\", webViewerDownload);\n\n    eventBus._on(\"save\", webViewerSave);\n\n    eventBus._on(\"firstpage\", webViewerFirstPage);\n\n    eventBus._on(\"lastpage\", webViewerLastPage);\n\n    eventBus._on(\"nextpage\", webViewerNextPage);\n\n    eventBus._on(\"previouspage\", webViewerPreviousPage);\n\n    eventBus._on(\"zoomin\", webViewerZoomIn);\n\n    eventBus._on(\"zoomout\", webViewerZoomOut);\n\n    eventBus._on(\"zoomreset\", webViewerZoomReset);\n\n    eventBus._on(\"pagenumberchanged\", webViewerPageNumberChanged);\n\n    eventBus._on(\"scalechanged\", webViewerScaleChanged);\n\n    eventBus._on(\"rotatecw\", webViewerRotateCw);\n\n    eventBus._on(\"rotateccw\", webViewerRotateCcw);\n\n    eventBus._on(\"optionalcontentconfig\", webViewerOptionalContentConfig);\n\n    eventBus._on(\"switchscrollmode\", webViewerSwitchScrollMode);\n\n    eventBus._on(\"scrollmodechanged\", webViewerScrollModeChanged);\n\n    eventBus._on(\"switchspreadmode\", webViewerSwitchSpreadMode);\n\n    eventBus._on(\"spreadmodechanged\", webViewerSpreadModeChanged);\n\n    eventBus._on(\"documentproperties\", webViewerDocumentProperties);\n\n    eventBus._on(\"find\", webViewerFind);\n\n    eventBus._on(\"findfromurlhash\", webViewerFindFromUrlHash);\n\n    eventBus._on(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n\n    eventBus._on(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n\n    if (_app_options.AppOptions.get(\"pdfBug\")) {\n      _boundEvents.reportPageStatsPDFBug = reportPageStatsPDFBug;\n\n      eventBus._on(\"pagerendered\", _boundEvents.reportPageStatsPDFBug);\n\n      eventBus._on(\"pagechanging\", _boundEvents.reportPageStatsPDFBug);\n    }\n\n    eventBus._on(\"fileinputchange\", webViewerFileInputChange);\n\n    eventBus._on(\"openfile\", webViewerOpenFile);\n  },\n\n  bindWindowEvents() {\n    const {\n      eventBus,\n      _boundEvents\n    } = this;\n\n    _boundEvents.windowResize = () => {\n      eventBus.dispatch(\"resize\", {\n        source: window\n      });\n    };\n\n    _boundEvents.windowHashChange = () => {\n      eventBus.dispatch(\"hashchange\", {\n        source: window,\n        hash: document.location.hash.substring(1)\n      });\n    };\n\n    _boundEvents.windowBeforePrint = () => {\n      eventBus.dispatch(\"beforeprint\", {\n        source: window\n      });\n    };\n\n    _boundEvents.windowAfterPrint = () => {\n      eventBus.dispatch(\"afterprint\", {\n        source: window\n      });\n    };\n\n    _boundEvents.windowUpdateFromSandbox = event => {\n      eventBus.dispatch(\"updatefromsandbox\", {\n        source: window,\n        detail: event.detail\n      });\n    };\n\n    window.addEventListener(\"visibilitychange\", webViewerVisibilityChange);\n    window.addEventListener(\"wheel\", webViewerWheel, {\n      passive: false\n    });\n    window.addEventListener(\"touchstart\", webViewerTouchStart, {\n      passive: false\n    });\n    window.addEventListener(\"click\", webViewerClick);\n    window.addEventListener(\"keydown\", webViewerKeyDown);\n    window.addEventListener(\"keyup\", webViewerKeyUp);\n    window.addEventListener(\"resize\", _boundEvents.windowResize);\n    window.addEventListener(\"hashchange\", _boundEvents.windowHashChange);\n    window.addEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n    window.addEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n    window.addEventListener(\"updatefromsandbox\", _boundEvents.windowUpdateFromSandbox);\n  },\n\n  unbindEvents() {\n    const {\n      eventBus,\n      _boundEvents\n    } = this;\n\n    eventBus._off(\"resize\", webViewerResize);\n\n    eventBus._off(\"hashchange\", webViewerHashchange);\n\n    eventBus._off(\"beforeprint\", _boundEvents.beforePrint);\n\n    eventBus._off(\"afterprint\", _boundEvents.afterPrint);\n\n    eventBus._off(\"pagerendered\", webViewerPageRendered);\n\n    eventBus._off(\"updateviewarea\", webViewerUpdateViewarea);\n\n    eventBus._off(\"pagechanging\", webViewerPageChanging);\n\n    eventBus._off(\"scalechanging\", webViewerScaleChanging);\n\n    eventBus._off(\"rotationchanging\", webViewerRotationChanging);\n\n    eventBus._off(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n\n    eventBus._off(\"pagemode\", webViewerPageMode);\n\n    eventBus._off(\"namedaction\", webViewerNamedAction);\n\n    eventBus._off(\"presentationmodechanged\", webViewerPresentationModeChanged);\n\n    eventBus._off(\"presentationmode\", webViewerPresentationMode);\n\n    eventBus._off(\"print\", webViewerPrint);\n\n    eventBus._off(\"download\", webViewerDownload);\n\n    eventBus._off(\"save\", webViewerSave);\n\n    eventBus._off(\"firstpage\", webViewerFirstPage);\n\n    eventBus._off(\"lastpage\", webViewerLastPage);\n\n    eventBus._off(\"nextpage\", webViewerNextPage);\n\n    eventBus._off(\"previouspage\", webViewerPreviousPage);\n\n    eventBus._off(\"zoomin\", webViewerZoomIn);\n\n    eventBus._off(\"zoomout\", webViewerZoomOut);\n\n    eventBus._off(\"zoomreset\", webViewerZoomReset);\n\n    eventBus._off(\"pagenumberchanged\", webViewerPageNumberChanged);\n\n    eventBus._off(\"scalechanged\", webViewerScaleChanged);\n\n    eventBus._off(\"rotatecw\", webViewerRotateCw);\n\n    eventBus._off(\"rotateccw\", webViewerRotateCcw);\n\n    eventBus._off(\"optionalcontentconfig\", webViewerOptionalContentConfig);\n\n    eventBus._off(\"switchscrollmode\", webViewerSwitchScrollMode);\n\n    eventBus._off(\"scrollmodechanged\", webViewerScrollModeChanged);\n\n    eventBus._off(\"switchspreadmode\", webViewerSwitchSpreadMode);\n\n    eventBus._off(\"spreadmodechanged\", webViewerSpreadModeChanged);\n\n    eventBus._off(\"documentproperties\", webViewerDocumentProperties);\n\n    eventBus._off(\"find\", webViewerFind);\n\n    eventBus._off(\"findfromurlhash\", webViewerFindFromUrlHash);\n\n    eventBus._off(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n\n    eventBus._off(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n\n    if (_boundEvents.reportPageStatsPDFBug) {\n      eventBus._off(\"pagerendered\", _boundEvents.reportPageStatsPDFBug);\n\n      eventBus._off(\"pagechanging\", _boundEvents.reportPageStatsPDFBug);\n\n      _boundEvents.reportPageStatsPDFBug = null;\n    }\n\n    eventBus._off(\"fileinputchange\", webViewerFileInputChange);\n\n    eventBus._off(\"openfile\", webViewerOpenFile);\n\n    _boundEvents.beforePrint = null;\n    _boundEvents.afterPrint = null;\n  },\n\n  unbindWindowEvents() {\n    const {\n      _boundEvents\n    } = this;\n    window.removeEventListener(\"visibilitychange\", webViewerVisibilityChange);\n    window.removeEventListener(\"wheel\", webViewerWheel, {\n      passive: false\n    });\n    window.removeEventListener(\"touchstart\", webViewerTouchStart, {\n      passive: false\n    });\n    window.removeEventListener(\"click\", webViewerClick);\n    window.removeEventListener(\"keydown\", webViewerKeyDown);\n    window.removeEventListener(\"keyup\", webViewerKeyUp);\n    window.removeEventListener(\"resize\", _boundEvents.windowResize);\n    window.removeEventListener(\"hashchange\", _boundEvents.windowHashChange);\n    window.removeEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n    window.removeEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n    window.removeEventListener(\"updatefromsandbox\", _boundEvents.windowUpdateFromSandbox);\n    _boundEvents.windowResize = null;\n    _boundEvents.windowHashChange = null;\n    _boundEvents.windowBeforePrint = null;\n    _boundEvents.windowAfterPrint = null;\n    _boundEvents.windowUpdateFromSandbox = null;\n  },\n\n  accumulateWheelTicks(ticks) {\n    if (this._wheelUnusedTicks > 0 && ticks < 0 || this._wheelUnusedTicks < 0 && ticks > 0) {\n      this._wheelUnusedTicks = 0;\n    }\n\n    this._wheelUnusedTicks += ticks;\n    const wholeTicks = Math.sign(this._wheelUnusedTicks) * Math.floor(Math.abs(this._wheelUnusedTicks));\n    this._wheelUnusedTicks -= wholeTicks;\n    return wholeTicks;\n  },\n\n  get scriptingReady() {\n    return this._scriptingInstance && this._scriptingInstance.ready || false;  //?.\n  }\n\n};\nexports.PDFViewerApplication = PDFViewerApplication;\nlet validateFileURL;\n{\n  const HOSTED_VIEWER_ORIGINS = [\"null\", \"http://mozilla.github.io\", \"https://mozilla.github.io\"];\n\n  validateFileURL = function (file) {\n    if (file === undefined) {\n      return;\n    }\n\n    try {\n      const viewerOrigin = new URL(window.location.href).origin || \"null\";\n\n      if (HOSTED_VIEWER_ORIGINS.includes(viewerOrigin)) {\n        return;\n      }\n\n      const {\n        origin,\n        protocol\n      } = new URL(file, window.location.href);\n\n      if (origin !== viewerOrigin && protocol !== \"blob:\") {\n        throw new Error(\"file origin does not match viewer's\");\n      }\n    } catch (ex) {\n      const message = ex && ex.message;\n      PDFViewerApplication.l10n.get(\"loading_error\", null, \"An error occurred while loading the PDF.\").then(loadingErrorMessage => {\n        PDFViewerApplication.error(loadingErrorMessage, {\n          message\n        });\n      });\n      throw ex;\n    }\n  };\n}\n\nasync function loadFakeWorker() {\n  if (!_pdfjsLib.GlobalWorkerOptions.workerSrc) {\n    _pdfjsLib.GlobalWorkerOptions.workerSrc = _app_options.AppOptions.get(\"workerSrc\");\n  }\n\n  return (0, _pdfjsLib.loadScript)(_pdfjsLib.PDFWorker.getWorkerSrc());\n}\n\nfunction loadAndEnablePDFBug(enabledTabs) {\n  const appConfig = PDFViewerApplication.appConfig;\n  return (0, _pdfjsLib.loadScript)(appConfig.debuggerScriptPath).then(function () {\n    PDFBug.enable(enabledTabs);\n    PDFBug.init({\n      OPS: _pdfjsLib.OPS\n    }, appConfig.mainContainer);\n  });\n}\n\nfunction reportPageStatsPDFBug({\n  pageNumber\n}) {\n  if (typeof Stats === \"undefined\" || !Stats.enabled) {\n    return;\n  }\n\n  const pageView = PDFViewerApplication.pdfViewer.getPageView(pageNumber - 1);\n  const pageStats = pageView && pageView.pdfPage && pageView.pdfPage.stats;\n\n  if (!pageStats) {\n    return;\n  }\n\n  Stats.add(pageNumber, pageStats);\n}\n\nfunction webViewerInitialized() {\n  const appConfig = PDFViewerApplication.appConfig;\n  let file;\n  const queryString = document.location.search.substring(1);\n  const params = (0, _ui_utils.parseQueryString)(queryString);\n  file = \"file\" in params ? params.file : _app_options.AppOptions.get(\"defaultUrl\");\n  validateFileURL(file);\n  const fileInput = document.createElement(\"input\");\n  fileInput.id = appConfig.openFileInputName;\n  fileInput.className = \"fileInput\";\n  fileInput.setAttribute(\"type\", \"file\");\n  fileInput.oncontextmenu = _ui_utils.noContextMenuHandler;\n  document.body.appendChild(fileInput);\n\n  if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\n    appConfig.toolbar.openFile.setAttribute(\"hidden\", \"true\");\n    appConfig.secondaryToolbar.openFileButton.setAttribute(\"hidden\", \"true\");\n  } else {\n    fileInput.value = null;\n  }\n\n  fileInput.addEventListener(\"change\", function (evt) {\n    const files = evt.target.files;\n\n    if (!files || files.length === 0) {\n      return;\n    }\n\n    PDFViewerApplication.eventBus.dispatch(\"fileinputchange\", {\n      source: this,\n      fileInput: evt.target\n    });\n  });\n  appConfig.mainContainer.addEventListener(\"dragover\", function (evt) {\n    evt.preventDefault();\n    evt.dataTransfer.dropEffect = \"move\";\n  });\n  appConfig.mainContainer.addEventListener(\"drop\", function (evt) {\n    evt.preventDefault();\n    const files = evt.dataTransfer.files;\n\n    if (!files || files.length === 0) {\n      return;\n    }\n\n    PDFViewerApplication.eventBus.dispatch(\"fileinputchange\", {\n      source: this,\n      fileInput: evt.dataTransfer\n    });\n  });\n\n  if (!PDFViewerApplication.supportsDocumentFonts) {\n    _app_options.AppOptions.set(\"disableFontFace\", true);\n\n    PDFViewerApplication.l10n.get(\"web_fonts_disabled\", null, \"Web fonts are disabled: unable to use embedded PDF fonts.\").then(msg => {\n      console.warn(msg);\n    });\n  }\n\n  if (!PDFViewerApplication.supportsPrinting) {\n    appConfig.toolbar.print.classList.add(\"hidden\");\n    appConfig.secondaryToolbar.printButton.classList.add(\"hidden\");\n  }\n\n  if (!PDFViewerApplication.supportsFullscreen) {\n    appConfig.toolbar.presentationModeButton.classList.add(\"hidden\");\n    appConfig.secondaryToolbar.presentationModeButton.classList.add(\"hidden\");\n  }\n\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    appConfig.toolbar.viewFind.classList.add(\"hidden\");\n  }\n\n  appConfig.mainContainer.addEventListener(\"transitionend\", function (evt) {\n    if (evt.target === this) {\n      PDFViewerApplication.eventBus.dispatch(\"resize\", {\n        source: this\n      });\n    }\n  }, true);\n\n  try {\n    webViewerOpenFileViaURL(file);\n  } catch (reason) {\n    PDFViewerApplication.l10n.get(\"loading_error\", null, \"An error occurred while loading the PDF.\").then(msg => {\n      PDFViewerApplication.error(msg, reason);\n    });\n  }\n}\n\nlet webViewerOpenFileViaURL;\n{\n  webViewerOpenFileViaURL = function (file) {\n    if (file && file.lastIndexOf(\"file:\", 0) === 0) {\n      PDFViewerApplication.setTitleUsingUrl(file);\n      const xhr = new XMLHttpRequest();\n\n      xhr.onload = function () {\n        PDFViewerApplication.open(new Uint8Array(xhr.response));\n      };\n\n      xhr.open(\"GET\", file);\n      xhr.responseType = \"arraybuffer\";\n      xhr.send();\n      return;\n    }\n\n    if (file) {\n      PDFViewerApplication.open(file);\n    }\n  };\n}\n\nfunction webViewerResetPermissions() {\n  const {\n    appConfig\n  } = PDFViewerApplication;\n\n  if (!appConfig) {\n    return;\n  }\n\n  appConfig.viewerContainer.classList.remove(ENABLE_PERMISSIONS_CLASS);\n}\n\nfunction webViewerPageRendered({\n  pageNumber,\n  timestamp,\n  error\n}) {\n  if (pageNumber === PDFViewerApplication.page) {\n    PDFViewerApplication.toolbar.updateLoadingIndicatorState(false);\n  }\n\n  if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n    const pageView = PDFViewerApplication.pdfViewer.getPageView(pageNumber - 1);\n    const thumbnailView = PDFViewerApplication.pdfThumbnailViewer.getThumbnail(pageNumber - 1);\n\n    if (pageView && thumbnailView) {\n      thumbnailView.setImage(pageView);\n    }\n  }\n\n  if (error) {\n    PDFViewerApplication.l10n.get(\"rendering_error\", null, \"An error occurred while rendering the page.\").then(msg => {\n      PDFViewerApplication.error(msg, error);\n    });\n  }\n\n  PDFViewerApplication.externalServices.reportTelemetry({\n    type: \"pageInfo\",\n    timestamp\n  });\n  PDFViewerApplication.pdfDocument.getStats().then(function (stats) {\n    PDFViewerApplication.externalServices.reportTelemetry({\n      type: \"documentStats\",\n      stats\n    });\n  });\n}\n\nfunction webViewerPageMode({\n  mode\n}) {\n  let view;\n\n  switch (mode) {\n    case \"thumbs\":\n      view = _ui_utils.SidebarView.THUMBS;\n      break;\n\n    case \"bookmarks\":\n    case \"outline\":\n      view = _ui_utils.SidebarView.OUTLINE;\n      break;\n\n    case \"attachments\":\n      view = _ui_utils.SidebarView.ATTACHMENTS;\n      break;\n\n    case \"layers\":\n      view = _ui_utils.SidebarView.LAYERS;\n      break;\n\n    case \"none\":\n      view = _ui_utils.SidebarView.NONE;\n      break;\n\n    default:\n      console.error('Invalid \"pagemode\" hash parameter: ' + mode);\n      return;\n  }\n\n  PDFViewerApplication.pdfSidebar.switchView(view, true);\n}\n\nfunction webViewerNamedAction(evt) {\n  switch (evt.action) {\n    case \"GoToPage\":\n      PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n      break;\n\n    case \"Find\":\n      if (!PDFViewerApplication.supportsIntegratedFind) {\n        PDFViewerApplication.findBar.toggle();\n      }\n\n      break;\n\n    case \"Print\":\n      PDFViewerApplication.triggerPrinting();\n      break;\n\n    case \"SaveAs\":\n      webViewerSave();\n      break;\n  }\n}\n\nfunction webViewerPresentationModeChanged(evt) {\n  PDFViewerApplication.pdfViewer.presentationModeState = evt.state;\n}\n\nfunction webViewerSidebarViewChanged(evt) {\n  PDFViewerApplication.pdfRenderingQueue.isThumbnailViewEnabled = PDFViewerApplication.pdfSidebar.isThumbnailViewVisible;\n  const store = PDFViewerApplication.store;\n\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    store.set(\"sidebarView\", evt.view).catch(function () {});\n  }\n}\n\nfunction webViewerUpdateViewarea(evt) {\n  const location = evt.location,\n        store = PDFViewerApplication.store;\n\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    store.setMultiple({\n      page: location.pageNumber,\n      zoom: location.scale,\n      scrollLeft: location.left,\n      scrollTop: location.top,\n      rotation: location.rotation\n    }).catch(function () {});\n  }\n\n  const href = PDFViewerApplication.pdfLinkService.getAnchorUrl(location.pdfOpenParams);\n  PDFViewerApplication.appConfig.toolbar.viewBookmark.href = href;\n  PDFViewerApplication.appConfig.secondaryToolbar.viewBookmarkButton.href = href;\n  const currentPage = PDFViewerApplication.pdfViewer.getPageView(PDFViewerApplication.page - 1);\n  const loading = (currentPage && currentPage.renderingState) !== _pdf_rendering_queue.RenderingStates.FINISHED;\n  PDFViewerApplication.toolbar.updateLoadingIndicatorState(loading);\n}\n\nfunction webViewerScrollModeChanged(evt) {\n  const store = PDFViewerApplication.store;\n\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    store.set(\"scrollMode\", evt.mode).catch(function () {});\n  }\n}\n\nfunction webViewerSpreadModeChanged(evt) {\n  const store = PDFViewerApplication.store;\n\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    store.set(\"spreadMode\", evt.mode).catch(function () {});\n  }\n}\n\nfunction webViewerResize() {\n  const {\n    pdfDocument,\n    pdfViewer\n  } = PDFViewerApplication;\n\n  if (!pdfDocument) {\n    return;\n  }\n\n  const currentScaleValue = pdfViewer.currentScaleValue;\n\n  if (currentScaleValue === \"auto\" || currentScaleValue === \"page-fit\" || currentScaleValue === \"page-width\") {\n    pdfViewer.currentScaleValue = currentScaleValue;\n  }\n\n  pdfViewer.update();\n}\n\nfunction webViewerHashchange(evt) {\n  const hash = evt.hash;\n\n  if (!hash) {\n    return;\n  }\n\n  if (!PDFViewerApplication.isInitialViewSet) {\n    PDFViewerApplication.initialBookmark = hash;\n  } else if (!PDFViewerApplication.pdfHistory.popStateInProgress) {\n    PDFViewerApplication.pdfLinkService.setHash(hash);\n  }\n}\n\nlet webViewerFileInputChange, webViewerOpenFile;\n{\n  webViewerFileInputChange = function (evt) {\n    if (PDFViewerApplication.pdfViewer && PDFViewerApplication.pdfViewer.isInPresentationMode) {\n      return;\n    }\n\n    const file = evt.fileInput.files[0];\n\n    if (!_viewer_compatibility.viewerCompatibilityParams.disableCreateObjectURL) {\n      let url = URL.createObjectURL(file);\n\n      if (file.name) {\n        url = {\n          url,\n          originalUrl: file.name\n        };\n      }\n\n      PDFViewerApplication.open(url);\n    } else {\n      PDFViewerApplication.setTitleUsingUrl(file.name);\n      const fileReader = new FileReader();\n\n      fileReader.onload = function webViewerChangeFileReaderOnload(event) {\n        const buffer = event.target.result;\n        PDFViewerApplication.open(new Uint8Array(buffer));\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n\n    const appConfig = PDFViewerApplication.appConfig;\n    appConfig.toolbar.viewBookmark.setAttribute(\"hidden\", \"true\");\n    appConfig.secondaryToolbar.viewBookmarkButton.setAttribute(\"hidden\", \"true\");\n    appConfig.toolbar.download.setAttribute(\"hidden\", \"true\");\n    appConfig.secondaryToolbar.downloadButton.setAttribute(\"hidden\", \"true\");\n  };\n\n  webViewerOpenFile = function (evt) {\n    const openFileInputName = PDFViewerApplication.appConfig.openFileInputName;\n    document.getElementById(openFileInputName).click();\n  };\n}\n\nfunction webViewerPresentationMode() {\n  PDFViewerApplication.requestPresentationMode();\n}\n\nfunction webViewerPrint() {\n  PDFViewerApplication.triggerPrinting();\n}\n\nfunction webViewerDownload() {\n  PDFViewerApplication.downloadOrSave({\n    sourceEventType: \"download\"\n  });\n}\n\nfunction webViewerSave() {\n  PDFViewerApplication.downloadOrSave({\n    sourceEventType: \"save\"\n  });\n}\n\nfunction webViewerFirstPage() {\n  if (PDFViewerApplication.pdfDocument) {\n    PDFViewerApplication.page = 1;\n  }\n}\n\nfunction webViewerLastPage() {\n  if (PDFViewerApplication.pdfDocument) {\n    PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n  }\n}\n\nfunction webViewerNextPage() {\n  PDFViewerApplication.pdfViewer.nextPage();\n}\n\nfunction webViewerPreviousPage() {\n  PDFViewerApplication.pdfViewer.previousPage();\n}\n\nfunction webViewerZoomIn() {\n  PDFViewerApplication.zoomIn();\n}\n\nfunction webViewerZoomOut() {\n  PDFViewerApplication.zoomOut();\n}\n\nfunction webViewerZoomReset() {\n  PDFViewerApplication.zoomReset();\n}\n\nfunction webViewerPageNumberChanged(evt) {\n  const pdfViewer = PDFViewerApplication.pdfViewer;\n\n  if (evt.value !== \"\") {\n    PDFViewerApplication.pdfLinkService.goToPage(evt.value);\n  }\n\n  if (evt.value !== pdfViewer.currentPageNumber.toString() && evt.value !== pdfViewer.currentPageLabel) {\n    PDFViewerApplication.toolbar.setPageNumber(pdfViewer.currentPageNumber, pdfViewer.currentPageLabel);\n  }\n}\n\nfunction webViewerScaleChanged(evt) {\n  PDFViewerApplication.pdfViewer.currentScaleValue = evt.value;\n}\n\nfunction webViewerRotateCw() {\n  PDFViewerApplication.rotatePages(90);\n}\n\nfunction webViewerRotateCcw() {\n  PDFViewerApplication.rotatePages(-90);\n}\n\nfunction webViewerOptionalContentConfig(evt) {\n  PDFViewerApplication.pdfViewer.optionalContentConfigPromise = evt.promise;\n}\n\nfunction webViewerSwitchScrollMode(evt) {\n  PDFViewerApplication.pdfViewer.scrollMode = evt.mode;\n}\n\nfunction webViewerSwitchSpreadMode(evt) {\n  PDFViewerApplication.pdfViewer.spreadMode = evt.mode;\n}\n\nfunction webViewerDocumentProperties() {\n  PDFViewerApplication.pdfDocumentProperties.open();\n}\n\nfunction webViewerFind(evt) {\n  PDFViewerApplication.findController.executeCommand(\"find\" + evt.type, {\n    query: evt.query,\n    phraseSearch: evt.phraseSearch,\n    caseSensitive: evt.caseSensitive,\n    entireWord: evt.entireWord,\n    highlightAll: evt.highlightAll,\n    findPrevious: evt.findPrevious\n  });\n}\n\nfunction webViewerFindFromUrlHash(evt) {\n  PDFViewerApplication.findController.executeCommand(\"find\", {\n    query: evt.query,\n    phraseSearch: evt.phraseSearch,\n    caseSensitive: false,\n    entireWord: false,\n    highlightAll: true,\n    findPrevious: false\n  });\n}\n\nfunction webViewerUpdateFindMatchesCount({\n  matchesCount\n}) {\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    PDFViewerApplication.externalServices.updateFindMatchesCount(matchesCount);\n  } else {\n    PDFViewerApplication.findBar.updateResultsCount(matchesCount);\n  }\n}\n\nfunction webViewerUpdateFindControlState({\n  state,\n  previous,\n  matchesCount,\n  rawQuery\n}) {\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    PDFViewerApplication.externalServices.updateFindControlState({\n      result: state,\n      findPrevious: previous,\n      matchesCount,\n      rawQuery\n    });\n  } else {\n    PDFViewerApplication.findBar.updateUIState(state, previous, matchesCount);\n  }\n}\n\nfunction webViewerScaleChanging(evt) {\n  PDFViewerApplication.toolbar.setPageScale(evt.presetValue, evt.scale);\n  PDFViewerApplication.pdfViewer.update();\n}\n\nfunction webViewerRotationChanging(evt) {\n  PDFViewerApplication.pdfThumbnailViewer.pagesRotation = evt.pagesRotation;\n  PDFViewerApplication.forceRendering();\n  PDFViewerApplication.pdfViewer.currentPageNumber = evt.pageNumber;\n}\n\nfunction webViewerPageChanging({\n  pageNumber,\n  pageLabel\n}) {\n  PDFViewerApplication.toolbar.setPageNumber(pageNumber, pageLabel);\n  PDFViewerApplication.secondaryToolbar.setPageNumber(pageNumber);\n\n  if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n    PDFViewerApplication.pdfThumbnailViewer.scrollThumbnailIntoView(pageNumber);\n  }\n}\n\nfunction webViewerVisibilityChange(evt) {\n  if (document.visibilityState === \"visible\") {\n    setZoomDisabledTimeout();\n  }\n}\n\nlet zoomDisabledTimeout = null;\n\nfunction setZoomDisabledTimeout() {\n  if (zoomDisabledTimeout) {\n    clearTimeout(zoomDisabledTimeout);\n  }\n\n  zoomDisabledTimeout = setTimeout(function () {\n    zoomDisabledTimeout = null;\n  }, WHEEL_ZOOM_DISABLED_TIMEOUT);\n}\n\nfunction webViewerWheel(evt) {\n  const {\n    pdfViewer,\n    supportedMouseWheelZoomModifierKeys\n  } = PDFViewerApplication;\n\n  if (pdfViewer.isInPresentationMode) {\n    return;\n  }\n\n  if (evt.ctrlKey && supportedMouseWheelZoomModifierKeys.ctrlKey || evt.metaKey && supportedMouseWheelZoomModifierKeys.metaKey) {\n    evt.preventDefault();\n\n    if (zoomDisabledTimeout || document.visibilityState === \"hidden\") {\n      return;\n    }\n\n    const previousScale = pdfViewer.currentScale;\n    const delta = (0, _ui_utils.normalizeWheelEventDirection)(evt);\n    let ticks = 0;\n\n    if (evt.deltaMode === WheelEvent.DOM_DELTA_LINE || evt.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      if (Math.abs(delta) >= 1) {\n        ticks = Math.sign(delta);\n      } else {\n        ticks = PDFViewerApplication.accumulateWheelTicks(delta);\n      }\n    } else {\n      const PIXELS_PER_LINE_SCALE = 30;\n      ticks = PDFViewerApplication.accumulateWheelTicks(delta / PIXELS_PER_LINE_SCALE);\n    }\n\n    if (ticks < 0) {\n      PDFViewerApplication.zoomOut(-ticks);\n    } else if (ticks > 0) {\n      PDFViewerApplication.zoomIn(ticks);\n    }\n\n    const currentScale = pdfViewer.currentScale;\n\n    if (previousScale !== currentScale) {\n      const scaleCorrectionFactor = currentScale / previousScale - 1;\n      const rect = pdfViewer.container.getBoundingClientRect();\n      const dx = evt.clientX - rect.left;\n      const dy = evt.clientY - rect.top;\n      pdfViewer.container.scrollLeft += dx * scaleCorrectionFactor;\n      pdfViewer.container.scrollTop += dy * scaleCorrectionFactor;\n    }\n  } else {\n    setZoomDisabledTimeout();\n  }\n}\n\nfunction webViewerTouchStart(evt) {\n  if (evt.touches.length > 1) {\n    evt.preventDefault();\n  }\n}\n\nfunction webViewerClick(evt) {\n  if (PDFViewerApplication.triggerDelayedFallback && PDFViewerApplication.pdfViewer.containsElement(evt.target)) {\n    PDFViewerApplication.triggerDelayedFallback();\n  }\n\n  if (!PDFViewerApplication.secondaryToolbar.isOpen) {\n    return;\n  }\n\n  const appConfig = PDFViewerApplication.appConfig;\n\n  if (PDFViewerApplication.pdfViewer.containsElement(evt.target) || appConfig.toolbar.container.contains(evt.target) && evt.target !== appConfig.secondaryToolbar.toggleButton) {\n    PDFViewerApplication.secondaryToolbar.close();\n  }\n}\n\nfunction webViewerKeyUp(evt) {\n  if (evt.keyCode === 9) {\n    if (PDFViewerApplication.triggerDelayedFallback) {\n      PDFViewerApplication.triggerDelayedFallback();\n    }\n  }\n}\n\nfunction webViewerKeyDown(evt) {\n  if (PDFViewerApplication.overlayManager.active) {\n    return;\n  }\n\n  let handled = false,\n      ensureViewerFocused = false;\n  const cmd = (evt.ctrlKey ? 1 : 0) | (evt.altKey ? 2 : 0) | (evt.shiftKey ? 4 : 0) | (evt.metaKey ? 8 : 0);\n  const pdfViewer = PDFViewerApplication.pdfViewer;\n  const isViewerInPresentationMode = pdfViewer && pdfViewer.isInPresentationMode;\n\n  if (cmd === 1 || cmd === 8 || cmd === 5 || cmd === 12) {\n    switch (evt.keyCode) {\n      case 70:\n        if (!PDFViewerApplication.supportsIntegratedFind && !evt.shiftKey) {\n          PDFViewerApplication.findBar.open();\n          handled = true;\n        }\n\n        break;\n\n      case 71:\n        if (!PDFViewerApplication.supportsIntegratedFind) {\n          const findState = PDFViewerApplication.findController.state;\n\n          if (findState) {\n            PDFViewerApplication.findController.executeCommand(\"findagain\", {\n              query: findState.query,\n              phraseSearch: findState.phraseSearch,\n              caseSensitive: findState.caseSensitive,\n              entireWord: findState.entireWord,\n              highlightAll: findState.highlightAll,\n              findPrevious: cmd === 5 || cmd === 12\n            });\n          }\n\n          handled = true;\n        }\n\n        break;\n\n      case 61:\n      case 107:\n      case 187:\n      case 171:\n        if (!isViewerInPresentationMode) {\n          PDFViewerApplication.zoomIn();\n        }\n\n        handled = true;\n        break;\n\n      case 173:\n      case 109:\n      case 189:\n        if (!isViewerInPresentationMode) {\n          PDFViewerApplication.zoomOut();\n        }\n\n        handled = true;\n        break;\n\n      case 48:\n      case 96:\n        if (!isViewerInPresentationMode) {\n          setTimeout(function () {\n            PDFViewerApplication.zoomReset();\n          });\n          handled = false;\n        }\n\n        break;\n\n      case 38:\n        if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n\n        break;\n\n      case 40:\n        if (isViewerInPresentationMode || PDFViewerApplication.page < PDFViewerApplication.pagesCount) {\n          PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n\n        break;\n    }\n  }\n\n  const {\n    eventBus\n  } = PDFViewerApplication;\n\n  if (cmd === 1 || cmd === 8) {\n    switch (evt.keyCode) {\n      case 83:\n        eventBus.dispatch(\"download\", {\n          source: window\n        });\n        handled = true;\n        break;\n\n      case 79:\n        {\n          eventBus.dispatch(\"openfile\", {\n            source: window\n          });\n          handled = true;\n        }\n        break;\n    }\n  }\n\n  if (cmd === 3 || cmd === 10) {\n    switch (evt.keyCode) {\n      case 80:\n        PDFViewerApplication.requestPresentationMode();\n        handled = true;\n        break;\n\n      case 71:\n        PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n        handled = true;\n        break;\n    }\n  }\n\n  if (handled) {\n    if (ensureViewerFocused && !isViewerInPresentationMode) {\n      pdfViewer.focus();\n    }\n\n    evt.preventDefault();\n    return;\n  }\n\n  const curElement = (0, _ui_utils.getActiveOrFocusedElement)();\n  const curElementTagName = curElement && curElement.tagName.toUpperCase();\n\n  if (curElementTagName === \"INPUT\" || curElementTagName === \"TEXTAREA\" || curElementTagName === \"SELECT\" || curElement && curElement.isContentEditable) {\n    if (evt.keyCode !== 27) {\n      return;\n    }\n  }\n\n  if (cmd === 0) {\n    let turnPage = 0,\n        turnOnlyIfPageFit = false;\n\n    switch (evt.keyCode) {\n      case 38:\n      case 33:\n        if (pdfViewer.isVerticalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n\n        turnPage = -1;\n        break;\n\n      case 8:\n        if (!isViewerInPresentationMode) {\n          turnOnlyIfPageFit = true;\n        }\n\n        turnPage = -1;\n        break;\n\n      case 37:\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n\n      case 75:\n      case 80:\n        turnPage = -1;\n        break;\n\n      case 27:\n        if (PDFViewerApplication.secondaryToolbar.isOpen) {\n          PDFViewerApplication.secondaryToolbar.close();\n          handled = true;\n        }\n\n        if (!PDFViewerApplication.supportsIntegratedFind && PDFViewerApplication.findBar.opened) {\n          PDFViewerApplication.findBar.close();\n          handled = true;\n        }\n\n        break;\n\n      case 40:\n      case 34:\n        if (pdfViewer.isVerticalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n\n        turnPage = 1;\n        break;\n\n      case 13:\n      case 32:\n        if (!isViewerInPresentationMode) {\n          turnOnlyIfPageFit = true;\n        }\n\n        turnPage = 1;\n        break;\n\n      case 39:\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n\n      case 74:\n      case 78:\n        turnPage = 1;\n        break;\n\n      case 36:\n        if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n\n        break;\n\n      case 35:\n        if (isViewerInPresentationMode || PDFViewerApplication.page < PDFViewerApplication.pagesCount) {\n          PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n\n        break;\n\n      case 83:\n        PDFViewerApplication.pdfCursorTools.switchTool(_pdf_cursor_tools.CursorTool.SELECT);\n        break;\n\n      case 72:\n        PDFViewerApplication.pdfCursorTools.switchTool(_pdf_cursor_tools.CursorTool.HAND);\n        break;\n\n      case 82:\n        PDFViewerApplication.rotatePages(90);\n        break;\n\n      case 115:\n        PDFViewerApplication.pdfSidebar.toggle();\n        break;\n    }\n\n    if (turnPage !== 0 && (!turnOnlyIfPageFit || pdfViewer.currentScaleValue === \"page-fit\")) {\n      if (turnPage > 0) {\n        pdfViewer.nextPage();\n      } else {\n        pdfViewer.previousPage();\n      }\n\n      handled = true;\n    }\n  }\n\n  if (cmd === 4) {\n    switch (evt.keyCode) {\n      case 13:\n      case 32:\n        if (!isViewerInPresentationMode && pdfViewer.currentScaleValue !== \"page-fit\") {\n          break;\n        }\n\n        if (PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page--;\n        }\n\n        handled = true;\n        break;\n\n      case 82:\n        PDFViewerApplication.rotatePages(-90);\n        break;\n    }\n  }\n\n  if (!handled && !isViewerInPresentationMode) {\n    if (evt.keyCode >= 33 && evt.keyCode <= 40 || evt.keyCode === 32 && curElementTagName !== \"BUTTON\") {\n      ensureViewerFocused = true;\n    }\n  }\n\n  if (ensureViewerFocused && !pdfViewer.containsElement(curElement)) {\n    pdfViewer.focus();\n  }\n\n  if (handled) {\n    evt.preventDefault();\n  }\n}\n\nfunction beforeUnload(evt) {\n  evt.preventDefault();\n  evt.returnValue = \"\";\n  return false;\n}\n\nfunction apiPageLayoutToSpreadMode(layout) {\n  switch (layout) {\n    case \"SinglePage\":\n    case \"OneColumn\":\n      return _ui_utils.SpreadMode.NONE;\n\n    case \"TwoColumnLeft\":\n    case \"TwoPageLeft\":\n      return _ui_utils.SpreadMode.ODD;\n\n    case \"TwoColumnRight\":\n    case \"TwoPageRight\":\n      return _ui_utils.SpreadMode.EVEN;\n  }\n\n  return _ui_utils.SpreadMode.NONE;\n}\n\nfunction apiPageModeToSidebarView(mode) {\n  switch (mode) {\n    case \"UseNone\":\n      return _ui_utils.SidebarView.NONE;\n\n    case \"UseThumbs\":\n      return _ui_utils.SidebarView.THUMBS;\n\n    case \"UseOutlines\":\n      return _ui_utils.SidebarView.OUTLINE;\n\n    case \"UseAttachments\":\n      return _ui_utils.SidebarView.ATTACHMENTS;\n\n    case \"UseOC\":\n      return _ui_utils.SidebarView.LAYERS;\n  }\n\n  return _ui_utils.SidebarView.NONE;\n}\n\nconst PDFPrintServiceFactory = {\n  instance: {\n    supportsPrinting: false,\n\n    createPrintService() {\n      throw new Error(\"Not implemented: createPrintService\");\n    }\n\n  }\n};\nexports.PDFPrintServiceFactory = PDFPrintServiceFactory;\n\n/***/ }),\n/* 4 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.approximateFraction = approximateFraction;\nexports.backtrackBeforeAllVisibleElements = backtrackBeforeAllVisibleElements;\nexports.binarySearchFirstItem = binarySearchFirstItem;\nexports.getActiveOrFocusedElement = getActiveOrFocusedElement;\nexports.getOutputScale = getOutputScale;\nexports.getPageSizeInches = getPageSizeInches;\nexports.getPDFFileNameFromURL = getPDFFileNameFromURL;\nexports.getVisibleElements = getVisibleElements;\nexports.isPortraitOrientation = isPortraitOrientation;\nexports.isValidRotation = isValidRotation;\nexports.isValidScrollMode = isValidScrollMode;\nexports.isValidSpreadMode = isValidSpreadMode;\nexports.moveToEndOfArray = moveToEndOfArray;\nexports.noContextMenuHandler = noContextMenuHandler;\nexports.normalizeWheelEventDelta = normalizeWheelEventDelta;\nexports.normalizeWheelEventDirection = normalizeWheelEventDirection;\nexports.parseQueryString = parseQueryString;\nexports.roundToDivide = roundToDivide;\nexports.scrollIntoView = scrollIntoView;\nexports.waitOnEventOrTimeout = waitOnEventOrTimeout;\nexports.watchScroll = watchScroll;\nexports.WaitOnType = exports.VERTICAL_PADDING = exports.UNKNOWN_SCALE = exports.TextLayerMode = exports.SpreadMode = exports.SidebarView = exports.ScrollMode = exports.SCROLLBAR_PADDING = exports.RendererType = exports.ProgressBar = exports.PresentationModeState = exports.NullL10n = exports.MIN_SCALE = exports.MAX_SCALE = exports.MAX_AUTO_SCALE = exports.EventBus = exports.DEFAULT_SCALE_VALUE = exports.DEFAULT_SCALE = exports.CSS_UNITS = exports.AutoPrintRegExp = exports.animationStarted = void 0;\nconst CSS_UNITS = 96.0 / 72.0;\nexports.CSS_UNITS = CSS_UNITS;\nconst DEFAULT_SCALE_VALUE = \"auto\";\nexports.DEFAULT_SCALE_VALUE = DEFAULT_SCALE_VALUE;\nconst DEFAULT_SCALE = 1.0;\nexports.DEFAULT_SCALE = DEFAULT_SCALE;\nconst MIN_SCALE = 0.1;\nexports.MIN_SCALE = MIN_SCALE;\nconst MAX_SCALE = 10.0;\nexports.MAX_SCALE = MAX_SCALE;\nconst UNKNOWN_SCALE = 0;\nexports.UNKNOWN_SCALE = UNKNOWN_SCALE;\nconst MAX_AUTO_SCALE = 1.25;\nexports.MAX_AUTO_SCALE = MAX_AUTO_SCALE;\nconst SCROLLBAR_PADDING = 40;\nexports.SCROLLBAR_PADDING = SCROLLBAR_PADDING;\nconst VERTICAL_PADDING = 5;\nexports.VERTICAL_PADDING = VERTICAL_PADDING;\nconst LOADINGBAR_END_OFFSET_VAR = \"--loadingBar-end-offset\";\nconst PresentationModeState = {\n  UNKNOWN: 0,\n  NORMAL: 1,\n  CHANGING: 2,\n  FULLSCREEN: 3\n};\nexports.PresentationModeState = PresentationModeState;\nconst SidebarView = {\n  UNKNOWN: -1,\n  NONE: 0,\n  THUMBS: 1,\n  OUTLINE: 2,\n  ATTACHMENTS: 3,\n  LAYERS: 4\n};\nexports.SidebarView = SidebarView;\nconst RendererType = {\n  CANVAS: \"canvas\",\n  SVG: \"svg\"\n};\nexports.RendererType = RendererType;\nconst TextLayerMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_ENHANCE: 2\n};\nexports.TextLayerMode = TextLayerMode;\nconst ScrollMode = {\n  UNKNOWN: -1,\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n  WRAPPED: 2\n};\nexports.ScrollMode = ScrollMode;\nconst SpreadMode = {\n  UNKNOWN: -1,\n  NONE: 0,\n  ODD: 1,\n  EVEN: 2\n};\nexports.SpreadMode = SpreadMode;\nconst AutoPrintRegExp = /\\bprint\\s*\\(/;\nexports.AutoPrintRegExp = AutoPrintRegExp;\n\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n\n  return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\n  });\n}\n\nconst NullL10n = {\n  async getLanguage() {\n    return \"en-us\";\n  },\n\n  async getDirection() {\n    return \"ltr\";\n  },\n\n  async get(property, args, fallback) {\n    return formatL10nValue(fallback, args);\n  },\n\n  async translate(element) {}\n\n};\nexports.NullL10n = NullL10n;\n\nfunction getOutputScale(ctx) {\n  const devicePixelRatio = window.devicePixelRatio || 1;\n  const backingStoreRatio = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n  const pixelRatio = devicePixelRatio / backingStoreRatio;\n  return {\n    sx: pixelRatio,\n    sy: pixelRatio,\n    scaled: pixelRatio !== 1\n  };\n}\n\nfunction scrollIntoView(element, spot, skipOverflowHiddenElements = false) {\n  let parent = element.offsetParent;\n\n  if (!parent) {\n    console.error(\"offsetParent is not set -- cannot scroll\");\n    return;\n  }\n\n  let offsetY = element.offsetTop + element.clientTop;\n  let offsetX = element.offsetLeft + element.clientLeft;\n\n  while (parent.clientHeight === parent.scrollHeight && parent.clientWidth === parent.scrollWidth || skipOverflowHiddenElements && getComputedStyle(parent).overflow === \"hidden\") {\n    if (parent.dataset._scaleY) {\n      offsetY /= parent.dataset._scaleY;\n      offsetX /= parent.dataset._scaleX;\n    }\n\n    offsetY += parent.offsetTop;\n    offsetX += parent.offsetLeft;\n    parent = parent.offsetParent;\n\n    if (!parent) {\n      return;\n    }\n  }\n\n  if (spot) {\n    if (spot.top !== undefined) {\n      offsetY += spot.top;\n    }\n\n    if (spot.left !== undefined) {\n      offsetX += spot.left;\n      parent.scrollLeft = offsetX;\n    }\n  }\n\n  parent.scrollTop = offsetY;\n}\n\nfunction watchScroll(viewAreaElement, callback) {\n  const debounceScroll = function (evt) {\n    if (rAF) {\n      return;\n    }\n\n    rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n      rAF = null;\n      const currentX = viewAreaElement.scrollLeft;\n      const lastX = state.lastX;\n\n      if (currentX !== lastX) {\n        state.right = currentX > lastX;\n      }\n\n      state.lastX = currentX;\n      const currentY = viewAreaElement.scrollTop;\n      const lastY = state.lastY;\n\n      if (currentY !== lastY) {\n        state.down = currentY > lastY;\n      }\n\n      state.lastY = currentY;\n      callback(state);\n    });\n  };\n\n  const state = {\n    right: true,\n    down: true,\n    lastX: viewAreaElement.scrollLeft,\n    lastY: viewAreaElement.scrollTop,\n    _eventHandler: debounceScroll\n  };\n  let rAF = null;\n  viewAreaElement.addEventListener(\"scroll\", debounceScroll, true);\n  return state;\n}\n\nfunction parseQueryString(query) {\n  const parts = query.split(\"&\");\n  const params = Object.create(null);\n\n  for (let i = 0, ii = parts.length; i < ii; ++i) {\n    const param = parts[i].split(\"=\");\n    const key = param[0].toLowerCase();\n    const value = param.length > 1 ? param[1] : null;\n    params[decodeURIComponent(key)] = decodeURIComponent(value);\n  }\n\n  return params;\n}\n\nfunction binarySearchFirstItem(items, condition) {\n  let minIndex = 0;\n  let maxIndex = items.length - 1;\n\n  if (maxIndex < 0 || !condition(items[maxIndex])) {\n    return items.length;\n  }\n\n  if (condition(items[minIndex])) {\n    return minIndex;\n  }\n\n  while (minIndex < maxIndex) {\n    const currentIndex = minIndex + maxIndex >> 1;\n    const currentItem = items[currentIndex];\n\n    if (condition(currentItem)) {\n      maxIndex = currentIndex;\n    } else {\n      minIndex = currentIndex + 1;\n    }\n  }\n\n  return minIndex;\n}\n\nfunction approximateFraction(x) {\n  if (Math.floor(x) === x) {\n    return [x, 1];\n  }\n\n  const xinv = 1 / x;\n  const limit = 8;\n\n  if (xinv > limit) {\n    return [1, limit];\n  } else if (Math.floor(xinv) === xinv) {\n    return [1, xinv];\n  }\n\n  const x_ = x > 1 ? xinv : x;\n  let a = 0,\n      b = 1,\n      c = 1,\n      d = 1;\n\n  while (true) {\n    const p = a + c,\n          q = b + d;\n\n    if (q > limit) {\n      break;\n    }\n\n    if (x_ <= p / q) {\n      c = p;\n      d = q;\n    } else {\n      a = p;\n      b = q;\n    }\n  }\n\n  let result;\n\n  if (x_ - a / b < c / d - x_) {\n    result = x_ === x ? [a, b] : [b, a];\n  } else {\n    result = x_ === x ? [c, d] : [d, c];\n  }\n\n  return result;\n}\n\nfunction roundToDivide(x, div) {\n  const r = x % div;\n  return r === 0 ? x : Math.round(x - r + div);\n}\n\nfunction getPageSizeInches({\n  view,\n  userUnit,\n  rotate\n}) {\n  const [x1, y1, x2, y2] = view;\n  const changeOrientation = rotate % 180 !== 0;\n  const width = (x2 - x1) / 72 * userUnit;\n  const height = (y2 - y1) / 72 * userUnit;\n  return {\n    width: changeOrientation ? height : width,\n    height: changeOrientation ? width : height\n  };\n}\n\nfunction backtrackBeforeAllVisibleElements(index, views, top) {\n  if (index < 2) {\n    return index;\n  }\n\n  let elt = views[index].div;\n  let pageTop = elt.offsetTop + elt.clientTop;\n\n  if (pageTop >= top) {\n    elt = views[index - 1].div;\n    pageTop = elt.offsetTop + elt.clientTop;\n  }\n\n  for (let i = index - 2; i >= 0; --i) {\n    elt = views[i].div;\n\n    if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\n      break;\n    }\n\n    index = i;\n  }\n\n  return index;\n}\n\nfunction getVisibleElements({\n  scrollEl,\n  views,\n  sortByVisibility = false,\n  horizontal = false,\n  rtl = false\n}) {\n  const top = scrollEl.scrollTop,\n        bottom = top + scrollEl.clientHeight;\n  const left = scrollEl.scrollLeft,\n        right = left + scrollEl.clientWidth;\n\n  function isElementBottomAfterViewTop(view) {\n    const element = view.div;\n    const elementBottom = element.offsetTop + element.clientTop + element.clientHeight;\n    return elementBottom > top;\n  }\n\n  function isElementNextAfterViewHorizontally(view) {\n    const element = view.div;\n    const elementLeft = element.offsetLeft + element.clientLeft;\n    const elementRight = elementLeft + element.clientWidth;\n    return rtl ? elementLeft < right : elementRight > left;\n  }\n\n  const visible = [],\n        numViews = views.length;\n  let firstVisibleElementInd = binarySearchFirstItem(views, horizontal ? isElementNextAfterViewHorizontally : isElementBottomAfterViewTop);\n\n  if (firstVisibleElementInd > 0 && firstVisibleElementInd < numViews && !horizontal) {\n    firstVisibleElementInd = backtrackBeforeAllVisibleElements(firstVisibleElementInd, views, top);\n  }\n\n  let lastEdge = horizontal ? right : -1;\n\n  for (let i = firstVisibleElementInd; i < numViews; i++) {\n    const view = views[i],\n          element = view.div;\n    const currentWidth = element.offsetLeft + element.clientLeft;\n    const currentHeight = element.offsetTop + element.clientTop;\n    const viewWidth = element.clientWidth,\n          viewHeight = element.clientHeight;\n    const viewRight = currentWidth + viewWidth;\n    const viewBottom = currentHeight + viewHeight;\n\n    if (lastEdge === -1) {\n      if (viewBottom >= bottom) {\n        lastEdge = viewBottom;\n      }\n    } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\n      break;\n    }\n\n    if (viewBottom <= top || currentHeight >= bottom || viewRight <= left || currentWidth >= right) {\n      continue;\n    }\n\n    const hiddenHeight = Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\n    const hiddenWidth = Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\n    const fractionHeight = (viewHeight - hiddenHeight) / viewHeight,\n          fractionWidth = (viewWidth - hiddenWidth) / viewWidth;\n    const percent = fractionHeight * fractionWidth * 100 | 0;\n    visible.push({\n      id: view.id,\n      x: currentWidth,\n      y: currentHeight,\n      view,\n      percent,\n      widthPercent: fractionWidth * 100 | 0\n    });\n  }\n\n  const first = visible[0],\n        last = visible[visible.length - 1];\n\n  if (sortByVisibility) {\n    visible.sort(function (a, b) {\n      const pc = a.percent - b.percent;\n\n      if (Math.abs(pc) > 0.001) {\n        return -pc;\n      }\n\n      return a.id - b.id;\n    });\n  }\n\n  return {\n    first,\n    last,\n    views: visible\n  };\n}\n\nfunction noContextMenuHandler(evt) {\n  evt.preventDefault();\n}\n\nfunction isDataSchema(url) {\n  let i = 0;\n  const ii = url.length;\n\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction getPDFFileNameFromURL(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n\n  if (isDataSchema(url)) {\n    console.warn(\"getPDFFileNameFromURL: \" + 'ignoring \"data:\" URL for performance reasons.');\n    return defaultFilename;\n  }\n\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n\n    if (suggestedFilename.includes(\"%\")) {\n      try {\n        suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n      } catch (ex) {}\n    }\n  }\n\n  return suggestedFilename || defaultFilename;\n}\n\nfunction normalizeWheelEventDirection(evt) {\n  let delta = Math.sqrt(evt.deltaX * evt.deltaX + evt.deltaY * evt.deltaY);\n  const angle = Math.atan2(evt.deltaY, evt.deltaX);\n\n  if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\n    delta = -delta;\n  }\n\n  return delta;\n}\n\nfunction normalizeWheelEventDelta(evt) {\n  let delta = normalizeWheelEventDirection(evt);\n  const MOUSE_DOM_DELTA_PIXEL_MODE = 0;\n  const MOUSE_DOM_DELTA_LINE_MODE = 1;\n  const MOUSE_PIXELS_PER_LINE = 30;\n  const MOUSE_LINES_PER_PAGE = 30;\n\n  if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) {\n    delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\n  } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) {\n    delta /= MOUSE_LINES_PER_PAGE;\n  }\n\n  return delta;\n}\n\nfunction isValidRotation(angle) {\n  return Number.isInteger(angle) && angle % 90 === 0;\n}\n\nfunction isValidScrollMode(mode) {\n  return Number.isInteger(mode) && Object.values(ScrollMode).includes(mode) && mode !== ScrollMode.UNKNOWN;\n}\n\nfunction isValidSpreadMode(mode) {\n  return Number.isInteger(mode) && Object.values(SpreadMode).includes(mode) && mode !== SpreadMode.UNKNOWN;\n}\n\nfunction isPortraitOrientation(size) {\n  return size.width <= size.height;\n}\n\nconst WaitOnType = {\n  EVENT: \"event\",\n  TIMEOUT: \"timeout\"\n};\nexports.WaitOnType = WaitOnType;\n\nfunction waitOnEventOrTimeout({\n  target,\n  name,\n  delay = 0\n}) {\n  return new Promise(function (resolve, reject) {\n    if (typeof target !== \"object\" || !(name && typeof name === \"string\") || !(Number.isInteger(delay) && delay >= 0)) {\n      throw new Error(\"waitOnEventOrTimeout - invalid parameters.\");\n    }\n\n    function handler(type) {\n      if (target instanceof EventBus) {\n        target._off(name, eventHandler);\n      } else {\n        target.removeEventListener(name, eventHandler);\n      }\n\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n\n      resolve(type);\n    }\n\n    const eventHandler = handler.bind(null, WaitOnType.EVENT);\n\n    if (target instanceof EventBus) {\n      target._on(name, eventHandler);\n    } else {\n      target.addEventListener(name, eventHandler);\n    }\n\n    const timeoutHandler = handler.bind(null, WaitOnType.TIMEOUT);\n    const timeout = setTimeout(timeoutHandler, delay);\n  });\n}\n\nconst animationStarted = new Promise(function (resolve) {\n  window.requestAnimationFrame(resolve);\n});\nexports.animationStarted = animationStarted;\n\nfunction dispatchDOMEvent(eventName, args = null) {\n  throw new Error(\"Not implemented: dispatchDOMEvent\");\n}\n\nclass EventBus {\n  constructor(options) {\n    this._listeners = Object.create(null);\n  }\n\n  on(eventName, listener, options = null) {\n    this._on(eventName, listener, {\n      external: true,\n      once: options && options.once //?.\n    });\n  }\n\n  off(eventName, listener, options = null) {\n    this._off(eventName, listener, {\n      external: true,\n      once: options && options.once //?.\n    });\n  }\n\n  dispatch(eventName) {\n    const eventListeners = this._listeners[eventName];\n\n    if (!eventListeners || eventListeners.length === 0) {\n      return;\n    }\n\n    const args = Array.prototype.slice.call(arguments, 1);\n    let externalListeners;\n    eventListeners.slice(0).forEach(({\n      listener,\n      external,\n      once\n    }) => {\n      if (once) {\n        this._off(eventName, listener);\n      }\n\n      if (external) {\n        (externalListeners || (externalListeners = [])).push(listener);\n        return;\n      }\n\n      listener.apply(null, args);\n    });\n\n    if (externalListeners) {\n      externalListeners.forEach(listener => {\n        listener.apply(null, args);\n      });\n      externalListeners = null;\n    }\n  }\n\n  _on(eventName, listener, options = null) {\n    var _this$_listeners;\n\n    const eventListeners = (_this$_listeners = this._listeners)[eventName] || (_this$_listeners[eventName] = []);\n    eventListeners.push({\n      listener,\n      external: options && options.external === true, //?.\n      once: options && options.once === true //?.\n    });\n  }\n\n  _off(eventName, listener, options = null) {\n    const eventListeners = this._listeners[eventName];\n\n    if (!eventListeners) {\n      return;\n    }\n\n    for (let i = 0, ii = eventListeners.length; i < ii; i++) {\n      if (eventListeners[i].listener === listener) {\n        eventListeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n}\n\nexports.EventBus = EventBus;\n\nfunction clamp(v, min, max) {\n  return Math.min(Math.max(v, min), max);\n}\n\nclass ProgressBar {\n  constructor(id, {\n    height,\n    width,\n    units\n  } = {}) {\n    this.visible = true;\n    this.div = document.querySelector(id + \" .progress\");\n    this.bar = this.div.parentNode;\n    this.height = height || 100;\n    this.width = width || 100;\n    this.units = units || \"%\";\n    this.div.style.height = this.height + this.units;\n    this.percent = 0;\n  }\n\n  _updateBar() {\n    if (this._indeterminate) {\n      this.div.classList.add(\"indeterminate\");\n      this.div.style.width = this.width + this.units;\n      return;\n    }\n\n    this.div.classList.remove(\"indeterminate\");\n    const progressSize = this.width * this._percent / 100;\n    this.div.style.width = progressSize + this.units;\n  }\n\n  get percent() {\n    return this._percent;\n  }\n\n  set percent(val) {\n    this._indeterminate = isNaN(val);\n    this._percent = clamp(val, 0, 100);\n\n    this._updateBar();\n  }\n\n  setWidth(viewer) {\n    if (!viewer) {\n      return;\n    }\n\n    const container = viewer.parentNode;\n    const scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n\n    if (scrollbarWidth > 0) {\n      const doc = document.documentElement;\n      doc.style.setProperty(LOADINGBAR_END_OFFSET_VAR, `${scrollbarWidth}px`);\n    }\n  }\n\n  hide() {\n    if (!this.visible) {\n      return;\n    }\n\n    this.visible = false;\n    this.bar.classList.add(\"hidden\");\n  }\n\n  show() {\n    if (this.visible) {\n      return;\n    }\n\n    this.visible = true;\n    this.bar.classList.remove(\"hidden\");\n  }\n\n}\n\nexports.ProgressBar = ProgressBar;\n\nfunction moveToEndOfArray(arr, condition) {\n  const moved = [],\n        len = arr.length;\n  let write = 0;\n\n  for (let read = 0; read < len; ++read) {\n    if (condition(arr[read])) {\n      moved.push(arr[read]);\n    } else {\n      arr[write] = arr[read];\n      ++write;\n    }\n  }\n\n  for (let read = 0; write < len; ++read, ++write) {\n    arr[write] = moved[read];\n  }\n}\n\nfunction getActiveOrFocusedElement() {\n  let curRoot = document;\n  let curActiveOrFocused = curRoot.activeElement || curRoot.querySelector(\":focus\");\n\n  while (curActiveOrFocused && curActiveOrFocused.shadowRoot) {\n    curRoot = curActiveOrFocused.shadowRoot;\n    curActiveOrFocused = curRoot.activeElement || curRoot.querySelector(\":focus\");\n  }\n\n  return curActiveOrFocused;\n}\n\n/***/ }),\n/* 5 */\n/***/ ((module) => {\n\n\nmodule.exports = pdfjsLib;\n\n/***/ }),\n/* 6 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFCursorTools = exports.CursorTool = void 0;\n\nvar _grab_to_pan = __webpack_require__(7);\n\nvar _ui_utils = __webpack_require__(4);\n\nconst CursorTool = {\n  SELECT: 0,\n  HAND: 1,\n  ZOOM: 2\n};\nexports.CursorTool = CursorTool;\n\nclass PDFCursorTools {\n  constructor({\n    container,\n    eventBus,\n    cursorToolOnLoad = CursorTool.SELECT\n  }) {\n    this.container = container;\n    this.eventBus = eventBus;\n    this.active = CursorTool.SELECT;\n    this.activeBeforePresentationMode = null;\n    this.handTool = new _grab_to_pan.GrabToPan({\n      element: this.container\n    });\n\n    this._addEventListeners();\n\n    Promise.resolve().then(() => {\n      this.switchTool(cursorToolOnLoad);\n    });\n  }\n\n  get activeTool() {\n    return this.active;\n  }\n\n  switchTool(tool) {\n    if (this.activeBeforePresentationMode !== null) {\n      return;\n    }\n\n    if (tool === this.active) {\n      return;\n    }\n\n    const disableActiveTool = () => {\n      switch (this.active) {\n        case CursorTool.SELECT:\n          break;\n\n        case CursorTool.HAND:\n          this.handTool.deactivate();\n          break;\n\n        case CursorTool.ZOOM:\n      }\n    };\n\n    switch (tool) {\n      case CursorTool.SELECT:\n        disableActiveTool();\n        break;\n\n      case CursorTool.HAND:\n        disableActiveTool();\n        this.handTool.activate();\n        break;\n\n      case CursorTool.ZOOM:\n      default:\n        console.error(`switchTool: \"${tool}\" is an unsupported value.`);\n        return;\n    }\n\n    this.active = tool;\n\n    this._dispatchEvent();\n  }\n\n  _dispatchEvent() {\n    this.eventBus.dispatch(\"cursortoolchanged\", {\n      source: this,\n      tool: this.active\n    });\n  }\n\n  _addEventListeners() {\n    this.eventBus._on(\"switchcursortool\", evt => {\n      this.switchTool(evt.tool);\n    });\n\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      switch (evt.state) {\n        case _ui_utils.PresentationModeState.CHANGING:\n          break;\n\n        case _ui_utils.PresentationModeState.FULLSCREEN:\n          {\n            const previouslyActive = this.active;\n            this.switchTool(CursorTool.SELECT);\n            this.activeBeforePresentationMode = previouslyActive;\n            break;\n          }\n\n        case _ui_utils.PresentationModeState.NORMAL:\n          {\n            const previouslyActive = this.activeBeforePresentationMode;\n            this.activeBeforePresentationMode = null;\n            this.switchTool(previouslyActive);\n            break;\n          }\n      }\n    });\n  }\n\n}\n\nexports.PDFCursorTools = PDFCursorTools;\n\n/***/ }),\n/* 7 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.GrabToPan = GrabToPan;\n\nfunction GrabToPan(options) {\n  this.element = options.element;\n  this.document = options.element.ownerDocument;\n\n  if (typeof options.ignoreTarget === \"function\") {\n    this.ignoreTarget = options.ignoreTarget;\n  }\n\n  this.onActiveChanged = options.onActiveChanged;\n  this.activate = this.activate.bind(this);\n  this.deactivate = this.deactivate.bind(this);\n  this.toggle = this.toggle.bind(this);\n  this._onmousedown = this._onmousedown.bind(this);\n  this._onmousemove = this._onmousemove.bind(this);\n  this._endPan = this._endPan.bind(this);\n  const overlay = this.overlay = document.createElement(\"div\");\n  overlay.className = \"grab-to-pan-grabbing\";\n}\n\nGrabToPan.prototype = {\n  CSS_CLASS_GRAB: \"grab-to-pan-grab\",\n  activate: function GrabToPan_activate() {\n    if (!this.active) {\n      this.active = true;\n      this.element.addEventListener(\"mousedown\", this._onmousedown, true);\n      this.element.classList.add(this.CSS_CLASS_GRAB);\n\n      if (this.onActiveChanged) {\n        this.onActiveChanged(true);\n      }\n    }\n  },\n  deactivate: function GrabToPan_deactivate() {\n    if (this.active) {\n      this.active = false;\n      this.element.removeEventListener(\"mousedown\", this._onmousedown, true);\n\n      this._endPan();\n\n      this.element.classList.remove(this.CSS_CLASS_GRAB);\n\n      if (this.onActiveChanged) {\n        this.onActiveChanged(false);\n      }\n    }\n  },\n  toggle: function GrabToPan_toggle() {\n    if (this.active) {\n      this.deactivate();\n    } else {\n      this.activate();\n    }\n  },\n  ignoreTarget: function GrabToPan_ignoreTarget(node) {\n    return node[matchesSelector](\"a[href], a[href] *, input, textarea, button, button *, select, option\");\n  },\n  _onmousedown: function GrabToPan__onmousedown(event) {\n    if (event.button !== 0 || this.ignoreTarget(event.target)) {\n      return;\n    }\n\n    if (event.originalTarget) {\n      try {\n        event.originalTarget.tagName;\n      } catch (e) {\n        return;\n      }\n    }\n\n    this.scrollLeftStart = this.element.scrollLeft;\n    this.scrollTopStart = this.element.scrollTop;\n    this.clientXStart = event.clientX;\n    this.clientYStart = event.clientY;\n    this.document.addEventListener(\"mousemove\", this._onmousemove, true);\n    this.document.addEventListener(\"mouseup\", this._endPan, true);\n    this.element.addEventListener(\"scroll\", this._endPan, true);\n    event.preventDefault();\n    event.stopPropagation();\n    const focusedElement = document.activeElement;\n\n    if (focusedElement && !focusedElement.contains(event.target)) {\n      focusedElement.blur();\n    }\n  },\n  _onmousemove: function GrabToPan__onmousemove(event) {\n    this.element.removeEventListener(\"scroll\", this._endPan, true);\n\n    if (isLeftMouseReleased(event)) {\n      this._endPan();\n\n      return;\n    }\n\n    const xDiff = event.clientX - this.clientXStart;\n    const yDiff = event.clientY - this.clientYStart;\n    const scrollTop = this.scrollTopStart - yDiff;\n    const scrollLeft = this.scrollLeftStart - xDiff;\n\n    if (this.element.scrollTo) {\n      this.element.scrollTo({\n        top: scrollTop,\n        left: scrollLeft,\n        behavior: \"instant\"\n      });\n    } else {\n      this.element.scrollTop = scrollTop;\n      this.element.scrollLeft = scrollLeft;\n    }\n\n    if (!this.overlay.parentNode) {\n      document.body.appendChild(this.overlay);\n    }\n  },\n  _endPan: function GrabToPan__endPan() {\n    this.element.removeEventListener(\"scroll\", this._endPan, true);\n    this.document.removeEventListener(\"mousemove\", this._onmousemove, true);\n    this.document.removeEventListener(\"mouseup\", this._endPan, true);\n    this.overlay.remove();\n  }\n};\nlet matchesSelector;\n[\"webkitM\", \"mozM\", \"m\"].some(function (prefix) {\n  let name = prefix + \"atches\";\n\n  if (name in document.documentElement) {\n    matchesSelector = name;\n  }\n\n  name += \"Selector\";\n\n  if (name in document.documentElement) {\n    matchesSelector = name;\n  }\n\n  return matchesSelector;\n});\nconst isNotIEorIsIE10plus = !document.documentMode || document.documentMode > 9;\nconst chrome = window.chrome;\nconst isChrome15OrOpera15plus = chrome && (chrome.webstore || chrome.app);\nconst isSafari6plus = /Apple/.test(navigator.vendor) && /Version\\/([6-9]\\d*|[1-5]\\d+)/.test(navigator.userAgent);\n\nfunction isLeftMouseReleased(event) {\n  if (\"buttons\" in event && isNotIEorIsIE10plus) {\n    return !(event.buttons & 1);\n  }\n\n  if (isChrome15OrOpera15plus || isSafari6plus) {\n    return event.which === 0;\n  }\n\n  return false;\n}\n\n/***/ }),\n/* 8 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.RenderingStates = exports.PDFRenderingQueue = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nconst CLEANUP_TIMEOUT = 30000;\nconst RenderingStates = {\n  INITIAL: 0,\n  RUNNING: 1,\n  PAUSED: 2,\n  FINISHED: 3\n};\nexports.RenderingStates = RenderingStates;\n\nclass PDFRenderingQueue {\n  constructor() {\n    this.pdfViewer = null;\n    this.pdfThumbnailViewer = null;\n    this.onIdle = null;\n    this.highestPriorityPage = null;\n    this.idleTimeout = null;\n    this.printing = false;\n    this.isThumbnailViewEnabled = false;\n  }\n\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  setThumbnailViewer(pdfThumbnailViewer) {\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n  }\n\n  isHighestPriority(view) {\n    return this.highestPriorityPage === view.renderingId;\n  }\n\n  renderHighestPriority(currentlyVisiblePages) {\n    if (this.idleTimeout) {\n      clearTimeout(this.idleTimeout);\n      this.idleTimeout = null;\n    }\n\n    if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n      return;\n    }\n\n    if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n      if (this.pdfThumbnailViewer.forceRendering()) {\n        return;\n      }\n    }\n\n    if (this.printing) {\n      return;\n    }\n\n    if (this.onIdle) {\n      this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\n    }\n  }\n\n  getHighestPriority(visible, views, scrolledDown) {\n    const visibleViews = visible.views;\n    const numVisible = visibleViews.length;\n\n    if (numVisible === 0) {\n      return null;\n    }\n\n    for (let i = 0; i < numVisible; ++i) {\n      const view = visibleViews[i].view;\n\n      if (!this.isViewFinished(view)) {\n        return view;\n      }\n    }\n\n    if (scrolledDown) {\n      const nextPageIndex = visible.last.id;\n\n      if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n        return views[nextPageIndex];\n      }\n    } else {\n      const previousPageIndex = visible.first.id - 2;\n\n      if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\n        return views[previousPageIndex];\n      }\n    }\n\n    return null;\n  }\n\n  isViewFinished(view) {\n    return view.renderingState === RenderingStates.FINISHED;\n  }\n\n  renderView(view) {\n    switch (view.renderingState) {\n      case RenderingStates.FINISHED:\n        return false;\n\n      case RenderingStates.PAUSED:\n        this.highestPriorityPage = view.renderingId;\n        view.resume();\n        break;\n\n      case RenderingStates.RUNNING:\n        this.highestPriorityPage = view.renderingId;\n        break;\n\n      case RenderingStates.INITIAL:\n        this.highestPriorityPage = view.renderingId;\n        view.draw().finally(() => {\n          this.renderHighestPriority();\n        }).catch(reason => {\n          if (reason instanceof _pdfjsLib.RenderingCancelledException) {\n            return;\n          }\n\n          console.error(`renderView: \"${reason}\"`);\n        });\n        break;\n    }\n\n    return true;\n  }\n\n}\n\nexports.PDFRenderingQueue = PDFRenderingQueue;\n\n/***/ }),\n/* 9 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.OverlayManager = void 0;\n\nclass OverlayManager {\n  constructor() {\n    this._overlays = {};\n    this._active = null;\n    this._keyDownBound = this._keyDown.bind(this);\n  }\n\n  get active() {\n    return this._active;\n  }\n\n  async register(name, element, callerCloseMethod = null, canForceClose = false) {\n    let container;\n\n    if (!name || !element || !(container = element.parentNode)) {\n      throw new Error(\"Not enough parameters.\");\n    } else if (this._overlays[name]) {\n      throw new Error(\"The overlay is already registered.\");\n    }\n\n    this._overlays[name] = {\n      element,\n      container,\n      callerCloseMethod,\n      canForceClose\n    };\n  }\n\n  async unregister(name) {\n    if (!this._overlays[name]) {\n      throw new Error(\"The overlay does not exist.\");\n    } else if (this._active === name) {\n      throw new Error(\"The overlay cannot be removed while it is active.\");\n    }\n\n    delete this._overlays[name];\n  }\n\n  async open(name) {\n    if (!this._overlays[name]) {\n      throw new Error(\"The overlay does not exist.\");\n    } else if (this._active) {\n      if (this._overlays[name].canForceClose) {\n        this._closeThroughCaller();\n      } else if (this._active === name) {\n        throw new Error(\"The overlay is already active.\");\n      } else {\n        throw new Error(\"Another overlay is currently active.\");\n      }\n    }\n\n    this._active = name;\n\n    this._overlays[this._active].element.classList.remove(\"hidden\");\n\n    this._overlays[this._active].container.classList.remove(\"hidden\");\n\n    window.addEventListener(\"keydown\", this._keyDownBound);\n  }\n\n  async close(name) {\n    if (!this._overlays[name]) {\n      throw new Error(\"The overlay does not exist.\");\n    } else if (!this._active) {\n      throw new Error(\"The overlay is currently not active.\");\n    } else if (this._active !== name) {\n      throw new Error(\"Another overlay is currently active.\");\n    }\n\n    this._overlays[this._active].container.classList.add(\"hidden\");\n\n    this._overlays[this._active].element.classList.add(\"hidden\");\n\n    this._active = null;\n    window.removeEventListener(\"keydown\", this._keyDownBound);\n  }\n\n  _keyDown(evt) {\n    if (this._active && evt.keyCode === 27) {\n      this._closeThroughCaller();\n\n      evt.preventDefault();\n    }\n  }\n\n  _closeThroughCaller() {\n    if (this._overlays[this._active].callerCloseMethod) {\n      this._overlays[this._active].callerCloseMethod();\n    }\n\n    if (this._active) {\n      this.close(this._active);\n    }\n  }\n\n}\n\nexports.OverlayManager = OverlayManager;\n\n/***/ }),\n/* 10 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PasswordPrompt = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdfjsLib = __webpack_require__(5);\n\nclass PasswordPrompt {\n  constructor(options, overlayManager, l10n = _ui_utils.NullL10n) {\n    this.overlayName = options.overlayName;\n    this.container = options.container;\n    this.label = options.label;\n    this.input = options.input;\n    this.submitButton = options.submitButton;\n    this.cancelButton = options.cancelButton;\n    this.overlayManager = overlayManager;\n    this.l10n = l10n;\n    this.updateCallback = null;\n    this.reason = null;\n    this.submitButton.addEventListener(\"click\", this.verify.bind(this));\n    this.cancelButton.addEventListener(\"click\", this.close.bind(this));\n    this.input.addEventListener(\"keydown\", e => {\n      if (e.keyCode === 13) {\n        this.verify();\n      }\n    });\n    this.overlayManager.register(this.overlayName, this.container, this.close.bind(this), true);\n  }\n\n  open() {\n    this.overlayManager.open(this.overlayName).then(() => {\n      this.input.focus();\n      let promptString;\n\n      if (this.reason === _pdfjsLib.PasswordResponses.INCORRECT_PASSWORD) {\n        promptString = this.l10n.get(\"password_invalid\", null, \"Invalid password. Please try again.\");\n      } else {\n        promptString = this.l10n.get(\"password_label\", null, \"Enter the password to open this PDF file.\");\n      }\n\n      promptString.then(msg => {\n        this.label.textContent = msg;\n      });\n    });\n  }\n\n  close() {\n    this.overlayManager.close(this.overlayName).then(() => {\n      this.input.value = \"\";\n    });\n  }\n\n  verify() {\n    const password = this.input.value;\n\n    if (password && password.length > 0) {\n      this.close();\n      this.updateCallback(password);\n    }\n  }\n\n  setUpdateCallback(updateCallback, reason) {\n    this.updateCallback = updateCallback;\n    this.reason = reason;\n  }\n\n}\n\nexports.PasswordPrompt = PasswordPrompt;\n\n/***/ }),\n/* 11 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFAttachmentViewer = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _base_tree_viewer = __webpack_require__(12);\n\nvar _viewer_compatibility = __webpack_require__(2);\n\nconst PdfFileRegExp = /\\.pdf$/i;\n\nclass PDFAttachmentViewer extends _base_tree_viewer.BaseTreeViewer {\n  constructor(options) {\n    super(options);\n    this.downloadManager = options.downloadManager;\n\n    this.eventBus._on(\"fileattachmentannotation\", this._appendAttachment.bind(this));\n  }\n\n  reset(keepRenderedCapability = false) {\n    super.reset();\n    this._attachments = null;\n\n    if (!keepRenderedCapability) {\n      this._renderedCapability = (0, _pdfjsLib.createPromiseCapability)();\n    }\n\n    if (this._pendingDispatchEvent) {\n      clearTimeout(this._pendingDispatchEvent);\n    }\n\n    this._pendingDispatchEvent = null;\n  }\n\n  _dispatchEvent(attachmentsCount) {\n    this._renderedCapability.resolve();\n\n    if (this._pendingDispatchEvent) {\n      clearTimeout(this._pendingDispatchEvent);\n      this._pendingDispatchEvent = null;\n    }\n\n    if (attachmentsCount === 0) {\n      this._pendingDispatchEvent = setTimeout(() => {\n        this.eventBus.dispatch(\"attachmentsloaded\", {\n          source: this,\n          attachmentsCount: 0\n        });\n        this._pendingDispatchEvent = null;\n      });\n      return;\n    }\n\n    this.eventBus.dispatch(\"attachmentsloaded\", {\n      source: this,\n      attachmentsCount\n    });\n  }\n\n  _bindPdfLink(element, {\n    content,\n    filename\n  }) {\n    let blobUrl;\n\n    element.onclick = () => {\n      if (!blobUrl) {\n        blobUrl = URL.createObjectURL(new Blob([content], {\n          type: \"application/pdf\"\n        }));\n      }\n\n      let viewerUrl;\n      viewerUrl = \"?file=\" + encodeURIComponent(blobUrl + \"#\" + filename);\n\n      try {\n        window.open(viewerUrl);\n      } catch (ex) {\n        console.error(`_bindPdfLink: ${ex}`);\n        URL.revokeObjectURL(blobUrl);\n        blobUrl = null;\n        this.downloadManager.downloadData(content, filename, \"application/pdf\");\n      }\n\n      return false;\n    };\n  }\n\n  _bindLink(element, {\n    content,\n    filename\n  }) {\n    element.onclick = () => {\n      const contentType = PdfFileRegExp.test(filename) ? \"application/pdf\" : \"\";\n      this.downloadManager.downloadData(content, filename, contentType);\n      return false;\n    };\n  }\n\n  render({\n    attachments,\n    keepRenderedCapability = false\n  }) {\n    if (this._attachments) {\n      this.reset(keepRenderedCapability);\n    }\n\n    this._attachments = attachments || null;\n\n    if (!attachments) {\n      this._dispatchEvent(0);\n\n      return;\n    }\n\n    const names = Object.keys(attachments).sort(function (a, b) {\n      return a.toLowerCase().localeCompare(b.toLowerCase());\n    });\n    const fragment = document.createDocumentFragment();\n    let attachmentsCount = 0;\n\n    for (const name of names) {\n      const item = attachments[name];\n      const filename = (0, _pdfjsLib.getFilenameFromUrl)(item.filename);\n      const div = document.createElement(\"div\");\n      div.className = \"treeItem\";\n      const element = document.createElement(\"a\");\n\n      if (PdfFileRegExp.test(filename) && !_viewer_compatibility.viewerCompatibilityParams.disableCreateObjectURL) {\n        this._bindPdfLink(element, {\n          content: item.content,\n          filename\n        });\n      } else {\n        this._bindLink(element, {\n          content: item.content,\n          filename\n        });\n      }\n\n      element.textContent = this._normalizeTextContent(filename);\n      div.appendChild(element);\n      fragment.appendChild(div);\n      attachmentsCount++;\n    }\n\n    this._finishRendering(fragment, attachmentsCount);\n  }\n\n  _appendAttachment({\n    id,\n    filename,\n    content\n  }) {\n    const renderedPromise = this._renderedCapability.promise;\n    renderedPromise.then(() => {\n      if (renderedPromise !== this._renderedCapability.promise) {\n        return;\n      }\n\n      let attachments = this._attachments;\n\n      if (!attachments) {\n        attachments = Object.create(null);\n      } else {\n        for (const name in attachments) {\n          if (id === name) {\n            return;\n          }\n        }\n      }\n\n      attachments[id] = {\n        filename,\n        content\n      };\n      this.render({\n        attachments,\n        keepRenderedCapability: true\n      });\n    });\n  }\n\n}\n\nexports.PDFAttachmentViewer = PDFAttachmentViewer;\n\n/***/ }),\n/* 12 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.BaseTreeViewer = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nconst TREEITEM_OFFSET_TOP = -100;\nconst TREEITEM_SELECTED_CLASS = \"selected\";\n\nclass BaseTreeViewer {\n  constructor(options) {\n    if (this.constructor === BaseTreeViewer) {\n      throw new Error(\"Cannot initialize BaseTreeViewer.\");\n    }\n\n    this.container = options.container;\n    this.eventBus = options.eventBus;\n    this.reset();\n  }\n\n  reset() {\n    this._pdfDocument = null;\n    this._lastToggleIsShow = true;\n    this._currentTreeItem = null;\n    this.container.textContent = \"\";\n    this.container.classList.remove(\"treeWithDeepNesting\");\n  }\n\n  _dispatchEvent(count) {\n    throw new Error(\"Not implemented: _dispatchEvent\");\n  }\n\n  _bindLink(element, params) {\n    throw new Error(\"Not implemented: _bindLink\");\n  }\n\n  _normalizeTextContent(str) {\n    return (0, _pdfjsLib.removeNullCharacters)(str) || \"\\u2013\";\n  }\n\n  _addToggleButton(div, hidden = false) {\n    const toggler = document.createElement(\"div\");\n    toggler.className = \"treeItemToggler\";\n\n    if (hidden) {\n      toggler.classList.add(\"treeItemsHidden\");\n    }\n\n    toggler.onclick = evt => {\n      evt.stopPropagation();\n      toggler.classList.toggle(\"treeItemsHidden\");\n\n      if (evt.shiftKey) {\n        const shouldShowAll = !toggler.classList.contains(\"treeItemsHidden\");\n\n        this._toggleTreeItem(div, shouldShowAll);\n      }\n    };\n\n    div.insertBefore(toggler, div.firstChild);\n  }\n\n  _toggleTreeItem(root, show = false) {\n    this._lastToggleIsShow = show;\n\n    for (const toggler of root.querySelectorAll(\".treeItemToggler\")) {\n      toggler.classList.toggle(\"treeItemsHidden\", !show);\n    }\n  }\n\n  _toggleAllTreeItems() {\n    this._toggleTreeItem(this.container, !this._lastToggleIsShow);\n  }\n\n  _finishRendering(fragment, count, hasAnyNesting = false) {\n    if (hasAnyNesting) {\n      this.container.classList.add(\"treeWithDeepNesting\");\n      this._lastToggleIsShow = !fragment.querySelector(\".treeItemsHidden\");\n    }\n\n    this.container.appendChild(fragment);\n\n    this._dispatchEvent(count);\n  }\n\n  render(params) {\n    throw new Error(\"Not implemented: render\");\n  }\n\n  _updateCurrentTreeItem(treeItem = null) {\n    if (this._currentTreeItem) {\n      this._currentTreeItem.classList.remove(TREEITEM_SELECTED_CLASS);\n\n      this._currentTreeItem = null;\n    }\n\n    if (treeItem) {\n      treeItem.classList.add(TREEITEM_SELECTED_CLASS);\n      this._currentTreeItem = treeItem;\n    }\n  }\n\n  _scrollToCurrentTreeItem(treeItem) {\n    if (!treeItem) {\n      return;\n    }\n\n    let currentNode = treeItem.parentNode;\n\n    while (currentNode && currentNode !== this.container) {\n      if (currentNode.classList.contains(\"treeItem\")) {\n        const toggler = currentNode.firstElementChild;\n        toggler && toggler.classList.remove(\"treeItemsHidden\"); //?.\n      }\n\n      currentNode = currentNode.parentNode;\n    }\n\n    this._updateCurrentTreeItem(treeItem);\n\n    this.container.scrollTo(treeItem.offsetLeft, treeItem.offsetTop + TREEITEM_OFFSET_TOP);\n  }\n\n}\n\nexports.BaseTreeViewer = BaseTreeViewer;\n\n/***/ }),\n/* 13 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFDocumentProperties = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _ui_utils = __webpack_require__(4);\n\nconst DEFAULT_FIELD_CONTENT = \"-\";\nconst NON_METRIC_LOCALES = [\"en-us\", \"en-lr\", \"my\"];\nconst US_PAGE_NAMES = {\n  \"8.5x11\": \"Letter\",\n  \"8.5x14\": \"Legal\"\n};\nconst METRIC_PAGE_NAMES = {\n  \"297x420\": \"A3\",\n  \"210x297\": \"A4\"\n};\n\nfunction getPageName(size, isPortrait, pageNames) {\n  const width = isPortrait ? size.width : size.height;\n  const height = isPortrait ? size.height : size.width;\n  return pageNames[`${width}x${height}`];\n}\n\nclass PDFDocumentProperties {\n  constructor({\n    overlayName,\n    fields,\n    container,\n    closeButton\n  }, overlayManager, eventBus, l10n = _ui_utils.NullL10n) {\n    this.overlayName = overlayName;\n    this.fields = fields;\n    this.container = container;\n    this.overlayManager = overlayManager;\n    this.l10n = l10n;\n\n    this._reset();\n\n    closeButton.addEventListener(\"click\", this.close.bind(this));\n    this.overlayManager.register(this.overlayName, this.container, this.close.bind(this));\n\n    eventBus._on(\"pagechanging\", evt => {\n      this._currentPageNumber = evt.pageNumber;\n    });\n\n    eventBus._on(\"rotationchanging\", evt => {\n      this._pagesRotation = evt.pagesRotation;\n    });\n\n    this._isNonMetricLocale = true;\n    l10n.getLanguage().then(locale => {\n      this._isNonMetricLocale = NON_METRIC_LOCALES.includes(locale);\n    });\n  }\n\n  async open() {\n    const freezeFieldData = data => {\n      Object.defineProperty(this, \"fieldData\", {\n        value: Object.freeze(data),\n        writable: false,\n        enumerable: true,\n        configurable: true\n      });\n    };\n\n    await Promise.all([this.overlayManager.open(this.overlayName), this._dataAvailableCapability.promise]);\n    const currentPageNumber = this._currentPageNumber;\n    const pagesRotation = this._pagesRotation;\n\n    if (this.fieldData && currentPageNumber === this.fieldData._currentPageNumber && pagesRotation === this.fieldData._pagesRotation) {\n      this._updateUI();\n\n      return;\n    }\n\n    const {\n      info,\n      contentDispositionFilename,\n      contentLength\n    } = await this.pdfDocument.getMetadata();\n    const [fileName, fileSize, creationDate, modificationDate, pageSize, isLinearized] = await Promise.all([contentDispositionFilename || (0, _ui_utils.getPDFFileNameFromURL)(this.url), this._parseFileSize(contentLength), this._parseDate(info.CreationDate), this._parseDate(info.ModDate), this.pdfDocument.getPage(currentPageNumber).then(pdfPage => {\n      return this._parsePageSize((0, _ui_utils.getPageSizeInches)(pdfPage), pagesRotation);\n    }), this._parseLinearization(info.IsLinearized)]);\n    freezeFieldData({\n      fileName,\n      fileSize,\n      title: info.Title,\n      author: info.Author,\n      subject: info.Subject,\n      keywords: info.Keywords,\n      creationDate,\n      modificationDate,\n      creator: info.Creator,\n      producer: info.Producer,\n      version: info.PDFFormatVersion,\n      pageCount: this.pdfDocument.numPages,\n      pageSize,\n      linearized: isLinearized,\n      _currentPageNumber: currentPageNumber,\n      _pagesRotation: pagesRotation\n    });\n\n    this._updateUI();\n\n    const {\n      length\n    } = await this.pdfDocument.getDownloadInfo();\n\n    if (contentLength === length) {\n      return;\n    }\n\n    const data = Object.assign(Object.create(null), this.fieldData);\n    data.fileSize = await this._parseFileSize(length);\n    freezeFieldData(data);\n\n    this._updateUI();\n  }\n\n  close() {\n    this.overlayManager.close(this.overlayName);\n  }\n\n  setDocument(pdfDocument, url = null) {\n    if (this.pdfDocument) {\n      this._reset();\n\n      this._updateUI(true);\n    }\n\n    if (!pdfDocument) {\n      return;\n    }\n\n    this.pdfDocument = pdfDocument;\n    this.url = url;\n\n    this._dataAvailableCapability.resolve();\n  }\n\n  _reset() {\n    this.pdfDocument = null;\n    this.url = null;\n    delete this.fieldData;\n    this._dataAvailableCapability = (0, _pdfjsLib.createPromiseCapability)();\n    this._currentPageNumber = 1;\n    this._pagesRotation = 0;\n  }\n\n  _updateUI(reset = false) {\n    if (reset || !this.fieldData) {\n      for (const id in this.fields) {\n        this.fields[id].textContent = DEFAULT_FIELD_CONTENT;\n      }\n\n      return;\n    }\n\n    if (this.overlayManager.active !== this.overlayName) {\n      return;\n    }\n\n    for (const id in this.fields) {\n      const content = this.fieldData[id];\n      this.fields[id].textContent = content || content === 0 ? content : DEFAULT_FIELD_CONTENT;\n    }\n  }\n\n  async _parseFileSize(fileSize = 0) {\n    const kb = fileSize / 1024;\n\n    if (!kb) {\n      return undefined;\n    } else if (kb < 1024) {\n      return this.l10n.get(\"document_properties_kb\", {\n        size_kb: (+kb.toPrecision(3)).toLocaleString(),\n        size_b: fileSize.toLocaleString()\n      }, \"{{size_kb}} KB ({{size_b}} bytes)\");\n    }\n\n    return this.l10n.get(\"document_properties_mb\", {\n      size_mb: (+(kb / 1024).toPrecision(3)).toLocaleString(),\n      size_b: fileSize.toLocaleString()\n    }, \"{{size_mb}} MB ({{size_b}} bytes)\");\n  }\n\n  async _parsePageSize(pageSizeInches, pagesRotation) {\n    if (!pageSizeInches) {\n      return undefined;\n    }\n\n    if (pagesRotation % 180 !== 0) {\n      pageSizeInches = {\n        width: pageSizeInches.height,\n        height: pageSizeInches.width\n      };\n    }\n\n    const isPortrait = (0, _ui_utils.isPortraitOrientation)(pageSizeInches);\n    let sizeInches = {\n      width: Math.round(pageSizeInches.width * 100) / 100,\n      height: Math.round(pageSizeInches.height * 100) / 100\n    };\n    let sizeMillimeters = {\n      width: Math.round(pageSizeInches.width * 25.4 * 10) / 10,\n      height: Math.round(pageSizeInches.height * 25.4 * 10) / 10\n    };\n    let pageName = null;\n    let rawName = getPageName(sizeInches, isPortrait, US_PAGE_NAMES) || getPageName(sizeMillimeters, isPortrait, METRIC_PAGE_NAMES);\n\n    if (!rawName && !(Number.isInteger(sizeMillimeters.width) && Number.isInteger(sizeMillimeters.height))) {\n      const exactMillimeters = {\n        width: pageSizeInches.width * 25.4,\n        height: pageSizeInches.height * 25.4\n      };\n      const intMillimeters = {\n        width: Math.round(sizeMillimeters.width),\n        height: Math.round(sizeMillimeters.height)\n      };\n\n      if (Math.abs(exactMillimeters.width - intMillimeters.width) < 0.1 && Math.abs(exactMillimeters.height - intMillimeters.height) < 0.1) {\n        rawName = getPageName(intMillimeters, isPortrait, METRIC_PAGE_NAMES);\n\n        if (rawName) {\n          sizeInches = {\n            width: Math.round(intMillimeters.width / 25.4 * 100) / 100,\n            height: Math.round(intMillimeters.height / 25.4 * 100) / 100\n          };\n          sizeMillimeters = intMillimeters;\n        }\n      }\n    }\n\n    if (rawName) {\n      pageName = this.l10n.get(\"document_properties_page_size_name_\" + rawName.toLowerCase(), null, rawName);\n    }\n\n    return Promise.all([this._isNonMetricLocale ? sizeInches : sizeMillimeters, this.l10n.get(\"document_properties_page_size_unit_\" + (this._isNonMetricLocale ? \"inches\" : \"millimeters\"), null, this._isNonMetricLocale ? \"in\" : \"mm\"), pageName, this.l10n.get(\"document_properties_page_size_orientation_\" + (isPortrait ? \"portrait\" : \"landscape\"), null, isPortrait ? \"portrait\" : \"landscape\")]).then(([{\n      width,\n      height\n    }, unit, name, orientation]) => {\n      return this.l10n.get(\"document_properties_page_size_dimension_\" + (name ? \"name_\" : \"\") + \"string\", {\n        width: width.toLocaleString(),\n        height: height.toLocaleString(),\n        unit,\n        name,\n        orientation\n      }, \"{{width}} × {{height}} {{unit}} (\" + (name ? \"{{name}}, \" : \"\") + \"{{orientation}})\");\n    });\n  }\n\n  async _parseDate(inputDate) {\n    const dateObject = _pdfjsLib.PDFDateString.toDateObject(inputDate);\n\n    if (!dateObject) {\n      return undefined;\n    }\n\n    return this.l10n.get(\"document_properties_date_string\", {\n      date: dateObject.toLocaleDateString(),\n      time: dateObject.toLocaleTimeString()\n    }, \"{{date}}, {{time}}\");\n  }\n\n  _parseLinearization(isLinearized) {\n    return this.l10n.get(\"document_properties_linearized_\" + (isLinearized ? \"yes\" : \"no\"), null, isLinearized ? \"Yes\" : \"No\");\n  }\n\n}\n\nexports.PDFDocumentProperties = PDFDocumentProperties;\n\n/***/ }),\n/* 14 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFFindBar = void 0;\n\nvar _pdf_find_controller = __webpack_require__(15);\n\nvar _ui_utils = __webpack_require__(4);\n\nconst MATCHES_COUNT_LIMIT = 1000;\n\nclass PDFFindBar {\n  constructor(options, eventBus, l10n = _ui_utils.NullL10n) {\n    this.opened = false;\n    this.bar = options.bar || null;\n    this.toggleButton = options.toggleButton || null;\n    this.findField = options.findField || null;\n    this.highlightAll = options.highlightAllCheckbox || null;\n    this.caseSensitive = options.caseSensitiveCheckbox || null;\n    this.entireWord = options.entireWordCheckbox || null;\n    this.findMsg = options.findMsg || null;\n    this.findResultsCount = options.findResultsCount || null;\n    this.findPreviousButton = options.findPreviousButton || null;\n    this.findNextButton = options.findNextButton || null;\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n    this.toggleButton.addEventListener(\"click\", () => {\n      this.toggle();\n    });\n    this.findField.addEventListener(\"input\", () => {\n      this.dispatchEvent(\"\");\n    });\n    this.bar.addEventListener(\"keydown\", e => {\n      switch (e.keyCode) {\n        case 13:\n          if (e.target === this.findField) {\n            this.dispatchEvent(\"again\", e.shiftKey);\n          }\n\n          break;\n\n        case 27:\n          this.close();\n          break;\n      }\n    });\n    this.findPreviousButton.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"again\", true);\n    });\n    this.findNextButton.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"again\", false);\n    });\n    this.highlightAll.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"highlightallchange\");\n    });\n    this.caseSensitive.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"casesensitivitychange\");\n    });\n    this.entireWord.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"entirewordchange\");\n    });\n\n    this.eventBus._on(\"resize\", this._adjustWidth.bind(this));\n  }\n\n  reset() {\n    this.updateUIState();\n  }\n\n  dispatchEvent(type, findPrev) {\n    this.eventBus.dispatch(\"find\", {\n      source: this,\n      type,\n      query: this.findField.value,\n      phraseSearch: true,\n      caseSensitive: this.caseSensitive.checked,\n      entireWord: this.entireWord.checked,\n      highlightAll: this.highlightAll.checked,\n      findPrevious: findPrev\n    });\n  }\n\n  updateUIState(state, previous, matchesCount) {\n    let findMsg = \"\";\n    let status = \"\";\n\n    switch (state) {\n      case _pdf_find_controller.FindState.FOUND:\n        break;\n\n      case _pdf_find_controller.FindState.PENDING:\n        status = \"pending\";\n        break;\n\n      case _pdf_find_controller.FindState.NOT_FOUND:\n        findMsg = this.l10n.get(\"find_not_found\", null, \"Phrase not found\");\n        status = \"notFound\";\n        break;\n\n      case _pdf_find_controller.FindState.WRAPPED:\n        if (previous) {\n          findMsg = this.l10n.get(\"find_reached_top\", null, \"Reached top of document, continued from bottom\");\n        } else {\n          findMsg = this.l10n.get(\"find_reached_bottom\", null, \"Reached end of document, continued from top\");\n        }\n\n        break;\n    }\n\n    this.findField.setAttribute(\"data-status\", status);\n    Promise.resolve(findMsg).then(msg => {\n      this.findMsg.textContent = msg;\n\n      this._adjustWidth();\n    });\n    this.updateResultsCount(matchesCount);\n  }\n\n  updateResultsCount({\n    current = 0,\n    total = 0\n  } = {}) {\n    if (!this.findResultsCount) {\n      return;\n    }\n\n    const limit = MATCHES_COUNT_LIMIT;\n    let matchesCountMsg = \"\";\n\n    if (total > 0) {\n      if (total > limit) {\n        matchesCountMsg = this.l10n.get(\"find_match_count_limit\", {\n          limit\n        }, \"More than {{limit}} match\" + (limit !== 1 ? \"es\" : \"\"));\n      } else {\n        matchesCountMsg = this.l10n.get(\"find_match_count\", {\n          current,\n          total\n        }, \"{{current}} of {{total}} match\" + (total !== 1 ? \"es\" : \"\"));\n      }\n    }\n\n    Promise.resolve(matchesCountMsg).then(msg => {\n      this.findResultsCount.textContent = msg;\n      this.findResultsCount.classList.toggle(\"hidden\", !total);\n\n      this._adjustWidth();\n    });\n  }\n\n  open() {\n    if (!this.opened) {\n      this.opened = true;\n      this.toggleButton.classList.add(\"toggled\");\n      this.bar.classList.remove(\"hidden\");\n    }\n\n    this.findField.select();\n    this.findField.focus();\n\n    this._adjustWidth();\n  }\n\n  close() {\n    if (!this.opened) {\n      return;\n    }\n\n    this.opened = false;\n    this.toggleButton.classList.remove(\"toggled\");\n    this.bar.classList.add(\"hidden\");\n    this.eventBus.dispatch(\"findbarclose\", {\n      source: this\n    });\n  }\n\n  toggle() {\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  _adjustWidth() {\n    if (!this.opened) {\n      return;\n    }\n\n    this.bar.classList.remove(\"wrapContainers\");\n    const findbarHeight = this.bar.clientHeight;\n    const inputContainerHeight = this.bar.firstElementChild.clientHeight;\n\n    if (findbarHeight > inputContainerHeight) {\n      this.bar.classList.add(\"wrapContainers\");\n    }\n  }\n\n}\n\nexports.PDFFindBar = PDFFindBar;\n\n/***/ }),\n/* 15 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFFindController = exports.FindState = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _pdf_find_utils = __webpack_require__(16);\n\nvar _ui_utils = __webpack_require__(4);\n\nconst FindState = {\n  FOUND: 0,\n  NOT_FOUND: 1,\n  WRAPPED: 2,\n  PENDING: 3\n};\nexports.FindState = FindState;\nconst FIND_TIMEOUT = 250;\nconst MATCH_SCROLL_OFFSET_TOP = -50;\nconst MATCH_SCROLL_OFFSET_LEFT = -400;\nconst CHARACTERS_TO_NORMALIZE = {\n  \"\\u2018\": \"'\",\n  \"\\u2019\": \"'\",\n  \"\\u201A\": \"'\",\n  \"\\u201B\": \"'\",\n  \"\\u201C\": '\"',\n  \"\\u201D\": '\"',\n  \"\\u201E\": '\"',\n  \"\\u201F\": '\"',\n  \"\\u00BC\": \"1/4\",\n  \"\\u00BD\": \"1/2\",\n  \"\\u00BE\": \"3/4\"\n};\nlet normalizationRegex = null;\n\nfunction normalize(text) {\n  if (!normalizationRegex) {\n    const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join(\"\");\n    normalizationRegex = new RegExp(`[${replace}]`, \"g\");\n  }\n\n  let diffs = null;\n  const normalizedText = text.replace(normalizationRegex, function (ch, index) {\n    const normalizedCh = CHARACTERS_TO_NORMALIZE[ch],\n          diff = normalizedCh.length - ch.length;\n\n    if (diff !== 0) {\n      (diffs || (diffs = [])).push([index, diff]);\n    }\n\n    return normalizedCh;\n  });\n  return [normalizedText, diffs];\n}\n\nfunction getOriginalIndex(matchIndex, diffs = null) {\n  if (!diffs) {\n    return matchIndex;\n  }\n\n  let totalDiff = 0;\n\n  for (const [index, diff] of diffs) {\n    const currentIndex = index + totalDiff;\n\n    if (currentIndex >= matchIndex) {\n      break;\n    }\n\n    if (currentIndex + diff > matchIndex) {\n      totalDiff += matchIndex - currentIndex;\n      break;\n    }\n\n    totalDiff += diff;\n  }\n\n  return matchIndex - totalDiff;\n}\n\nclass PDFFindController {\n  constructor({\n    linkService,\n    eventBus\n  }) {\n    this._linkService = linkService;\n    this._eventBus = eventBus;\n\n    this._reset();\n\n    eventBus._on(\"findbarclose\", this._onFindBarClose.bind(this));\n  }\n\n  get highlightMatches() {\n    return this._highlightMatches;\n  }\n\n  get pageMatches() {\n    return this._pageMatches;\n  }\n\n  get pageMatchesLength() {\n    return this._pageMatchesLength;\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  setDocument(pdfDocument) {\n    if (this._pdfDocument) {\n      this._reset();\n    }\n\n    if (!pdfDocument) {\n      return;\n    }\n\n    this._pdfDocument = pdfDocument;\n\n    this._firstPageCapability.resolve();\n  }\n\n  executeCommand(cmd, state) {\n    if (!state) {\n      return;\n    }\n\n    const pdfDocument = this._pdfDocument;\n\n    if (this._state === null || this._shouldDirtyMatch(cmd, state)) {\n      this._dirtyMatch = true;\n    }\n\n    this._state = state;\n\n    if (cmd !== \"findhighlightallchange\") {\n      this._updateUIState(FindState.PENDING);\n    }\n\n    this._firstPageCapability.promise.then(() => {\n      if (!this._pdfDocument || pdfDocument && this._pdfDocument !== pdfDocument) {\n        return;\n      }\n\n      this._extractText();\n\n      const findbarClosed = !this._highlightMatches;\n      const pendingTimeout = !!this._findTimeout;\n\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n\n      if (cmd === \"find\") {\n        this._findTimeout = setTimeout(() => {\n          this._nextMatch();\n\n          this._findTimeout = null;\n        }, FIND_TIMEOUT);\n      } else if (this._dirtyMatch) {\n        this._nextMatch();\n      } else if (cmd === \"findagain\") {\n        this._nextMatch();\n\n        if (findbarClosed && this._state.highlightAll) {\n          this._updateAllPages();\n        }\n      } else if (cmd === \"findhighlightallchange\") {\n        if (pendingTimeout) {\n          this._nextMatch();\n        } else {\n          this._highlightMatches = true;\n        }\n\n        this._updateAllPages();\n      } else {\n        this._nextMatch();\n      }\n    });\n  }\n\n  scrollMatchIntoView({\n    element = null,\n    pageIndex = -1,\n    matchIndex = -1\n  }) {\n    if (!this._scrollMatches || !element) {\n      return;\n    } else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) {\n      return;\n    } else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) {\n      return;\n    }\n\n    this._scrollMatches = false;\n    const spot = {\n      top: MATCH_SCROLL_OFFSET_TOP,\n      left: MATCH_SCROLL_OFFSET_LEFT\n    };\n    (0, _ui_utils.scrollIntoView)(element, spot, true);\n  }\n\n  _reset() {\n    this._highlightMatches = false;\n    this._scrollMatches = false;\n    this._pdfDocument = null;\n    this._pageMatches = [];\n    this._pageMatchesLength = [];\n    this._state = null;\n    this._selected = {\n      pageIdx: -1,\n      matchIdx: -1\n    };\n    this._offset = {\n      pageIdx: null,\n      matchIdx: null,\n      wrapped: false\n    };\n    this._extractTextPromises = [];\n    this._pageContents = [];\n    this._pageDiffs = [];\n    this._matchesCountTotal = 0;\n    this._pagesToSearch = null;\n    this._pendingFindMatches = Object.create(null);\n    this._resumePageIdx = null;\n    this._dirtyMatch = false;\n    clearTimeout(this._findTimeout);\n    this._findTimeout = null;\n    this._firstPageCapability = (0, _pdfjsLib.createPromiseCapability)();\n  }\n\n  get _query() {\n    if (this._state.query !== this._rawQuery) {\n      this._rawQuery = this._state.query;\n      [this._normalizedQuery] = normalize(this._state.query);\n    }\n\n    return this._normalizedQuery;\n  }\n\n  _shouldDirtyMatch(cmd, state) {\n    if (state.query !== this._state.query) {\n      return true;\n    }\n\n    switch (cmd) {\n      case \"findagain\":\n        const pageNumber = this._selected.pageIdx + 1;\n        const linkService = this._linkService;\n\n        if (pageNumber >= 1 && pageNumber <= linkService.pagesCount && pageNumber !== linkService.page && !linkService.isPageVisible(pageNumber)) {\n          return true;\n        }\n\n        return false;\n\n      case \"findhighlightallchange\":\n        return false;\n    }\n\n    return true;\n  }\n\n  _prepareMatches(matchesWithLength, matches, matchesLength) {\n    function isSubTerm(currentIndex) {\n      const currentElem = matchesWithLength[currentIndex];\n      const nextElem = matchesWithLength[currentIndex + 1];\n\n      if (currentIndex < matchesWithLength.length - 1 && currentElem.match === nextElem.match) {\n        currentElem.skipped = true;\n        return true;\n      }\n\n      for (let i = currentIndex - 1; i >= 0; i--) {\n        const prevElem = matchesWithLength[i];\n\n        if (prevElem.skipped) {\n          continue;\n        }\n\n        if (prevElem.match + prevElem.matchLength < currentElem.match) {\n          break;\n        }\n\n        if (prevElem.match + prevElem.matchLength >= currentElem.match + currentElem.matchLength) {\n          currentElem.skipped = true;\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    matchesWithLength.sort(function (a, b) {\n      return a.match === b.match ? a.matchLength - b.matchLength : a.match - b.match;\n    });\n\n    for (let i = 0, len = matchesWithLength.length; i < len; i++) {\n      if (isSubTerm(i)) {\n        continue;\n      }\n\n      matches.push(matchesWithLength[i].match);\n      matchesLength.push(matchesWithLength[i].matchLength);\n    }\n  }\n\n  _isEntireWord(content, startIdx, length) {\n    if (startIdx > 0) {\n      const first = content.charCodeAt(startIdx);\n      const limit = content.charCodeAt(startIdx - 1);\n\n      if ((0, _pdf_find_utils.getCharacterType)(first) === (0, _pdf_find_utils.getCharacterType)(limit)) {\n        return false;\n      }\n    }\n\n    const endIdx = startIdx + length - 1;\n\n    if (endIdx < content.length - 1) {\n      const last = content.charCodeAt(endIdx);\n      const limit = content.charCodeAt(endIdx + 1);\n\n      if ((0, _pdf_find_utils.getCharacterType)(last) === (0, _pdf_find_utils.getCharacterType)(limit)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  _calculatePhraseMatch(query, pageIndex, pageContent, pageDiffs, entireWord) {\n    const matches = [],\n          matchesLength = [];\n    const queryLen = query.length;\n    let matchIdx = -queryLen;\n\n    while (true) {\n      matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n\n      if (matchIdx === -1) {\n        break;\n      }\n\n      if (entireWord && !this._isEntireWord(pageContent, matchIdx, queryLen)) {\n        continue;\n      }\n\n      const originalMatchIdx = getOriginalIndex(matchIdx, pageDiffs),\n            matchEnd = matchIdx + queryLen - 1,\n            originalQueryLen = getOriginalIndex(matchEnd, pageDiffs) - originalMatchIdx + 1;\n      matches.push(originalMatchIdx);\n      matchesLength.push(originalQueryLen);\n    }\n\n    this._pageMatches[pageIndex] = matches;\n    this._pageMatchesLength[pageIndex] = matchesLength;\n  }\n\n  _calculateWordMatch(query, pageIndex, pageContent, pageDiffs, entireWord) {\n    const matchesWithLength = [];\n    const queryArray = query.match(/\\S+/g);\n\n    for (let i = 0, len = queryArray.length; i < len; i++) {\n      const subquery = queryArray[i];\n      const subqueryLen = subquery.length;\n      let matchIdx = -subqueryLen;\n\n      while (true) {\n        matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n\n        if (matchIdx === -1) {\n          break;\n        }\n\n        if (entireWord && !this._isEntireWord(pageContent, matchIdx, subqueryLen)) {\n          continue;\n        }\n\n        const originalMatchIdx = getOriginalIndex(matchIdx, pageDiffs),\n              matchEnd = matchIdx + subqueryLen - 1,\n              originalQueryLen = getOriginalIndex(matchEnd, pageDiffs) - originalMatchIdx + 1;\n        matchesWithLength.push({\n          match: originalMatchIdx,\n          matchLength: originalQueryLen,\n          skipped: false\n        });\n      }\n    }\n\n    this._pageMatchesLength[pageIndex] = [];\n    this._pageMatches[pageIndex] = [];\n\n    this._prepareMatches(matchesWithLength, this._pageMatches[pageIndex], this._pageMatchesLength[pageIndex]);\n  }\n\n  _calculateMatch(pageIndex) {\n    let pageContent = this._pageContents[pageIndex];\n    const pageDiffs = this._pageDiffs[pageIndex];\n    let query = this._query;\n    const {\n      caseSensitive,\n      entireWord,\n      phraseSearch\n    } = this._state;\n\n    if (query.length === 0) {\n      return;\n    }\n\n    if (!caseSensitive) {\n      pageContent = pageContent.toLowerCase();\n      query = query.toLowerCase();\n    }\n\n    if (phraseSearch) {\n      this._calculatePhraseMatch(query, pageIndex, pageContent, pageDiffs, entireWord);\n    } else {\n      this._calculateWordMatch(query, pageIndex, pageContent, pageDiffs, entireWord);\n    }\n\n    if (this._state.highlightAll) {\n      this._updatePage(pageIndex);\n    }\n\n    if (this._resumePageIdx === pageIndex) {\n      this._resumePageIdx = null;\n\n      this._nextPageMatch();\n    }\n\n    const pageMatchesCount = this._pageMatches[pageIndex].length;\n\n    if (pageMatchesCount > 0) {\n      this._matchesCountTotal += pageMatchesCount;\n\n      this._updateUIResultsCount();\n    }\n  }\n\n  _extractText() {\n    if (this._extractTextPromises.length > 0) {\n      return;\n    }\n\n    let promise = Promise.resolve();\n\n    for (let i = 0, ii = this._linkService.pagesCount; i < ii; i++) {\n      const extractTextCapability = (0, _pdfjsLib.createPromiseCapability)();\n      this._extractTextPromises[i] = extractTextCapability.promise;\n      promise = promise.then(() => {\n        return this._pdfDocument.getPage(i + 1).then(pdfPage => {\n          return pdfPage.getTextContent({\n            normalizeWhitespace: true\n          });\n        }).then(textContent => {\n          const textItems = textContent.items;\n          const strBuf = [];\n\n          for (let j = 0, jj = textItems.length; j < jj; j++) {\n            strBuf.push(textItems[j].str);\n          }\n\n          [this._pageContents[i], this._pageDiffs[i]] = normalize(strBuf.join(\"\"));\n          extractTextCapability.resolve(i);\n        }, reason => {\n          console.error(`Unable to get text content for page ${i + 1}`, reason);\n          this._pageContents[i] = \"\";\n          this._pageDiffs[i] = null;\n          extractTextCapability.resolve(i);\n        });\n      });\n    }\n  }\n\n  _updatePage(index) {\n    if (this._scrollMatches && this._selected.pageIdx === index) {\n      this._linkService.page = index + 1;\n    }\n\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: index\n    });\n  }\n\n  _updateAllPages() {\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: -1\n    });\n  }\n\n  _nextMatch() {\n    const previous = this._state.findPrevious;\n    const currentPageIndex = this._linkService.page - 1;\n    const numPages = this._linkService.pagesCount;\n    this._highlightMatches = true;\n\n    if (this._dirtyMatch) {\n      this._dirtyMatch = false;\n      this._selected.pageIdx = this._selected.matchIdx = -1;\n      this._offset.pageIdx = currentPageIndex;\n      this._offset.matchIdx = null;\n      this._offset.wrapped = false;\n      this._resumePageIdx = null;\n      this._pageMatches.length = 0;\n      this._pageMatchesLength.length = 0;\n      this._matchesCountTotal = 0;\n\n      this._updateAllPages();\n\n      for (let i = 0; i < numPages; i++) {\n        if (this._pendingFindMatches[i] === true) {\n          continue;\n        }\n\n        this._pendingFindMatches[i] = true;\n\n        this._extractTextPromises[i].then(pageIdx => {\n          delete this._pendingFindMatches[pageIdx];\n\n          this._calculateMatch(pageIdx);\n        });\n      }\n    }\n\n    if (this._query === \"\") {\n      this._updateUIState(FindState.FOUND);\n\n      return;\n    }\n\n    if (this._resumePageIdx) {\n      return;\n    }\n\n    const offset = this._offset;\n    this._pagesToSearch = numPages;\n\n    if (offset.matchIdx !== null) {\n      const numPageMatches = this._pageMatches[offset.pageIdx].length;\n\n      if (!previous && offset.matchIdx + 1 < numPageMatches || previous && offset.matchIdx > 0) {\n        offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n\n        this._updateMatch(true);\n\n        return;\n      }\n\n      this._advanceOffsetPage(previous);\n    }\n\n    this._nextPageMatch();\n  }\n\n  _matchesReady(matches) {\n    const offset = this._offset;\n    const numMatches = matches.length;\n    const previous = this._state.findPrevious;\n\n    if (numMatches) {\n      offset.matchIdx = previous ? numMatches - 1 : 0;\n\n      this._updateMatch(true);\n\n      return true;\n    }\n\n    this._advanceOffsetPage(previous);\n\n    if (offset.wrapped) {\n      offset.matchIdx = null;\n\n      if (this._pagesToSearch < 0) {\n        this._updateMatch(false);\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _nextPageMatch() {\n    if (this._resumePageIdx !== null) {\n      console.error(\"There can only be one pending page.\");\n    }\n\n    let matches = null;\n\n    do {\n      const pageIdx = this._offset.pageIdx;\n      matches = this._pageMatches[pageIdx];\n\n      if (!matches) {\n        this._resumePageIdx = pageIdx;\n        break;\n      }\n    } while (!this._matchesReady(matches));\n  }\n\n  _advanceOffsetPage(previous) {\n    const offset = this._offset;\n    const numPages = this._linkService.pagesCount;\n    offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n    offset.matchIdx = null;\n    this._pagesToSearch--;\n\n    if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n      offset.pageIdx = previous ? numPages - 1 : 0;\n      offset.wrapped = true;\n    }\n  }\n\n  _updateMatch(found = false) {\n    let state = FindState.NOT_FOUND;\n    const wrapped = this._offset.wrapped;\n    this._offset.wrapped = false;\n\n    if (found) {\n      const previousPage = this._selected.pageIdx;\n      this._selected.pageIdx = this._offset.pageIdx;\n      this._selected.matchIdx = this._offset.matchIdx;\n      state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n\n      if (previousPage !== -1 && previousPage !== this._selected.pageIdx) {\n        this._updatePage(previousPage);\n      }\n    }\n\n    this._updateUIState(state, this._state.findPrevious);\n\n    if (this._selected.pageIdx !== -1) {\n      this._scrollMatches = true;\n\n      this._updatePage(this._selected.pageIdx);\n    }\n  }\n\n  _onFindBarClose(evt) {\n    const pdfDocument = this._pdfDocument;\n\n    this._firstPageCapability.promise.then(() => {\n      if (!this._pdfDocument || pdfDocument && this._pdfDocument !== pdfDocument) {\n        return;\n      }\n\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n\n      if (this._resumePageIdx) {\n        this._resumePageIdx = null;\n        this._dirtyMatch = true;\n      }\n\n      this._updateUIState(FindState.FOUND);\n\n      this._highlightMatches = false;\n\n      this._updateAllPages();\n    });\n  }\n\n  _requestMatchesCount() {\n    const {\n      pageIdx,\n      matchIdx\n    } = this._selected;\n    let current = 0,\n        total = this._matchesCountTotal;\n\n    if (matchIdx !== -1) {\n      for (let i = 0; i < pageIdx; i++) {\n        current += this._pageMatches[i] && this._pageMatches[i].length || 0;\n      }\n\n      current += matchIdx + 1;\n    }\n\n    if (current < 1 || current > total) {\n      current = total = 0;\n    }\n\n    return {\n      current,\n      total\n    };\n  }\n\n  _updateUIResultsCount() {\n    this._eventBus.dispatch(\"updatefindmatchescount\", {\n      source: this,\n      matchesCount: this._requestMatchesCount()\n    });\n  }\n\n  _updateUIState(state, previous) {\n    this._eventBus.dispatch(\"updatefindcontrolstate\", {\n      source: this,\n      state,\n      previous,\n      matchesCount: this._requestMatchesCount(),\n      rawQuery: this._state ? this._state.query : null\n    });\n  }\n\n}\n\nexports.PDFFindController = PDFFindController;\n\n/***/ }),\n/* 16 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getCharacterType = getCharacterType;\nexports.CharacterType = void 0;\nconst CharacterType = {\n  SPACE: 0,\n  ALPHA_LETTER: 1,\n  PUNCT: 2,\n  HAN_LETTER: 3,\n  KATAKANA_LETTER: 4,\n  HIRAGANA_LETTER: 5,\n  HALFWIDTH_KATAKANA_LETTER: 6,\n  THAI_LETTER: 7\n};\nexports.CharacterType = CharacterType;\n\nfunction isAlphabeticalScript(charCode) {\n  return charCode < 0x2e80;\n}\n\nfunction isAscii(charCode) {\n  return (charCode & 0xff80) === 0;\n}\n\nfunction isAsciiAlpha(charCode) {\n  return charCode >= 0x61 && charCode <= 0x7a || charCode >= 0x41 && charCode <= 0x5a;\n}\n\nfunction isAsciiDigit(charCode) {\n  return charCode >= 0x30 && charCode <= 0x39;\n}\n\nfunction isAsciiSpace(charCode) {\n  return charCode === 0x20 || charCode === 0x09 || charCode === 0x0d || charCode === 0x0a;\n}\n\nfunction isHan(charCode) {\n  return charCode >= 0x3400 && charCode <= 0x9fff || charCode >= 0xf900 && charCode <= 0xfaff;\n}\n\nfunction isKatakana(charCode) {\n  return charCode >= 0x30a0 && charCode <= 0x30ff;\n}\n\nfunction isHiragana(charCode) {\n  return charCode >= 0x3040 && charCode <= 0x309f;\n}\n\nfunction isHalfwidthKatakana(charCode) {\n  return charCode >= 0xff60 && charCode <= 0xff9f;\n}\n\nfunction isThai(charCode) {\n  return (charCode & 0xff80) === 0x0e00;\n}\n\nfunction getCharacterType(charCode) {\n  if (isAlphabeticalScript(charCode)) {\n    if (isAscii(charCode)) {\n      if (isAsciiSpace(charCode)) {\n        return CharacterType.SPACE;\n      } else if (isAsciiAlpha(charCode) || isAsciiDigit(charCode) || charCode === 0x5f) {\n        return CharacterType.ALPHA_LETTER;\n      }\n\n      return CharacterType.PUNCT;\n    } else if (isThai(charCode)) {\n      return CharacterType.THAI_LETTER;\n    } else if (charCode === 0xa0) {\n      return CharacterType.SPACE;\n    }\n\n    return CharacterType.ALPHA_LETTER;\n  }\n\n  if (isHan(charCode)) {\n    return CharacterType.HAN_LETTER;\n  } else if (isKatakana(charCode)) {\n    return CharacterType.KATAKANA_LETTER;\n  } else if (isHiragana(charCode)) {\n    return CharacterType.HIRAGANA_LETTER;\n  } else if (isHalfwidthKatakana(charCode)) {\n    return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n  }\n\n  return CharacterType.ALPHA_LETTER;\n}\n\n/***/ }),\n/* 17 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.isDestArraysEqual = isDestArraysEqual;\nexports.isDestHashesEqual = isDestHashesEqual;\nexports.PDFHistory = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nconst HASH_CHANGE_TIMEOUT = 1000;\nconst POSITION_UPDATED_THRESHOLD = 50;\nconst UPDATE_VIEWAREA_TIMEOUT = 1000;\n\nfunction getCurrentHash() {\n  return document.location.hash;\n}\n\nclass PDFHistory {\n  constructor({\n    linkService,\n    eventBus\n  }) {\n    this.linkService = linkService;\n    this.eventBus = eventBus;\n    this._initialized = false;\n    this._fingerprint = \"\";\n    this.reset();\n    this._boundEvents = null;\n    this._isViewerInPresentationMode = false;\n\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      this._isViewerInPresentationMode = evt.state !== _ui_utils.PresentationModeState.NORMAL;\n    });\n\n    this.eventBus._on(\"pagesinit\", () => {\n      this._isPagesLoaded = false;\n\n      this.eventBus._on(\"pagesloaded\", evt => {\n        this._isPagesLoaded = !!evt.pagesCount;\n      }, {\n        once: true\n      });\n    });\n  }\n\n  initialize({\n    fingerprint,\n    resetHistory = false,\n    updateUrl = false\n  }) {\n    if (!fingerprint || typeof fingerprint !== \"string\") {\n      console.error('PDFHistory.initialize: The \"fingerprint\" must be a non-empty string.');\n      return;\n    }\n\n    if (this._initialized) {\n      this.reset();\n    }\n\n    const reInitialized = this._fingerprint !== \"\" && this._fingerprint !== fingerprint;\n    this._fingerprint = fingerprint;\n    this._updateUrl = updateUrl === true;\n    this._initialized = true;\n\n    this._bindEvents();\n\n    const state = window.history.state;\n    this._popStateInProgress = false;\n    this._blockHashChange = 0;\n    this._currentHash = getCurrentHash();\n    this._numPositionUpdates = 0;\n    this._uid = this._maxUid = 0;\n    this._destination = null;\n    this._position = null;\n\n    if (!this._isValidState(state, true) || resetHistory) {\n      const {\n        hash,\n        page,\n        rotation\n      } = this._parseCurrentHash(true);\n\n      if (!hash || reInitialized || resetHistory) {\n        this._pushOrReplaceState(null, true);\n\n        return;\n      }\n\n      this._pushOrReplaceState({\n        hash,\n        page,\n        rotation\n      }, true);\n\n      return;\n    }\n\n    const destination = state.destination;\n\n    this._updateInternalState(destination, state.uid, true);\n\n    if (destination.rotation !== undefined) {\n      this._initialRotation = destination.rotation;\n    }\n\n    if (destination.dest) {\n      this._initialBookmark = JSON.stringify(destination.dest);\n      this._destination.page = null;\n    } else if (destination.hash) {\n      this._initialBookmark = destination.hash;\n    } else if (destination.page) {\n      this._initialBookmark = `page=${destination.page}`;\n    }\n  }\n\n  reset() {\n    if (this._initialized) {\n      this._pageHide();\n\n      this._initialized = false;\n\n      this._unbindEvents();\n    }\n\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n\n    this._initialBookmark = null;\n    this._initialRotation = null;\n  }\n\n  push({\n    namedDest = null,\n    explicitDest,\n    pageNumber\n  }) {\n    if (!this._initialized) {\n      return;\n    }\n\n    if (namedDest && typeof namedDest !== \"string\") {\n      console.error(\"PDFHistory.push: \" + `\"${namedDest}\" is not a valid namedDest parameter.`);\n      return;\n    } else if (!Array.isArray(explicitDest)) {\n      console.error(\"PDFHistory.push: \" + `\"${explicitDest}\" is not a valid explicitDest parameter.`);\n      return;\n    } else if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.linkService.pagesCount)) {\n      if (pageNumber !== null || this._destination) {\n        console.error(\"PDFHistory.push: \" + `\"${pageNumber}\" is not a valid pageNumber parameter.`);\n        return;\n      }\n    }\n\n    const hash = namedDest || JSON.stringify(explicitDest);\n\n    if (!hash) {\n      return;\n    }\n\n    let forceReplace = false;\n\n    if (this._destination && (isDestHashesEqual(this._destination.hash, hash) || isDestArraysEqual(this._destination.dest, explicitDest))) {\n      if (this._destination.page) {\n        return;\n      }\n\n      forceReplace = true;\n    }\n\n    if (this._popStateInProgress && !forceReplace) {\n      return;\n    }\n\n    this._pushOrReplaceState({\n      dest: explicitDest,\n      hash,\n      page: pageNumber,\n      rotation: this.linkService.rotation\n    }, forceReplace);\n\n    if (!this._popStateInProgress) {\n      this._popStateInProgress = true;\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n\n  pushPage(pageNumber) {\n    if (!this._initialized) {\n      return;\n    }\n\n    if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.linkService.pagesCount)) {\n      console.error(`PDFHistory.pushPage: \"${pageNumber}\" is not a valid page number.`);\n      return;\n    }\n\n    if (this._destination && this._destination.page === pageNumber) { //?.\n      return;\n    }\n\n    if (this._popStateInProgress) {\n      return;\n    }\n\n    this._pushOrReplaceState({\n      hash: `page=${pageNumber}`,\n      page: pageNumber,\n      rotation: this.linkService.rotation\n    });\n\n    if (!this._popStateInProgress) {\n      this._popStateInProgress = true;\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n\n  pushCurrentPosition() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n\n    this._tryPushCurrentPosition();\n  }\n\n  back() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n\n    const state = window.history.state;\n\n    if (this._isValidState(state) && state.uid > 0) {\n      window.history.back();\n    }\n  }\n\n  forward() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n\n    const state = window.history.state;\n\n    if (this._isValidState(state) && state.uid < this._maxUid) {\n      window.history.forward();\n    }\n  }\n\n  get popStateInProgress() {\n    return this._initialized && (this._popStateInProgress || this._blockHashChange > 0);\n  }\n\n  get initialBookmark() {\n    return this._initialized ? this._initialBookmark : null;\n  }\n\n  get initialRotation() {\n    return this._initialized ? this._initialRotation : null;\n  }\n\n  _pushOrReplaceState(destination, forceReplace = false) {\n    const shouldReplace = forceReplace || !this._destination;\n    const newState = {\n      fingerprint: this._fingerprint,\n      uid: shouldReplace ? this._uid : this._uid + 1,\n      destination\n    };\n\n    this._updateInternalState(destination, newState.uid);\n\n    let newUrl;\n\n    if (this._updateUrl && destination && destination.hash) { //?.\n      const baseUrl = document.location.href.split(\"#\")[0];\n\n      if (!baseUrl.startsWith(\"file://\")) {\n        newUrl = `${baseUrl}#${destination.hash}`;\n      }\n    }\n\n    if (shouldReplace) {\n      window.history.replaceState(newState, \"\", newUrl);\n    } else {\n      window.history.pushState(newState, \"\", newUrl);\n    }\n  }\n\n  _tryPushCurrentPosition(temporary = false) {\n    if (!this._position) {\n      return;\n    }\n\n    let position = this._position;\n\n    if (temporary) {\n      position = Object.assign(Object.create(null), this._position);\n      position.temporary = true;\n    }\n\n    if (!this._destination) {\n      this._pushOrReplaceState(position);\n\n      return;\n    }\n\n    if (this._destination.temporary) {\n      this._pushOrReplaceState(position, true);\n\n      return;\n    }\n\n    if (this._destination.hash === position.hash) {\n      return;\n    }\n\n    if (!this._destination.page && (POSITION_UPDATED_THRESHOLD <= 0 || this._numPositionUpdates <= POSITION_UPDATED_THRESHOLD)) {\n      return;\n    }\n\n    let forceReplace = false;\n\n    if (this._destination.page >= position.first && this._destination.page <= position.page) {\n      if (this._destination.dest || !this._destination.first) {\n        return;\n      }\n\n      forceReplace = true;\n    }\n\n    this._pushOrReplaceState(position, forceReplace);\n  }\n\n  _isValidState(state, checkReload = false) {\n    if (!state) {\n      return false;\n    }\n\n    if (state.fingerprint !== this._fingerprint) {\n      if (checkReload) {\n        if (typeof state.fingerprint !== \"string\" || state.fingerprint.length !== this._fingerprint.length) {\n          return false;\n        }\n\n        const [perfEntry] = performance.getEntriesByType(\"navigation\");\n\n        if (perfEntry && perfEntry.type !== \"reload\") { //?.\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n\n    if (!Number.isInteger(state.uid) || state.uid < 0) {\n      return false;\n    }\n\n    if (state.destination === null || typeof state.destination !== \"object\") {\n      return false;\n    }\n\n    return true;\n  }\n\n  _updateInternalState(destination, uid, removeTemporary = false) {\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n\n    if (removeTemporary && destination && destination.temporary) { //?.\n      delete destination.temporary;\n    }\n\n    this._destination = destination;\n    this._uid = uid;\n    this._maxUid = Math.max(this._maxUid, uid);\n    this._numPositionUpdates = 0;\n  }\n\n  _parseCurrentHash(checkNameddest = false) {\n    const hash = unescape(getCurrentHash()).substring(1);\n    const params = (0, _ui_utils.parseQueryString)(hash);\n    const nameddest = params.nameddest || \"\";\n    let page = params.page | 0;\n\n    if (!(Number.isInteger(page) && page > 0 && page <= this.linkService.pagesCount) || checkNameddest && nameddest.length > 0) {\n      page = null;\n    }\n\n    return {\n      hash,\n      page,\n      rotation: this.linkService.rotation\n    };\n  }\n\n  _updateViewarea({\n    location\n  }) {\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n\n    this._position = {\n      hash: this._isViewerInPresentationMode ? `page=${location.pageNumber}` : location.pdfOpenParams.substring(1),\n      page: this.linkService.page,\n      first: location.pageNumber,\n      rotation: location.rotation\n    };\n\n    if (this._popStateInProgress) {\n      return;\n    }\n\n    if (POSITION_UPDATED_THRESHOLD > 0 && this._isPagesLoaded && this._destination && !this._destination.page) {\n      this._numPositionUpdates++;\n    }\n\n    if (UPDATE_VIEWAREA_TIMEOUT > 0) {\n      this._updateViewareaTimeout = setTimeout(() => {\n        if (!this._popStateInProgress) {\n          this._tryPushCurrentPosition(true);\n        }\n\n        this._updateViewareaTimeout = null;\n      }, UPDATE_VIEWAREA_TIMEOUT);\n    }\n  }\n\n  _popState({\n    state\n  }) {\n    const newHash = getCurrentHash(),\n          hashChanged = this._currentHash !== newHash;\n    this._currentHash = newHash;\n\n    if (!state) {\n      this._uid++;\n\n      const {\n        hash,\n        page,\n        rotation\n      } = this._parseCurrentHash();\n\n      this._pushOrReplaceState({\n        hash,\n        page,\n        rotation\n      }, true);\n\n      return;\n    }\n\n    if (!this._isValidState(state)) {\n      return;\n    }\n\n    this._popStateInProgress = true;\n\n    if (hashChanged) {\n      this._blockHashChange++;\n      (0, _ui_utils.waitOnEventOrTimeout)({\n        target: window,\n        name: \"hashchange\",\n        delay: HASH_CHANGE_TIMEOUT\n      }).then(() => {\n        this._blockHashChange--;\n      });\n    }\n\n    const destination = state.destination;\n\n    this._updateInternalState(destination, state.uid, true);\n\n    if ((0, _ui_utils.isValidRotation)(destination.rotation)) {\n      this.linkService.rotation = destination.rotation;\n    }\n\n    if (destination.dest) {\n      this.linkService.goToDestination(destination.dest);\n    } else if (destination.hash) {\n      this.linkService.setHash(destination.hash);\n    } else if (destination.page) {\n      this.linkService.page = destination.page;\n    }\n\n    Promise.resolve().then(() => {\n      this._popStateInProgress = false;\n    });\n  }\n\n  _pageHide() {\n    if (!this._destination || this._destination.temporary) {\n      this._tryPushCurrentPosition();\n    }\n  }\n\n  _bindEvents() {\n    if (this._boundEvents) {\n      return;\n    }\n\n    this._boundEvents = {\n      updateViewarea: this._updateViewarea.bind(this),\n      popState: this._popState.bind(this),\n      pageHide: this._pageHide.bind(this)\n    };\n\n    this.eventBus._on(\"updateviewarea\", this._boundEvents.updateViewarea);\n\n    window.addEventListener(\"popstate\", this._boundEvents.popState);\n    window.addEventListener(\"pagehide\", this._boundEvents.pageHide);\n  }\n\n  _unbindEvents() {\n    if (!this._boundEvents) {\n      return;\n    }\n\n    this.eventBus._off(\"updateviewarea\", this._boundEvents.updateViewarea);\n\n    window.removeEventListener(\"popstate\", this._boundEvents.popState);\n    window.removeEventListener(\"pagehide\", this._boundEvents.pageHide);\n    this._boundEvents = null;\n  }\n\n}\n\nexports.PDFHistory = PDFHistory;\n\nfunction isDestHashesEqual(destHash, pushHash) {\n  if (typeof destHash !== \"string\" || typeof pushHash !== \"string\") {\n    return false;\n  }\n\n  if (destHash === pushHash) {\n    return true;\n  }\n\n  const {\n    nameddest\n  } = (0, _ui_utils.parseQueryString)(destHash);\n\n  if (nameddest === pushHash) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isDestArraysEqual(firstDest, secondDest) {\n  function isEntryEqual(first, second) {\n    if (typeof first !== typeof second) {\n      return false;\n    }\n\n    if (Array.isArray(first) || Array.isArray(second)) {\n      return false;\n    }\n\n    if (first !== null && typeof first === \"object\" && second !== null) {\n      if (Object.keys(first).length !== Object.keys(second).length) {\n        return false;\n      }\n\n      for (const key in first) {\n        if (!isEntryEqual(first[key], second[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return first === second || Number.isNaN(first) && Number.isNaN(second);\n  }\n\n  if (!(Array.isArray(firstDest) && Array.isArray(secondDest))) {\n    return false;\n  }\n\n  if (firstDest.length !== secondDest.length) {\n    return false;\n  }\n\n  for (let i = 0, ii = firstDest.length; i < ii; i++) {\n    if (!isEntryEqual(firstDest[i], secondDest[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/***/ }),\n/* 18 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFLayerViewer = void 0;\n\nvar _base_tree_viewer = __webpack_require__(12);\n\nclass PDFLayerViewer extends _base_tree_viewer.BaseTreeViewer {\n  constructor(options) {\n    super(options);\n    this.l10n = options.l10n;\n\n    this.eventBus._on(\"resetlayers\", this._resetLayers.bind(this));\n\n    this.eventBus._on(\"togglelayerstree\", this._toggleAllTreeItems.bind(this));\n  }\n\n  reset() {\n    super.reset();\n    this._optionalContentConfig = null;\n  }\n\n  _dispatchEvent(layersCount) {\n    this.eventBus.dispatch(\"layersloaded\", {\n      source: this,\n      layersCount\n    });\n  }\n\n  _bindLink(element, {\n    groupId,\n    input\n  }) {\n    const setVisibility = () => {\n      this._optionalContentConfig.setVisibility(groupId, input.checked);\n\n      this.eventBus.dispatch(\"optionalcontentconfig\", {\n        source: this,\n        promise: Promise.resolve(this._optionalContentConfig)\n      });\n    };\n\n    element.onclick = evt => {\n      if (evt.target === input) {\n        setVisibility();\n        return true;\n      } else if (evt.target !== element) {\n        return true;\n      }\n\n      input.checked = !input.checked;\n      setVisibility();\n      return false;\n    };\n  }\n\n  async _setNestedName(element, {\n    name = null\n  }) {\n    if (typeof name === \"string\") {\n      element.textContent = this._normalizeTextContent(name);\n      return;\n    }\n\n    element.textContent = await this.l10n.get(\"additional_layers\", null, \"Additional Layers\");\n    element.style.fontStyle = \"italic\";\n  }\n\n  _addToggleButton(div, {\n    name = null\n  }) {\n    super._addToggleButton(div, name === null);\n  }\n\n  _toggleAllTreeItems() {\n    if (!this._optionalContentConfig) {\n      return;\n    }\n\n    super._toggleAllTreeItems();\n  }\n\n  render({\n    optionalContentConfig,\n    pdfDocument\n  }) {\n    if (this._optionalContentConfig) {\n      this.reset();\n    }\n\n    this._optionalContentConfig = optionalContentConfig || null;\n    this._pdfDocument = pdfDocument || null;\n    const groups = optionalContentConfig && optionalContentConfig.getOrder();\n\n    if (!groups) {\n      this._dispatchEvent(0);\n\n      return;\n    }\n\n    const fragment = document.createDocumentFragment(),\n          queue = [{\n      parent: fragment,\n      groups\n    }];\n    let layersCount = 0,\n        hasAnyNesting = false;\n\n    while (queue.length > 0) {\n      const levelData = queue.shift();\n\n      for (const groupId of levelData.groups) {\n        const div = document.createElement(\"div\");\n        div.className = \"treeItem\";\n        const element = document.createElement(\"a\");\n        div.appendChild(element);\n\n        if (typeof groupId === \"object\") {\n          hasAnyNesting = true;\n\n          this._addToggleButton(div, groupId);\n\n          this._setNestedName(element, groupId);\n\n          const itemsDiv = document.createElement(\"div\");\n          itemsDiv.className = \"treeItems\";\n          div.appendChild(itemsDiv);\n          queue.push({\n            parent: itemsDiv,\n            groups: groupId.order\n          });\n        } else {\n          const group = optionalContentConfig.getGroup(groupId);\n          const input = document.createElement(\"input\");\n\n          this._bindLink(element, {\n            groupId,\n            input\n          });\n\n          input.type = \"checkbox\";\n          input.id = groupId;\n          input.checked = group.visible;\n          const label = document.createElement(\"label\");\n          label.setAttribute(\"for\", groupId);\n          label.textContent = this._normalizeTextContent(group.name);\n          element.appendChild(input);\n          element.appendChild(label);\n          layersCount++;\n        }\n\n        levelData.parent.appendChild(div);\n      }\n    }\n\n    this._finishRendering(fragment, layersCount, hasAnyNesting);\n  }\n\n  async _resetLayers() {\n    if (!this._optionalContentConfig) {\n      return;\n    }\n\n    const optionalContentConfig = await this._pdfDocument.getOptionalContentConfig();\n    this.eventBus.dispatch(\"optionalcontentconfig\", {\n      source: this,\n      promise: Promise.resolve(optionalContentConfig)\n    });\n    this.render({\n      optionalContentConfig,\n      pdfDocument: this._pdfDocument\n    });\n  }\n\n}\n\nexports.PDFLayerViewer = PDFLayerViewer;\n\n/***/ }),\n/* 19 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SimpleLinkService = exports.PDFLinkService = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nclass PDFLinkService {\n  constructor({\n    eventBus,\n    externalLinkTarget = null,\n    externalLinkRel = null,\n    externalLinkEnabled = true,\n    ignoreDestinationZoom = false\n  } = {}) {\n    this.eventBus = eventBus;\n    this.externalLinkTarget = externalLinkTarget;\n    this.externalLinkRel = externalLinkRel;\n    this.externalLinkEnabled = externalLinkEnabled;\n    this._ignoreDestinationZoom = ignoreDestinationZoom;\n    this.baseUrl = null;\n    this.pdfDocument = null;\n    this.pdfViewer = null;\n    this.pdfHistory = null;\n    this._pagesRefCache = null;\n  }\n\n  setDocument(pdfDocument, baseUrl = null) {\n    this.baseUrl = baseUrl;\n    this.pdfDocument = pdfDocument;\n    this._pagesRefCache = Object.create(null);\n  }\n\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  setHistory(pdfHistory) {\n    this.pdfHistory = pdfHistory;\n  }\n\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  }\n\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  }\n\n  set page(value) {\n    this.pdfViewer.currentPageNumber = value;\n  }\n\n  get rotation() {\n    return this.pdfViewer.pagesRotation;\n  }\n\n  set rotation(value) {\n    this.pdfViewer.pagesRotation = value;\n  }\n\n  navigateTo(dest) {\n    console.error(\"Deprecated method: `navigateTo`, use `goToDestination` instead.\");\n    this.goToDestination(dest);\n  }\n\n  _goToDestinationHelper(rawDest, namedDest = null, explicitDest) {\n    const destRef = explicitDest[0];\n    let pageNumber;\n\n    if (destRef instanceof Object) {\n      pageNumber = this._cachedPageNumber(destRef);\n\n      if (pageNumber === null) {\n        this.pdfDocument.getPageIndex(destRef).then(pageIndex => {\n          this.cachePageRef(pageIndex + 1, destRef);\n\n          this._goToDestinationHelper(rawDest, namedDest, explicitDest);\n        }).catch(() => {\n          console.error(`PDFLinkService._goToDestinationHelper: \"${destRef}\" is not ` + `a valid page reference, for dest=\"${rawDest}\".`);\n        });\n        return;\n      }\n    } else if (Number.isInteger(destRef)) {\n      pageNumber = destRef + 1;\n    } else {\n      console.error(`PDFLinkService._goToDestinationHelper: \"${destRef}\" is not ` + `a valid destination reference, for dest=\"${rawDest}\".`);\n      return;\n    }\n\n    if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n      console.error(`PDFLinkService._goToDestinationHelper: \"${pageNumber}\" is not ` + `a valid page number, for dest=\"${rawDest}\".`);\n      return;\n    }\n\n    if (this.pdfHistory) {\n      this.pdfHistory.pushCurrentPosition();\n      this.pdfHistory.push({\n        namedDest,\n        explicitDest,\n        pageNumber\n      });\n    }\n\n    this.pdfViewer.scrollPageIntoView({\n      pageNumber,\n      destArray: explicitDest,\n      ignoreDestinationZoom: this._ignoreDestinationZoom\n    });\n  }\n\n  async goToDestination(dest) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    let namedDest, explicitDest;\n\n    if (typeof dest === \"string\") {\n      namedDest = dest;\n      explicitDest = await this.pdfDocument.getDestination(dest);\n    } else {\n      namedDest = null;\n      explicitDest = await dest;\n    }\n\n    if (!Array.isArray(explicitDest)) {\n      console.error(`PDFLinkService.goToDestination: \"${explicitDest}\" is not ` + `a valid destination array, for dest=\"${dest}\".`);\n      return;\n    }\n\n    this._goToDestinationHelper(dest, namedDest, explicitDest);\n  }\n\n  goToPage(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    const pageNumber = typeof val === \"string\" && this.pdfViewer.pageLabelToPageNumber(val) || val | 0;\n\n    if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.pagesCount)) {\n      console.error(`PDFLinkService.goToPage: \"${val}\" is not a valid page.`);\n      return;\n    }\n\n    if (this.pdfHistory) {\n      this.pdfHistory.pushCurrentPosition();\n      this.pdfHistory.pushPage(pageNumber);\n    }\n\n    this.pdfViewer.scrollPageIntoView({\n      pageNumber\n    });\n  }\n\n  getDestinationHash(dest) {\n    if (typeof dest === \"string\") {\n      if (dest.length > 0) {\n        return this.getAnchorUrl(\"#\" + escape(dest));\n      }\n    } else if (Array.isArray(dest)) {\n      const str = JSON.stringify(dest);\n\n      if (str.length > 0) {\n        return this.getAnchorUrl(\"#\" + escape(str));\n      }\n    }\n\n    return this.getAnchorUrl(\"\");\n  }\n\n  getAnchorUrl(anchor) {\n    return (this.baseUrl || \"\") + anchor;\n  }\n\n  setHash(hash) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    let pageNumber, dest;\n\n    if (hash.includes(\"=\")) {\n      const params = (0, _ui_utils.parseQueryString)(hash);\n\n      if (\"search\" in params) {\n        this.eventBus.dispatch(\"findfromurlhash\", {\n          source: this,\n          query: params.search.replace(/\"/g, \"\"),\n          phraseSearch: params.phrase === \"true\"\n        });\n      }\n\n      if (\"page\" in params) {\n        pageNumber = params.page | 0 || 1;\n      }\n\n      if (\"zoom\" in params) {\n        const zoomArgs = params.zoom.split(\",\");\n        const zoomArg = zoomArgs[0];\n        const zoomArgNumber = parseFloat(zoomArg);\n\n        if (!zoomArg.includes(\"Fit\")) {\n          dest = [null, {\n            name: \"XYZ\"\n          }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null, zoomArgs.length > 2 ? zoomArgs[2] | 0 : null, zoomArgNumber ? zoomArgNumber / 100 : zoomArg];\n        } else {\n          if (zoomArg === \"Fit\" || zoomArg === \"FitB\") {\n            dest = [null, {\n              name: zoomArg\n            }];\n          } else if (zoomArg === \"FitH\" || zoomArg === \"FitBH\" || zoomArg === \"FitV\" || zoomArg === \"FitBV\") {\n            dest = [null, {\n              name: zoomArg\n            }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null];\n          } else if (zoomArg === \"FitR\") {\n            if (zoomArgs.length !== 5) {\n              console.error('PDFLinkService.setHash: Not enough parameters for \"FitR\".');\n            } else {\n              dest = [null, {\n                name: zoomArg\n              }, zoomArgs[1] | 0, zoomArgs[2] | 0, zoomArgs[3] | 0, zoomArgs[4] | 0];\n            }\n          } else {\n            console.error(`PDFLinkService.setHash: \"${zoomArg}\" is not ` + \"a valid zoom value.\");\n          }\n        }\n      }\n\n      if (dest) {\n        this.pdfViewer.scrollPageIntoView({\n          pageNumber: pageNumber || this.page,\n          destArray: dest,\n          allowNegativeOffset: true\n        });\n      } else if (pageNumber) {\n        this.page = pageNumber;\n      }\n\n      if (\"pagemode\" in params) {\n        this.eventBus.dispatch(\"pagemode\", {\n          source: this,\n          mode: params.pagemode\n        });\n      }\n\n      if (\"nameddest\" in params) {\n        this.goToDestination(params.nameddest);\n      }\n    } else {\n      dest = unescape(hash);\n\n      try {\n        dest = JSON.parse(dest);\n\n        if (!Array.isArray(dest)) {\n          dest = dest.toString();\n        }\n      } catch (ex) {}\n\n      if (typeof dest === \"string\" || isValidExplicitDestination(dest)) {\n        this.goToDestination(dest);\n        return;\n      }\n\n      console.error(`PDFLinkService.setHash: \"${unescape(hash)}\" is not ` + \"a valid destination.\");\n    }\n  }\n\n  executeNamedAction(action) {\n    switch (action) {\n      case \"GoBack\":\n        if (this.pdfHistory) {\n          this.pdfHistory.back();\n        }\n\n        break;\n\n      case \"GoForward\":\n        if (this.pdfHistory) {\n          this.pdfHistory.forward();\n        }\n\n        break;\n\n      case \"NextPage\":\n        this.pdfViewer.nextPage();\n        break;\n\n      case \"PrevPage\":\n        this.pdfViewer.previousPage();\n        break;\n\n      case \"LastPage\":\n        this.page = this.pagesCount;\n        break;\n\n      case \"FirstPage\":\n        this.page = 1;\n        break;\n\n      default:\n        break;\n    }\n\n    this.eventBus.dispatch(\"namedaction\", {\n      source: this,\n      action\n    });\n  }\n\n  cachePageRef(pageNum, pageRef) {\n    if (!pageRef) {\n      return;\n    }\n\n    const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    this._pagesRefCache[refStr] = pageNum;\n  }\n\n  _cachedPageNumber(pageRef) {\n    const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    return this._pagesRefCache && this._pagesRefCache[refStr] || null;\n  }\n\n  isPageVisible(pageNumber) {\n    return this.pdfViewer.isPageVisible(pageNumber);\n  }\n\n  isPageCached(pageNumber) {\n    return this.pdfViewer.isPageCached(pageNumber);\n  }\n\n}\n\nexports.PDFLinkService = PDFLinkService;\n\nfunction isValidExplicitDestination(dest) {\n  if (!Array.isArray(dest)) {\n    return false;\n  }\n\n  const destLength = dest.length;\n\n  if (destLength < 2) {\n    return false;\n  }\n\n  const page = dest[0];\n\n  if (!(typeof page === \"object\" && Number.isInteger(page.num) && Number.isInteger(page.gen)) && !(Number.isInteger(page) && page >= 0)) {\n    return false;\n  }\n\n  const zoom = dest[1];\n\n  if (!(typeof zoom === \"object\" && typeof zoom.name === \"string\")) {\n    return false;\n  }\n\n  let allowNull = true;\n\n  switch (zoom.name) {\n    case \"XYZ\":\n      if (destLength !== 5) {\n        return false;\n      }\n\n      break;\n\n    case \"Fit\":\n    case \"FitB\":\n      return destLength === 2;\n\n    case \"FitH\":\n    case \"FitBH\":\n    case \"FitV\":\n    case \"FitBV\":\n      if (destLength !== 3) {\n        return false;\n      }\n\n      break;\n\n    case \"FitR\":\n      if (destLength !== 6) {\n        return false;\n      }\n\n      allowNull = false;\n      break;\n\n    default:\n      return false;\n  }\n\n  for (let i = 2; i < destLength; i++) {\n    const param = dest[i];\n\n    if (!(typeof param === \"number\" || allowNull && param === null)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nclass SimpleLinkService {\n  constructor() {\n    this.externalLinkTarget = null;\n    this.externalLinkRel = null;\n    this.externalLinkEnabled = true;\n    this._ignoreDestinationZoom = false;\n  }\n\n  get pagesCount() {\n    return 0;\n  }\n\n  get page() {\n    return 0;\n  }\n\n  set page(value) {}\n\n  get rotation() {\n    return 0;\n  }\n\n  set rotation(value) {}\n\n  async goToDestination(dest) {}\n\n  goToPage(val) {}\n\n  getDestinationHash(dest) {\n    return \"#\";\n  }\n\n  getAnchorUrl(hash) {\n    return \"#\";\n  }\n\n  setHash(hash) {}\n\n  executeNamedAction(action) {}\n\n  cachePageRef(pageNum, pageRef) {}\n\n  isPageVisible(pageNumber) {\n    return true;\n  }\n\n  isPageCached(pageNumber) {\n    return true;\n  }\n\n}\n\nexports.SimpleLinkService = SimpleLinkService;\n\n/***/ }),\n/* 20 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFOutlineViewer = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _base_tree_viewer = __webpack_require__(12);\n\nvar _ui_utils = __webpack_require__(4);\n\nclass PDFOutlineViewer extends _base_tree_viewer.BaseTreeViewer {\n  constructor(options) {\n    super(options);\n    this.linkService = options.linkService;\n\n    this.eventBus._on(\"toggleoutlinetree\", this._toggleAllTreeItems.bind(this));\n\n    this.eventBus._on(\"currentoutlineitem\", this._currentOutlineItem.bind(this));\n\n    this.eventBus._on(\"pagechanging\", evt => {\n      this._currentPageNumber = evt.pageNumber;\n    });\n\n    this.eventBus._on(\"pagesloaded\", evt => {\n      this._isPagesLoaded = !!evt.pagesCount;\n    });\n\n    this.eventBus._on(\"sidebarviewchanged\", evt => {\n      this._sidebarView = evt.view;\n    });\n  }\n\n  reset() {\n    super.reset();\n    this._outline = null;\n    this._pageNumberToDestHashCapability = null;\n    this._currentPageNumber = 1;\n    this._isPagesLoaded = false;\n  }\n\n  _dispatchEvent(outlineCount) {\n    this.eventBus.dispatch(\"outlineloaded\", {\n      source: this,\n      outlineCount,\n      enableCurrentOutlineItemButton: outlineCount > 0 && !(this._pdfDocument && this._pdfDocument.loadingParams.disableAutoFetch) //?.\n    });\n  }\n\n  _bindLink(element, {\n    url,\n    newWindow,\n    dest\n  }) {\n    const {\n      linkService\n    } = this;\n\n    if (url) {\n      (0, _pdfjsLib.addLinkAttributes)(element, {\n        url,\n        target: newWindow ? _pdfjsLib.LinkTarget.BLANK : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled\n      });\n      return;\n    }\n\n    element.href = linkService.getDestinationHash(dest);\n\n    element.onclick = evt => {\n      this._updateCurrentTreeItem(evt.target.parentNode);\n\n      if (dest) {\n        linkService.goToDestination(dest);\n      }\n\n      return false;\n    };\n  }\n\n  _setStyles(element, {\n    bold,\n    italic\n  }) {\n    if (bold) {\n      element.style.fontWeight = \"bold\";\n    }\n\n    if (italic) {\n      element.style.fontStyle = \"italic\";\n    }\n  }\n\n  _addToggleButton(div, {\n    count,\n    items\n  }) {\n    let hidden = false;\n\n    if (count < 0) {\n      let totalCount = items.length;\n\n      if (totalCount > 0) {\n        const queue = [...items];\n\n        while (queue.length > 0) {\n          const {\n            count: nestedCount,\n            items: nestedItems\n          } = queue.shift();\n\n          if (nestedCount > 0 && nestedItems.length > 0) {\n            totalCount += nestedItems.length;\n            queue.push(...nestedItems);\n          }\n        }\n      }\n\n      if (Math.abs(count) === totalCount) {\n        hidden = true;\n      }\n    }\n\n    super._addToggleButton(div, hidden);\n  }\n\n  _toggleAllTreeItems() {\n    if (!this._outline) {\n      return;\n    }\n\n    super._toggleAllTreeItems();\n  }\n\n  render({\n    outline,\n    pdfDocument\n  }) {\n    if (this._outline) {\n      this.reset();\n    }\n\n    this._outline = outline || null;\n    this._pdfDocument = pdfDocument || null;\n\n    if (!outline) {\n      this._dispatchEvent(0);\n\n      return;\n    }\n\n    const fragment = document.createDocumentFragment();\n    const queue = [{\n      parent: fragment,\n      items: outline\n    }];\n    let outlineCount = 0,\n        hasAnyNesting = false;\n\n    while (queue.length > 0) {\n      const levelData = queue.shift();\n\n      for (const item of levelData.items) {\n        const div = document.createElement(\"div\");\n        div.className = \"treeItem\";\n        const element = document.createElement(\"a\");\n\n        this._bindLink(element, item);\n\n        this._setStyles(element, item);\n\n        element.textContent = this._normalizeTextContent(item.title);\n        div.appendChild(element);\n\n        if (item.items.length > 0) {\n          hasAnyNesting = true;\n\n          this._addToggleButton(div, item);\n\n          const itemsDiv = document.createElement(\"div\");\n          itemsDiv.className = \"treeItems\";\n          div.appendChild(itemsDiv);\n          queue.push({\n            parent: itemsDiv,\n            items: item.items\n          });\n        }\n\n        levelData.parent.appendChild(div);\n        outlineCount++;\n      }\n    }\n\n    this._finishRendering(fragment, outlineCount, hasAnyNesting);\n  }\n\n  async _currentOutlineItem() {\n    if (!this._isPagesLoaded) {\n      throw new Error(\"_currentOutlineItem: All pages have not been loaded.\");\n    }\n\n    if (!this._outline || !this._pdfDocument) {\n      return;\n    }\n\n    const pageNumberToDestHash = await this._getPageNumberToDestHash(this._pdfDocument);\n\n    if (!pageNumberToDestHash) {\n      return;\n    }\n\n    this._updateCurrentTreeItem(null);\n\n    if (this._sidebarView !== _ui_utils.SidebarView.OUTLINE) {\n      return;\n    }\n\n    for (let i = this._currentPageNumber; i > 0; i--) {\n      const destHash = pageNumberToDestHash.get(i);\n\n      if (!destHash) {\n        continue;\n      }\n\n      const linkElement = this.container.querySelector(`a[href=\"${destHash}\"]`);\n\n      if (!linkElement) {\n        continue;\n      }\n\n      this._scrollToCurrentTreeItem(linkElement.parentNode);\n\n      break;\n    }\n  }\n\n  async _getPageNumberToDestHash(pdfDocument) {\n    if (this._pageNumberToDestHashCapability) {\n      return this._pageNumberToDestHashCapability.promise;\n    }\n\n    this._pageNumberToDestHashCapability = (0, _pdfjsLib.createPromiseCapability)();\n    const pageNumberToDestHash = new Map(),\n          pageNumberNesting = new Map();\n    const queue = [{\n      nesting: 0,\n      items: this._outline\n    }];\n\n    while (queue.length > 0) {\n      const levelData = queue.shift(),\n            currentNesting = levelData.nesting;\n\n      for (const {\n        dest,\n        items\n      } of levelData.items) {\n        let explicitDest, pageNumber;\n\n        if (typeof dest === \"string\") {\n          explicitDest = await pdfDocument.getDestination(dest);\n\n          if (pdfDocument !== this._pdfDocument) {\n            return null;\n          }\n        } else {\n          explicitDest = dest;\n        }\n\n        if (Array.isArray(explicitDest)) {\n          const [destRef] = explicitDest;\n\n          if (typeof destRef === \"object\") {\n            pageNumber = this.linkService._cachedPageNumber(destRef);\n\n            if (!pageNumber) {\n              try {\n                pageNumber = (await pdfDocument.getPageIndex(destRef)) + 1;\n\n                if (pdfDocument !== this._pdfDocument) {\n                  return null;\n                }\n\n                this.linkService.cachePageRef(pageNumber, destRef);\n              } catch (ex) {}\n            }\n          } else if (Number.isInteger(destRef)) {\n            pageNumber = destRef + 1;\n          }\n\n          if (Number.isInteger(pageNumber) && (!pageNumberToDestHash.has(pageNumber) || currentNesting > pageNumberNesting.get(pageNumber))) {\n            const destHash = this.linkService.getDestinationHash(dest);\n            pageNumberToDestHash.set(pageNumber, destHash);\n            pageNumberNesting.set(pageNumber, currentNesting);\n          }\n        }\n\n        if (items.length > 0) {\n          queue.push({\n            nesting: currentNesting + 1,\n            items\n          });\n        }\n      }\n    }\n\n    this._pageNumberToDestHashCapability.resolve(pageNumberToDestHash.size > 0 ? pageNumberToDestHash : null);\n\n    return this._pageNumberToDestHashCapability.promise;\n  }\n\n}\n\nexports.PDFOutlineViewer = PDFOutlineViewer;\n\n/***/ }),\n/* 21 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFPresentationMode = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nconst DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS = 1500;\nconst DELAY_BEFORE_HIDING_CONTROLS = 3000;\nconst ACTIVE_SELECTOR = \"pdfPresentationMode\";\nconst CONTROLS_SELECTOR = \"pdfPresentationModeControls\";\nconst MOUSE_SCROLL_COOLDOWN_TIME = 50;\nconst PAGE_SWITCH_THRESHOLD = 0.1;\nconst SWIPE_MIN_DISTANCE_THRESHOLD = 50;\nconst SWIPE_ANGLE_THRESHOLD = Math.PI / 6;\n\nclass PDFPresentationMode {\n  constructor({\n    container,\n    pdfViewer,\n    eventBus,\n    contextMenuItems = null\n  }) {\n    this.container = container;\n    this.pdfViewer = pdfViewer;\n    this.eventBus = eventBus;\n    this.active = false;\n    this.args = null;\n    this.contextMenuOpen = false;\n    this.mouseScrollTimeStamp = 0;\n    this.mouseScrollDelta = 0;\n    this.touchSwipeState = null;\n\n    if (contextMenuItems) {\n      contextMenuItems.contextFirstPage.addEventListener(\"click\", () => {\n        this.contextMenuOpen = false;\n        this.eventBus.dispatch(\"firstpage\", {\n          source: this\n        });\n      });\n      contextMenuItems.contextLastPage.addEventListener(\"click\", () => {\n        this.contextMenuOpen = false;\n        this.eventBus.dispatch(\"lastpage\", {\n          source: this\n        });\n      });\n      contextMenuItems.contextPageRotateCw.addEventListener(\"click\", () => {\n        this.contextMenuOpen = false;\n        this.eventBus.dispatch(\"rotatecw\", {\n          source: this\n        });\n      });\n      contextMenuItems.contextPageRotateCcw.addEventListener(\"click\", () => {\n        this.contextMenuOpen = false;\n        this.eventBus.dispatch(\"rotateccw\", {\n          source: this\n        });\n      });\n    }\n  }\n\n  request() {\n    if (this.switchInProgress || this.active || !this.pdfViewer.pagesCount) {\n      return false;\n    }\n\n    this._addFullscreenChangeListeners();\n\n    this._setSwitchInProgress();\n\n    this._notifyStateChange();\n\n    if (this.container.requestFullscreen) {\n      this.container.requestFullscreen();\n    } else if (this.container.mozRequestFullScreen) {\n      this.container.mozRequestFullScreen();\n    } else if (this.container.webkitRequestFullscreen) {\n      this.container.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n    } else {\n      return false;\n    }\n\n    this.args = {\n      page: this.pdfViewer.currentPageNumber,\n      previousScale: this.pdfViewer.currentScaleValue\n    };\n    return true;\n  }\n\n  _mouseWheel(evt) {\n    if (!this.active) {\n      return;\n    }\n\n    evt.preventDefault();\n    const delta = (0, _ui_utils.normalizeWheelEventDelta)(evt);\n    const currentTime = new Date().getTime();\n    const storedTime = this.mouseScrollTimeStamp;\n\n    if (currentTime > storedTime && currentTime - storedTime < MOUSE_SCROLL_COOLDOWN_TIME) {\n      return;\n    }\n\n    if (this.mouseScrollDelta > 0 && delta < 0 || this.mouseScrollDelta < 0 && delta > 0) {\n      this._resetMouseScrollState();\n    }\n\n    this.mouseScrollDelta += delta;\n\n    if (Math.abs(this.mouseScrollDelta) >= PAGE_SWITCH_THRESHOLD) {\n      const totalDelta = this.mouseScrollDelta;\n\n      this._resetMouseScrollState();\n\n      const success = totalDelta > 0 ? this.pdfViewer.previousPage() : this.pdfViewer.nextPage();\n\n      if (success) {\n        this.mouseScrollTimeStamp = currentTime;\n      }\n    }\n  }\n\n  get isFullscreen() {\n    return !!(document.fullscreenElement || document.mozFullScreen || document.webkitIsFullScreen);\n  }\n\n  _notifyStateChange() {\n    let state = _ui_utils.PresentationModeState.NORMAL;\n\n    if (this.switchInProgress) {\n      state = _ui_utils.PresentationModeState.CHANGING;\n    } else if (this.active) {\n      state = _ui_utils.PresentationModeState.FULLSCREEN;\n    }\n\n    this.eventBus.dispatch(\"presentationmodechanged\", {\n      source: this,\n      state,\n\n      get active() {\n        throw new Error(\"Deprecated parameter: `active`, please use `state` instead.\");\n      },\n\n      get switchInProgress() {\n        throw new Error(\"Deprecated parameter: `switchInProgress`, please use `state` instead.\");\n      }\n\n    });\n  }\n\n  _setSwitchInProgress() {\n    if (this.switchInProgress) {\n      clearTimeout(this.switchInProgress);\n    }\n\n    this.switchInProgress = setTimeout(() => {\n      this._removeFullscreenChangeListeners();\n\n      delete this.switchInProgress;\n\n      this._notifyStateChange();\n    }, DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS);\n  }\n\n  _resetSwitchInProgress() {\n    if (this.switchInProgress) {\n      clearTimeout(this.switchInProgress);\n      delete this.switchInProgress;\n    }\n  }\n\n  _enter() {\n    this.active = true;\n\n    this._resetSwitchInProgress();\n\n    this._notifyStateChange();\n\n    this.container.classList.add(ACTIVE_SELECTOR);\n    setTimeout(() => {\n      this.pdfViewer.currentPageNumber = this.args.page;\n      this.pdfViewer.currentScaleValue = \"page-fit\";\n    }, 0);\n\n    this._addWindowListeners();\n\n    this._showControls();\n\n    this.contextMenuOpen = false;\n    this.container.setAttribute(\"contextmenu\", \"viewerContextMenu\");\n    window.getSelection().removeAllRanges();\n  }\n\n  _exit() {\n    const page = this.pdfViewer.currentPageNumber;\n    this.container.classList.remove(ACTIVE_SELECTOR);\n    setTimeout(() => {\n      this.active = false;\n\n      this._removeFullscreenChangeListeners();\n\n      this._notifyStateChange();\n\n      this.pdfViewer.currentScaleValue = this.args.previousScale;\n      this.pdfViewer.currentPageNumber = page;\n      this.args = null;\n    }, 0);\n\n    this._removeWindowListeners();\n\n    this._hideControls();\n\n    this._resetMouseScrollState();\n\n    this.container.removeAttribute(\"contextmenu\");\n    this.contextMenuOpen = false;\n  }\n\n  _mouseDown(evt) {\n    if (this.contextMenuOpen) {\n      this.contextMenuOpen = false;\n      evt.preventDefault();\n      return;\n    }\n\n    if (evt.button === 0) {\n      const isInternalLink = evt.target.href && evt.target.classList.contains(\"internalLink\");\n\n      if (!isInternalLink) {\n        evt.preventDefault();\n\n        if (evt.shiftKey) {\n          this.pdfViewer.previousPage();\n        } else {\n          this.pdfViewer.nextPage();\n        }\n      }\n    }\n  }\n\n  _contextMenu() {\n    this.contextMenuOpen = true;\n  }\n\n  _showControls() {\n    if (this.controlsTimeout) {\n      clearTimeout(this.controlsTimeout);\n    } else {\n      this.container.classList.add(CONTROLS_SELECTOR);\n    }\n\n    this.controlsTimeout = setTimeout(() => {\n      this.container.classList.remove(CONTROLS_SELECTOR);\n      delete this.controlsTimeout;\n    }, DELAY_BEFORE_HIDING_CONTROLS);\n  }\n\n  _hideControls() {\n    if (!this.controlsTimeout) {\n      return;\n    }\n\n    clearTimeout(this.controlsTimeout);\n    this.container.classList.remove(CONTROLS_SELECTOR);\n    delete this.controlsTimeout;\n  }\n\n  _resetMouseScrollState() {\n    this.mouseScrollTimeStamp = 0;\n    this.mouseScrollDelta = 0;\n  }\n\n  _touchSwipe(evt) {\n    if (!this.active) {\n      return;\n    }\n\n    if (evt.touches.length > 1) {\n      this.touchSwipeState = null;\n      return;\n    }\n\n    switch (evt.type) {\n      case \"touchstart\":\n        this.touchSwipeState = {\n          startX: evt.touches[0].pageX,\n          startY: evt.touches[0].pageY,\n          endX: evt.touches[0].pageX,\n          endY: evt.touches[0].pageY\n        };\n        break;\n\n      case \"touchmove\":\n        if (this.touchSwipeState === null) {\n          return;\n        }\n\n        this.touchSwipeState.endX = evt.touches[0].pageX;\n        this.touchSwipeState.endY = evt.touches[0].pageY;\n        evt.preventDefault();\n        break;\n\n      case \"touchend\":\n        if (this.touchSwipeState === null) {\n          return;\n        }\n\n        let delta = 0;\n        const dx = this.touchSwipeState.endX - this.touchSwipeState.startX;\n        const dy = this.touchSwipeState.endY - this.touchSwipeState.startY;\n        const absAngle = Math.abs(Math.atan2(dy, dx));\n\n        if (Math.abs(dx) > SWIPE_MIN_DISTANCE_THRESHOLD && (absAngle <= SWIPE_ANGLE_THRESHOLD || absAngle >= Math.PI - SWIPE_ANGLE_THRESHOLD)) {\n          delta = dx;\n        } else if (Math.abs(dy) > SWIPE_MIN_DISTANCE_THRESHOLD && Math.abs(absAngle - Math.PI / 2) <= SWIPE_ANGLE_THRESHOLD) {\n          delta = dy;\n        }\n\n        if (delta > 0) {\n          this.pdfViewer.previousPage();\n        } else if (delta < 0) {\n          this.pdfViewer.nextPage();\n        }\n\n        break;\n    }\n  }\n\n  _addWindowListeners() {\n    this.showControlsBind = this._showControls.bind(this);\n    this.mouseDownBind = this._mouseDown.bind(this);\n    this.mouseWheelBind = this._mouseWheel.bind(this);\n    this.resetMouseScrollStateBind = this._resetMouseScrollState.bind(this);\n    this.contextMenuBind = this._contextMenu.bind(this);\n    this.touchSwipeBind = this._touchSwipe.bind(this);\n    window.addEventListener(\"mousemove\", this.showControlsBind);\n    window.addEventListener(\"mousedown\", this.mouseDownBind);\n    window.addEventListener(\"wheel\", this.mouseWheelBind, {\n      passive: false\n    });\n    window.addEventListener(\"keydown\", this.resetMouseScrollStateBind);\n    window.addEventListener(\"contextmenu\", this.contextMenuBind);\n    window.addEventListener(\"touchstart\", this.touchSwipeBind);\n    window.addEventListener(\"touchmove\", this.touchSwipeBind);\n    window.addEventListener(\"touchend\", this.touchSwipeBind);\n  }\n\n  _removeWindowListeners() {\n    window.removeEventListener(\"mousemove\", this.showControlsBind);\n    window.removeEventListener(\"mousedown\", this.mouseDownBind);\n    window.removeEventListener(\"wheel\", this.mouseWheelBind, {\n      passive: false\n    });\n    window.removeEventListener(\"keydown\", this.resetMouseScrollStateBind);\n    window.removeEventListener(\"contextmenu\", this.contextMenuBind);\n    window.removeEventListener(\"touchstart\", this.touchSwipeBind);\n    window.removeEventListener(\"touchmove\", this.touchSwipeBind);\n    window.removeEventListener(\"touchend\", this.touchSwipeBind);\n    delete this.showControlsBind;\n    delete this.mouseDownBind;\n    delete this.mouseWheelBind;\n    delete this.resetMouseScrollStateBind;\n    delete this.contextMenuBind;\n    delete this.touchSwipeBind;\n  }\n\n  _fullscreenChange() {\n    if (this.isFullscreen) {\n      this._enter();\n    } else {\n      this._exit();\n    }\n  }\n\n  _addFullscreenChangeListeners() {\n    this.fullscreenChangeBind = this._fullscreenChange.bind(this);\n    window.addEventListener(\"fullscreenchange\", this.fullscreenChangeBind);\n    window.addEventListener(\"mozfullscreenchange\", this.fullscreenChangeBind);\n    window.addEventListener(\"webkitfullscreenchange\", this.fullscreenChangeBind);\n  }\n\n  _removeFullscreenChangeListeners() {\n    window.removeEventListener(\"fullscreenchange\", this.fullscreenChangeBind);\n    window.removeEventListener(\"mozfullscreenchange\", this.fullscreenChangeBind);\n    window.removeEventListener(\"webkitfullscreenchange\", this.fullscreenChangeBind);\n    delete this.fullscreenChangeBind;\n  }\n\n}\n\nexports.PDFPresentationMode = PDFPresentationMode;\n\n/***/ }),\n/* 22 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFSidebar = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdf_rendering_queue = __webpack_require__(8);\n\nconst UI_NOTIFICATION_CLASS = \"pdfSidebarNotification\";\n\nclass PDFSidebar {\n  constructor({\n    elements,\n    pdfViewer,\n    pdfThumbnailViewer,\n    eventBus,\n    l10n = _ui_utils.NullL10n\n  }) {\n    this.isOpen = false;\n    this.active = _ui_utils.SidebarView.THUMBS;\n    this.isInitialViewSet = false;\n    this.onToggled = null;\n    this.pdfViewer = pdfViewer;\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n    this.outerContainer = elements.outerContainer;\n    this.viewerContainer = elements.viewerContainer;\n    this.toggleButton = elements.toggleButton;\n    this.thumbnailButton = elements.thumbnailButton;\n    this.outlineButton = elements.outlineButton;\n    this.attachmentsButton = elements.attachmentsButton;\n    this.layersButton = elements.layersButton;\n    this.thumbnailView = elements.thumbnailView;\n    this.outlineView = elements.outlineView;\n    this.attachmentsView = elements.attachmentsView;\n    this.layersView = elements.layersView;\n    this._outlineOptionsContainer = elements.outlineOptionsContainer;\n    this._currentOutlineItemButton = elements.currentOutlineItemButton;\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n\n    this._addEventListeners();\n  }\n\n  reset() {\n    this.isInitialViewSet = false;\n\n    this._hideUINotification(true);\n\n    this.switchView(_ui_utils.SidebarView.THUMBS);\n    this.outlineButton.disabled = false;\n    this.attachmentsButton.disabled = false;\n    this.layersButton.disabled = false;\n    this._currentOutlineItemButton.disabled = true;\n  }\n\n  get visibleView() {\n    return this.isOpen ? this.active : _ui_utils.SidebarView.NONE;\n  }\n\n  get isThumbnailViewVisible() {\n    return this.isOpen && this.active === _ui_utils.SidebarView.THUMBS;\n  }\n\n  get isOutlineViewVisible() {\n    return this.isOpen && this.active === _ui_utils.SidebarView.OUTLINE;\n  }\n\n  get isAttachmentsViewVisible() {\n    return this.isOpen && this.active === _ui_utils.SidebarView.ATTACHMENTS;\n  }\n\n  get isLayersViewVisible() {\n    return this.isOpen && this.active === _ui_utils.SidebarView.LAYERS;\n  }\n\n  setInitialView(view = _ui_utils.SidebarView.NONE) {\n    if (this.isInitialViewSet) {\n      return;\n    }\n\n    this.isInitialViewSet = true;\n\n    if (view === _ui_utils.SidebarView.NONE || view === _ui_utils.SidebarView.UNKNOWN) {\n      this._dispatchEvent();\n\n      return;\n    }\n\n    if (!this._switchView(view, true)) {\n      this._dispatchEvent();\n    }\n  }\n\n  switchView(view, forceOpen = false) {\n    this._switchView(view, forceOpen);\n  }\n\n  _switchView(view, forceOpen = false) {\n    const isViewChanged = view !== this.active;\n    let shouldForceRendering = false;\n\n    switch (view) {\n      case _ui_utils.SidebarView.NONE:\n        if (this.isOpen) {\n          this.close();\n          return true;\n        }\n\n        return false;\n\n      case _ui_utils.SidebarView.THUMBS:\n        if (this.isOpen && isViewChanged) {\n          shouldForceRendering = true;\n        }\n\n        break;\n\n      case _ui_utils.SidebarView.OUTLINE:\n        if (this.outlineButton.disabled) {\n          return false;\n        }\n\n        break;\n\n      case _ui_utils.SidebarView.ATTACHMENTS:\n        if (this.attachmentsButton.disabled) {\n          return false;\n        }\n\n        break;\n\n      case _ui_utils.SidebarView.LAYERS:\n        if (this.layersButton.disabled) {\n          return false;\n        }\n\n        break;\n\n      default:\n        console.error(`PDFSidebar._switchView: \"${view}\" is not a valid view.`);\n        return false;\n    }\n\n    this.active = view;\n    this.thumbnailButton.classList.toggle(\"toggled\", view === _ui_utils.SidebarView.THUMBS);\n    this.outlineButton.classList.toggle(\"toggled\", view === _ui_utils.SidebarView.OUTLINE);\n    this.attachmentsButton.classList.toggle(\"toggled\", view === _ui_utils.SidebarView.ATTACHMENTS);\n    this.layersButton.classList.toggle(\"toggled\", view === _ui_utils.SidebarView.LAYERS);\n    this.thumbnailView.classList.toggle(\"hidden\", view !== _ui_utils.SidebarView.THUMBS);\n    this.outlineView.classList.toggle(\"hidden\", view !== _ui_utils.SidebarView.OUTLINE);\n    this.attachmentsView.classList.toggle(\"hidden\", view !== _ui_utils.SidebarView.ATTACHMENTS);\n    this.layersView.classList.toggle(\"hidden\", view !== _ui_utils.SidebarView.LAYERS);\n\n    this._outlineOptionsContainer.classList.toggle(\"hidden\", view !== _ui_utils.SidebarView.OUTLINE);\n\n    if (forceOpen && !this.isOpen) {\n      this.open();\n      return true;\n    }\n\n    if (shouldForceRendering) {\n      this._updateThumbnailViewer();\n\n      this._forceRendering();\n    }\n\n    if (isViewChanged) {\n      this._dispatchEvent();\n    }\n\n    return isViewChanged;\n  }\n\n  open() {\n    if (this.isOpen) {\n      return;\n    }\n\n    this.isOpen = true;\n    this.toggleButton.classList.add(\"toggled\");\n    this.outerContainer.classList.add(\"sidebarMoving\", \"sidebarOpen\");\n\n    if (this.active === _ui_utils.SidebarView.THUMBS) {\n      this._updateThumbnailViewer();\n    }\n\n    this._forceRendering();\n\n    this._dispatchEvent();\n\n    this._hideUINotification();\n  }\n\n  close() {\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.isOpen = false;\n    this.toggleButton.classList.remove(\"toggled\");\n    this.outerContainer.classList.add(\"sidebarMoving\");\n    this.outerContainer.classList.remove(\"sidebarOpen\");\n\n    this._forceRendering();\n\n    this._dispatchEvent();\n  }\n\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  _dispatchEvent() {\n    this.eventBus.dispatch(\"sidebarviewchanged\", {\n      source: this,\n      view: this.visibleView\n    });\n  }\n\n  _forceRendering() {\n    if (this.onToggled) {\n      this.onToggled();\n    } else {\n      this.pdfViewer.forceRendering();\n      this.pdfThumbnailViewer.forceRendering();\n    }\n  }\n\n  _updateThumbnailViewer() {\n    const {\n      pdfViewer,\n      pdfThumbnailViewer\n    } = this;\n    const pagesCount = pdfViewer.pagesCount;\n\n    for (let pageIndex = 0; pageIndex < pagesCount; pageIndex++) {\n      const pageView = pdfViewer.getPageView(pageIndex);\n\n      if (pageView && pageView.renderingState === _pdf_rendering_queue.RenderingStates.FINISHED) {\n        const thumbnailView = pdfThumbnailViewer.getThumbnail(pageIndex);\n        thumbnailView.setImage(pageView);\n      }\n    }\n\n    pdfThumbnailViewer.scrollThumbnailIntoView(pdfViewer.currentPageNumber);\n  }\n\n  _showUINotification() {\n    this.l10n.get(\"toggle_sidebar_notification2.title\", null, \"Toggle Sidebar (document contains outline/attachments/layers)\").then(msg => {\n      this.toggleButton.title = msg;\n    });\n\n    if (!this.isOpen) {\n      this.toggleButton.classList.add(UI_NOTIFICATION_CLASS);\n    }\n  }\n\n  _hideUINotification(reset = false) {\n    if (this.isOpen || reset) {\n      this.toggleButton.classList.remove(UI_NOTIFICATION_CLASS);\n    }\n\n    if (reset) {\n      this.l10n.get(\"toggle_sidebar.title\", null, \"Toggle Sidebar\").then(msg => {\n        this.toggleButton.title = msg;\n      });\n    }\n  }\n\n  _addEventListeners() {\n    this.viewerContainer.addEventListener(\"transitionend\", evt => {\n      if (evt.target === this.viewerContainer) {\n        this.outerContainer.classList.remove(\"sidebarMoving\");\n      }\n    });\n    this.toggleButton.addEventListener(\"click\", () => {\n      this.toggle();\n    });\n    this.thumbnailButton.addEventListener(\"click\", () => {\n      this.switchView(_ui_utils.SidebarView.THUMBS);\n    });\n    this.outlineButton.addEventListener(\"click\", () => {\n      this.switchView(_ui_utils.SidebarView.OUTLINE);\n    });\n    this.outlineButton.addEventListener(\"dblclick\", () => {\n      this.eventBus.dispatch(\"toggleoutlinetree\", {\n        source: this\n      });\n    });\n    this.attachmentsButton.addEventListener(\"click\", () => {\n      this.switchView(_ui_utils.SidebarView.ATTACHMENTS);\n    });\n    this.layersButton.addEventListener(\"click\", () => {\n      this.switchView(_ui_utils.SidebarView.LAYERS);\n    });\n    this.layersButton.addEventListener(\"dblclick\", () => {\n      this.eventBus.dispatch(\"resetlayers\", {\n        source: this\n      });\n    });\n\n    this._currentOutlineItemButton.addEventListener(\"click\", () => {\n      this.eventBus.dispatch(\"currentoutlineitem\", {\n        source: this\n      });\n    });\n\n    const onTreeLoaded = (count, button, view) => {\n      button.disabled = !count;\n\n      if (count) {\n        this._showUINotification();\n      } else if (this.active === view) {\n        this.switchView(_ui_utils.SidebarView.THUMBS);\n      }\n    };\n\n    this.eventBus._on(\"outlineloaded\", evt => {\n      onTreeLoaded(evt.outlineCount, this.outlineButton, _ui_utils.SidebarView.OUTLINE);\n\n      if (evt.enableCurrentOutlineItemButton) {\n        this.pdfViewer.pagesPromise.then(() => {\n          this._currentOutlineItemButton.disabled = !this.isInitialViewSet;\n        });\n      }\n    });\n\n    this.eventBus._on(\"attachmentsloaded\", evt => {\n      onTreeLoaded(evt.attachmentsCount, this.attachmentsButton, _ui_utils.SidebarView.ATTACHMENTS);\n    });\n\n    this.eventBus._on(\"layersloaded\", evt => {\n      onTreeLoaded(evt.layersCount, this.layersButton, _ui_utils.SidebarView.LAYERS);\n    });\n\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      if (evt.state === _ui_utils.PresentationModeState.NORMAL && this.isThumbnailViewVisible) {\n        this._updateThumbnailViewer();\n      }\n    });\n  }\n\n}\n\nexports.PDFSidebar = PDFSidebar;\n\n/***/ }),\n/* 23 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFSidebarResizer = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nconst SIDEBAR_WIDTH_VAR = \"--sidebar-width\";\nconst SIDEBAR_MIN_WIDTH = 200;\nconst SIDEBAR_RESIZING_CLASS = \"sidebarResizing\";\n\nclass PDFSidebarResizer {\n  constructor(options, eventBus, l10n = _ui_utils.NullL10n) {\n    this.isRTL = false;\n    this.sidebarOpen = false;\n    this.doc = document.documentElement;\n    this._width = null;\n    this._outerContainerWidth = null;\n    this._boundEvents = Object.create(null);\n    this.outerContainer = options.outerContainer;\n    this.resizer = options.resizer;\n    this.eventBus = eventBus;\n    l10n.getDirection().then(dir => {\n      this.isRTL = dir === \"rtl\";\n    });\n\n    this._addEventListeners();\n  }\n\n  get outerContainerWidth() {\n    if (!this._outerContainerWidth) {\n      this._outerContainerWidth = this.outerContainer.clientWidth;\n    }\n\n    return this._outerContainerWidth;\n  }\n\n  _updateWidth(width = 0) {\n    const maxWidth = Math.floor(this.outerContainerWidth / 2);\n\n    if (width > maxWidth) {\n      width = maxWidth;\n    }\n\n    if (width < SIDEBAR_MIN_WIDTH) {\n      width = SIDEBAR_MIN_WIDTH;\n    }\n\n    if (width === this._width) {\n      return false;\n    }\n\n    this._width = width;\n    this.doc.style.setProperty(SIDEBAR_WIDTH_VAR, `${width}px`);\n    return true;\n  }\n\n  _mouseMove(evt) {\n    let width = evt.clientX;\n\n    if (this.isRTL) {\n      width = this.outerContainerWidth - width;\n    }\n\n    this._updateWidth(width);\n  }\n\n  _mouseUp(evt) {\n    this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);\n    this.eventBus.dispatch(\"resize\", {\n      source: this\n    });\n    const _boundEvents = this._boundEvents;\n    window.removeEventListener(\"mousemove\", _boundEvents.mouseMove);\n    window.removeEventListener(\"mouseup\", _boundEvents.mouseUp);\n  }\n\n  _addEventListeners() {\n    const _boundEvents = this._boundEvents;\n    _boundEvents.mouseMove = this._mouseMove.bind(this);\n    _boundEvents.mouseUp = this._mouseUp.bind(this);\n    this.resizer.addEventListener(\"mousedown\", evt => {\n      if (evt.button !== 0) {\n        return;\n      }\n\n      this.outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);\n      window.addEventListener(\"mousemove\", _boundEvents.mouseMove);\n      window.addEventListener(\"mouseup\", _boundEvents.mouseUp);\n    });\n\n    this.eventBus._on(\"sidebarviewchanged\", evt => {\n      this.sidebarOpen = !!(evt && evt.view);\n    });\n\n    this.eventBus._on(\"resize\", evt => {\n      if (!evt || evt.source !== window) {\n        return;\n      }\n\n      this._outerContainerWidth = null;\n\n      if (!this._width) {\n        return;\n      }\n\n      if (!this.sidebarOpen) {\n        this._updateWidth(this._width);\n\n        return;\n      }\n\n      this.outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);\n\n      const updated = this._updateWidth(this._width);\n\n      Promise.resolve().then(() => {\n        this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);\n\n        if (updated) {\n          this.eventBus.dispatch(\"resize\", {\n            source: this\n          });\n        }\n      });\n    });\n  }\n\n}\n\nexports.PDFSidebarResizer = PDFSidebarResizer;\n\n/***/ }),\n/* 24 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFThumbnailViewer = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdf_thumbnail_view = __webpack_require__(25);\n\nvar _pdf_rendering_queue = __webpack_require__(8);\n\nconst THUMBNAIL_SCROLL_MARGIN = -19;\nconst THUMBNAIL_SELECTED_CLASS = \"selected\";\n\nclass PDFThumbnailViewer {\n  constructor({\n    container,\n    eventBus,\n    linkService,\n    renderingQueue,\n    l10n = _ui_utils.NullL10n\n  }) {\n    this.container = container;\n    this.linkService = linkService;\n    this.renderingQueue = renderingQueue;\n    this.l10n = l10n;\n    this.scroll = (0, _ui_utils.watchScroll)(this.container, this._scrollUpdated.bind(this));\n\n    this._resetView();\n\n    eventBus._on(\"optionalcontentconfigchanged\", () => {\n      this._setImageDisabled = true;\n    });\n  }\n\n  _scrollUpdated() {\n    this.renderingQueue.renderHighestPriority();\n  }\n\n  getThumbnail(index) {\n    return this._thumbnails[index];\n  }\n\n  _getVisibleThumbs() {\n    return (0, _ui_utils.getVisibleElements)({\n      scrollEl: this.container,\n      views: this._thumbnails\n    });\n  }\n\n  scrollThumbnailIntoView(pageNumber) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    const thumbnailView = this._thumbnails[pageNumber - 1];\n\n    if (!thumbnailView) {\n      console.error('scrollThumbnailIntoView: Invalid \"pageNumber\" parameter.');\n      return;\n    }\n\n    if (pageNumber !== this._currentPageNumber) {\n      const prevThumbnailView = this._thumbnails[this._currentPageNumber - 1];\n      prevThumbnailView.div.classList.remove(THUMBNAIL_SELECTED_CLASS);\n      thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\n    }\n\n    const visibleThumbs = this._getVisibleThumbs();\n\n    const numVisibleThumbs = visibleThumbs.views.length;\n\n    if (numVisibleThumbs > 0) {\n      const first = visibleThumbs.first.id;\n      const last = numVisibleThumbs > 1 ? visibleThumbs.last.id : first;\n      let shouldScroll = false;\n\n      if (pageNumber <= first || pageNumber >= last) {\n        shouldScroll = true;\n      } else {\n        visibleThumbs.views.some(function (view) {\n          if (view.id !== pageNumber) {\n            return false;\n          }\n\n          shouldScroll = view.percent < 100;\n          return true;\n        });\n      }\n\n      if (shouldScroll) {\n        (0, _ui_utils.scrollIntoView)(thumbnailView.div, {\n          top: THUMBNAIL_SCROLL_MARGIN\n        });\n      }\n    }\n\n    this._currentPageNumber = pageNumber;\n  }\n\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  set pagesRotation(rotation) {\n    if (!(0, _ui_utils.isValidRotation)(rotation)) {\n      throw new Error(\"Invalid thumbnails rotation angle.\");\n    }\n\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    if (this._pagesRotation === rotation) {\n      return;\n    }\n\n    this._pagesRotation = rotation;\n\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      this._thumbnails[i].update(rotation);\n    }\n  }\n\n  cleanup() {\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      if (this._thumbnails[i] && this._thumbnails[i].renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED) {\n        this._thumbnails[i].reset();\n      }\n    }\n\n    _pdf_thumbnail_view.TempImageFactory.destroyCanvas();\n  }\n\n  _resetView() {\n    this._thumbnails = [];\n    this._currentPageNumber = 1;\n    this._pageLabels = null;\n    this._pagesRotation = 0;\n    this._optionalContentConfigPromise = null;\n    this._pagesRequests = new WeakMap();\n    this._setImageDisabled = false;\n    this.container.textContent = \"\";\n  }\n\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this._cancelRendering();\n\n      this._resetView();\n    }\n\n    this.pdfDocument = pdfDocument;\n\n    if (!pdfDocument) {\n      return;\n    }\n\n    const firstPagePromise = pdfDocument.getPage(1);\n    const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig();\n    firstPagePromise.then(firstPdfPage => {\n      this._optionalContentConfigPromise = optionalContentConfigPromise;\n      const pagesCount = pdfDocument.numPages;\n      const viewport = firstPdfPage.getViewport({\n        scale: 1\n      });\n\n      const checkSetImageDisabled = () => {\n        return this._setImageDisabled;\n      };\n\n      for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n        const thumbnail = new _pdf_thumbnail_view.PDFThumbnailView({\n          container: this.container,\n          id: pageNum,\n          defaultViewport: viewport.clone(),\n          optionalContentConfigPromise,\n          linkService: this.linkService,\n          renderingQueue: this.renderingQueue,\n          checkSetImageDisabled,\n          disableCanvasToImageConversion: false,\n          l10n: this.l10n\n        });\n\n        this._thumbnails.push(thumbnail);\n      }\n\n      const firstThumbnailView = this._thumbnails[0];\n\n      if (firstThumbnailView) {\n        firstThumbnailView.setPdfPage(firstPdfPage);\n      }\n\n      const thumbnailView = this._thumbnails[this._currentPageNumber - 1];\n      thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\n    }).catch(reason => {\n      console.error(\"Unable to initialize thumbnail viewer\", reason);\n    });\n  }\n\n  _cancelRendering() {\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      if (this._thumbnails[i]) {\n        this._thumbnails[i].cancelRendering();\n      }\n    }\n  }\n\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) {\n      this._pageLabels = null;\n      console.error(\"PDFThumbnailViewer_setPageLabels: Invalid page labels.\");\n    } else {\n      this._pageLabels = labels;\n    }\n\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      const label = this._pageLabels && this._pageLabels[i];\n\n      this._thumbnails[i].setPageLabel(label);\n    }\n  }\n\n  _ensurePdfPageLoaded(thumbView) {\n    if (thumbView.pdfPage) {\n      return Promise.resolve(thumbView.pdfPage);\n    }\n\n    if (this._pagesRequests.has(thumbView)) {\n      return this._pagesRequests.get(thumbView);\n    }\n\n    const promise = this.pdfDocument.getPage(thumbView.id).then(pdfPage => {\n      if (!thumbView.pdfPage) {\n        thumbView.setPdfPage(pdfPage);\n      }\n\n      this._pagesRequests.delete(thumbView);\n\n      return pdfPage;\n    }).catch(reason => {\n      console.error(\"Unable to get page for thumb view\", reason);\n\n      this._pagesRequests.delete(thumbView);\n    });\n\n    this._pagesRequests.set(thumbView, promise);\n\n    return promise;\n  }\n\n  forceRendering() {\n    const visibleThumbs = this._getVisibleThumbs();\n\n    const thumbView = this.renderingQueue.getHighestPriority(visibleThumbs, this._thumbnails, this.scroll.down);\n\n    if (thumbView) {\n      this._ensurePdfPageLoaded(thumbView).then(() => {\n        this.renderingQueue.renderView(thumbView);\n      });\n\n      return true;\n    }\n\n    return false;\n  }\n\n}\n\nexports.PDFThumbnailViewer = PDFThumbnailViewer;\n\n/***/ }),\n/* 25 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.TempImageFactory = exports.PDFThumbnailView = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _pdf_rendering_queue = __webpack_require__(8);\n\nconst MAX_NUM_SCALING_STEPS = 3;\nconst THUMBNAIL_CANVAS_BORDER_WIDTH = 1;\nconst THUMBNAIL_WIDTH = 98;\n\nconst TempImageFactory = function TempImageFactoryClosure() {\n  let tempCanvasCache = null;\n  return {\n    getCanvas(width, height) {\n      let tempCanvas = tempCanvasCache;\n\n      if (!tempCanvas) {\n        tempCanvas = document.createElement(\"canvas\");\n        tempCanvasCache = tempCanvas;\n      }\n\n      tempCanvas.width = width;\n      tempCanvas.height = height;\n      tempCanvas.mozOpaque = true;\n      const ctx = tempCanvas.getContext(\"2d\", {\n        alpha: false\n      });\n      ctx.save();\n      ctx.fillStyle = \"rgb(255, 255, 255)\";\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n      return tempCanvas;\n    },\n\n    destroyCanvas() {\n      const tempCanvas = tempCanvasCache;\n\n      if (tempCanvas) {\n        tempCanvas.width = 0;\n        tempCanvas.height = 0;\n      }\n\n      tempCanvasCache = null;\n    }\n\n  };\n}();\n\nexports.TempImageFactory = TempImageFactory;\n\nclass PDFThumbnailView {\n  constructor({\n    container,\n    id,\n    defaultViewport,\n    optionalContentConfigPromise,\n    linkService,\n    renderingQueue,\n    checkSetImageDisabled,\n    disableCanvasToImageConversion = false,\n    l10n = _ui_utils.NullL10n\n  }) {\n    this.id = id;\n    this.renderingId = \"thumbnail\" + id;\n    this.pageLabel = null;\n    this.pdfPage = null;\n    this.rotation = 0;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this._optionalContentConfigPromise = optionalContentConfigPromise || null;\n    this.linkService = linkService;\n    this.renderingQueue = renderingQueue;\n    this.renderTask = null;\n    this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n    this.resume = null;\n\n    this._checkSetImageDisabled = checkSetImageDisabled || function () {\n      return false;\n    };\n\n    this.disableCanvasToImageConversion = disableCanvasToImageConversion;\n    this.pageWidth = this.viewport.width;\n    this.pageHeight = this.viewport.height;\n    this.pageRatio = this.pageWidth / this.pageHeight;\n    this.canvasWidth = THUMBNAIL_WIDTH;\n    this.canvasHeight = this.canvasWidth / this.pageRatio | 0;\n    this.scale = this.canvasWidth / this.pageWidth;\n    this.l10n = l10n;\n    const anchor = document.createElement(\"a\");\n    anchor.href = linkService.getAnchorUrl(\"#page=\" + id);\n\n    this._thumbPageTitle.then(msg => {\n      anchor.title = msg;\n    });\n\n    anchor.onclick = function () {\n      linkService.goToPage(id);\n      return false;\n    };\n\n    this.anchor = anchor;\n    const div = document.createElement(\"div\");\n    div.className = \"thumbnail\";\n    div.setAttribute(\"data-page-number\", this.id);\n    this.div = div;\n    const ring = document.createElement(\"div\");\n    ring.className = \"thumbnailSelectionRing\";\n    const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\n    ring.style.width = this.canvasWidth + borderAdjustment + \"px\";\n    ring.style.height = this.canvasHeight + borderAdjustment + \"px\";\n    this.ring = ring;\n    div.appendChild(ring);\n    anchor.appendChild(div);\n    container.appendChild(anchor);\n  }\n\n  setPdfPage(pdfPage) {\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({\n      scale: 1,\n      rotation: totalRotation\n    });\n    this.reset();\n  }\n\n  reset() {\n    this.cancelRendering();\n    this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n    this.pageWidth = this.viewport.width;\n    this.pageHeight = this.viewport.height;\n    this.pageRatio = this.pageWidth / this.pageHeight;\n    this.canvasHeight = this.canvasWidth / this.pageRatio | 0;\n    this.scale = this.canvasWidth / this.pageWidth;\n    this.div.removeAttribute(\"data-loaded\");\n    const ring = this.ring;\n    const childNodes = ring.childNodes;\n\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      ring.removeChild(childNodes[i]);\n    }\n\n    const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\n    ring.style.width = this.canvasWidth + borderAdjustment + \"px\";\n    ring.style.height = this.canvasHeight + borderAdjustment + \"px\";\n\n    if (this.canvas) {\n      this.canvas.width = 0;\n      this.canvas.height = 0;\n      delete this.canvas;\n    }\n\n    if (this.image) {\n      this.image.removeAttribute(\"src\");\n      delete this.image;\n    }\n  }\n\n  update(rotation) {\n    if (typeof rotation !== \"undefined\") {\n      this.rotation = rotation;\n    }\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = this.viewport.clone({\n      scale: 1,\n      rotation: totalRotation\n    });\n    this.reset();\n  }\n\n  cancelRendering() {\n    if (this.renderTask) {\n      this.renderTask.cancel();\n      this.renderTask = null;\n    }\n\n    this.resume = null;\n  }\n\n  _getPageDrawContext() {\n    const canvas = document.createElement(\"canvas\");\n    this.canvas = canvas;\n    canvas.mozOpaque = true;\n    const ctx = canvas.getContext(\"2d\", {\n      alpha: false\n    });\n    const outputScale = (0, _ui_utils.getOutputScale)(ctx);\n    canvas.width = this.canvasWidth * outputScale.sx | 0;\n    canvas.height = this.canvasHeight * outputScale.sy | 0;\n    canvas.style.width = this.canvasWidth + \"px\";\n    canvas.style.height = this.canvasHeight + \"px\";\n    const transform = outputScale.scaled ? [outputScale.sx, 0, 0, outputScale.sy, 0, 0] : null;\n    return [ctx, transform];\n  }\n\n  _convertCanvasToImage() {\n    if (!this.canvas) {\n      return;\n    }\n\n    if (this.renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED) {\n      return;\n    }\n\n    const className = \"thumbnailImage\";\n\n    if (this.disableCanvasToImageConversion) {\n      this.canvas.className = className;\n\n      this._thumbPageCanvas.then(msg => {\n        this.canvas.setAttribute(\"aria-label\", msg);\n      });\n\n      this.div.setAttribute(\"data-loaded\", true);\n      this.ring.appendChild(this.canvas);\n      return;\n    }\n\n    const image = document.createElement(\"img\");\n    image.className = className;\n\n    this._thumbPageCanvas.then(msg => {\n      image.setAttribute(\"aria-label\", msg);\n    });\n\n    image.style.width = this.canvasWidth + \"px\";\n    image.style.height = this.canvasHeight + \"px\";\n    image.src = this.canvas.toDataURL();\n    this.image = image;\n    this.div.setAttribute(\"data-loaded\", true);\n    this.ring.appendChild(image);\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n    delete this.canvas;\n  }\n\n  draw() {\n    if (this.renderingState !== _pdf_rendering_queue.RenderingStates.INITIAL) {\n      console.error(\"Must be in new state before drawing\");\n      return Promise.resolve(undefined);\n    }\n\n    const {\n      pdfPage\n    } = this;\n\n    if (!pdfPage) {\n      this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\n    }\n\n    this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n\n    const finishRenderTask = async (error = null) => {\n      if (renderTask === this.renderTask) {\n        this.renderTask = null;\n      }\n\n      if (error instanceof _pdfjsLib.RenderingCancelledException) {\n        return;\n      }\n\n      this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n\n      this._convertCanvasToImage();\n\n      if (error) {\n        throw error;\n      }\n    };\n\n    const [ctx, transform] = this._getPageDrawContext();\n\n    const drawViewport = this.viewport.clone({\n      scale: this.scale\n    });\n\n    const renderContinueCallback = cont => {\n      if (!this.renderingQueue.isHighestPriority(this)) {\n        this.renderingState = _pdf_rendering_queue.RenderingStates.PAUSED;\n\n        this.resume = () => {\n          this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n          cont();\n        };\n\n        return;\n      }\n\n      cont();\n    };\n\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: drawViewport,\n      optionalContentConfigPromise: this._optionalContentConfigPromise\n    };\n    const renderTask = this.renderTask = pdfPage.render(renderContext);\n    renderTask.onContinue = renderContinueCallback;\n    const resultPromise = renderTask.promise.then(function () {\n      finishRenderTask(null);\n    }, function (error) {\n      finishRenderTask(error);\n    });\n    resultPromise.finally(() => {\n      const pageCached = this.linkService.isPageCached(this.id);\n\n      if (pageCached) {\n        return;\n      }\n\n      this.pdfPage && this.pdfPage.cleanup(); //?.\n    });\n    return resultPromise;\n  }\n\n  setImage(pageView) {\n    if (this._checkSetImageDisabled()) {\n      return;\n    }\n\n    if (this.renderingState !== _pdf_rendering_queue.RenderingStates.INITIAL) {\n      return;\n    }\n\n    const img = pageView.canvas;\n\n    if (!img) {\n      return;\n    }\n\n    if (!this.pdfPage) {\n      this.setPdfPage(pageView.pdfPage);\n    }\n\n    this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n\n    const [ctx] = this._getPageDrawContext();\n\n    const canvas = ctx.canvas;\n\n    if (img.width <= 2 * canvas.width) {\n      ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\n\n      this._convertCanvasToImage();\n\n      return;\n    }\n\n    let reducedWidth = canvas.width << MAX_NUM_SCALING_STEPS;\n    let reducedHeight = canvas.height << MAX_NUM_SCALING_STEPS;\n    const reducedImage = TempImageFactory.getCanvas(reducedWidth, reducedHeight);\n    const reducedImageCtx = reducedImage.getContext(\"2d\");\n\n    while (reducedWidth > img.width || reducedHeight > img.height) {\n      reducedWidth >>= 1;\n      reducedHeight >>= 1;\n    }\n\n    reducedImageCtx.drawImage(img, 0, 0, img.width, img.height, 0, 0, reducedWidth, reducedHeight);\n\n    while (reducedWidth > 2 * canvas.width) {\n      reducedImageCtx.drawImage(reducedImage, 0, 0, reducedWidth, reducedHeight, 0, 0, reducedWidth >> 1, reducedHeight >> 1);\n      reducedWidth >>= 1;\n      reducedHeight >>= 1;\n    }\n\n    ctx.drawImage(reducedImage, 0, 0, reducedWidth, reducedHeight, 0, 0, canvas.width, canvas.height);\n\n    this._convertCanvasToImage();\n  }\n\n  get _thumbPageTitle() {\n    return this.l10n.get(\"thumb_page_title\", {\n      page: this.pageLabel ||  this.id // ??\n    }, \"Page {{page}}\");\n  }\n\n  get _thumbPageCanvas() {\n    return this.l10n.get(\"thumb_page_canvas\", {\n      page: this.pageLabel ||  this.id // ??\n    }, \"Thumbnail of Page {{page}}\");\n  }\n\n  setPageLabel(label) {\n    this.pageLabel = typeof label === \"string\" ? label : null;\n\n    this._thumbPageTitle.then(msg => {\n      this.anchor.title = msg;\n    });\n\n    if (this.renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED) {\n      return;\n    }\n\n    this._thumbPageCanvas.then(msg => {\n      if (this.image) {\n        this.image.setAttribute(\"aria-label\", msg);\n      } else if (this.disableCanvasToImageConversion && this.canvas) {\n        this.canvas.setAttribute(\"aria-label\", msg);\n      }\n    });\n  }\n\n}\n\nexports.PDFThumbnailView = PDFThumbnailView;\n\n/***/ }),\n/* 26 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFViewer = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _base_viewer = __webpack_require__(27);\n\nvar _pdfjsLib = __webpack_require__(5);\n\nclass PDFViewer extends _base_viewer.BaseViewer {\n  get _viewerElement() {\n    return (0, _pdfjsLib.shadow)(this, \"_viewerElement\", this.viewer);\n  }\n\n  _scrollIntoView({\n    pageDiv,\n    pageSpot = null,\n    pageNumber = null\n  }) {\n    if (!pageSpot && !this.isInPresentationMode) {\n      const left = pageDiv.offsetLeft + pageDiv.clientLeft;\n      const right = left + pageDiv.clientWidth;\n      const {\n        scrollLeft,\n        clientWidth\n      } = this.container;\n\n      if (this._isScrollModeHorizontal || left < scrollLeft || right > scrollLeft + clientWidth) {\n        pageSpot = {\n          left: 0,\n          top: 0\n        };\n      }\n    }\n\n    super._scrollIntoView({\n      pageDiv,\n      pageSpot,\n      pageNumber\n    });\n  }\n\n  _getVisiblePages() {\n    if (this.isInPresentationMode) {\n      return this._getCurrentVisiblePage();\n    }\n\n    return super._getVisiblePages();\n  }\n\n  _updateHelper(visiblePages) {\n    if (this.isInPresentationMode) {\n      return;\n    }\n\n    let currentId = this._currentPageNumber;\n    let stillFullyVisible = false;\n\n    for (const page of visiblePages) {\n      if (page.percent < 100) {\n        break;\n      }\n\n      if (page.id === currentId && this._scrollMode === _ui_utils.ScrollMode.VERTICAL && this._spreadMode === _ui_utils.SpreadMode.NONE) {\n        stillFullyVisible = true;\n        break;\n      }\n    }\n\n    if (!stillFullyVisible) {\n      currentId = visiblePages[0].id;\n    }\n\n    this._setCurrentPageNumber(currentId);\n  }\n\n}\n\nexports.PDFViewer = PDFViewer;\n\n/***/ }),\n/* 27 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.BaseViewer = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdf_rendering_queue = __webpack_require__(8);\n\nvar _annotation_layer_builder = __webpack_require__(28);\n\nvar _pdf_page_view = __webpack_require__(29);\n\nvar _pdf_link_service = __webpack_require__(19);\n\nvar _text_layer_builder = __webpack_require__(30);\n\nconst DEFAULT_CACHE_SIZE = 10;\n\nfunction PDFPageViewBuffer(size) {\n  const data = [];\n\n  this.push = function (view) {\n    const i = data.indexOf(view);\n\n    if (i >= 0) {\n      data.splice(i, 1);\n    }\n\n    data.push(view);\n\n    if (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n\n  this.resize = function (newSize, pagesToKeep) {\n    size = newSize;\n\n    if (pagesToKeep) {\n      const pageIdsToKeep = new Set();\n\n      for (let i = 0, iMax = pagesToKeep.length; i < iMax; ++i) {\n        pageIdsToKeep.add(pagesToKeep[i].id);\n      }\n\n      (0, _ui_utils.moveToEndOfArray)(data, function (page) {\n        return pageIdsToKeep.has(page.id);\n      });\n    }\n\n    while (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n\n  this.has = function (view) {\n    return data.includes(view);\n  };\n}\n\nfunction isSameScale(oldScale, newScale) {\n  if (newScale === oldScale) {\n    return true;\n  }\n\n  if (Math.abs(newScale - oldScale) < 1e-15) {\n    return true;\n  }\n\n  return false;\n}\n\nclass BaseViewer {\n  constructor(options) {\n    if (this.constructor === BaseViewer) {\n      throw new Error(\"Cannot initialize BaseViewer.\");\n    }\n\n    const viewerVersion = '2.7.570';\n\n    if (_pdfjsLib.version !== viewerVersion) {\n      throw new Error(`The API version \"${_pdfjsLib.version}\" does not match the Viewer version \"${viewerVersion}\".`);\n    }\n\n    this._name = this.constructor.name;\n    this.container = options.container;\n    this.viewer = options.viewer || options.container.firstElementChild;\n\n    if (!(this.container && this.container.tagName.toUpperCase() === \"DIV\" && (this.viewer && this.viewer.tagName.toUpperCase() === \"DIV\"))) { //?.\n      throw new Error(\"Invalid `container` and/or `viewer` option.\");\n    }\n\n    if (getComputedStyle(this.container).position !== \"absolute\") {\n      throw new Error(\"The `container` must be absolutely positioned.\");\n    }\n\n    this.eventBus = options.eventBus;\n    this.linkService = options.linkService || new _pdf_link_service.SimpleLinkService();\n    this.downloadManager = options.downloadManager || null;\n    this.findController = options.findController || null;\n    this.removePageBorders = options.removePageBorders || false;\n    this.textLayerMode = Number.isInteger(options.textLayerMode) ? options.textLayerMode : _ui_utils.TextLayerMode.ENABLE;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.renderInteractiveForms = typeof options.renderInteractiveForms === \"boolean\" ? options.renderInteractiveForms : true;\n    this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\n    this.renderer = options.renderer || _ui_utils.RendererType.CANVAS;\n    this.enableWebGL = options.enableWebGL || false;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels;\n    this.l10n = options.l10n || _ui_utils.NullL10n;\n    this.enableScripting = options.enableScripting || false;\n    this._mouseState = options.mouseState || null;\n    this.defaultRenderingQueue = !options.renderingQueue;\n\n    if (this.defaultRenderingQueue) {\n      this.renderingQueue = new _pdf_rendering_queue.PDFRenderingQueue();\n      this.renderingQueue.setViewer(this);\n    } else {\n      this.renderingQueue = options.renderingQueue;\n    }\n\n    this.scroll = (0, _ui_utils.watchScroll)(this.container, this._scrollUpdate.bind(this));\n    this.presentationModeState = _ui_utils.PresentationModeState.UNKNOWN;\n    this._onBeforeDraw = this._onAfterDraw = null;\n\n    this._resetView();\n\n    if (this.removePageBorders) {\n      this.viewer.classList.add(\"removePageBorders\");\n    }\n\n    Promise.resolve().then(() => {\n      this.eventBus.dispatch(\"baseviewerinit\", {\n        source: this\n      });\n    });\n  }\n\n  get pagesCount() {\n    return this._pages.length;\n  }\n\n  getPageView(index) {\n    return this._pages[index];\n  }\n\n  get pageViewsReady() {\n    if (!this._pagesCapability.settled) {\n      return false;\n    }\n\n    return this._pages.every(function (pageView) {\n      return pageView && pageView.pdfPage;\n    });\n  }\n\n  get currentPageNumber() {\n    return this._currentPageNumber;\n  }\n\n  set currentPageNumber(val) {\n    if (!Number.isInteger(val)) {\n      throw new Error(\"Invalid page number.\");\n    }\n\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    if (!this._setCurrentPageNumber(val, true)) {\n      console.error(`${this._name}.currentPageNumber: \"${val}\" is not a valid page.`);\n    }\n  }\n\n  _setCurrentPageNumber(val, resetCurrentPageView = false) {\n    if (this._currentPageNumber === val) {\n      if (resetCurrentPageView) {\n        this._resetCurrentPageView();\n      }\n\n      return true;\n    }\n\n    if (!(0 < val && val <= this.pagesCount)) {\n      return false;\n    }\n\n    const previous = this._currentPageNumber;\n    this._currentPageNumber = val;\n    this.eventBus.dispatch(\"pagechanging\", {\n      source: this,\n      pageNumber: val,\n      pageLabel: this._pageLabels && this._pageLabels[val - 1],\n      previous\n    });\n\n    if (resetCurrentPageView) {\n      this._resetCurrentPageView();\n    }\n\n    return true;\n  }\n\n  get currentPageLabel() {\n    return this._pageLabels && this._pageLabels[this._currentPageNumber - 1];\n  }\n\n  set currentPageLabel(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    let page = val | 0;\n\n    if (this._pageLabels) {\n      const i = this._pageLabels.indexOf(val);\n\n      if (i >= 0) {\n        page = i + 1;\n      }\n    }\n\n    if (!this._setCurrentPageNumber(page, true)) {\n      console.error(`${this._name}.currentPageLabel: \"${val}\" is not a valid page.`);\n    }\n  }\n\n  get currentScale() {\n    return this._currentScale !== _ui_utils.UNKNOWN_SCALE ? this._currentScale : _ui_utils.DEFAULT_SCALE;\n  }\n\n  set currentScale(val) {\n    if (isNaN(val)) {\n      throw new Error(\"Invalid numeric scale.\");\n    }\n\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    this._setScale(val, false);\n  }\n\n  get currentScaleValue() {\n    return this._currentScaleValue;\n  }\n\n  set currentScaleValue(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    this._setScale(val, false);\n  }\n\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  set pagesRotation(rotation) {\n    if (!(0, _ui_utils.isValidRotation)(rotation)) {\n      throw new Error(\"Invalid pages rotation angle.\");\n    }\n\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    if (this._pagesRotation === rotation) {\n      return;\n    }\n\n    this._pagesRotation = rotation;\n    const pageNumber = this._currentPageNumber;\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      const pageView = this._pages[i];\n      pageView.update(pageView.scale, rotation);\n    }\n\n    if (this._currentScaleValue) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    this.eventBus.dispatch(\"rotationchanging\", {\n      source: this,\n      pagesRotation: rotation,\n      pageNumber\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  get firstPagePromise() {\n    return this.pdfDocument ? this._firstPageCapability.promise : null;\n  }\n\n  get onePageRendered() {\n    return this.pdfDocument ? this._onePageRenderedCapability.promise : null;\n  }\n\n  get pagesPromise() {\n    return this.pdfDocument ? this._pagesCapability.promise : null;\n  }\n\n  get _viewerElement() {\n    throw new Error(\"Not implemented: _viewerElement\");\n  }\n\n  _onePageRenderedOrForceFetch() {\n    if (!this.container.offsetParent || this._getVisiblePages().views.length === 0) {\n      return Promise.resolve();\n    }\n\n    return this._onePageRenderedCapability.promise;\n  }\n\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this.eventBus.dispatch(\"pagesdestroy\", {\n        source: this\n      });\n\n      this._cancelRendering();\n\n      this._resetView();\n\n      if (this.findController) {\n        this.findController.setDocument(null);\n      }\n    }\n\n    this.pdfDocument = pdfDocument;\n\n    if (!pdfDocument) {\n      return;\n    }\n\n    const pagesCount = pdfDocument.numPages;\n    const firstPagePromise = pdfDocument.getPage(1);\n    const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig();\n\n    this._pagesCapability.promise.then(() => {\n      this.eventBus.dispatch(\"pagesloaded\", {\n        source: this,\n        pagesCount\n      });\n    });\n\n    this._onBeforeDraw = evt => {\n      const pageView = this._pages[evt.pageNumber - 1];\n\n      if (!pageView) {\n        return;\n      }\n\n      this._buffer.push(pageView);\n    };\n\n    this.eventBus._on(\"pagerender\", this._onBeforeDraw);\n\n    this._onAfterDraw = evt => {\n      if (evt.cssTransform || this._onePageRenderedCapability.settled) {\n        return;\n      }\n\n      this._onePageRenderedCapability.resolve();\n\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n\n      this._onAfterDraw = null;\n    };\n\n    this.eventBus._on(\"pagerendered\", this._onAfterDraw);\n\n    firstPagePromise.then(firstPdfPage => {\n      this._firstPageCapability.resolve(firstPdfPage);\n\n      this._optionalContentConfigPromise = optionalContentConfigPromise;\n      const scale = this.currentScale;\n      const viewport = firstPdfPage.getViewport({\n        scale: scale * _ui_utils.CSS_UNITS\n      });\n      const textLayerFactory = this.textLayerMode !== _ui_utils.TextLayerMode.DISABLE ? this : null;\n\n      for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n        const pageView = new _pdf_page_view.PDFPageView({\n          container: this._viewerElement,\n          eventBus: this.eventBus,\n          id: pageNum,\n          scale,\n          defaultViewport: viewport.clone(),\n          optionalContentConfigPromise,\n          renderingQueue: this.renderingQueue,\n          textLayerFactory,\n          textLayerMode: this.textLayerMode,\n          annotationLayerFactory: this,\n          imageResourcesPath: this.imageResourcesPath,\n          renderInteractiveForms: this.renderInteractiveForms,\n          renderer: this.renderer,\n          enableWebGL: this.enableWebGL,\n          useOnlyCssZoom: this.useOnlyCssZoom,\n          maxCanvasPixels: this.maxCanvasPixels,\n          l10n: this.l10n,\n          enableScripting: this.enableScripting\n        });\n\n        this._pages.push(pageView);\n      }\n\n      const firstPageView = this._pages[0];\n\n      if (firstPageView) {\n        firstPageView.setPdfPage(firstPdfPage);\n        this.linkService.cachePageRef(1, firstPdfPage.ref);\n      }\n\n      if (this._spreadMode !== _ui_utils.SpreadMode.NONE) {\n        this._updateSpreadMode();\n      }\n\n      this._onePageRenderedOrForceFetch().then(() => {\n        if (this.findController) {\n          this.findController.setDocument(pdfDocument);\n        }\n\n        if (pdfDocument.loadingParams.disableAutoFetch || pagesCount > 7500) {\n          this._pagesCapability.resolve();\n\n          return;\n        }\n\n        let getPagesLeft = pagesCount - 1;\n\n        if (getPagesLeft <= 0) {\n          this._pagesCapability.resolve();\n\n          return;\n        }\n\n        for (let pageNum = 2; pageNum <= pagesCount; ++pageNum) {\n          pdfDocument.getPage(pageNum).then(pdfPage => {\n            const pageView = this._pages[pageNum - 1];\n\n            if (!pageView.pdfPage) {\n              pageView.setPdfPage(pdfPage);\n            }\n\n            this.linkService.cachePageRef(pageNum, pdfPage.ref);\n\n            if (--getPagesLeft === 0) {\n              this._pagesCapability.resolve();\n            }\n          }, reason => {\n            console.error(`Unable to get page ${pageNum} to initialize viewer`, reason);\n\n            if (--getPagesLeft === 0) {\n              this._pagesCapability.resolve();\n            }\n          });\n        }\n      });\n\n      this.eventBus.dispatch(\"pagesinit\", {\n        source: this\n      });\n\n      if (this.defaultRenderingQueue) {\n        this.update();\n      }\n    }).catch(reason => {\n      console.error(\"Unable to initialize viewer\", reason);\n    });\n  }\n\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) {\n      this._pageLabels = null;\n      console.error(`${this._name}.setPageLabels: Invalid page labels.`);\n    } else {\n      this._pageLabels = labels;\n    }\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      const pageView = this._pages[i];\n      const label = this._pageLabels && this._pageLabels[i];\n      pageView.setPageLabel(label);\n    }\n  }\n\n  _resetView() {\n    this._pages = [];\n    this._currentPageNumber = 1;\n    this._currentScale = _ui_utils.UNKNOWN_SCALE;\n    this._currentScaleValue = null;\n    this._pageLabels = null;\n    this._buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);\n    this._location = null;\n    this._pagesRotation = 0;\n    this._optionalContentConfigPromise = null;\n    this._pagesRequests = new WeakMap();\n    this._firstPageCapability = (0, _pdfjsLib.createPromiseCapability)();\n    this._onePageRenderedCapability = (0, _pdfjsLib.createPromiseCapability)();\n    this._pagesCapability = (0, _pdfjsLib.createPromiseCapability)();\n    this._scrollMode = _ui_utils.ScrollMode.VERTICAL;\n    this._spreadMode = _ui_utils.SpreadMode.NONE;\n\n    if (this._onBeforeDraw) {\n      this.eventBus._off(\"pagerender\", this._onBeforeDraw);\n\n      this._onBeforeDraw = null;\n    }\n\n    if (this._onAfterDraw) {\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n\n      this._onAfterDraw = null;\n    }\n\n    this._resetScriptingEvents();\n\n    this.viewer.textContent = \"\";\n\n    this._updateScrollMode();\n  }\n\n  _scrollUpdate() {\n    if (this.pagesCount === 0) {\n      return;\n    }\n\n    this.update();\n  }\n\n  _scrollIntoView({\n    pageDiv,\n    pageSpot = null,\n    pageNumber = null\n  }) {\n    (0, _ui_utils.scrollIntoView)(pageDiv, pageSpot);\n  }\n\n  _setScaleUpdatePages(newScale, newValue, noScroll = false, preset = false) {\n    this._currentScaleValue = newValue.toString();\n\n    if (isSameScale(this._currentScale, newScale)) {\n      if (preset) {\n        this.eventBus.dispatch(\"scalechanging\", {\n          source: this,\n          scale: newScale,\n          presetValue: newValue\n        });\n      }\n\n      return;\n    }\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      this._pages[i].update(newScale);\n    }\n\n    this._currentScale = newScale;\n\n    if (!noScroll) {\n      let page = this._currentPageNumber,\n          dest;\n\n      if (this._location && !(this.isInPresentationMode || this.isChangingPresentationMode)) {\n        page = this._location.pageNumber;\n        dest = [null, {\n          name: \"XYZ\"\n        }, this._location.left, this._location.top, null];\n      }\n\n      this.scrollPageIntoView({\n        pageNumber: page,\n        destArray: dest,\n        allowNegativeOffset: true\n      });\n    }\n\n    this.eventBus.dispatch(\"scalechanging\", {\n      source: this,\n      scale: newScale,\n      presetValue: preset ? newValue : undefined\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  get _pageWidthScaleFactor() {\n    if (this.spreadMode !== _ui_utils.SpreadMode.NONE && this.scrollMode !== _ui_utils.ScrollMode.HORIZONTAL && !this.isInPresentationMode) {\n      return 2;\n    }\n\n    return 1;\n  }\n\n  _setScale(value, noScroll = false) {\n    let scale = parseFloat(value);\n\n    if (scale > 0) {\n      this._setScaleUpdatePages(scale, value, noScroll, false);\n    } else {\n      const currentPage = this._pages[this._currentPageNumber - 1];\n\n      if (!currentPage) {\n        return;\n      }\n\n      const noPadding = this.isInPresentationMode || this.removePageBorders;\n      let hPadding = noPadding ? 0 : _ui_utils.SCROLLBAR_PADDING;\n      let vPadding = noPadding ? 0 : _ui_utils.VERTICAL_PADDING;\n\n      if (!noPadding && this._isScrollModeHorizontal) {\n        [hPadding, vPadding] = [vPadding, hPadding];\n      }\n\n      const pageWidthScale = (this.container.clientWidth - hPadding) / currentPage.width * currentPage.scale / this._pageWidthScaleFactor;\n      const pageHeightScale = (this.container.clientHeight - vPadding) / currentPage.height * currentPage.scale;\n\n      switch (value) {\n        case \"page-actual\":\n          scale = 1;\n          break;\n\n        case \"page-width\":\n          scale = pageWidthScale;\n          break;\n\n        case \"page-height\":\n          scale = pageHeightScale;\n          break;\n\n        case \"page-fit\":\n          scale = Math.min(pageWidthScale, pageHeightScale);\n          break;\n\n        case \"auto\":\n          const horizontalScale = (0, _ui_utils.isPortraitOrientation)(currentPage) ? pageWidthScale : Math.min(pageHeightScale, pageWidthScale);\n          scale = Math.min(_ui_utils.MAX_AUTO_SCALE, horizontalScale);\n          break;\n\n        default:\n          console.error(`${this._name}._setScale: \"${value}\" is an unknown zoom value.`);\n          return;\n      }\n\n      this._setScaleUpdatePages(scale, value, noScroll, true);\n    }\n  }\n\n  _resetCurrentPageView() {\n    if (this.isInPresentationMode) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    const pageView = this._pages[this._currentPageNumber - 1];\n\n    this._scrollIntoView({\n      pageDiv: pageView.div\n    });\n  }\n\n  pageLabelToPageNumber(label) {\n    if (!this._pageLabels) {\n      return null;\n    }\n\n    const i = this._pageLabels.indexOf(label);\n\n    if (i < 0) {\n      return null;\n    }\n\n    return i + 1;\n  }\n\n  scrollPageIntoView({\n    pageNumber,\n    destArray = null,\n    allowNegativeOffset = false,\n    ignoreDestinationZoom = false\n  }) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    const pageView = Number.isInteger(pageNumber) && this._pages[pageNumber - 1];\n\n    if (!pageView) {\n      console.error(`${this._name}.scrollPageIntoView: ` + `\"${pageNumber}\" is not a valid pageNumber parameter.`);\n      return;\n    }\n\n    if (this.isInPresentationMode || !destArray) {\n      this._setCurrentPageNumber(pageNumber, true);\n\n      return;\n    }\n\n    let x = 0,\n        y = 0;\n    let width = 0,\n        height = 0,\n        widthScale,\n        heightScale;\n    const changeOrientation = pageView.rotation % 180 !== 0;\n    const pageWidth = (changeOrientation ? pageView.height : pageView.width) / pageView.scale / _ui_utils.CSS_UNITS;\n    const pageHeight = (changeOrientation ? pageView.width : pageView.height) / pageView.scale / _ui_utils.CSS_UNITS;\n    let scale = 0;\n\n    switch (destArray[1].name) {\n      case \"XYZ\":\n        x = destArray[2];\n        y = destArray[3];\n        scale = destArray[4];\n        x = x !== null ? x : 0;\n        y = y !== null ? y : pageHeight;\n        break;\n\n      case \"Fit\":\n      case \"FitB\":\n        scale = \"page-fit\";\n        break;\n\n      case \"FitH\":\n      case \"FitBH\":\n        y = destArray[2];\n        scale = \"page-width\";\n\n        if (y === null && this._location) {\n          x = this._location.left;\n          y = this._location.top;\n        } else if (typeof y !== \"number\") {\n          y = pageHeight;\n        }\n\n        break;\n\n      case \"FitV\":\n      case \"FitBV\":\n        x = destArray[2];\n        width = pageWidth;\n        height = pageHeight;\n        scale = \"page-height\";\n        break;\n\n      case \"FitR\":\n        x = destArray[2];\n        y = destArray[3];\n        width = destArray[4] - x;\n        height = destArray[5] - y;\n        const hPadding = this.removePageBorders ? 0 : _ui_utils.SCROLLBAR_PADDING;\n        const vPadding = this.removePageBorders ? 0 : _ui_utils.VERTICAL_PADDING;\n        widthScale = (this.container.clientWidth - hPadding) / width / _ui_utils.CSS_UNITS;\n        heightScale = (this.container.clientHeight - vPadding) / height / _ui_utils.CSS_UNITS;\n        scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n        break;\n\n      default:\n        console.error(`${this._name}.scrollPageIntoView: ` + `\"${destArray[1].name}\" is not a valid destination type.`);\n        return;\n    }\n\n    if (!ignoreDestinationZoom) {\n      if (scale && scale !== this._currentScale) {\n        this.currentScaleValue = scale;\n      } else if (this._currentScale === _ui_utils.UNKNOWN_SCALE) {\n        this.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n      }\n    }\n\n    if (scale === \"page-fit\" && !destArray[4]) {\n      this._scrollIntoView({\n        pageDiv: pageView.div,\n        pageNumber\n      });\n\n      return;\n    }\n\n    const boundingRect = [pageView.viewport.convertToViewportPoint(x, y), pageView.viewport.convertToViewportPoint(x + width, y + height)];\n    let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n    let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n\n    if (!allowNegativeOffset) {\n      left = Math.max(left, 0);\n      top = Math.max(top, 0);\n    }\n\n    this._scrollIntoView({\n      pageDiv: pageView.div,\n      pageSpot: {\n        left,\n        top\n      },\n      pageNumber\n    });\n  }\n\n  _updateLocation(firstPage) {\n    const currentScale = this._currentScale;\n    const currentScaleValue = this._currentScaleValue;\n    const normalizedScaleValue = parseFloat(currentScaleValue) === currentScale ? Math.round(currentScale * 10000) / 100 : currentScaleValue;\n    const pageNumber = firstPage.id;\n    let pdfOpenParams = \"#page=\" + pageNumber;\n    pdfOpenParams += \"&zoom=\" + normalizedScaleValue;\n    const currentPageView = this._pages[pageNumber - 1];\n    const container = this.container;\n    const topLeft = currentPageView.getPagePoint(container.scrollLeft - firstPage.x, container.scrollTop - firstPage.y);\n    const intLeft = Math.round(topLeft[0]);\n    const intTop = Math.round(topLeft[1]);\n    pdfOpenParams += \",\" + intLeft + \",\" + intTop;\n    this._location = {\n      pageNumber,\n      scale: normalizedScaleValue,\n      top: intTop,\n      left: intLeft,\n      rotation: this._pagesRotation,\n      pdfOpenParams\n    };\n  }\n\n  _updateHelper(visiblePages) {\n    throw new Error(\"Not implemented: _updateHelper\");\n  }\n\n  update() {\n    const visible = this._getVisiblePages();\n\n    const visiblePages = visible.views,\n          numVisiblePages = visiblePages.length;\n\n    if (numVisiblePages === 0) {\n      return;\n    }\n\n    const newCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * numVisiblePages + 1);\n\n    this._buffer.resize(newCacheSize, visiblePages);\n\n    this.renderingQueue.renderHighestPriority(visible);\n\n    this._updateHelper(visiblePages);\n\n    this._updateLocation(visible.first);\n\n    this.eventBus.dispatch(\"updateviewarea\", {\n      source: this,\n      location: this._location\n    });\n  }\n\n  containsElement(element) {\n    return this.container.contains(element);\n  }\n\n  focus() {\n    this.container.focus();\n  }\n\n  get _isScrollModeHorizontal() {\n    return this.isInPresentationMode ? false : this._scrollMode === _ui_utils.ScrollMode.HORIZONTAL;\n  }\n\n  get _isContainerRtl() {\n    return getComputedStyle(this.container).direction === \"rtl\";\n  }\n\n  get isInPresentationMode() {\n    return this.presentationModeState === _ui_utils.PresentationModeState.FULLSCREEN;\n  }\n\n  get isChangingPresentationMode() {\n    return this.presentationModeState === _ui_utils.PresentationModeState.CHANGING;\n  }\n\n  get isHorizontalScrollbarEnabled() {\n    return this.isInPresentationMode ? false : this.container.scrollWidth > this.container.clientWidth;\n  }\n\n  get isVerticalScrollbarEnabled() {\n    return this.isInPresentationMode ? false : this.container.scrollHeight > this.container.clientHeight;\n  }\n\n  _getCurrentVisiblePage() {\n    if (!this.pagesCount) {\n      return {\n        views: []\n      };\n    }\n\n    const pageView = this._pages[this._currentPageNumber - 1];\n    const element = pageView.div;\n    const view = {\n      id: pageView.id,\n      x: element.offsetLeft + element.clientLeft,\n      y: element.offsetTop + element.clientTop,\n      view: pageView\n    };\n    return {\n      first: view,\n      last: view,\n      views: [view]\n    };\n  }\n\n  _getVisiblePages() {\n    return (0, _ui_utils.getVisibleElements)({\n      scrollEl: this.container,\n      views: this._pages,\n      sortByVisibility: true,\n      horizontal: this._isScrollModeHorizontal,\n      rtl: this._isScrollModeHorizontal && this._isContainerRtl\n    });\n  }\n\n  isPageVisible(pageNumber) {\n    if (!this.pdfDocument) {\n      return false;\n    }\n\n    if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.pagesCount)) {\n      console.error(`${this._name}.isPageVisible: \"${pageNumber}\" is not a valid page.`);\n      return false;\n    }\n\n    return this._getVisiblePages().views.some(function (view) {\n      return view.id === pageNumber;\n    });\n  }\n\n  isPageCached(pageNumber) {\n    if (!this.pdfDocument || !this._buffer) {\n      return false;\n    }\n\n    if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.pagesCount)) {\n      console.error(`${this._name}.isPageCached: \"${pageNumber}\" is not a valid page.`);\n      return false;\n    }\n\n    const pageView = this._pages[pageNumber - 1];\n\n    if (!pageView) {\n      return false;\n    }\n\n    return this._buffer.has(pageView);\n  }\n\n  cleanup() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (this._pages[i] && this._pages[i].renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED) {\n        this._pages[i].reset();\n      }\n    }\n  }\n\n  _cancelRendering() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (this._pages[i]) {\n        this._pages[i].cancelRendering();\n      }\n    }\n  }\n\n  _ensurePdfPageLoaded(pageView) {\n    if (pageView.pdfPage) {\n      return Promise.resolve(pageView.pdfPage);\n    }\n\n    if (this._pagesRequests.has(pageView)) {\n      return this._pagesRequests.get(pageView);\n    }\n\n    const promise = this.pdfDocument.getPage(pageView.id).then(pdfPage => {\n      if (!pageView.pdfPage) {\n        pageView.setPdfPage(pdfPage);\n      }\n\n      this._pagesRequests.delete(pageView);\n\n      return pdfPage;\n    }).catch(reason => {\n      console.error(\"Unable to get page for page view\", reason);\n\n      this._pagesRequests.delete(pageView);\n    });\n\n    this._pagesRequests.set(pageView, promise);\n\n    return promise;\n  }\n\n  forceRendering(currentlyVisiblePages) {\n    const visiblePages = currentlyVisiblePages || this._getVisiblePages();\n\n    const scrollAhead = this._isScrollModeHorizontal ? this.scroll.right : this.scroll.down;\n    const pageView = this.renderingQueue.getHighestPriority(visiblePages, this._pages, scrollAhead);\n\n    if (pageView) {\n      this._ensurePdfPageLoaded(pageView).then(() => {\n        this.renderingQueue.renderView(pageView);\n      });\n\n      return true;\n    }\n\n    return false;\n  }\n\n  createTextLayerBuilder(textLayerDiv, pageIndex, viewport, enhanceTextSelection = false, eventBus) {\n    return new _text_layer_builder.TextLayerBuilder({\n      textLayerDiv,\n      eventBus,\n      pageIndex,\n      viewport,\n      findController: this.isInPresentationMode ? null : this.findController,\n      enhanceTextSelection: this.isInPresentationMode ? false : enhanceTextSelection\n    });\n  }\n\n  createAnnotationLayerBuilder(pageDiv, pdfPage, annotationStorage = null, imageResourcesPath = \"\", renderInteractiveForms = false, l10n = _ui_utils.NullL10n, enableScripting = false, hasJSActionsPromise = null, mouseState = null) {\n    return new _annotation_layer_builder.AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      annotationStorage: annotationStorage || this.pdfDocument && this.pdfDocument.annotationStorage, // ?.\n      imageResourcesPath,\n      renderInteractiveForms,\n      linkService: this.linkService,\n      downloadManager: this.downloadManager,\n      l10n,\n      enableScripting,\n      hasJSActionsPromise: hasJSActionsPromise || this.pdfDocument && this.pdfDocument.hasJSActions(), //?.\n      mouseState: mouseState || this._mouseState\n    });\n  }\n\n  get hasEqualPageSizes() {\n    const firstPageView = this._pages[0];\n\n    for (let i = 1, ii = this._pages.length; i < ii; ++i) {\n      const pageView = this._pages[i];\n\n      if (pageView.width !== firstPageView.width || pageView.height !== firstPageView.height) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getPagesOverview() {\n    const pagesOverview = this._pages.map(function (pageView) {\n      const viewport = pageView.pdfPage.getViewport({\n        scale: 1\n      });\n      return {\n        width: viewport.width,\n        height: viewport.height,\n        rotation: viewport.rotation\n      };\n    });\n\n    if (!this.enablePrintAutoRotate) {\n      return pagesOverview;\n    }\n\n    return pagesOverview.map(function (size) {\n      if ((0, _ui_utils.isPortraitOrientation)(size)) {\n        return size;\n      }\n\n      return {\n        width: size.height,\n        height: size.width,\n        rotation: (size.rotation + 90) % 360\n      };\n    });\n  }\n\n  get optionalContentConfigPromise() {\n    if (!this.pdfDocument) {\n      return Promise.resolve(null);\n    }\n\n    if (!this._optionalContentConfigPromise) {\n      return this.pdfDocument.getOptionalContentConfig();\n    }\n\n    return this._optionalContentConfigPromise;\n  }\n\n  set optionalContentConfigPromise(promise) {\n    if (!(promise instanceof Promise)) {\n      throw new Error(`Invalid optionalContentConfigPromise: ${promise}`);\n    }\n\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    if (!this._optionalContentConfigPromise) {\n      return;\n    }\n\n    this._optionalContentConfigPromise = promise;\n\n    for (const pageView of this._pages) {\n      pageView.update(pageView.scale, pageView.rotation, promise);\n    }\n\n    this.update();\n    this.eventBus.dispatch(\"optionalcontentconfigchanged\", {\n      source: this,\n      promise\n    });\n  }\n\n  get scrollMode() {\n    return this._scrollMode;\n  }\n\n  set scrollMode(mode) {\n    if (this._scrollMode === mode) {\n      return;\n    }\n\n    if (!(0, _ui_utils.isValidScrollMode)(mode)) {\n      throw new Error(`Invalid scroll mode: ${mode}`);\n    }\n\n    this._scrollMode = mode;\n    this.eventBus.dispatch(\"scrollmodechanged\", {\n      source: this,\n      mode\n    });\n\n    this._updateScrollMode(this._currentPageNumber);\n  }\n\n  _updateScrollMode(pageNumber = null) {\n    const scrollMode = this._scrollMode,\n          viewer = this.viewer;\n    viewer.classList.toggle(\"scrollHorizontal\", scrollMode === _ui_utils.ScrollMode.HORIZONTAL);\n    viewer.classList.toggle(\"scrollWrapped\", scrollMode === _ui_utils.ScrollMode.WRAPPED);\n\n    if (!this.pdfDocument || !pageNumber) {\n      return;\n    }\n\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    this._setCurrentPageNumber(pageNumber, true);\n\n    this.update();\n  }\n\n  get spreadMode() {\n    return this._spreadMode;\n  }\n\n  set spreadMode(mode) {\n    if (this._spreadMode === mode) {\n      return;\n    }\n\n    if (!(0, _ui_utils.isValidSpreadMode)(mode)) {\n      throw new Error(`Invalid spread mode: ${mode}`);\n    }\n\n    this._spreadMode = mode;\n    this.eventBus.dispatch(\"spreadmodechanged\", {\n      source: this,\n      mode\n    });\n\n    this._updateSpreadMode(this._currentPageNumber);\n  }\n\n  _updateSpreadMode(pageNumber = null) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    const viewer = this.viewer,\n          pages = this._pages;\n    viewer.textContent = \"\";\n\n    if (this._spreadMode === _ui_utils.SpreadMode.NONE) {\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        viewer.appendChild(pages[i].div);\n      }\n    } else {\n      const parity = this._spreadMode - 1;\n      let spread = null;\n\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        if (spread === null) {\n          spread = document.createElement(\"div\");\n          spread.className = \"spread\";\n          viewer.appendChild(spread);\n        } else if (i % 2 === parity) {\n          spread = spread.cloneNode(false);\n          viewer.appendChild(spread);\n        }\n\n        spread.appendChild(pages[i].div);\n      }\n    }\n\n    if (!pageNumber) {\n      return;\n    }\n\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    this._setCurrentPageNumber(pageNumber, true);\n\n    this.update();\n  }\n\n  _getPageAdvance(currentPageNumber, previous = false) {\n    if (this.isInPresentationMode) {\n      return 1;\n    }\n\n    switch (this._scrollMode) {\n      case _ui_utils.ScrollMode.WRAPPED:\n        {\n          const {\n            views\n          } = this._getVisiblePages(),\n                pageLayout = new Map();\n\n          for (const {\n            id,\n            y,\n            percent,\n            widthPercent\n          } of views) {\n            if (percent === 0 || widthPercent < 100) {\n              continue;\n            }\n\n            let yArray = pageLayout.get(y);\n\n            if (!yArray) {\n              pageLayout.set(y, yArray || (yArray = []));\n            }\n\n            yArray.push(id);\n          }\n\n          for (const yArray of pageLayout.values()) {\n            const currentIndex = yArray.indexOf(currentPageNumber);\n\n            if (currentIndex === -1) {\n              continue;\n            }\n\n            const numPages = yArray.length;\n\n            if (numPages === 1) {\n              break;\n            }\n\n            if (previous) {\n              for (let i = currentIndex - 1, ii = 0; i >= ii; i--) {\n                const currentId = yArray[i],\n                      expectedId = yArray[i + 1] - 1;\n\n                if (currentId < expectedId) {\n                  return currentPageNumber - expectedId;\n                }\n              }\n            } else {\n              for (let i = currentIndex + 1, ii = numPages; i < ii; i++) {\n                const currentId = yArray[i],\n                      expectedId = yArray[i - 1] + 1;\n\n                if (currentId > expectedId) {\n                  return expectedId - currentPageNumber;\n                }\n              }\n            }\n\n            if (previous) {\n              const firstId = yArray[0];\n\n              if (firstId < currentPageNumber) {\n                return currentPageNumber - firstId + 1;\n              }\n            } else {\n              const lastId = yArray[numPages - 1];\n\n              if (lastId > currentPageNumber) {\n                return lastId - currentPageNumber + 1;\n              }\n            }\n\n            break;\n          }\n\n          break;\n        }\n\n      case _ui_utils.ScrollMode.HORIZONTAL:\n        {\n          break;\n        }\n\n      case _ui_utils.ScrollMode.VERTICAL:\n        {\n          if (this._spreadMode === _ui_utils.SpreadMode.NONE) {\n            break;\n          }\n\n          const parity = this._spreadMode - 1;\n\n          if (previous && currentPageNumber % 2 !== parity) {\n            break;\n          } else if (!previous && currentPageNumber % 2 === parity) {\n            break;\n          }\n\n          const {\n            views\n          } = this._getVisiblePages(),\n                expectedId = previous ? currentPageNumber - 1 : currentPageNumber + 1;\n\n          for (const {\n            id,\n            percent,\n            widthPercent\n          } of views) {\n            if (id !== expectedId) {\n              continue;\n            }\n\n            if (percent > 0 && widthPercent === 100) {\n              return 2;\n            }\n\n            break;\n          }\n\n          break;\n        }\n    }\n\n    return 1;\n  }\n\n  nextPage() {\n    const currentPageNumber = this._currentPageNumber,\n          pagesCount = this.pagesCount;\n\n    if (currentPageNumber >= pagesCount) {\n      return false;\n    }\n\n    const advance = this._getPageAdvance(currentPageNumber, false) || 1;\n    this.currentPageNumber = Math.min(currentPageNumber + advance, pagesCount);\n    return true;\n  }\n\n  previousPage() {\n    const currentPageNumber = this._currentPageNumber;\n\n    if (currentPageNumber <= 1) {\n      return false;\n    }\n\n    const advance = this._getPageAdvance(currentPageNumber, true) || 1;\n    this.currentPageNumber = Math.max(currentPageNumber - advance, 1);\n    return true;\n  }\n\n  initializeScriptingEvents() {\n    if (!this.enableScripting || this._pageOpenPendingSet) {\n      return;\n    }\n\n    const eventBus = this.eventBus,\n          pageOpenPendingSet = this._pageOpenPendingSet = new Set(),\n          scriptingEvents = this._scriptingEvents || (this._scriptingEvents = Object.create(null));\n\n    const dispatchPageClose = pageNumber => {\n      if (pageOpenPendingSet.has(pageNumber)) {\n        return;\n      }\n\n      eventBus.dispatch(\"pageclose\", {\n        source: this,\n        pageNumber\n      });\n    };\n\n    const dispatchPageOpen = pageNumber => {\n      const pageView = this._pages[pageNumber - 1];\n\n      if (pageView && pageView.renderingState === _pdf_rendering_queue.RenderingStates.FINISHED) { //?.\n        pageOpenPendingSet.delete(pageNumber);\n        eventBus.dispatch(\"pageopen\", {\n          source: this,\n          pageNumber,\n          actionsPromise: pageView.pdfPage && pageView.pdfPage.getJSActions() //?.\n        });\n      } else {\n        pageOpenPendingSet.add(pageNumber);\n      }\n    };\n\n    scriptingEvents.onPageChanging = ({\n      pageNumber,\n      previous\n    }) => {\n      if (pageNumber === previous) {\n        return;\n      }\n\n      dispatchPageClose(previous);\n      dispatchPageOpen(pageNumber);\n    };\n\n    eventBus._on(\"pagechanging\", scriptingEvents.onPageChanging);\n\n    scriptingEvents.onPageRendered = ({\n      pageNumber\n    }) => {\n      if (!pageOpenPendingSet.has(pageNumber)) {\n        return;\n      }\n\n      if (pageNumber !== this._currentPageNumber) {\n        return;\n      }\n\n      dispatchPageOpen(pageNumber);\n    };\n\n    eventBus._on(\"pagerendered\", scriptingEvents.onPageRendered);\n\n    scriptingEvents.onPagesDestroy = () => {\n      dispatchPageClose(this._currentPageNumber);\n    };\n\n    eventBus._on(\"pagesdestroy\", scriptingEvents.onPagesDestroy);\n\n    dispatchPageOpen(this._currentPageNumber);\n  }\n\n  _resetScriptingEvents() {\n    if (!this.enableScripting || !this._pageOpenPendingSet) {\n      return;\n    }\n\n    const eventBus = this.eventBus,\n          scriptingEvents = this._scriptingEvents;\n\n    eventBus._off(\"pagechanging\", scriptingEvents.onPageChanging);\n\n    scriptingEvents.onPageChanging = null;\n\n    eventBus._off(\"pagerendered\", scriptingEvents.onPageRendered);\n\n    scriptingEvents.onPageRendered = null;\n\n    eventBus._off(\"pagesdestroy\", scriptingEvents.onPagesDestroy);\n\n    scriptingEvents.onPagesDestroy = null;\n    this._pageOpenPendingSet = null;\n  }\n\n}\n\nexports.BaseViewer = BaseViewer;\n\n/***/ }),\n/* 28 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.DefaultAnnotationLayerFactory = exports.AnnotationLayerBuilder = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdf_link_service = __webpack_require__(19);\n\nclass AnnotationLayerBuilder {\n  constructor({\n    pageDiv,\n    pdfPage,\n    linkService,\n    downloadManager,\n    annotationStorage = null,\n    imageResourcesPath = \"\",\n    renderInteractiveForms = true,\n    l10n = _ui_utils.NullL10n,\n    enableScripting = false,\n    hasJSActionsPromise = null,\n    mouseState = null\n  }) {\n    this.pageDiv = pageDiv;\n    this.pdfPage = pdfPage;\n    this.linkService = linkService;\n    this.downloadManager = downloadManager;\n    this.imageResourcesPath = imageResourcesPath;\n    this.renderInteractiveForms = renderInteractiveForms;\n    this.l10n = l10n;\n    this.annotationStorage = annotationStorage;\n    this.enableScripting = enableScripting;\n    this._hasJSActionsPromise = hasJSActionsPromise;\n    this._mouseState = mouseState;\n    this.div = null;\n    this._cancelled = false;\n  }\n\n  render(viewport, intent = \"display\") {\n    return Promise.all([this.pdfPage.getAnnotations({\n      intent\n    }), this._hasJSActionsPromise]).then(([annotations, hasJSActions = false]) => {\n      if (this._cancelled) {\n        return;\n      }\n\n      if (annotations.length === 0) {\n        return;\n      }\n\n      const parameters = {\n        viewport: viewport.clone({\n          dontFlip: true\n        }),\n        div: this.div,\n        annotations,\n        page: this.pdfPage,\n        imageResourcesPath: this.imageResourcesPath,\n        renderInteractiveForms: this.renderInteractiveForms,\n        linkService: this.linkService,\n        downloadManager: this.downloadManager,\n        annotationStorage: this.annotationStorage,\n        enableScripting: this.enableScripting,\n        hasJSActions,\n        mouseState: this._mouseState\n      };\n\n      if (this.div) {\n        _pdfjsLib.AnnotationLayer.update(parameters);\n      } else {\n        this.div = document.createElement(\"div\");\n        this.div.className = \"annotationLayer\";\n        this.pageDiv.appendChild(this.div);\n        parameters.div = this.div;\n\n        _pdfjsLib.AnnotationLayer.render(parameters);\n\n        this.l10n.translate(this.div);\n      }\n    });\n  }\n\n  cancel() {\n    this._cancelled = true;\n  }\n\n  hide() {\n    if (!this.div) {\n      return;\n    }\n\n    this.div.setAttribute(\"hidden\", \"true\");\n  }\n\n}\n\nexports.AnnotationLayerBuilder = AnnotationLayerBuilder;\n\nclass DefaultAnnotationLayerFactory {\n  createAnnotationLayerBuilder(pageDiv, pdfPage, annotationStorage = null, imageResourcesPath = \"\", renderInteractiveForms = true, l10n = _ui_utils.NullL10n, enableScripting = false, hasJSActionsPromise = null, mouseState = null) {\n    return new AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      imageResourcesPath,\n      renderInteractiveForms,\n      linkService: new _pdf_link_service.SimpleLinkService(),\n      l10n,\n      annotationStorage,\n      enableScripting,\n      hasJSActionsPromise,\n      mouseState\n    });\n  }\n\n}\n\nexports.DefaultAnnotationLayerFactory = DefaultAnnotationLayerFactory;\n\n/***/ }),\n/* 29 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFPageView = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _pdf_rendering_queue = __webpack_require__(8);\n\nvar _viewer_compatibility = __webpack_require__(2);\n\nconst MAX_CANVAS_PIXELS = _viewer_compatibility.viewerCompatibilityParams.maxCanvasPixels || 16777216;\n\nclass PDFPageView {\n  constructor(options) {\n    const container = options.container;\n    const defaultViewport = options.defaultViewport;\n    this.id = options.id;\n    this.renderingId = \"page\" + this.id;\n    this.pdfPage = null;\n    this.pageLabel = null;\n    this.rotation = 0;\n    this.scale = options.scale || _ui_utils.DEFAULT_SCALE;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this._optionalContentConfigPromise = options.optionalContentConfigPromise || null;\n    this.hasRestrictedScaling = false;\n    this.textLayerMode = Number.isInteger(options.textLayerMode) ? options.textLayerMode : _ui_utils.TextLayerMode.ENABLE;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.renderInteractiveForms = typeof options.renderInteractiveForms === \"boolean\" ? options.renderInteractiveForms : true;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels || MAX_CANVAS_PIXELS;\n    this.eventBus = options.eventBus;\n    this.renderingQueue = options.renderingQueue;\n    this.textLayerFactory = options.textLayerFactory;\n    this.annotationLayerFactory = options.annotationLayerFactory;\n    this.renderer = options.renderer || _ui_utils.RendererType.CANVAS;\n    this.enableWebGL = options.enableWebGL || false;\n    this.l10n = options.l10n || _ui_utils.NullL10n;\n    this.enableScripting = options.enableScripting || false;\n    this.paintTask = null;\n    this.paintedViewportMap = new WeakMap();\n    this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n    this.resume = null;\n    this._renderError = null;\n    this.annotationLayer = null;\n    this.textLayer = null;\n    this.zoomLayer = null;\n    const div = document.createElement(\"div\");\n    div.className = \"page\";\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n    div.setAttribute(\"data-page-number\", this.id);\n    this.div = div;\n    container.appendChild(div);\n  }\n\n  setPdfPage(pdfPage) {\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({\n      scale: this.scale * _ui_utils.CSS_UNITS,\n      rotation: totalRotation\n    });\n    this.reset();\n  }\n\n  destroy() {\n    this.reset();\n\n    if (this.pdfPage) {\n      this.pdfPage.cleanup();\n    }\n  }\n\n  async _renderAnnotationLayer() {\n    let error = null;\n\n    try {\n      await this.annotationLayer.render(this.viewport, \"display\");\n    } catch (ex) {\n      error = ex;\n    } finally {\n      this.eventBus.dispatch(\"annotationlayerrendered\", {\n        source: this,\n        pageNumber: this.id,\n        error\n      });\n    }\n  }\n\n  _resetZoomLayer(removeFromDOM = false) {\n    if (!this.zoomLayer) {\n      return;\n    }\n\n    const zoomLayerCanvas = this.zoomLayer.firstChild;\n    this.paintedViewportMap.delete(zoomLayerCanvas);\n    zoomLayerCanvas.width = 0;\n    zoomLayerCanvas.height = 0;\n\n    if (removeFromDOM) {\n      this.zoomLayer.remove();\n    }\n\n    this.zoomLayer = null;\n  }\n\n  reset(keepZoomLayer = false, keepAnnotations = false) {\n    this.cancelRendering(keepAnnotations);\n    this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n    const div = this.div;\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n    const childNodes = div.childNodes;\n    const currentZoomLayerNode = keepZoomLayer && this.zoomLayer || null;\n    const currentAnnotationNode = keepAnnotations && this.annotationLayer && this.annotationLayer.div || null;\n\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const node = childNodes[i];\n\n      if (currentZoomLayerNode === node || currentAnnotationNode === node) {\n        continue;\n      }\n\n      div.removeChild(node);\n    }\n\n    div.removeAttribute(\"data-loaded\");\n\n    if (currentAnnotationNode) {\n      this.annotationLayer.hide();\n    } else if (this.annotationLayer) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n    }\n\n    if (!currentZoomLayerNode) {\n      if (this.canvas) {\n        this.paintedViewportMap.delete(this.canvas);\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        delete this.canvas;\n      }\n\n      this._resetZoomLayer();\n    }\n\n    if (this.svg) {\n      this.paintedViewportMap.delete(this.svg);\n      delete this.svg;\n    }\n\n    this.loadingIconDiv = document.createElement(\"div\");\n    this.loadingIconDiv.className = \"loadingIcon\";\n    div.appendChild(this.loadingIconDiv);\n  }\n\n  update(scale, rotation, optionalContentConfigPromise = null) {\n    this.scale = scale || this.scale;\n\n    if (typeof rotation !== \"undefined\") {\n      this.rotation = rotation;\n    }\n\n    if (optionalContentConfigPromise instanceof Promise) {\n      this._optionalContentConfigPromise = optionalContentConfigPromise;\n    }\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = this.viewport.clone({\n      scale: this.scale * _ui_utils.CSS_UNITS,\n      rotation: totalRotation\n    });\n\n    if (this.svg) {\n      this.cssTransform(this.svg, true);\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: true,\n        timestamp: performance.now(),\n        error: this._renderError\n      });\n      return;\n    }\n\n    let isScalingRestricted = false;\n\n    if (this.canvas && this.maxCanvasPixels > 0) {\n      const outputScale = this.outputScale;\n\n      if ((Math.floor(this.viewport.width) * outputScale.sx | 0) * (Math.floor(this.viewport.height) * outputScale.sy | 0) > this.maxCanvasPixels) {\n        isScalingRestricted = true;\n      }\n    }\n\n    if (this.canvas) {\n      if (this.useOnlyCssZoom || this.hasRestrictedScaling && isScalingRestricted) {\n        this.cssTransform(this.canvas, true);\n        this.eventBus.dispatch(\"pagerendered\", {\n          source: this,\n          pageNumber: this.id,\n          cssTransform: true,\n          timestamp: performance.now(),\n          error: this._renderError\n        });\n        return;\n      }\n\n      if (!this.zoomLayer && !this.canvas.hasAttribute(\"hidden\")) {\n        this.zoomLayer = this.canvas.parentNode;\n        this.zoomLayer.style.position = \"absolute\";\n      }\n    }\n\n    if (this.zoomLayer) {\n      this.cssTransform(this.zoomLayer.firstChild);\n    }\n\n    this.reset(true, true);\n  }\n\n  cancelRendering(keepAnnotations = false) {\n    if (this.paintTask) {\n      this.paintTask.cancel();\n      this.paintTask = null;\n    }\n\n    this.resume = null;\n\n    if (this.textLayer) {\n      this.textLayer.cancel();\n      this.textLayer = null;\n    }\n\n    if (!keepAnnotations && this.annotationLayer) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n    }\n  }\n\n  cssTransform(target, redrawAnnotations = false) {\n    const width = this.viewport.width;\n    const height = this.viewport.height;\n    const div = this.div;\n    target.style.width = target.parentNode.style.width = div.style.width = Math.floor(width) + \"px\";\n    target.style.height = target.parentNode.style.height = div.style.height = Math.floor(height) + \"px\";\n    const relativeRotation = this.viewport.rotation - this.paintedViewportMap.get(target).rotation;\n    const absRotation = Math.abs(relativeRotation);\n    let scaleX = 1,\n        scaleY = 1;\n\n    if (absRotation === 90 || absRotation === 270) {\n      scaleX = height / width;\n      scaleY = width / height;\n    }\n\n    target.style.transform = `rotate(${relativeRotation}deg) scale(${scaleX}, ${scaleY})`;\n\n    if (this.textLayer) {\n      const textLayerViewport = this.textLayer.viewport;\n      const textRelativeRotation = this.viewport.rotation - textLayerViewport.rotation;\n      const textAbsRotation = Math.abs(textRelativeRotation);\n      let scale = width / textLayerViewport.width;\n\n      if (textAbsRotation === 90 || textAbsRotation === 270) {\n        scale = width / textLayerViewport.height;\n      }\n\n      const textLayerDiv = this.textLayer.textLayerDiv;\n      let transX, transY;\n\n      switch (textAbsRotation) {\n        case 0:\n          transX = transY = 0;\n          break;\n\n        case 90:\n          transX = 0;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n\n        case 180:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n\n        case 270:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = 0;\n          break;\n\n        default:\n          console.error(\"Bad rotation value.\");\n          break;\n      }\n\n      textLayerDiv.style.transform = `rotate(${textAbsRotation}deg) ` + `scale(${scale}) ` + `translate(${transX}, ${transY})`;\n      textLayerDiv.style.transformOrigin = \"0% 0%\";\n    }\n\n    if (redrawAnnotations && this.annotationLayer) {\n      this._renderAnnotationLayer();\n    }\n  }\n\n  get width() {\n    return this.viewport.width;\n  }\n\n  get height() {\n    return this.viewport.height;\n  }\n\n  getPagePoint(x, y) {\n    return this.viewport.convertToPdfPoint(x, y);\n  }\n\n  draw() {\n    if (this.renderingState !== _pdf_rendering_queue.RenderingStates.INITIAL) {\n      console.error(\"Must be in new state before drawing\");\n      this.reset();\n    }\n\n    const {\n      div,\n      pdfPage\n    } = this;\n\n    if (!pdfPage) {\n      this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\n    }\n\n    this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n    const canvasWrapper = document.createElement(\"div\");\n    canvasWrapper.style.width = div.style.width;\n    canvasWrapper.style.height = div.style.height;\n    canvasWrapper.classList.add(\"canvasWrapper\");\n\n    if (this.annotationLayer && this.annotationLayer.div) {\n      div.insertBefore(canvasWrapper, this.annotationLayer.div);\n    } else {\n      div.appendChild(canvasWrapper);\n    }\n\n    let textLayer = null;\n\n    if (this.textLayerMode !== _ui_utils.TextLayerMode.DISABLE && this.textLayerFactory) {\n      const textLayerDiv = document.createElement(\"div\");\n      textLayerDiv.className = \"textLayer\";\n      textLayerDiv.style.width = canvasWrapper.style.width;\n      textLayerDiv.style.height = canvasWrapper.style.height;\n\n      if (this.annotationLayer && this.annotationLayer.div) {\n        div.insertBefore(textLayerDiv, this.annotationLayer.div);\n      } else {\n        div.appendChild(textLayerDiv);\n      }\n\n      textLayer = this.textLayerFactory.createTextLayerBuilder(textLayerDiv, this.id - 1, this.viewport, this.textLayerMode === _ui_utils.TextLayerMode.ENABLE_ENHANCE, this.eventBus);\n    }\n\n    this.textLayer = textLayer;\n    let renderContinueCallback = null;\n\n    if (this.renderingQueue) {\n      renderContinueCallback = cont => {\n        if (!this.renderingQueue.isHighestPriority(this)) {\n          this.renderingState = _pdf_rendering_queue.RenderingStates.PAUSED;\n\n          this.resume = () => {\n            this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n            cont();\n          };\n\n          return;\n        }\n\n        cont();\n      };\n    }\n\n    const finishPaintTask = async (error = null) => {\n      if (paintTask === this.paintTask) {\n        this.paintTask = null;\n      }\n\n      if (error instanceof _pdfjsLib.RenderingCancelledException) {\n        this._renderError = null;\n        return;\n      }\n\n      this._renderError = error;\n      this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n\n      this._resetZoomLayer(true);\n\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: false,\n        timestamp: performance.now(),\n        error: this._renderError\n      });\n\n      if (error) {\n        throw error;\n      }\n    };\n\n    const paintTask = this.renderer === _ui_utils.RendererType.SVG ? this.paintOnSvg(canvasWrapper) : this.paintOnCanvas(canvasWrapper);\n    paintTask.onRenderContinue = renderContinueCallback;\n    this.paintTask = paintTask;\n    const resultPromise = paintTask.promise.then(function () {\n      return finishPaintTask(null).then(function () {\n        if (textLayer) {\n          const readableStream = pdfPage.streamTextContent({\n            normalizeWhitespace: true\n          });\n          textLayer.setTextContentStream(readableStream);\n          textLayer.render();\n        }\n      });\n    }, function (reason) {\n      return finishPaintTask(reason);\n    });\n\n    if (this.annotationLayerFactory) {\n      if (!this.annotationLayer) {\n        this.annotationLayer = this.annotationLayerFactory.createAnnotationLayerBuilder(div, pdfPage, null, this.imageResourcesPath, this.renderInteractiveForms, this.l10n, this.enableScripting, null, null);\n      }\n\n      this._renderAnnotationLayer();\n    }\n\n    div.setAttribute(\"data-loaded\", true);\n    this.eventBus.dispatch(\"pagerender\", {\n      source: this,\n      pageNumber: this.id\n    });\n    return resultPromise;\n  }\n\n  paintOnCanvas(canvasWrapper) {\n    const renderCapability = (0, _pdfjsLib.createPromiseCapability)();\n    const result = {\n      promise: renderCapability.promise,\n\n      onRenderContinue(cont) {\n        cont();\n      },\n\n      cancel() {\n        renderTask.cancel();\n      }\n\n    };\n    const viewport = this.viewport;\n    const canvas = document.createElement(\"canvas\");\n    this.l10n.get(\"page_canvas\", {\n      page: this.id\n    }, \"Page {{page}}\").then(msg => {\n      canvas.setAttribute(\"aria-label\", msg);\n    });\n    canvas.setAttribute(\"hidden\", \"hidden\");\n    let isCanvasHidden = true;\n\n    const showCanvas = function () {\n      if (isCanvasHidden) {\n        canvas.removeAttribute(\"hidden\");\n        isCanvasHidden = false;\n      }\n    };\n\n    canvasWrapper.appendChild(canvas);\n    this.canvas = canvas;\n    canvas.mozOpaque = true;\n    const ctx = canvas.getContext(\"2d\", {\n      alpha: false\n    });\n    const outputScale = (0, _ui_utils.getOutputScale)(ctx);\n    this.outputScale = outputScale;\n\n    if (this.useOnlyCssZoom) {\n      const actualSizeViewport = viewport.clone({\n        scale: _ui_utils.CSS_UNITS\n      });\n      outputScale.sx *= actualSizeViewport.width / viewport.width;\n      outputScale.sy *= actualSizeViewport.height / viewport.height;\n      outputScale.scaled = true;\n    }\n\n    if (this.maxCanvasPixels > 0) {\n      const pixelsInViewport = viewport.width * viewport.height;\n      const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\n\n      if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n        outputScale.sx = maxScale;\n        outputScale.sy = maxScale;\n        outputScale.scaled = true;\n        this.hasRestrictedScaling = true;\n      } else {\n        this.hasRestrictedScaling = false;\n      }\n    }\n\n    const sfx = (0, _ui_utils.approximateFraction)(outputScale.sx);\n    const sfy = (0, _ui_utils.approximateFraction)(outputScale.sy);\n    canvas.width = (0, _ui_utils.roundToDivide)(viewport.width * outputScale.sx, sfx[0]);\n    canvas.height = (0, _ui_utils.roundToDivide)(viewport.height * outputScale.sy, sfy[0]);\n    canvas.style.width = (0, _ui_utils.roundToDivide)(viewport.width, sfx[1]) + \"px\";\n    canvas.style.height = (0, _ui_utils.roundToDivide)(viewport.height, sfy[1]) + \"px\";\n    this.paintedViewportMap.set(canvas, viewport);\n    const transform = !outputScale.scaled ? null : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: this.viewport,\n      enableWebGL: this.enableWebGL,\n      renderInteractiveForms: this.renderInteractiveForms,\n      optionalContentConfigPromise: this._optionalContentConfigPromise\n    };\n    const renderTask = this.pdfPage.render(renderContext);\n\n    renderTask.onContinue = function (cont) {\n      showCanvas();\n\n      if (result.onRenderContinue) {\n        result.onRenderContinue(cont);\n      } else {\n        cont();\n      }\n    };\n\n    renderTask.promise.then(function () {\n      showCanvas();\n      renderCapability.resolve(undefined);\n    }, function (error) {\n      showCanvas();\n      renderCapability.reject(error);\n    });\n    return result;\n  }\n\n  paintOnSvg(wrapper) {\n    let cancelled = false;\n\n    const ensureNotCancelled = () => {\n      if (cancelled) {\n        throw new _pdfjsLib.RenderingCancelledException(`Rendering cancelled, page ${this.id}`, \"svg\");\n      }\n    };\n\n    const pdfPage = this.pdfPage;\n    const actualSizeViewport = this.viewport.clone({\n      scale: _ui_utils.CSS_UNITS\n    });\n    const promise = pdfPage.getOperatorList().then(opList => {\n      ensureNotCancelled();\n      const svgGfx = new _pdfjsLib.SVGGraphics(pdfPage.commonObjs, pdfPage.objs);\n      return svgGfx.getSVG(opList, actualSizeViewport).then(svg => {\n        ensureNotCancelled();\n        this.svg = svg;\n        this.paintedViewportMap.set(svg, actualSizeViewport);\n        svg.style.width = wrapper.style.width;\n        svg.style.height = wrapper.style.height;\n        this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n        wrapper.appendChild(svg);\n      });\n    });\n    return {\n      promise,\n\n      onRenderContinue(cont) {\n        cont();\n      },\n\n      cancel() {\n        cancelled = true;\n      }\n\n    };\n  }\n\n  setPageLabel(label) {\n    this.pageLabel = typeof label === \"string\" ? label : null;\n\n    if (this.pageLabel !== null) {\n      this.div.setAttribute(\"data-page-label\", this.pageLabel);\n    } else {\n      this.div.removeAttribute(\"data-page-label\");\n    }\n  }\n\n}\n\nexports.PDFPageView = PDFPageView;\n\n/***/ }),\n/* 30 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.TextLayerBuilder = exports.DefaultTextLayerFactory = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nconst EXPAND_DIVS_TIMEOUT = 300;\n\nclass TextLayerBuilder {\n  constructor({\n    textLayerDiv,\n    eventBus,\n    pageIndex,\n    viewport,\n    findController = null,\n    enhanceTextSelection = false\n  }) {\n    this.textLayerDiv = textLayerDiv;\n    this.eventBus = eventBus;\n    this.textContent = null;\n    this.textContentItemsStr = [];\n    this.textContentStream = null;\n    this.renderingDone = false;\n    this.pageIdx = pageIndex;\n    this.pageNumber = this.pageIdx + 1;\n    this.matches = [];\n    this.viewport = viewport;\n    this.textDivs = [];\n    this.findController = findController;\n    this.textLayerRenderTask = null;\n    this.enhanceTextSelection = enhanceTextSelection;\n    this._onUpdateTextLayerMatches = null;\n\n    this._bindMouse();\n  }\n\n  _finishRendering() {\n    this.renderingDone = true;\n\n    if (!this.enhanceTextSelection) {\n      const endOfContent = document.createElement(\"div\");\n      endOfContent.className = \"endOfContent\";\n      this.textLayerDiv.appendChild(endOfContent);\n    }\n\n    this.eventBus.dispatch(\"textlayerrendered\", {\n      source: this,\n      pageNumber: this.pageNumber,\n      numTextDivs: this.textDivs.length\n    });\n  }\n\n  render(timeout = 0) {\n    if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n      return;\n    }\n\n    this.cancel();\n    this.textDivs = [];\n    const textLayerFrag = document.createDocumentFragment();\n    this.textLayerRenderTask = (0, _pdfjsLib.renderTextLayer)({\n      textContent: this.textContent,\n      textContentStream: this.textContentStream,\n      container: textLayerFrag,\n      viewport: this.viewport,\n      textDivs: this.textDivs,\n      textContentItemsStr: this.textContentItemsStr,\n      timeout,\n      enhanceTextSelection: this.enhanceTextSelection\n    });\n    this.textLayerRenderTask.promise.then(() => {\n      this.textLayerDiv.appendChild(textLayerFrag);\n\n      this._finishRendering();\n\n      this._updateMatches();\n    }, function (reason) {});\n\n    if (!this._onUpdateTextLayerMatches) {\n      this._onUpdateTextLayerMatches = evt => {\n        if (evt.pageIndex === this.pageIdx || evt.pageIndex === -1) {\n          this._updateMatches();\n        }\n      };\n\n      this.eventBus._on(\"updatetextlayermatches\", this._onUpdateTextLayerMatches);\n    }\n  }\n\n  cancel() {\n    if (this.textLayerRenderTask) {\n      this.textLayerRenderTask.cancel();\n      this.textLayerRenderTask = null;\n    }\n\n    if (this._onUpdateTextLayerMatches) {\n      this.eventBus._off(\"updatetextlayermatches\", this._onUpdateTextLayerMatches);\n\n      this._onUpdateTextLayerMatches = null;\n    }\n  }\n\n  setTextContentStream(readableStream) {\n    this.cancel();\n    this.textContentStream = readableStream;\n  }\n\n  setTextContent(textContent) {\n    this.cancel();\n    this.textContent = textContent;\n  }\n\n  _convertMatches(matches, matchesLength) {\n    if (!matches) {\n      return [];\n    }\n\n    const {\n      textContentItemsStr\n    } = this;\n    let i = 0,\n        iIndex = 0;\n    const end = textContentItemsStr.length - 1;\n    const result = [];\n\n    for (let m = 0, mm = matches.length; m < mm; m++) {\n      let matchIdx = matches[m];\n\n      while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      if (i === textContentItemsStr.length) {\n        console.error(\"Could not find a matching mapping\");\n      }\n\n      const match = {\n        begin: {\n          divIdx: i,\n          offset: matchIdx - iIndex\n        }\n      };\n      matchIdx += matchesLength[m];\n\n      while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      match.end = {\n        divIdx: i,\n        offset: matchIdx - iIndex\n      };\n      result.push(match);\n    }\n\n    return result;\n  }\n\n  _renderMatches(matches) {\n    if (matches.length === 0) {\n      return;\n    }\n\n    const {\n      findController,\n      pageIdx,\n      textContentItemsStr,\n      textDivs\n    } = this;\n    const isSelectedPage = pageIdx === findController.selected.pageIdx;\n    const selectedMatchIdx = findController.selected.matchIdx;\n    const highlightAll = findController.state.highlightAll;\n    let prevEnd = null;\n    const infinity = {\n      divIdx: -1,\n      offset: undefined\n    };\n\n    function beginText(begin, className) {\n      const divIdx = begin.divIdx;\n      textDivs[divIdx].textContent = \"\";\n      appendTextToDiv(divIdx, 0, begin.offset, className);\n    }\n\n    function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n      const div = textDivs[divIdx];\n      const content = textContentItemsStr[divIdx].substring(fromOffset, toOffset);\n      const node = document.createTextNode(content);\n\n      if (className) {\n        const span = document.createElement(\"span\");\n        span.className = className;\n        span.appendChild(node);\n        div.appendChild(span);\n        return;\n      }\n\n      div.appendChild(node);\n    }\n\n    let i0 = selectedMatchIdx,\n        i1 = i0 + 1;\n\n    if (highlightAll) {\n      i0 = 0;\n      i1 = matches.length;\n    } else if (!isSelectedPage) {\n      return;\n    }\n\n    for (let i = i0; i < i1; i++) {\n      const match = matches[i];\n      const begin = match.begin;\n      const end = match.end;\n      const isSelected = isSelectedPage && i === selectedMatchIdx;\n      const highlightSuffix = isSelected ? \" selected\" : \"\";\n\n      if (isSelected) {\n        findController.scrollMatchIntoView({\n          element: textDivs[begin.divIdx],\n          pageIndex: pageIdx,\n          matchIndex: selectedMatchIdx\n        });\n      }\n\n      if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n        if (prevEnd !== null) {\n          appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n        }\n\n        beginText(begin);\n      } else {\n        appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n      }\n\n      if (begin.divIdx === end.divIdx) {\n        appendTextToDiv(begin.divIdx, begin.offset, end.offset, \"highlight\" + highlightSuffix);\n      } else {\n        appendTextToDiv(begin.divIdx, begin.offset, infinity.offset, \"highlight begin\" + highlightSuffix);\n\n        for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n          textDivs[n0].className = \"highlight middle\" + highlightSuffix;\n        }\n\n        beginText(end, \"highlight end\" + highlightSuffix);\n      }\n\n      prevEnd = end;\n    }\n\n    if (prevEnd) {\n      appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n    }\n  }\n\n  _updateMatches() {\n    if (!this.renderingDone) {\n      return;\n    }\n\n    const {\n      findController,\n      matches,\n      pageIdx,\n      textContentItemsStr,\n      textDivs\n    } = this;\n    let clearedUntilDivIdx = -1;\n\n    for (let i = 0, ii = matches.length; i < ii; i++) {\n      const match = matches[i];\n      const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n\n      for (let n = begin, end = match.end.divIdx; n <= end; n++) {\n        const div = textDivs[n];\n        div.textContent = textContentItemsStr[n];\n        div.className = \"\";\n      }\n\n      clearedUntilDivIdx = match.end.divIdx + 1;\n    }\n\n    if (!findController || !findController.highlightMatches) {\n      return;\n    }\n\n    const pageMatches = findController.pageMatches[pageIdx] || null;\n    const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\n    this.matches = this._convertMatches(pageMatches, pageMatchesLength);\n\n    this._renderMatches(this.matches);\n  }\n\n  _bindMouse() {\n    const div = this.textLayerDiv;\n    let expandDivsTimer = null;\n    div.addEventListener(\"mousedown\", evt => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        this.textLayerRenderTask.expandTextDivs(true);\n\n        if (expandDivsTimer) {\n          clearTimeout(expandDivsTimer);\n          expandDivsTimer = null;\n        }\n\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n\n      if (!end) {\n        return;\n      }\n\n      let adjustTop = evt.target !== div;\n      adjustTop = adjustTop && window.getComputedStyle(end).getPropertyValue(\"-moz-user-select\") !== \"none\";\n\n      if (adjustTop) {\n        const divBounds = div.getBoundingClientRect();\n        const r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height);\n        end.style.top = (r * 100).toFixed(2) + \"%\";\n      }\n\n      end.classList.add(\"active\");\n    });\n    div.addEventListener(\"mouseup\", () => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        expandDivsTimer = setTimeout(() => {\n          if (this.textLayerRenderTask) {\n            this.textLayerRenderTask.expandTextDivs(false);\n          }\n\n          expandDivsTimer = null;\n        }, EXPAND_DIVS_TIMEOUT);\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n\n      if (!end) {\n        return;\n      }\n\n      end.style.top = \"\";\n      end.classList.remove(\"active\");\n    });\n  }\n\n}\n\nexports.TextLayerBuilder = TextLayerBuilder;\n\nclass DefaultTextLayerFactory {\n  createTextLayerBuilder(textLayerDiv, pageIndex, viewport, enhanceTextSelection = false, eventBus) {\n    return new TextLayerBuilder({\n      textLayerDiv,\n      pageIndex,\n      viewport,\n      enhanceTextSelection,\n      eventBus\n    });\n  }\n\n}\n\nexports.DefaultTextLayerFactory = DefaultTextLayerFactory;\n\n/***/ }),\n/* 31 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SecondaryToolbar = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdf_cursor_tools = __webpack_require__(6);\n\nvar _pdf_single_page_viewer = __webpack_require__(32);\n\nclass SecondaryToolbar {\n  constructor(options, mainContainer, eventBus) {\n    this.toolbar = options.toolbar;\n    this.toggleButton = options.toggleButton;\n    this.toolbarButtonContainer = options.toolbarButtonContainer;\n    this.buttons = [{\n      element: options.presentationModeButton,\n      eventName: \"presentationmode\",\n      close: true\n    }, {\n      element: options.openFileButton,\n      eventName: \"openfile\",\n      close: true\n    }, {\n      element: options.printButton,\n      eventName: \"print\",\n      close: true\n    }, {\n      element: options.downloadButton,\n      eventName: \"download\",\n      close: true\n    }, {\n      element: options.viewBookmarkButton,\n      eventName: null,\n      close: true\n    }, {\n      element: options.firstPageButton,\n      eventName: \"firstpage\",\n      close: true\n    }, {\n      element: options.lastPageButton,\n      eventName: \"lastpage\",\n      close: true\n    }, {\n      element: options.pageRotateCwButton,\n      eventName: \"rotatecw\",\n      close: false\n    }, {\n      element: options.pageRotateCcwButton,\n      eventName: \"rotateccw\",\n      close: false\n    }, {\n      element: options.cursorSelectToolButton,\n      eventName: \"switchcursortool\",\n      eventDetails: {\n        tool: _pdf_cursor_tools.CursorTool.SELECT\n      },\n      close: true\n    }, {\n      element: options.cursorHandToolButton,\n      eventName: \"switchcursortool\",\n      eventDetails: {\n        tool: _pdf_cursor_tools.CursorTool.HAND\n      },\n      close: true\n    }, {\n      element: options.scrollVerticalButton,\n      eventName: \"switchscrollmode\",\n      eventDetails: {\n        mode: _ui_utils.ScrollMode.VERTICAL\n      },\n      close: true\n    }, {\n      element: options.scrollHorizontalButton,\n      eventName: \"switchscrollmode\",\n      eventDetails: {\n        mode: _ui_utils.ScrollMode.HORIZONTAL\n      },\n      close: true\n    }, {\n      element: options.scrollWrappedButton,\n      eventName: \"switchscrollmode\",\n      eventDetails: {\n        mode: _ui_utils.ScrollMode.WRAPPED\n      },\n      close: true\n    }, {\n      element: options.spreadNoneButton,\n      eventName: \"switchspreadmode\",\n      eventDetails: {\n        mode: _ui_utils.SpreadMode.NONE\n      },\n      close: true\n    }, {\n      element: options.spreadOddButton,\n      eventName: \"switchspreadmode\",\n      eventDetails: {\n        mode: _ui_utils.SpreadMode.ODD\n      },\n      close: true\n    }, {\n      element: options.spreadEvenButton,\n      eventName: \"switchspreadmode\",\n      eventDetails: {\n        mode: _ui_utils.SpreadMode.EVEN\n      },\n      close: true\n    }, {\n      element: options.documentPropertiesButton,\n      eventName: \"documentproperties\",\n      close: true\n    }];\n    this.items = {\n      firstPage: options.firstPageButton,\n      lastPage: options.lastPageButton,\n      pageRotateCw: options.pageRotateCwButton,\n      pageRotateCcw: options.pageRotateCcwButton\n    };\n    this.mainContainer = mainContainer;\n    this.eventBus = eventBus;\n    this.opened = false;\n    this.containerHeight = null;\n    this.previousContainerHeight = null;\n    this.reset();\n\n    this._bindClickListeners();\n\n    this._bindCursorToolsListener(options);\n\n    this._bindScrollModeListener(options);\n\n    this._bindSpreadModeListener(options);\n\n    this.eventBus._on(\"resize\", this._setMaxHeight.bind(this));\n\n    this.eventBus._on(\"baseviewerinit\", evt => {\n      if (evt.source instanceof _pdf_single_page_viewer.PDFSinglePageViewer) {\n        this.toolbarButtonContainer.classList.add(\"hiddenScrollModeButtons\", \"hiddenSpreadModeButtons\");\n      } else {\n        this.toolbarButtonContainer.classList.remove(\"hiddenScrollModeButtons\", \"hiddenSpreadModeButtons\");\n      }\n    });\n  }\n\n  get isOpen() {\n    return this.opened;\n  }\n\n  setPageNumber(pageNumber) {\n    this.pageNumber = pageNumber;\n\n    this._updateUIState();\n  }\n\n  setPagesCount(pagesCount) {\n    this.pagesCount = pagesCount;\n\n    this._updateUIState();\n  }\n\n  reset() {\n    this.pageNumber = 0;\n    this.pagesCount = 0;\n\n    this._updateUIState();\n\n    this.eventBus.dispatch(\"secondarytoolbarreset\", {\n      source: this\n    });\n  }\n\n  _updateUIState() {\n    this.items.firstPage.disabled = this.pageNumber <= 1;\n    this.items.lastPage.disabled = this.pageNumber >= this.pagesCount;\n    this.items.pageRotateCw.disabled = this.pagesCount === 0;\n    this.items.pageRotateCcw.disabled = this.pagesCount === 0;\n  }\n\n  _bindClickListeners() {\n    this.toggleButton.addEventListener(\"click\", this.toggle.bind(this));\n\n    for (const {\n      element,\n      eventName,\n      close,\n      eventDetails\n    } of this.buttons) {\n      element.addEventListener(\"click\", evt => {\n        if (eventName !== null) {\n          const details = {\n            source: this\n          };\n\n          for (const property in eventDetails) {\n            details[property] = eventDetails[property];\n          }\n\n          this.eventBus.dispatch(eventName, details);\n        }\n\n        if (close) {\n          this.close();\n        }\n      });\n    }\n  }\n\n  _bindCursorToolsListener(buttons) {\n    this.eventBus._on(\"cursortoolchanged\", function ({\n      tool\n    }) {\n      buttons.cursorSelectToolButton.classList.toggle(\"toggled\", tool === _pdf_cursor_tools.CursorTool.SELECT);\n      buttons.cursorHandToolButton.classList.toggle(\"toggled\", tool === _pdf_cursor_tools.CursorTool.HAND);\n    });\n  }\n\n  _bindScrollModeListener(buttons) {\n    function scrollModeChanged({\n      mode\n    }) {\n      buttons.scrollVerticalButton.classList.toggle(\"toggled\", mode === _ui_utils.ScrollMode.VERTICAL);\n      buttons.scrollHorizontalButton.classList.toggle(\"toggled\", mode === _ui_utils.ScrollMode.HORIZONTAL);\n      buttons.scrollWrappedButton.classList.toggle(\"toggled\", mode === _ui_utils.ScrollMode.WRAPPED);\n      const isScrollModeHorizontal = mode === _ui_utils.ScrollMode.HORIZONTAL;\n      buttons.spreadNoneButton.disabled = isScrollModeHorizontal;\n      buttons.spreadOddButton.disabled = isScrollModeHorizontal;\n      buttons.spreadEvenButton.disabled = isScrollModeHorizontal;\n    }\n\n    this.eventBus._on(\"scrollmodechanged\", scrollModeChanged);\n\n    this.eventBus._on(\"secondarytoolbarreset\", evt => {\n      if (evt.source === this) {\n        scrollModeChanged({\n          mode: _ui_utils.ScrollMode.VERTICAL\n        });\n      }\n    });\n  }\n\n  _bindSpreadModeListener(buttons) {\n    function spreadModeChanged({\n      mode\n    }) {\n      buttons.spreadNoneButton.classList.toggle(\"toggled\", mode === _ui_utils.SpreadMode.NONE);\n      buttons.spreadOddButton.classList.toggle(\"toggled\", mode === _ui_utils.SpreadMode.ODD);\n      buttons.spreadEvenButton.classList.toggle(\"toggled\", mode === _ui_utils.SpreadMode.EVEN);\n    }\n\n    this.eventBus._on(\"spreadmodechanged\", spreadModeChanged);\n\n    this.eventBus._on(\"secondarytoolbarreset\", evt => {\n      if (evt.source === this) {\n        spreadModeChanged({\n          mode: _ui_utils.SpreadMode.NONE\n        });\n      }\n    });\n  }\n\n  open() {\n    if (this.opened) {\n      return;\n    }\n\n    this.opened = true;\n\n    this._setMaxHeight();\n\n    this.toggleButton.classList.add(\"toggled\");\n    this.toolbar.classList.remove(\"hidden\");\n  }\n\n  close() {\n    if (!this.opened) {\n      return;\n    }\n\n    this.opened = false;\n    this.toolbar.classList.add(\"hidden\");\n    this.toggleButton.classList.remove(\"toggled\");\n  }\n\n  toggle() {\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  _setMaxHeight() {\n    if (!this.opened) {\n      return;\n    }\n\n    this.containerHeight = this.mainContainer.clientHeight;\n\n    if (this.containerHeight === this.previousContainerHeight) {\n      return;\n    }\n\n    this.toolbarButtonContainer.style.maxHeight = `${this.containerHeight - _ui_utils.SCROLLBAR_PADDING}px`;\n    this.previousContainerHeight = this.containerHeight;\n  }\n\n}\n\nexports.SecondaryToolbar = SecondaryToolbar;\n\n/***/ }),\n/* 32 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFSinglePageViewer = void 0;\n\nvar _base_viewer = __webpack_require__(27);\n\nvar _pdfjsLib = __webpack_require__(5);\n\nclass PDFSinglePageViewer extends _base_viewer.BaseViewer {\n  constructor(options) {\n    super(options);\n\n    this.eventBus._on(\"pagesinit\", evt => {\n      this._ensurePageViewVisible();\n    });\n  }\n\n  get _viewerElement() {\n    return (0, _pdfjsLib.shadow)(this, \"_viewerElement\", this._shadowViewer);\n  }\n\n  get _pageWidthScaleFactor() {\n    return 1;\n  }\n\n  _resetView() {\n    super._resetView();\n\n    this._previousPageNumber = 1;\n    this._shadowViewer = document.createDocumentFragment();\n    this._updateScrollDown = null;\n  }\n\n  _ensurePageViewVisible() {\n    const pageView = this._pages[this._currentPageNumber - 1];\n    const previousPageView = this._pages[this._previousPageNumber - 1];\n    const viewerNodes = this.viewer.childNodes;\n\n    switch (viewerNodes.length) {\n      case 0:\n        this.viewer.appendChild(pageView.div);\n        break;\n\n      case 1:\n        if (viewerNodes[0] !== previousPageView.div) {\n          throw new Error(\"_ensurePageViewVisible: Unexpected previously visible page.\");\n        }\n\n        if (pageView === previousPageView) {\n          break;\n        }\n\n        this._shadowViewer.appendChild(previousPageView.div);\n\n        this.viewer.appendChild(pageView.div);\n        this.container.scrollTop = 0;\n        break;\n\n      default:\n        throw new Error(\"_ensurePageViewVisible: Only one page should be visible at a time.\");\n    }\n\n    this._previousPageNumber = this._currentPageNumber;\n  }\n\n  _scrollUpdate() {\n    if (this._updateScrollDown) {\n      this._updateScrollDown();\n    }\n\n    super._scrollUpdate();\n  }\n\n  _scrollIntoView({\n    pageDiv,\n    pageSpot = null,\n    pageNumber = null\n  }) {\n    if (pageNumber) {\n      this._setCurrentPageNumber(pageNumber);\n    }\n\n    const scrolledDown = this._currentPageNumber >= this._previousPageNumber;\n\n    this._ensurePageViewVisible();\n\n    this.update();\n\n    super._scrollIntoView({\n      pageDiv,\n      pageSpot,\n      pageNumber\n    });\n\n    this._updateScrollDown = () => {\n      this.scroll.down = scrolledDown;\n      this._updateScrollDown = null;\n    };\n  }\n\n  _getVisiblePages() {\n    return this._getCurrentVisiblePage();\n  }\n\n  _updateHelper(visiblePages) {}\n\n  get _isScrollModeHorizontal() {\n    return (0, _pdfjsLib.shadow)(this, \"_isScrollModeHorizontal\", false);\n  }\n\n  _updateScrollMode() {}\n\n  _updateSpreadMode() {}\n\n  _getPageAdvance() {\n    return 1;\n  }\n\n}\n\nexports.PDFSinglePageViewer = PDFSinglePageViewer;\n\n/***/ }),\n/* 33 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Toolbar = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nconst PAGE_NUMBER_LOADING_INDICATOR = \"visiblePageIsLoading\";\nconst SCALE_SELECT_CONTAINER_WIDTH = 140;\nconst SCALE_SELECT_WIDTH = 162;\n\nclass Toolbar {\n  constructor(options, eventBus, l10n = _ui_utils.NullL10n) {\n    this.toolbar = options.container;\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n    this.buttons = [{\n      element: options.previous,\n      eventName: \"previouspage\"\n    }, {\n      element: options.next,\n      eventName: \"nextpage\"\n    }, {\n      element: options.zoomIn,\n      eventName: \"zoomin\"\n    }, {\n      element: options.zoomOut,\n      eventName: \"zoomout\"\n    }, {\n      element: options.openFile,\n      eventName: \"openfile\"\n    }, {\n      element: options.print,\n      eventName: \"print\"\n    }, {\n      element: options.presentationModeButton,\n      eventName: \"presentationmode\"\n    }, {\n      element: options.download,\n      eventName: \"download\"\n    }, {\n      element: options.viewBookmark,\n      eventName: null\n    }];\n    this.items = {\n      numPages: options.numPages,\n      pageNumber: options.pageNumber,\n      scaleSelectContainer: options.scaleSelectContainer,\n      scaleSelect: options.scaleSelect,\n      customScaleOption: options.customScaleOption,\n      previous: options.previous,\n      next: options.next,\n      zoomIn: options.zoomIn,\n      zoomOut: options.zoomOut\n    };\n    this._wasLocalized = false;\n    this.reset();\n\n    this._bindListeners();\n  }\n\n  setPageNumber(pageNumber, pageLabel) {\n    this.pageNumber = pageNumber;\n    this.pageLabel = pageLabel;\n\n    this._updateUIState(false);\n  }\n\n  setPagesCount(pagesCount, hasPageLabels) {\n    this.pagesCount = pagesCount;\n    this.hasPageLabels = hasPageLabels;\n\n    this._updateUIState(true);\n  }\n\n  setPageScale(pageScaleValue, pageScale) {\n    this.pageScaleValue = (pageScaleValue || pageScale).toString();\n    this.pageScale = pageScale;\n\n    this._updateUIState(false);\n  }\n\n  reset() {\n    this.pageNumber = 0;\n    this.pageLabel = null;\n    this.hasPageLabels = false;\n    this.pagesCount = 0;\n    this.pageScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n    this.pageScale = _ui_utils.DEFAULT_SCALE;\n\n    this._updateUIState(true);\n\n    this.updateLoadingIndicatorState();\n  }\n\n  _bindListeners() {\n    const {\n      pageNumber,\n      scaleSelect\n    } = this.items;\n    const self = this;\n\n    for (const {\n      element,\n      eventName\n    } of this.buttons) {\n      element.addEventListener(\"click\", evt => {\n        if (eventName !== null) {\n          this.eventBus.dispatch(eventName, {\n            source: this\n          });\n        }\n      });\n    }\n\n    pageNumber.addEventListener(\"click\", function () {\n      this.select();\n    });\n    pageNumber.addEventListener(\"change\", function () {\n      self.eventBus.dispatch(\"pagenumberchanged\", {\n        source: self,\n        value: this.value\n      });\n    });\n    scaleSelect.addEventListener(\"change\", function () {\n      if (this.value === \"custom\") {\n        return;\n      }\n\n      self.eventBus.dispatch(\"scalechanged\", {\n        source: self,\n        value: this.value\n      });\n    });\n    scaleSelect.oncontextmenu = _ui_utils.noContextMenuHandler;\n\n    this.eventBus._on(\"localized\", () => {\n      this._wasLocalized = true;\n\n      this._adjustScaleWidth();\n\n      this._updateUIState(true);\n    });\n  }\n\n  _updateUIState(resetNumPages = false) {\n    if (!this._wasLocalized) {\n      return;\n    }\n\n    const {\n      pageNumber,\n      pagesCount,\n      pageScaleValue,\n      pageScale,\n      items\n    } = this;\n\n    if (resetNumPages) {\n      if (this.hasPageLabels) {\n        items.pageNumber.type = \"text\";\n      } else {\n        items.pageNumber.type = \"number\";\n        this.l10n.get(\"of_pages\", {\n          pagesCount\n        }, \"of {{pagesCount}}\").then(msg => {\n          items.numPages.textContent = msg;\n        });\n      }\n\n      items.pageNumber.max = pagesCount;\n    }\n\n    if (this.hasPageLabels) {\n      items.pageNumber.value = this.pageLabel;\n      this.l10n.get(\"page_of_pages\", {\n        pageNumber,\n        pagesCount\n      }, \"({{pageNumber}} of {{pagesCount}})\").then(msg => {\n        items.numPages.textContent = msg;\n      });\n    } else {\n      items.pageNumber.value = pageNumber;\n    }\n\n    items.previous.disabled = pageNumber <= 1;\n    items.next.disabled = pageNumber >= pagesCount;\n    items.zoomOut.disabled = pageScale <= _ui_utils.MIN_SCALE;\n    items.zoomIn.disabled = pageScale >= _ui_utils.MAX_SCALE;\n    const customScale = Math.round(pageScale * 10000) / 100;\n    this.l10n.get(\"page_scale_percent\", {\n      scale: customScale\n    }, \"{{scale}}%\").then(msg => {\n      let predefinedValueFound = false;\n\n      for (const option of items.scaleSelect.options) {\n        if (option.value !== pageScaleValue) {\n          option.selected = false;\n          continue;\n        }\n\n        option.selected = true;\n        predefinedValueFound = true;\n      }\n\n      if (!predefinedValueFound) {\n        items.customScaleOption.textContent = msg;\n        items.customScaleOption.selected = true;\n      }\n    });\n  }\n\n  updateLoadingIndicatorState(loading = false) {\n    const pageNumberInput = this.items.pageNumber;\n    pageNumberInput.classList.toggle(PAGE_NUMBER_LOADING_INDICATOR, loading);\n  }\n\n  async _adjustScaleWidth() {\n    const {\n      items,\n      l10n\n    } = this;\n    const predefinedValuesPromise = Promise.all([l10n.get(\"page_scale_auto\", null, \"Automatic Zoom\"), l10n.get(\"page_scale_actual\", null, \"Actual Size\"), l10n.get(\"page_scale_fit\", null, \"Page Fit\"), l10n.get(\"page_scale_width\", null, \"Page Width\")]);\n    let canvas = document.createElement(\"canvas\");\n    canvas.mozOpaque = true;\n    let ctx = canvas.getContext(\"2d\", {\n      alpha: false\n    });\n    await _ui_utils.animationStarted;\n    const {\n      fontSize,\n      fontFamily\n    } = getComputedStyle(items.scaleSelect);\n    ctx.font = `${fontSize} ${fontFamily}`;\n    let maxWidth = 0;\n\n    for (const predefinedValue of await predefinedValuesPromise) {\n      const {\n        width\n      } = ctx.measureText(predefinedValue);\n\n      if (width > maxWidth) {\n        maxWidth = width;\n      }\n    }\n\n    const overflow = SCALE_SELECT_WIDTH - SCALE_SELECT_CONTAINER_WIDTH;\n    maxWidth += 2 * overflow;\n\n    if (maxWidth > SCALE_SELECT_CONTAINER_WIDTH) {\n      items.scaleSelect.style.width = `${maxWidth + overflow}px`;\n      items.scaleSelectContainer.style.width = `${maxWidth}px`;\n    }\n\n    canvas.width = 0;\n    canvas.height = 0;\n    canvas = ctx = null;\n  }\n\n}\n\nexports.Toolbar = Toolbar;\n\n/***/ }),\n/* 34 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ViewHistory = void 0;\nconst DEFAULT_VIEW_HISTORY_CACHE_SIZE = 20;\n\nclass ViewHistory {\n  constructor(fingerprint, cacheSize = DEFAULT_VIEW_HISTORY_CACHE_SIZE) {\n    this.fingerprint = fingerprint;\n    this.cacheSize = cacheSize;\n    this._initializedPromise = this._readFromStorage().then(databaseStr => {\n      const database = JSON.parse(databaseStr || \"{}\");\n      let index = -1;\n\n      if (!Array.isArray(database.files)) {\n        database.files = [];\n      } else {\n        while (database.files.length >= this.cacheSize) {\n          database.files.shift();\n        }\n\n        for (let i = 0, ii = database.files.length; i < ii; i++) {\n          const branch = database.files[i];\n\n          if (branch.fingerprint === this.fingerprint) {\n            index = i;\n            break;\n          }\n        }\n      }\n\n      if (index === -1) {\n        index = database.files.push({\n          fingerprint: this.fingerprint\n        }) - 1;\n      }\n\n      this.file = database.files[index];\n      this.database = database;\n    });\n  }\n\n  async _writeToStorage() {\n    const databaseStr = JSON.stringify(this.database);\n    localStorage.setItem(\"pdfjs.history\", databaseStr);\n  }\n\n  async _readFromStorage() {\n    return localStorage.getItem(\"pdfjs.history\");\n  }\n\n  async set(name, val) {\n    await this._initializedPromise;\n    this.file[name] = val;\n    return this._writeToStorage();\n  }\n\n  async setMultiple(properties) {\n    await this._initializedPromise;\n\n    for (const name in properties) {\n      this.file[name] = properties[name];\n    }\n\n    return this._writeToStorage();\n  }\n\n  async get(name, defaultValue) {\n    await this._initializedPromise;\n    const val = this.file[name];\n    return val !== undefined ? val : defaultValue;\n  }\n\n  async getMultiple(properties) {\n    await this._initializedPromise;\n    const values = Object.create(null);\n\n    for (const name in properties) {\n      const val = this.file[name];\n      values[name] = val !== undefined ? val : properties[name];\n    }\n\n    return values;\n  }\n\n}\n\nexports.ViewHistory = ViewHistory;\n\n/***/ }),\n/* 35 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.GenericCom = void 0;\n\nvar _app = __webpack_require__(3);\n\nvar _preferences = __webpack_require__(36);\n\nvar _download_manager = __webpack_require__(37);\n\nvar _genericl10n = __webpack_require__(38);\n\nvar _generic_scripting = __webpack_require__(40);\n\n;\nconst GenericCom = {};\nexports.GenericCom = GenericCom;\n\nclass GenericPreferences extends _preferences.BasePreferences {\n  async _writeToStorage(prefObj) {\n    localStorage.setItem(\"pdfjs.preferences\", JSON.stringify(prefObj));\n  }\n\n  async _readFromStorage(prefObj) {\n    return JSON.parse(localStorage.getItem(\"pdfjs.preferences\"));\n  }\n\n}\n\nclass GenericExternalServices extends _app.DefaultExternalServices {\n  static createDownloadManager(options) {\n    return new _download_manager.DownloadManager();\n  }\n\n  static createPreferences() {\n    return new GenericPreferences();\n  }\n\n  static createL10n({\n    locale = \"en-US\"\n  }) {\n    return new _genericl10n.GenericL10n(locale);\n  }\n\n  static createScripting({\n    sandboxBundleSrc\n  }) {\n    return new _generic_scripting.GenericScripting(sandboxBundleSrc);\n  }\n\n}\n\n_app.PDFViewerApplication.externalServices = GenericExternalServices;\n\n/***/ }),\n/* 36 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.BasePreferences = void 0;\n\nvar _app_options = __webpack_require__(1);\n\nclass BasePreferences {\n  constructor() {\n    if (this.constructor === BasePreferences) {\n      throw new Error(\"Cannot initialize BasePreferences.\");\n    }\n\n    Object.defineProperty(this, \"defaults\", {\n      value: Object.freeze({\n        \"cursorToolOnLoad\": 0,\n        \"defaultZoomValue\": \"\",\n        \"disablePageLabels\": false,\n        \"enablePermissions\": false,\n        \"enablePrintAutoRotate\": false,\n        \"enableScripting\": false,\n        \"enableWebGL\": false,\n        \"externalLinkTarget\": 0,\n        \"historyUpdateUrl\": false,\n        \"ignoreDestinationZoom\": false,\n        \"pdfBugEnabled\": false,\n        \"renderer\": \"canvas\",\n        \"renderInteractiveForms\": true,\n        \"sidebarViewOnLoad\": -1,\n        \"scrollModeOnLoad\": -1,\n        \"spreadModeOnLoad\": -1,\n        \"textLayerMode\": 1,\n        \"useOnlyCssZoom\": false,\n        \"viewerCssTheme\": 0,\n        \"viewOnLoad\": 0,\n        \"disableAutoFetch\": false,\n        \"disableFontFace\": false,\n        \"disableRange\": false,\n        \"disableStream\": false\n      }),\n      writable: false,\n      enumerable: true,\n      configurable: false\n    });\n    this.prefs = Object.assign(Object.create(null), this.defaults);\n    this._initializedPromise = this._readFromStorage(this.defaults).then(prefs => {\n      if (!prefs) {\n        return;\n      }\n\n      for (const name in prefs) {\n        const defaultValue = this.defaults[name],\n              prefValue = prefs[name];\n\n        if (defaultValue === undefined || typeof prefValue !== typeof defaultValue) {\n          continue;\n        }\n\n        this.prefs[name] = prefValue;\n      }\n    });\n  }\n\n  async _writeToStorage(prefObj) {\n    throw new Error(\"Not implemented: _writeToStorage\");\n  }\n\n  async _readFromStorage(prefObj) {\n    throw new Error(\"Not implemented: _readFromStorage\");\n  }\n\n  async reset() {\n    await this._initializedPromise;\n    this.prefs = Object.assign(Object.create(null), this.defaults);\n    return this._writeToStorage(this.defaults);\n  }\n\n  async set(name, value) {\n    await this._initializedPromise;\n    const defaultValue = this.defaults[name];\n\n    if (defaultValue === undefined) {\n      throw new Error(`Set preference: \"${name}\" is undefined.`);\n    } else if (value === undefined) {\n      throw new Error(\"Set preference: no value is specified.\");\n    }\n\n    const valueType = typeof value;\n    const defaultType = typeof defaultValue;\n\n    if (valueType !== defaultType) {\n      if (valueType === \"number\" && defaultType === \"string\") {\n        value = value.toString();\n      } else {\n        throw new Error(`Set preference: \"${value}\" is a ${valueType}, ` + `expected a ${defaultType}.`);\n      }\n    } else {\n      if (valueType === \"number\" && !Number.isInteger(value)) {\n        throw new Error(`Set preference: \"${value}\" must be an integer.`);\n      }\n    }\n\n    this.prefs[name] = value;\n    return this._writeToStorage(this.prefs);\n  }\n\n  async get(name) {\n    await this._initializedPromise;\n    const defaultValue = this.defaults[name];\n\n    if (defaultValue === undefined) {\n      throw new Error(`Get preference: \"${name}\" is undefined.`);\n    } else {\n      const prefValue = this.prefs[name];\n\n      if (prefValue !== undefined) {\n        return prefValue;\n      }\n    }\n\n    return defaultValue;\n  }\n\n  async getAll() {\n    await this._initializedPromise;\n    return Object.assign(Object.create(null), this.defaults, this.prefs);\n  }\n\n}\n\nexports.BasePreferences = BasePreferences;\n\n/***/ }),\n/* 37 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.DownloadManager = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _viewer_compatibility = __webpack_require__(2);\n\n;\n\nfunction download(blobUrl, filename) {\n  const a = document.createElement(\"a\");\n\n  if (!a.click) {\n    throw new Error('DownloadManager: \"a.click()\" is not supported.');\n  }\n\n  a.href = blobUrl;\n  a.target = \"_parent\";\n\n  if (\"download\" in a) {\n    a.download = filename;\n  }\n\n  (document.body || document.documentElement).appendChild(a);\n  a.click();\n  a.remove();\n}\n\nclass DownloadManager {\n  downloadUrl(url, filename) {\n    if (!(0, _pdfjsLib.createValidAbsoluteUrl)(url, \"http://example.com\")) {\n      return;\n    }\n\n    download(url + \"#pdfjs.action=download\", filename);\n  }\n\n  downloadData(data, filename, contentType) {\n    const blobUrl = (0, _pdfjsLib.createObjectURL)(data, contentType, _viewer_compatibility.viewerCompatibilityParams.disableCreateObjectURL);\n    download(blobUrl, filename);\n  }\n\n  download(blob, url, filename, sourceEventType = \"download\") {\n    if (_viewer_compatibility.viewerCompatibilityParams.disableCreateObjectURL) {\n      this.downloadUrl(url, filename);\n      return;\n    }\n\n    const blobUrl = URL.createObjectURL(blob);\n    download(blobUrl, filename);\n  }\n\n}\n\nexports.DownloadManager = DownloadManager;\n\n/***/ }),\n/* 38 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.GenericL10n = void 0;\n\n__webpack_require__(39);\n\nconst webL10n = document.webL10n;\n\nclass GenericL10n {\n  constructor(lang) {\n    this._lang = lang;\n    this._ready = new Promise((resolve, reject) => {\n      webL10n.setLanguage(lang, () => {\n        resolve(webL10n);\n      });\n    });\n  }\n\n  async getLanguage() {\n    const l10n = await this._ready;\n    return l10n.getLanguage();\n  }\n\n  async getDirection() {\n    const l10n = await this._ready;\n    return l10n.getDirection();\n  }\n\n  async get(property, args, fallback) {\n    const l10n = await this._ready;\n    return l10n.get(property, args, fallback);\n  }\n\n  async translate(element) {\n    const l10n = await this._ready;\n    return l10n.translate(element);\n  }\n\n}\n\nexports.GenericL10n = GenericL10n;\n\n/***/ }),\n/* 39 */\n/***/ (() => {\n\n\n\ndocument.webL10n = function (window, document, undefined) {\n  var gL10nData = {};\n  var gTextData = '';\n  var gTextProp = 'textContent';\n  var gLanguage = '';\n  var gMacros = {};\n  var gReadyState = 'loading';\n  var gAsyncResourceLoading = true;\n\n  function getL10nResourceLinks() {\n    return document.querySelectorAll('link[type=\"application/l10n\"]');\n  }\n\n  function getL10nDictionary() {\n    var script = document.querySelector('script[type=\"application/l10n\"]');\n    return script ? JSON.parse(script.innerHTML) : null;\n  }\n\n  function getTranslatableChildren(element) {\n    return element ? element.querySelectorAll('*[data-l10n-id]') : [];\n  }\n\n  function getL10nAttributes(element) {\n    if (!element) return {};\n    var l10nId = element.getAttribute('data-l10n-id');\n    var l10nArgs = element.getAttribute('data-l10n-args');\n    var args = {};\n\n    if (l10nArgs) {\n      try {\n        args = JSON.parse(l10nArgs);\n      } catch (e) {\n        console.warn('could not parse arguments for #' + l10nId);\n      }\n    }\n\n    return {\n      id: l10nId,\n      args: args\n    };\n  }\n\n  function xhrLoadText(url, onSuccess, onFailure) {\n    onSuccess = onSuccess || function _onSuccess(data) {};\n\n    onFailure = onFailure || function _onFailure() {};\n\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, gAsyncResourceLoading);\n\n    if (xhr.overrideMimeType) {\n      xhr.overrideMimeType('text/plain; charset=utf-8');\n    }\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == 4) {\n        if (xhr.status == 200 || xhr.status === 0) {\n          onSuccess(xhr.responseText);\n        } else {\n          onFailure();\n        }\n      }\n    };\n\n    xhr.onerror = onFailure;\n    xhr.ontimeout = onFailure;\n\n    try {\n      xhr.send(null);\n    } catch (e) {\n      onFailure();\n    }\n  }\n\n  function parseResource(href, lang, successCallback, failureCallback) {\n    var baseURL = href.replace(/[^\\/]*$/, '') || './';\n\n    function evalString(text) {\n      if (text.lastIndexOf('\\\\') < 0) return text;\n      return text.replace(/\\\\\\\\/g, '\\\\').replace(/\\\\n/g, '\\n').replace(/\\\\r/g, '\\r').replace(/\\\\t/g, '\\t').replace(/\\\\b/g, '\\b').replace(/\\\\f/g, '\\f').replace(/\\\\{/g, '{').replace(/\\\\}/g, '}').replace(/\\\\\"/g, '\"').replace(/\\\\'/g, \"'\");\n    }\n\n    function parseProperties(text, parsedPropertiesCallback) {\n      var dictionary = {};\n      var reBlank = /^\\s*|\\s*$/;\n      var reComment = /^\\s*#|^\\s*$/;\n      var reSection = /^\\s*\\[(.*)\\]\\s*$/;\n      var reImport = /^\\s*@import\\s+url\\((.*)\\)\\s*$/i;\n      var reSplit = /^([^=\\s]*)\\s*=\\s*(.+)$/;\n\n      function parseRawLines(rawText, extendedSyntax, parsedRawLinesCallback) {\n        var entries = rawText.replace(reBlank, '').split(/[\\r\\n]+/);\n        var currentLang = '*';\n        var genericLang = lang.split('-', 1)[0];\n        var skipLang = false;\n        var match = '';\n\n        function nextEntry() {\n          while (true) {\n            if (!entries.length) {\n              parsedRawLinesCallback();\n              return;\n            }\n\n            var line = entries.shift();\n            if (reComment.test(line)) continue;\n\n            if (extendedSyntax) {\n              match = reSection.exec(line);\n\n              if (match) {\n                currentLang = match[1].toLowerCase();\n                skipLang = currentLang !== '*' && currentLang !== lang && currentLang !== genericLang;\n                continue;\n              } else if (skipLang) {\n                continue;\n              }\n\n              match = reImport.exec(line);\n\n              if (match) {\n                loadImport(baseURL + match[1], nextEntry);\n                return;\n              }\n            }\n\n            var tmp = line.match(reSplit);\n\n            if (tmp && tmp.length == 3) {\n              dictionary[tmp[1]] = evalString(tmp[2]);\n            }\n          }\n        }\n\n        nextEntry();\n      }\n\n      function loadImport(url, callback) {\n        xhrLoadText(url, function (content) {\n          parseRawLines(content, false, callback);\n        }, function () {\n          console.warn(url + ' not found.');\n          callback();\n        });\n      }\n\n      parseRawLines(text, true, function () {\n        parsedPropertiesCallback(dictionary);\n      });\n    }\n\n    xhrLoadText(href, function (response) {\n      gTextData += response;\n      parseProperties(response, function (data) {\n        for (var key in data) {\n          var id,\n              prop,\n              index = key.lastIndexOf('.');\n\n          if (index > 0) {\n            id = key.substring(0, index);\n            prop = key.substring(index + 1);\n          } else {\n            id = key;\n            prop = gTextProp;\n          }\n\n          if (!gL10nData[id]) {\n            gL10nData[id] = {};\n          }\n\n          gL10nData[id][prop] = data[key];\n        }\n\n        if (successCallback) {\n          successCallback();\n        }\n      });\n    }, failureCallback);\n  }\n\n  function loadLocale(lang, callback) {\n    if (lang) {\n      lang = lang.toLowerCase();\n    }\n\n    callback = callback || function _callback() {};\n\n    clear();\n    gLanguage = lang;\n    var langLinks = getL10nResourceLinks();\n    var langCount = langLinks.length;\n\n    if (langCount === 0) {\n      var dict = getL10nDictionary();\n\n      if (dict && dict.locales && dict.default_locale) {\n        console.log('using the embedded JSON directory, early way out');\n        gL10nData = dict.locales[lang];\n\n        if (!gL10nData) {\n          var defaultLocale = dict.default_locale.toLowerCase();\n\n          for (var anyCaseLang in dict.locales) {\n            anyCaseLang = anyCaseLang.toLowerCase();\n\n            if (anyCaseLang === lang) {\n              gL10nData = dict.locales[lang];\n              break;\n            } else if (anyCaseLang === defaultLocale) {\n              gL10nData = dict.locales[defaultLocale];\n            }\n          }\n        }\n\n        callback();\n      } else {\n        console.log('no resource to load, early way out');\n      }\n\n      gReadyState = 'complete';\n      return;\n    }\n\n    var onResourceLoaded = null;\n    var gResourceCount = 0;\n\n    onResourceLoaded = function () {\n      gResourceCount++;\n\n      if (gResourceCount >= langCount) {\n        callback();\n        gReadyState = 'complete';\n      }\n    };\n\n    function L10nResourceLink(link) {\n      var href = link.href;\n\n      this.load = function (lang, callback) {\n        parseResource(href, lang, callback, function () {\n          console.warn(href + ' not found.');\n          console.warn('\"' + lang + '\" resource not found');\n          gLanguage = '';\n          callback();\n        });\n      };\n    }\n\n    for (var i = 0; i < langCount; i++) {\n      var resource = new L10nResourceLink(langLinks[i]);\n      resource.load(lang, onResourceLoaded);\n    }\n  }\n\n  function clear() {\n    gL10nData = {};\n    gTextData = '';\n    gLanguage = '';\n  }\n\n  function getPluralRules(lang) {\n    var locales2rules = {\n      'af': 3,\n      'ak': 4,\n      'am': 4,\n      'ar': 1,\n      'asa': 3,\n      'az': 0,\n      'be': 11,\n      'bem': 3,\n      'bez': 3,\n      'bg': 3,\n      'bh': 4,\n      'bm': 0,\n      'bn': 3,\n      'bo': 0,\n      'br': 20,\n      'brx': 3,\n      'bs': 11,\n      'ca': 3,\n      'cgg': 3,\n      'chr': 3,\n      'cs': 12,\n      'cy': 17,\n      'da': 3,\n      'de': 3,\n      'dv': 3,\n      'dz': 0,\n      'ee': 3,\n      'el': 3,\n      'en': 3,\n      'eo': 3,\n      'es': 3,\n      'et': 3,\n      'eu': 3,\n      'fa': 0,\n      'ff': 5,\n      'fi': 3,\n      'fil': 4,\n      'fo': 3,\n      'fr': 5,\n      'fur': 3,\n      'fy': 3,\n      'ga': 8,\n      'gd': 24,\n      'gl': 3,\n      'gsw': 3,\n      'gu': 3,\n      'guw': 4,\n      'gv': 23,\n      'ha': 3,\n      'haw': 3,\n      'he': 2,\n      'hi': 4,\n      'hr': 11,\n      'hu': 0,\n      'id': 0,\n      'ig': 0,\n      'ii': 0,\n      'is': 3,\n      'it': 3,\n      'iu': 7,\n      'ja': 0,\n      'jmc': 3,\n      'jv': 0,\n      'ka': 0,\n      'kab': 5,\n      'kaj': 3,\n      'kcg': 3,\n      'kde': 0,\n      'kea': 0,\n      'kk': 3,\n      'kl': 3,\n      'km': 0,\n      'kn': 0,\n      'ko': 0,\n      'ksb': 3,\n      'ksh': 21,\n      'ku': 3,\n      'kw': 7,\n      'lag': 18,\n      'lb': 3,\n      'lg': 3,\n      'ln': 4,\n      'lo': 0,\n      'lt': 10,\n      'lv': 6,\n      'mas': 3,\n      'mg': 4,\n      'mk': 16,\n      'ml': 3,\n      'mn': 3,\n      'mo': 9,\n      'mr': 3,\n      'ms': 0,\n      'mt': 15,\n      'my': 0,\n      'nah': 3,\n      'naq': 7,\n      'nb': 3,\n      'nd': 3,\n      'ne': 3,\n      'nl': 3,\n      'nn': 3,\n      'no': 3,\n      'nr': 3,\n      'nso': 4,\n      'ny': 3,\n      'nyn': 3,\n      'om': 3,\n      'or': 3,\n      'pa': 3,\n      'pap': 3,\n      'pl': 13,\n      'ps': 3,\n      'pt': 3,\n      'rm': 3,\n      'ro': 9,\n      'rof': 3,\n      'ru': 11,\n      'rwk': 3,\n      'sah': 0,\n      'saq': 3,\n      'se': 7,\n      'seh': 3,\n      'ses': 0,\n      'sg': 0,\n      'sh': 11,\n      'shi': 19,\n      'sk': 12,\n      'sl': 14,\n      'sma': 7,\n      'smi': 7,\n      'smj': 7,\n      'smn': 7,\n      'sms': 7,\n      'sn': 3,\n      'so': 3,\n      'sq': 3,\n      'sr': 11,\n      'ss': 3,\n      'ssy': 3,\n      'st': 3,\n      'sv': 3,\n      'sw': 3,\n      'syr': 3,\n      'ta': 3,\n      'te': 3,\n      'teo': 3,\n      'th': 0,\n      'ti': 4,\n      'tig': 3,\n      'tk': 3,\n      'tl': 4,\n      'tn': 3,\n      'to': 0,\n      'tr': 0,\n      'ts': 3,\n      'tzm': 22,\n      'uk': 11,\n      'ur': 3,\n      've': 3,\n      'vi': 0,\n      'vun': 3,\n      'wa': 4,\n      'wae': 3,\n      'wo': 0,\n      'xh': 3,\n      'xog': 3,\n      'yo': 0,\n      'zh': 0,\n      'zu': 3\n    };\n\n    function isIn(n, list) {\n      return list.indexOf(n) !== -1;\n    }\n\n    function isBetween(n, start, end) {\n      return start <= n && n <= end;\n    }\n\n    var pluralRules = {\n      '0': function (n) {\n        return 'other';\n      },\n      '1': function (n) {\n        if (isBetween(n % 100, 3, 10)) return 'few';\n        if (n === 0) return 'zero';\n        if (isBetween(n % 100, 11, 99)) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '2': function (n) {\n        if (n !== 0 && n % 10 === 0) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '3': function (n) {\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '4': function (n) {\n        if (isBetween(n, 0, 1)) return 'one';\n        return 'other';\n      },\n      '5': function (n) {\n        if (isBetween(n, 0, 2) && n != 2) return 'one';\n        return 'other';\n      },\n      '6': function (n) {\n        if (n === 0) return 'zero';\n        if (n % 10 == 1 && n % 100 != 11) return 'one';\n        return 'other';\n      },\n      '7': function (n) {\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '8': function (n) {\n        if (isBetween(n, 3, 6)) return 'few';\n        if (isBetween(n, 7, 10)) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '9': function (n) {\n        if (n === 0 || n != 1 && isBetween(n % 100, 1, 19)) return 'few';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '10': function (n) {\n        if (isBetween(n % 10, 2, 9) && !isBetween(n % 100, 11, 19)) return 'few';\n        if (n % 10 == 1 && !isBetween(n % 100, 11, 19)) return 'one';\n        return 'other';\n      },\n      '11': function (n) {\n        if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14)) return 'few';\n        if (n % 10 === 0 || isBetween(n % 10, 5, 9) || isBetween(n % 100, 11, 14)) return 'many';\n        if (n % 10 == 1 && n % 100 != 11) return 'one';\n        return 'other';\n      },\n      '12': function (n) {\n        if (isBetween(n, 2, 4)) return 'few';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '13': function (n) {\n        if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14)) return 'few';\n        if (n != 1 && isBetween(n % 10, 0, 1) || isBetween(n % 10, 5, 9) || isBetween(n % 100, 12, 14)) return 'many';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '14': function (n) {\n        if (isBetween(n % 100, 3, 4)) return 'few';\n        if (n % 100 == 2) return 'two';\n        if (n % 100 == 1) return 'one';\n        return 'other';\n      },\n      '15': function (n) {\n        if (n === 0 || isBetween(n % 100, 2, 10)) return 'few';\n        if (isBetween(n % 100, 11, 19)) return 'many';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '16': function (n) {\n        if (n % 10 == 1 && n != 11) return 'one';\n        return 'other';\n      },\n      '17': function (n) {\n        if (n == 3) return 'few';\n        if (n === 0) return 'zero';\n        if (n == 6) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '18': function (n) {\n        if (n === 0) return 'zero';\n        if (isBetween(n, 0, 2) && n !== 0 && n != 2) return 'one';\n        return 'other';\n      },\n      '19': function (n) {\n        if (isBetween(n, 2, 10)) return 'few';\n        if (isBetween(n, 0, 1)) return 'one';\n        return 'other';\n      },\n      '20': function (n) {\n        if ((isBetween(n % 10, 3, 4) || n % 10 == 9) && !(isBetween(n % 100, 10, 19) || isBetween(n % 100, 70, 79) || isBetween(n % 100, 90, 99))) return 'few';\n        if (n % 1000000 === 0 && n !== 0) return 'many';\n        if (n % 10 == 2 && !isIn(n % 100, [12, 72, 92])) return 'two';\n        if (n % 10 == 1 && !isIn(n % 100, [11, 71, 91])) return 'one';\n        return 'other';\n      },\n      '21': function (n) {\n        if (n === 0) return 'zero';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '22': function (n) {\n        if (isBetween(n, 0, 1) || isBetween(n, 11, 99)) return 'one';\n        return 'other';\n      },\n      '23': function (n) {\n        if (isBetween(n % 10, 1, 2) || n % 20 === 0) return 'one';\n        return 'other';\n      },\n      '24': function (n) {\n        if (isBetween(n, 3, 10) || isBetween(n, 13, 19)) return 'few';\n        if (isIn(n, [2, 12])) return 'two';\n        if (isIn(n, [1, 11])) return 'one';\n        return 'other';\n      }\n    };\n    var index = locales2rules[lang.replace(/-.*$/, '')];\n\n    if (!(index in pluralRules)) {\n      console.warn('plural form unknown for [' + lang + ']');\n      return function () {\n        return 'other';\n      };\n    }\n\n    return pluralRules[index];\n  }\n\n  gMacros.plural = function (str, param, key, prop) {\n    var n = parseFloat(param);\n    if (isNaN(n)) return str;\n    if (prop != gTextProp) return str;\n\n    if (!gMacros._pluralRules) {\n      gMacros._pluralRules = getPluralRules(gLanguage);\n    }\n\n    var index = '[' + gMacros._pluralRules(n) + ']';\n\n    if (n === 0 && key + '[zero]' in gL10nData) {\n      str = gL10nData[key + '[zero]'][prop];\n    } else if (n == 1 && key + '[one]' in gL10nData) {\n      str = gL10nData[key + '[one]'][prop];\n    } else if (n == 2 && key + '[two]' in gL10nData) {\n      str = gL10nData[key + '[two]'][prop];\n    } else if (key + index in gL10nData) {\n      str = gL10nData[key + index][prop];\n    } else if (key + '[other]' in gL10nData) {\n      str = gL10nData[key + '[other]'][prop];\n    }\n\n    return str;\n  };\n\n  function getL10nData(key, args, fallback) {\n    var data = gL10nData[key];\n\n    if (!data) {\n      console.warn('#' + key + ' is undefined.');\n\n      if (!fallback) {\n        return null;\n      }\n\n      data = fallback;\n    }\n\n    var rv = {};\n\n    for (var prop in data) {\n      var str = data[prop];\n      str = substIndexes(str, args, key, prop);\n      str = substArguments(str, args, key);\n      rv[prop] = str;\n    }\n\n    return rv;\n  }\n\n  function substIndexes(str, args, key, prop) {\n    var reIndex = /\\{\\[\\s*([a-zA-Z]+)\\(([a-zA-Z]+)\\)\\s*\\]\\}/;\n    var reMatch = reIndex.exec(str);\n    if (!reMatch || !reMatch.length) return str;\n    var macroName = reMatch[1];\n    var paramName = reMatch[2];\n    var param;\n\n    if (args && paramName in args) {\n      param = args[paramName];\n    } else if (paramName in gL10nData) {\n      param = gL10nData[paramName];\n    }\n\n    if (macroName in gMacros) {\n      var macro = gMacros[macroName];\n      str = macro(str, param, key, prop);\n    }\n\n    return str;\n  }\n\n  function substArguments(str, args, key) {\n    var reArgs = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n    return str.replace(reArgs, function (matched_text, arg) {\n      if (args && arg in args) {\n        return args[arg];\n      }\n\n      if (arg in gL10nData) {\n        return gL10nData[arg];\n      }\n\n      console.log('argument {{' + arg + '}} for #' + key + ' is undefined.');\n      return matched_text;\n    });\n  }\n\n  function translateElement(element) {\n    var l10n = getL10nAttributes(element);\n    if (!l10n.id) return;\n    var data = getL10nData(l10n.id, l10n.args);\n\n    if (!data) {\n      console.warn('#' + l10n.id + ' is undefined.');\n      return;\n    }\n\n    if (data[gTextProp]) {\n      if (getChildElementCount(element) === 0) {\n        element[gTextProp] = data[gTextProp];\n      } else {\n        var children = element.childNodes;\n        var found = false;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i].nodeType === 3 && /\\S/.test(children[i].nodeValue)) {\n            if (found) {\n              children[i].nodeValue = '';\n            } else {\n              children[i].nodeValue = data[gTextProp];\n              found = true;\n            }\n          }\n        }\n\n        if (!found) {\n          var textNode = document.createTextNode(data[gTextProp]);\n          element.insertBefore(textNode, element.firstChild);\n        }\n      }\n\n      delete data[gTextProp];\n    }\n\n    for (var k in data) {\n      element[k] = data[k];\n    }\n  }\n\n  function getChildElementCount(element) {\n    if (element.children) {\n      return element.children.length;\n    }\n\n    if (typeof element.childElementCount !== 'undefined') {\n      return element.childElementCount;\n    }\n\n    var count = 0;\n\n    for (var i = 0; i < element.childNodes.length; i++) {\n      count += element.nodeType === 1 ? 1 : 0;\n    }\n\n    return count;\n  }\n\n  function translateFragment(element) {\n    element = element || document.documentElement;\n    var children = getTranslatableChildren(element);\n    var elementCount = children.length;\n\n    for (var i = 0; i < elementCount; i++) {\n      translateElement(children[i]);\n    }\n\n    translateElement(element);\n  }\n\n  return {\n    get: function (key, args, fallbackString) {\n      var index = key.lastIndexOf('.');\n      var prop = gTextProp;\n\n      if (index > 0) {\n        prop = key.substring(index + 1);\n        key = key.substring(0, index);\n      }\n\n      var fallback;\n\n      if (fallbackString) {\n        fallback = {};\n        fallback[prop] = fallbackString;\n      }\n\n      var data = getL10nData(key, args, fallback);\n\n      if (data && prop in data) {\n        return data[prop];\n      }\n\n      return '{{' + key + '}}';\n    },\n    getData: function () {\n      return gL10nData;\n    },\n    getText: function () {\n      return gTextData;\n    },\n    getLanguage: function () {\n      return gLanguage;\n    },\n    setLanguage: function (lang, callback) {\n      loadLocale(lang, function () {\n        if (callback) callback();\n      });\n    },\n    getDirection: function () {\n      var rtlList = ['ar', 'he', 'fa', 'ps', 'ur'];\n      var shortCode = gLanguage.split('-', 1)[0];\n      return rtlList.indexOf(shortCode) >= 0 ? 'rtl' : 'ltr';\n    },\n    translate: translateFragment,\n    getReadyState: function () {\n      return gReadyState;\n    },\n    ready: function (callback) {\n      if (!callback) {\n        return;\n      } else if (gReadyState == 'complete' || gReadyState == 'interactive') {\n        window.setTimeout(function () {\n          callback();\n        });\n      } else if (document.addEventListener) {\n        document.addEventListener('localized', function once() {\n          document.removeEventListener('localized', once);\n          callback();\n        });\n      }\n    }\n  };\n}(window, document);\n\n/***/ }),\n/* 40 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.GenericScripting = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nclass GenericScripting {\n  constructor(sandboxBundleSrc) {\n    this._ready = (0, _pdfjsLib.loadScript)(sandboxBundleSrc, true).then(() => {\n      return window.pdfjsSandbox.QuickJSSandbox();\n    });\n  }\n\n  async createSandbox(data) {\n    const sandbox = await this._ready;\n    sandbox.create(data);\n  }\n\n  async dispatchEventInSandbox(event) {\n    const sandbox = await this._ready;\n    sandbox.dispatchEvent(event);\n  }\n\n  async destroySandbox() {\n    const sandbox = await this._ready;\n    sandbox.nukeSandbox();\n  }\n\n}\n\nexports.GenericScripting = GenericScripting;\n\n/***/ }),\n/* 41 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFPrintService = PDFPrintService;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _app = __webpack_require__(3);\n\nvar _viewer_compatibility = __webpack_require__(2);\n\nlet activeService = null;\nlet overlayManager = null;\n\nfunction renderPage(activeServiceOnEntry, pdfDocument, pageNumber, size, printResolution, optionalContentConfigPromise) {\n  const scratchCanvas = activeService.scratchCanvas;\n  const PRINT_UNITS = printResolution / 72.0;\n  scratchCanvas.width = Math.floor(size.width * PRINT_UNITS);\n  scratchCanvas.height = Math.floor(size.height * PRINT_UNITS);\n  const width = Math.floor(size.width * _ui_utils.CSS_UNITS) + \"px\";\n  const height = Math.floor(size.height * _ui_utils.CSS_UNITS) + \"px\";\n  const ctx = scratchCanvas.getContext(\"2d\");\n  ctx.save();\n  ctx.fillStyle = \"rgb(255, 255, 255)\";\n  ctx.fillRect(0, 0, scratchCanvas.width, scratchCanvas.height);\n  ctx.restore();\n  return pdfDocument.getPage(pageNumber).then(function (pdfPage) {\n    const renderContext = {\n      canvasContext: ctx,\n      transform: [PRINT_UNITS, 0, 0, PRINT_UNITS, 0, 0],\n      viewport: pdfPage.getViewport({\n        scale: 1,\n        rotation: size.rotation\n      }),\n      intent: \"print\",\n      annotationStorage: pdfDocument.annotationStorage,\n      optionalContentConfigPromise\n    };\n    return pdfPage.render(renderContext).promise;\n  }).then(function () {\n    return {\n      width,\n      height\n    };\n  });\n}\n\nfunction PDFPrintService(pdfDocument, pagesOverview, printContainer, printResolution, optionalContentConfigPromise = null, l10n) {\n  this.pdfDocument = pdfDocument;\n  this.pagesOverview = pagesOverview;\n  this.printContainer = printContainer;\n  this._printResolution = printResolution || 150;\n  this._optionalContentConfigPromise = optionalContentConfigPromise || pdfDocument.getOptionalContentConfig();\n  this.l10n = l10n || _ui_utils.NullL10n;\n  this.currentPage = -1;\n  this.scratchCanvas = document.createElement(\"canvas\");\n}\n\nPDFPrintService.prototype = {\n  layout() {\n    this.throwIfInactive();\n    const body = document.querySelector(\"body\");\n    body.setAttribute(\"data-pdfjsprinting\", true);\n    const hasEqualPageSizes = this.pagesOverview.every(function (size) {\n      return size.width === this.pagesOverview[0].width && size.height === this.pagesOverview[0].height;\n    }, this);\n\n    if (!hasEqualPageSizes) {\n      console.warn(\"Not all pages have the same size. The printed \" + \"result may be incorrect!\");\n    }\n\n    this.pageStyleSheet = document.createElement(\"style\");\n    const pageSize = this.pagesOverview[0];\n    this.pageStyleSheet.textContent = \"@supports ((size:A4) and (size:1pt 1pt)) {\" + \"@page { size: \" + pageSize.width + \"pt \" + pageSize.height + \"pt;}\" + \"}\";\n    body.appendChild(this.pageStyleSheet);\n  },\n\n  destroy() {\n    if (activeService !== this) {\n      return;\n    }\n\n    this.printContainer.textContent = \"\";\n    const body = document.querySelector(\"body\");\n    body.removeAttribute(\"data-pdfjsprinting\");\n\n    if (this.pageStyleSheet) {\n      this.pageStyleSheet.remove();\n      this.pageStyleSheet = null;\n    }\n\n    this.scratchCanvas.width = this.scratchCanvas.height = 0;\n    this.scratchCanvas = null;\n    activeService = null;\n    ensureOverlay().then(function () {\n      if (overlayManager.active !== \"printServiceOverlay\") {\n        return;\n      }\n\n      overlayManager.close(\"printServiceOverlay\");\n    });\n  },\n\n  renderPages() {\n    const pageCount = this.pagesOverview.length;\n\n    const renderNextPage = (resolve, reject) => {\n      this.throwIfInactive();\n\n      if (++this.currentPage >= pageCount) {\n        renderProgress(pageCount, pageCount, this.l10n);\n        resolve();\n        return;\n      }\n\n      const index = this.currentPage;\n      renderProgress(index, pageCount, this.l10n);\n      renderPage(this, this.pdfDocument, index + 1, this.pagesOverview[index], this._printResolution, this._optionalContentConfigPromise).then(this.useRenderedPage.bind(this)).then(function () {\n        renderNextPage(resolve, reject);\n      }, reject);\n    };\n\n    return new Promise(renderNextPage);\n  },\n\n  useRenderedPage(printItem) {\n    this.throwIfInactive();\n    const img = document.createElement(\"img\");\n    img.style.width = printItem.width;\n    img.style.height = printItem.height;\n    const scratchCanvas = this.scratchCanvas;\n\n    if (\"toBlob\" in scratchCanvas && !_viewer_compatibility.viewerCompatibilityParams.disableCreateObjectURL) {\n      scratchCanvas.toBlob(function (blob) {\n        img.src = URL.createObjectURL(blob);\n      });\n    } else {\n      img.src = scratchCanvas.toDataURL();\n    }\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.appendChild(img);\n    this.printContainer.appendChild(wrapper);\n    return new Promise(function (resolve, reject) {\n      img.onload = resolve;\n      img.onerror = reject;\n    });\n  },\n\n  performPrint() {\n    this.throwIfInactive();\n    return new Promise(resolve => {\n      setTimeout(() => {\n        if (!this.active) {\n          resolve();\n          return;\n        }\n\n        print.call(window);\n        setTimeout(resolve, 20);\n      }, 0);\n    });\n  },\n\n  get active() {\n    return this === activeService;\n  },\n\n  throwIfInactive() {\n    if (!this.active) {\n      throw new Error(\"This print request was cancelled or completed.\");\n    }\n  }\n\n};\nconst print = window.print;\n\nwindow.print = function () {\n  if (activeService) {\n    console.warn(\"Ignored window.print() because of a pending print job.\");\n    return;\n  }\n\n  ensureOverlay().then(function () {\n    if (activeService) {\n      overlayManager.open(\"printServiceOverlay\");\n    }\n  });\n\n  try {\n    dispatchEvent(\"beforeprint\");\n  } finally {\n    if (!activeService) {\n      console.error(\"Expected print service to be initialized.\");\n      ensureOverlay().then(function () {\n        if (overlayManager.active === \"printServiceOverlay\") {\n          overlayManager.close(\"printServiceOverlay\");\n        }\n      });\n      return;\n    }\n\n    const activeServiceOnEntry = activeService;\n    activeService.renderPages().then(function () {\n      return activeServiceOnEntry.performPrint();\n    }).catch(function () {}).then(function () {\n      if (activeServiceOnEntry.active) {\n        abort();\n      }\n    });\n  }\n};\n\nfunction dispatchEvent(eventType) {\n  const event = document.createEvent(\"CustomEvent\");\n  event.initCustomEvent(eventType, false, false, \"custom\");\n  window.dispatchEvent(event);\n}\n\nfunction abort() {\n  if (activeService) {\n    activeService.destroy();\n    dispatchEvent(\"afterprint\");\n  }\n}\n\nfunction renderProgress(index, total, l10n) {\n  const progressContainer = document.getElementById(\"printServiceOverlay\");\n  const progress = Math.round(100 * index / total);\n  const progressBar = progressContainer.querySelector(\"progress\");\n  const progressPerc = progressContainer.querySelector(\".relative-progress\");\n  progressBar.value = progress;\n  l10n.get(\"print_progress_percent\", {\n    progress\n  }, progress + \"%\").then(msg => {\n    progressPerc.textContent = msg;\n  });\n}\n\nwindow.addEventListener(\"keydown\", function (event) {\n  if (event.keyCode === 80 && (event.ctrlKey || event.metaKey) && !event.altKey && (!event.shiftKey || window.chrome || window.opera)) {\n    window.print();\n    event.preventDefault();\n\n    if (event.stopImmediatePropagation) {\n      event.stopImmediatePropagation();\n    } else {\n      event.stopPropagation();\n    }\n  }\n}, true);\n\nif (\"onbeforeprint\" in window) {\n  const stopPropagationIfNeeded = function (event) {\n    if (event.detail !== \"custom\" && event.stopImmediatePropagation) {\n      event.stopImmediatePropagation();\n    }\n  };\n\n  window.addEventListener(\"beforeprint\", stopPropagationIfNeeded);\n  window.addEventListener(\"afterprint\", stopPropagationIfNeeded);\n}\n\nlet overlayPromise;\n\nfunction ensureOverlay() {\n  if (!overlayPromise) {\n    overlayManager = _app.PDFViewerApplication.overlayManager;\n\n    if (!overlayManager) {\n      throw new Error(\"The overlay manager has not yet been initialized.\");\n    }\n\n    overlayPromise = overlayManager.register(\"printServiceOverlay\", document.getElementById(\"printServiceOverlay\"), abort, true);\n    document.getElementById(\"printCancel\").onclick = abort;\n  }\n\n  return overlayPromise;\n}\n\n_app.PDFPrintServiceFactory.instance = {\n  supportsPrinting: true,\n\n  createPrintService(pdfDocument, pagesOverview, printContainer, printResolution, optionalContentConfigPromise, l10n) {\n    if (activeService) {\n      throw new Error(\"The print service is created and active.\");\n    }\n\n    activeService = new PDFPrintService(pdfDocument, pagesOverview, printContainer, printResolution, optionalContentConfigPromise, l10n);\n    return activeService;\n  }\n\n};\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t// startup\n/******/ \t// Load entry module\n/******/ \t__webpack_require__(0);\n/******/ \t// This entry module used 'exports' so it can't be inlined\n/******/ })()\n;\n});\n\ndefine('skylark-pdfjs-viewer/main',[\r\n\t\"skylark-langx-ns\",\r\n\t\"./viewer\"\r\n],function(skylark,viewer) {\r\n\treturn skylark.attach(\"intg.pdfjs.viewer\",viewer);\r\n});\ndefine('skylark-pdfjs-viewer', ['skylark-pdfjs-viewer/main'], function (main) { return main; });\n\n"]}