{"version":3,"sources":["skylark-pdfjs-viewer-all.js"],"names":["define","evalInScope","js","contextAsScope","this","eval","call","DEFINES","BUNDLE_VERSION","BUNDLE_BUILD","PRODUCTION","SKIP_BABEL","TESTING","GENERIC","MOZCENTRAL","CHROME","MINIFIED","COMPONENTS","LIB","IMAGE_DECODERS","s","test","PDFJSDev","compatibilityParams","Object","create","userAgent","navigator","platform","maxTouchPoints","isAndroid","isIOS","isIOSChrome","disableCreateObjectURL","maxCanvasPixels","viewerCompatibilityParams","freeze","viewer_compatibility","OptionKind","VIEWER","API","WORKER","PREFERENCE","defaultOptions","cursorToolOnLoad","value","kind","defaultUrl","defaultZoomValue","disableHistory","disablePageLabels","enablePermissions","enablePrintAutoRotate","enableScripting","enableWebGL","externalLinkRel","externalLinkTarget","historyUpdateUrl","ignoreDestinationZoom","imageResourcesPath","compatibility","pdfBugEnabled","printResolution","renderer","renderInteractiveForms","sidebarViewOnLoad","scrollModeOnLoad","spreadModeOnLoad","textLayerMode","useOnlyCssZoom","viewerCssTheme","viewOnLoad","cMapPacked","cMapUrl","disableAutoFetch","disableFontFace","disableRange","disableStream","docBaseUrl","fontExtraProperties","isEvalSupported","maxImageSize","pdfBug","verbosity","workerPort","workerSrc","disablePreferences","locale","language","sandboxBundleSrc","userOptions","AppOptions","[object Object]","Error","name","userOption","undefined","defaultOption","options","valueType","Number","isInteger","obj1","path","obj2","split","length","ns","i","_attach","root","attach","obj","skylark","main","pdfjs","display","__webpack_modules__","__unused_webpack_module","exports","__w_pdfjs_require__","defineProperty","enumerable","get","_display_utils","addLinkAttributes","getFilenameFromUrl","LinkTarget","loadScript","PDFDateString","RenderingCancelledException","_api","build","getDocument","LoopbackPort","PDFDataRangeTransport","PDFWorker","version","_util","CMapCompressionType","createObjectURL","createPromiseCapability","createValidAbsoluteUrl","InvalidPDFException","MissingPDFException","OPS","PasswordResponses","PermissionFlag","removeNullCharacters","shadow","UnexpectedResponseException","UNSUPPORTED_FEATURES","Util","VerbosityLevel","_annotation_layer","AnnotationLayer","_api_compatibility","apiCompatibilityParams","_worker_options","GlobalWorkerOptions","_text_layer","renderTextLayer","_svg","SVGGraphics","isNodeJS","PDFNodeStream","setPDFNetworkStreamFactory","params","PDFNetworkStream","PDFFetchStream","isFetchSupported","isValidFetchUrl","url","link","target","rel","enabled","assert","urlNullRemoved","href","title","onclick","targetStr","NONE","SELF","BLANK","PARENT","TOP","DEFAULT_LINK_REL","deprecated","details","console","log","anchor","indexOf","query","end","Math","min","substring","lastIndexOf","src","removeScriptElement","Promise","resolve","reject","script","document","createElement","onload","evt","remove","onerror","head","documentElement","appendChild","StatTimer","PageViewport","DOMSVGFactory","DOMCMapReaderFactory","DOMCanvasFactory","BaseCMapReaderFactory","BaseCanvasFactory","SVG_NS","constructor","unreachable","width","height","canvasAndContext","canvas","context","ownerDocument","globalThis","super","_document","getContext","baseUrl","isCompressed","compressionType","BINARY","_fetchData","catch","reason","baseURI","fetch","then","async","response","ok","statusText","cMapData","Uint8Array","arrayBuffer","stringToBytes","text","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","status","responseText","send","svg","createElementNS","setAttribute","type","viewBox","scale","rotation","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","abs","transform","slice","x","y","applyTransform","rect","topLeft","bottomRight","applyInverseTransform","BaseException","msg","Response","prototype","ReadableStream","protocol","URL","ex","pdfDateStringRegex","started","times","warn","Date","now","push","start","outBuf","longest","time","duration","padEnd","join","input","isString","RegExp","matches","exec","year","parseInt","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","UTC","arrayByteLength","arraysToBytes","arr","resultLength","pos","data","item","itemLength","byteLength","set","bytesToString","bytes","String","fromCharCode","apply","strBuf","chunkEnd","chunk","subarray","capability","isSettled","promise","absoluteUrl","_isValidProtocol","encodeToXmlString","str","buffer","ii","char","codePointAt","entity","XMLEntities","toString","toUpperCase","escapeString","replace","match","getModificationDate","date","getUTCFullYear","getUTCMonth","padStart","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getVerbosityLevel","info","INFOS","isArrayBuffer","v","isArrayEqual","arr1","arr2","every","element","index","isAscii","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","objectFromEntries","iterable","assign","fromEntries","objectSize","keys","NullCharactersRegExp","setVerbosityLevel","level","string32","stringToPDFString","charCodeAt","code","PDFStringTranslateTable","charAt","stringToUTF16BEString","buf","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","UnknownErrorException","TextRenderingMode","StreamType","PasswordException","PageActionEventType","IsLittleEndianCached","IsEvalSupportedCached","ImageKind","IDENTITY_MATRIX","FormatError","FontType","FONT_IDENTITY_MATRIX","DocumentActionEventType","AnnotationType","AnnotationStateModelType","AnnotationReviewState","AnnotationReplyType","AnnotationMarkedState","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","AnnotationActionEventType","AbortException","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontGetPath","errorMarkedContent","NEED_PASSWORD","INCORRECT_PASSWORD","cond","prop","configurable","writable","message","buffer8","Uint32Array","isLittleEndian","Function","hexNumbers","Array","map","n","r","g","b","m1","m2","p","m","xt","yt","d","p1","p2","p3","p4","max","transpose","a","c","first","sqrt","sx","sy","rect1","rect2","compare","orderedX","sort","orderedY","result","normalizeRect","digits","contentType","forceDataSchema","blob","Blob","b1","b2","b3","d1","d2","d3","d4","60","62","38","34","39","__unused_webpack_exports","process","versions","nw","electron","PDFPageProxy","PDFDocumentProxy","DefaultCMapReaderFactory","DefaultCanvasFactory","_font_loader","_node_utils","_annotation_storage","_canvas","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","_webgl","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","NodeCanvasFactory","NodeCMapReaderFactory","createPDFNetworkStream","pdfNetworkStreamFactory","task","PDFDocumentLoadingTask","source","range","rangeTransport","worker","key","window","pdfBytes","isNaN","location","rangeChunkSize","CMapReaderFactory","ignoreErrors","stopAtErrors","workerParams","port","fromPort","_worker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","httpHeaders","withCredentials","all","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","_transport","_capability","pdfDataRangeTransport","sendWithPromise","apiVersion","password","nextDocumentId","onPassword","onProgress","onUnsupportedFeature","transportDestroyed","destroy","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","listener","begin","loaded","total","pdfInfo","_pdfInfo","annotationStorage","AnnotationStorage","numPages","fingerprint","pageNumber","getPage","ref","getPageIndex","getDestinations","id","getDestination","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","downloadInfoCapability","getStats","startCleanup","loadingTask","loadingParams","saveDocument","getFieldObjects","hasJSActions","getCalculationOrderIds","pageIndex","pageInfo","_pageIndex","_pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","rotate","userUnit","view","intent","annotationsPromise","annotationsIntent","getAnnotations","_jsActionsPromise","getPageJSActions","canvasContext","viewport","imageLayer","canvasFactory","background","optionalContentConfigPromise","renderingIntent","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","webGLContext","WebGLContext","enable","displayReadyCapability","operatorList","fnArray","argsArray","lastChunk","_pumpOperatorList","getAll","complete","error","renderTasks","internalRenderTask","splice","_tryCleanup","_abortOperatorList","timeEnd","InternalRenderTask","callback","useRequestAnimationFrame","renderTask","transparency","optionalContentConfig","initializeGraphics","operatorListChanged","opListTask","opListReadCapability","normalizeWhitespace","disableCombineTextItems","sendWithStream","combineTextItems","highWaterMark","size","textContent","items","readableStream","streamTextContent","reader","getReader","styles","pump","read","done","pageCache","waitOn","force","completed","cancel","clear","resetStats","values","operatorListChunk","args","streamReader","_renderPageChunk","setTimeout","curIntentState","delete","cleanup","stats","defer","_listeners","_defer","_deferred","transfers","forEach","cloned","WeakMap","cloneValue","has","includes","byteOffset","isArray","desc","getOwnPropertyDescriptor","getPrototypeOf","hasOwnProperty","PDFWorkerClosure","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","require","pdfjsFilePath","currentScript","getWorkerSrc","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","WorkerMessageHandler","setupFakeWorkerGlobal","loader","pdfjsWorker","createCDNWrapper","wrapper","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","terminateEarly","removeEventListener","onWorkerError","terminate","_setupFakeWorker","addEventListener","supportTransfers","sendTest","testObj","workerHandler","setup","fontLoader","FontLoader","_onUnsupportedFeature","bind","_params","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","loadingTaskSettled","settled","page","_destroy","terminated","annotationStorageResetModified","pdfDocument","resetModified","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","onPull","close","enqueue","onCancel","ready","readyReason","headersCapability","fullReader","headersReady","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","_numPages","exception","updatePassword","_startRenderPage","exportedData","exportedError","fontRegistry","FontInspector","fontAdded","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","fetched","builtInCMap","featureId","filename","results","OptionalContentConfig","metadata","Metadata","contentDispositionFilename","cleanupSuccessful","_objs","objId","resolved","_ensureObj","RenderTask","_internalRenderTask","onContinue","canvasInRendering","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","add","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","requestAnimationFrame","executeOperatorList","BaseFontLoader","nativeFontFaces","styleElement","nativeFontFace","fonts","rule","getElementsByTagName","styleSheet","sheet","insertRule","cssRules","attached","missingFile","isFontLoadingAPISupported","createNativeFontFace","addNativeFontFace","family","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","_loadTestFont","rules","fontsToLoad","loadingContext","requests","nextRequestId","loadTestFontId","supported","otherRequest","shift","atob","int32","offset","spliceString","insert","chunk1","chunk2","ctx","called","checksum","btoa","names","loadedName","div","style","visibility","position","top","left","span","fontFamily","body","isFontReady","fillText","getImageData","removeChild","translatedData","compiledGlyphs","FontFace","registerFont","mimetype","character","cmds","current","cmd","Canvas","createCanvas","fs","readFile","_storage","_modified","onSetModified","onResetModified","defaultValue","modified","entry","val","entries","_setModified","_pattern_helper","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","_originalSave","_originalRestore","_originalRotate","_originalScale","_originalTranslate","translate","_originalTransform","_originalSetTransform","setTransform","_transformMatrix","_transformStack","f","ad_bc","bc_ad","old","prev","pop","angle","cosValue","cos","sinValue","sin","CachedCanvases","cache","getCanvas","trackTransform","canvasEntry","reset","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","textMatrixScale","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","transferMaps","clone","setCurrentPoint","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","contentVisible","markedContentStack","cachedCanvases","_cachedGetSinglePixelWidth","putBinaryImageData","imgData","ImageData","putImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","createImageData","destPos","srcPos","dest","j","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","property","setLineDash","getLineDash","lineDashOffset","resetCtxToDefault","strokeStyle","fillStyle","fillRule","globalAlpha","lineCap","lineJoin","miterLimit","globalCompositeOperation","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","maskCtx","scaleX","scaleY","backdrop","isEnabled","composed","layer","subtype","drawImage","hasBackdrop","composeFn","chunkSize","ceil","row","chunkHeight","genericComposeSMask","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","fillRect","transparentCanvas","compositeCtx","_combinedScaleFactor","hypot","beginLayout","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","steps","fnId","breakIt","depObjId","objsPool","startsWith","endLayout","limit","dashArray","dashPhase","flatness","states","state","suspendSMaskGroup","endSMaskGroup","beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","startTransformInverse","mozCurrentTransformInverse","deltaTransform","clearRect","resumeSMaskGroup","ops","xw","yh","bezierCurveTo","consumePath","getPattern","singularValueDecompose2dScale","getSinglePixelWidth","scaledLineWidth","resetTransform","round","isPatternFill","needRestore","paths","pendingTextPaths","beginPath","addToPath","spacing","fontRefName","fontObj","fontDirection","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","patternTransform","resetLineWidthToOne","fillStrokeMode","isAddToPathSet","getPathGenerator","strokeText","isFontSubpixelAAEnabled","glyphs","showType3Text","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","charWidth","vmetric","vx","vy","remeasure","measuredWidth","measureText","characterScaleX","isInFont","paintChar","scaledAccentX","scaledAccentY","isTextInvisible","spacingLength","charProcOperatorList","operatorListId","transformed","xWidth","yWidth","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","getShadingPatternFromIR","arguments","makeHexColor","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","matrix","bbox","group","isolated","knockout","bounds","getAxialAlignedBoundingBox","canvasBounds","intersect","floor","imageSmoothingEnabled","mozImageSmoothingEnabled","img","compiled","width1","j0","points","POINT_TYPES","lineSize","data0","count","sum","Int32Array","outlines","coords","p0","step","pp","kk","o","l","ll","compileType3Glyph","maskCanvas","skewX","skewY","positions","images","image","w","h","widthScale","imgToPaint","tmpCanvas","tmpCtx","heightScale","HTMLElement","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","getCanvasPosition","appendImage","tag","visible","isVisible","isContentVisible","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","op","raw","shadingIR","ShadingIRs","fromIR","applyBoundingBox","Path2D","region","RadialAxial","colorStops","r1","grad","createLinearGradient","createRadialGradient","addColorStop","createMeshCanvas","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","combinesScale","figures","backgroundColor","boundsWidth","boundsHeight","paddedWidth","BORDER_SIZE","paddedHeight","drawFigures","Mesh","owner","matrixScale","temporaryPatternCanvas","createPattern","Dummy","PaintType","COLORED","UNCOLORED","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","combinedScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","clipBbox","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","action","cbSourceName","cbTargetName","postMessage","_createStreamSink","actionName","handler","ah","_postMessage","queueingStrategy","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","self","streamSink","isCancelled","lastDesiredSize","sinkCapability","success","_deleteStreamController","allSettled","_xml_parser","_repair","parser","SimpleXMLParser","lowerCaseName","xmlDocument","parseFromString","_metadataMap","_parse","_data","codes","chars","nodeName","childNodes","filter","node","hasChildNodes","seqNode","authors","_getSequence","trim","rdf","firstChild","nextSibling","_getCreators","SimpleDOMNode","XMLParserErrorCode","NoError","EndOfDocument","UnterminatedCdat","UnterminatedXmlDeclaration","UnterminatedDoctypeDeclaration","UnterminatedComment","MalformedElement","OutOfMemory","UnterminatedAttributeValue","UnterminatedElement","ElementNeverBegun","isWhitespace","ch","XMLParserBase","fromCodePoint","onResolveEntity","attributes","skipWs","attrName","attrValue","attrEndChar","attrEndIndex","_resolveEntities","parsed","attrStart","ch2","onError","onEndElement","pi","_parseProcessingInstruction","onPi","onComment","onCdata","q2","complexDoctype","doctypeContent","onDoctype","content","_parseContent","onBeginElement","onText","isEmpty","nodeValue","parentNode","child","component","stack","parent","siblingPos","searchNode","currentPos","newPos","attribute","dump","hasAttributes","_currentFragment","_stack","_errorCode","_hasAttributes","_lowerCaseName","parseXml","isWhitespaceString","toLowerCase","lastElement","OptionalContentGroup","creator","_order","_groups","order","groups","baseState","off","expression","policy","ids","from","_queuedChunks","_progressiveDone","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","addRangeListener","_onReceiveData","addProgressListener","_onProgress","addProgressiveReadListener","addProgressiveDoneListener","_onProgressiveDone","transportReady","_enqueue","found","some","_begin","_progressiveDataLength","_loaded","firstReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","requestDataRange","readers","abort","_stream","_done","_filename","_requests","_headersReady","requestCapability","_end","_queuedChunk","requestsCapability","_removeRangeReader","_enabled","WebGLUtils","tryInitGL","loadShader","gl","shaderType","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errorMsg","getShaderInfoLog","createVertexShader","VERTEX_SHADER","createFragmentShader","FRAGMENT_SHADER","createProgram","shaders","program","attachShader","linkProgram","linked","getProgramParameter","LINK_STATUS","getProgramInfoLog","createTexture","textureId","activeTexture","texture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","currentGL","currentCanvas","generateGL","premultipliedalpha","smaskVertexShaderCode","smaskFragmentShaderCode","smaskCache","figuresVertexShaderCode","figuresFragmentShaderCode","figuresCache","vertexShader","fragmentShader","useProgram","resolutionLocation","getUniformLocation","positionLocation","getAttribLocation","backdropLocation","subtypeLocation","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform1i","initSmaskGL","drawingBufferWidth","drawingBufferHeight","uniform2f","uniform4f","TEXTURE0","maskTexture","TEXTURE1","clearColor","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","flush","deleteTexture","deleteBuffer","scaleLocation","offsetLocation","colorLocation","initFiguresGL","coordsMap","colorsMap","pIndex","cIndex","col","jj","coordsBuffer","colorsBuffer","_scripting_utils","AnnotationElementFactory","parameters","annotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","linkService","downloadManager","svgFactory","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","transformOrigin","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","quadPoints","savedRect","quadPoint","trigger","popupElement","PopupElement","modificationDate","contents","hideWrapper","popup","render","className","quadrilateral","isTooltipOnly","actions","Action","newWindow","externalLinkEnabled","_bindNamedAction","_bindLink","_bindJSAction","_renderQuadrilaterals","linkElement","cloneNode","destination","getDestinationHash","goToDestination","getAnchorUrl","executeNamedAction","jsName","eventBus","dispatch","detail","hasPopup","alt","dataset","l10nId","l10nArgs","JSON","stringify","_createPopup","alternativeText","ctrlKey","metaKey","baseName","eventName","valueGetter","shiftKey","modifier","_getKeyModifier","checked","getter","_setEventListener","hasAppearance","fieldValue","storage","getOrCreateValue","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","multiLine","setValue","blurListener","setSelectionRange","valueAsString","activeElement","focus","preventScroll","userName","hidden","disabled","editable","selStart","selEnd","selRange","ColorConverters","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","change","_setEventListeners","readOnly","fieldName","maxLen","maxLength","comb","fieldWidth","combWidth","classList","letterSpacing","verticalAlign","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","textAlign","checkbox","getElementsByName","getAttribute","buttonValue","radio","radioId","selectElement","combo","multiSelect","multiple","option","optionElement","displayValue","exportValue","getValue","selectedIndex","changeEx","keyDown","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","pinned","hideElement","dateObject","toDateObject","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","line","createTextNode","pin","hasAttribute","removeAttribute","zIndex","unpin","lineCoordinates","append","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","file","_download","downloadData","sortedAnnotations","popupAnnotations","annotations","rendered","renderedElement","prepend","elements","makeColorComp","G","R","B","components","RGB_HTML","CMYK_RGB","MAX_TEXT_DIVS_TO_RENDER","NonWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","canvasWidth","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","_textDivs","_textDivProperties","tx","_viewport","atan2","fontName","fontHeight","fontAscent","ascent","descent","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","_layoutText","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","_bounds","right","bottom","_canceled","textDivs","textDivsLength","_renderingDone","findPositiveMin","ts","t","expand","expanded","boxes","box","x1New","x2New","expandBoundsLTR","expandBounds","divProperties","Float64Array","boxScale","fakeBoundary","Infinity","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","unshift","used","concat","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_renderTimer","styleCache","len","_render","timeout","mozOpaque","textItems","textStyles","_processItems","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","padding","renderParameters","SVG_DEFAULTS","fontStyle","fontWeight","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","writePngChunk","crc","crc32","deflateSyncUncompressed","literals","deflateBlocks","idat","adler","adler32","encode","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","Buffer","output","deflateSync","pngLength","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","pf","toFixed","pm","acos","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","svgElement","loadDependencies","convertOpList","operatorIdMapping","opList","fn","opTree","opListElement","opListToTree","opTreeElement","lineMatrix","xcoords","ycoords","tspan","setAttributeNS","txtElement","txtgrp","lineWidthScale","_setStrokeAttributes","_ensureTransformGroup","defs","addFontStyle","_makeColorN_Pattern","inverseTransform","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","colorStop","stop","getAttributeNS","clipId","clipPath","clipElement","setStrokeAlpha","setFillAlpha","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","_network_utils","http","https","fileUriRegex","sourceUrl","parsedUrl","parse","host","parseUrl","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","statusCode","_setReadableStream","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","Range","lstat","stat","createReadStream","createResponseStatusError","contentDisposition","_content_disposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","needsEncodingFixup","toParamRegExp","rfc2616unquote","fixupEncoding","rfc2047decode","rfc5987decode","contentDispositionStr","iter","quot","part","parts","rfc2231getparam","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","decode","err","quotindex","extvalue","encodingend","langvalue","charset","hex","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","NetworkManager","getXhr","currXhrId","pendingRequests","listeners","xhr","xhrId","pendingRequest","setRequestHeader","expectedStatus","onStateChange","onprogress","onHeadersReceived","onDone","xhrStatus","ok_response_on_range_request","getArrayBuffer","rangeHeader","_source","_manager","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","onClosed","_onRangeRequestReaderClosed","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","requestFull","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","getRequestXhr","abortRequest","lengthComputable","isPendingRequest","_requestId","requestRange","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers","__webpack_module_cache__","moduleId","module","LOADINGBAR_END_OFFSET_VAR","ScrollMode","VERTICAL","HORIZONTAL","WRAPPED","SpreadMode","ODD","EVEN","NullL10n","getLanguage","getDirection","fallback","formatL10nValue","binarySearchFirstItem","condition","minIndex","maxIndex","currentIndex","currentItem","backtrackBeforeAllVisibleElements","views","elt","pageTop","offsetTop","clientTop","clientHeight","normalizeWheelEventDirection","delta","deltaX","deltaY","WaitOnType","EVENT","TIMEOUT","animationStarted","dispatchDOMEvent","createEvent","initCustomEvent","dispatchEvent","EventBus","_isInAutomation","isInAutomation","_on","external","once","_off","eventListeners","externalListeners","approximateFraction","xinv","x_","AutoPrintRegExp","CSS_UNITS","DEFAULT_SCALE","DEFAULT_SCALE_VALUE","getActiveOrFocusedElement","curRoot","curActiveOrFocused","querySelector","shadowRoot","getOutputScale","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","scaled","getPageSizeInches","changeOrientation","getPDFFileNameFromURL","defaultFilename","isDataSchema","reFilename","splitURI","suggestedFilename","getVisibleElements","scrollEl","sortByVisibility","horizontal","rtl","scrollTop","scrollLeft","clientWidth","numViews","firstVisibleElementInd","elementLeft","offsetLeft","clientLeft","elementRight","lastEdge","currentWidth","currentHeight","viewWidth","viewHeight","viewRight","viewBottom","hiddenHeight","hiddenWidth","fractionHeight","fractionWidth","percent","widthPercent","last","pc","isPortraitOrientation","isValidRotation","isValidScrollMode","isValidSpreadMode","MAX_AUTO_SCALE","MAX_SCALE","MIN_SCALE","moveToEndOfArray","moved","write","noContextMenuHandler","preventDefault","normalizeWheelEventDelta","deltaMode","MOUSE_PIXELS_PER_LINE","parseQueryString","param","PresentationModeState","NORMAL","CHANGING","FULLSCREEN","ProgressBar","units","bar","_indeterminate","progressSize","_percent","_updateBar","viewer","scrollbarWidth","offsetWidth","doc","setProperty","RendererType","CANVAS","SVG","roundToDivide","SCROLLBAR_PADDING","scrollIntoView","spot","skipOverflowHiddenElements","offsetParent","scrollHeight","scrollWidth","getComputedStyle","overflow","_scaleY","_scaleX","SidebarView","THUMBS","OUTLINE","ATTACHMENTS","LAYERS","TextLayerMode","DISABLE","ENABLE","ENABLE_ENHANCE","UNKNOWN_SCALE","VERTICAL_PADDING","waitOnEventOrTimeout","delay","eventHandler","timeoutHandler","watchScroll","viewAreaElement","debounceScroll","rAF","currentX","lastX","currentY","lastY","down","_eventHandler","GrabToPan","ignoreTarget","onActiveChanged","activate","deactivate","toggle","_onmousedown","_onmousemove","_endPan","overlay","matchesSelector","CSS_CLASS_GRAB","active","button","originalTarget","tagName","scrollLeftStart","scrollTopStart","clientXStart","clientX","clientYStart","clientY","stopPropagation","focusedElement","contains","blur","isNotIEorIsIE10plus","buttons","isChrome15OrOpera15plus","isSafari6plus","which","isLeftMouseReleased","xDiff","yDiff","scrollTo","behavior","prefix","documentMode","chrome","webstore","app","vendor","ui_utils","grab_to_pan","CursorTool","SELECT","HAND","ZOOM","PDFCursorTools","activeBeforePresentationMode","handTool","_addEventListeners","switchTool","activeTool","tool","disableActiveTool","_dispatchEvent","previouslyActive","pdfjsLib","CLEANUP_TIMEOUT","RenderingStates","INITIAL","RUNNING","PAUSED","FINISHED","PDFRenderingQueue","pdfViewer","pdfThumbnailViewer","onIdle","highestPriorityPage","idleTimeout","printing","isThumbnailViewEnabled","renderingId","currentlyVisiblePages","forceRendering","scrolledDown","visibleViews","numVisible","isViewFinished","nextPageIndex","previousPageIndex","renderingState","resume","draw","renderHighestPriority","OverlayManager","_overlays","_active","_keyDownBound","_keyDown","callerCloseMethod","canForceClose","_closeThroughCaller","keyCode","PasswordPrompt","overlayManager","l10n","overlayName","label","submitButton","cancelButton","updateCallback","verify","register","promptString","TREEITEM_OFFSET_TOP","TREEITEM_SELECTED_CLASS","BaseTreeViewer","_pdfDocument","_lastToggleIsShow","_currentTreeItem","toggler","shouldShowAll","_toggleTreeItem","insertBefore","show","fragment","hasAnyNesting","treeItem","currentNode","firstElementChild","_updateCurrentTreeItem","base_tree_viewer","PdfFileRegExp","PDFAttachmentViewer","_appendAttachment","keepRenderedCapability","_attachments","_renderedCapability","_pendingDispatchEvent","attachmentsCount","blobUrl","viewerUrl","runtime","getURL","revokeObjectURL","attachments","localeCompare","createDocumentFragment","_bindPdfLink","_normalizeTextContent","_finishRendering","renderedPromise","DEFAULT_FIELD_CONTENT","NON_METRIC_LOCALES","US_PAGE_NAMES","8.5x11","8.5x14","METRIC_PAGE_NAMES","297x420","210x297","getPageName","isPortrait","pageNames","PDFDocumentProperties","fields","closeButton","_reset","_currentPageNumber","_pagesRotation","pagesRotation","_isNonMetricLocale","freezeFieldData","_dataAvailableCapability","currentPageNumber","fieldData","_updateUI","fileName","fileSize","creationDate","pageSize","isLinearized","_parseFileSize","_parseDate","CreationDate","ModDate","pdfPage","_parsePageSize","_parseLinearization","IsLinearized","Title","author","Author","subject","Subject","keywords","Keywords","Creator","producer","Producer","PDFFormatVersion","pageCount","linearized","getDownloadInfo","kb","size_kb","toPrecision","toLocaleString","size_b","size_mb","pageSizeInches","sizeInches","sizeMillimeters","pageName","rawName","exactMillimeters","intMillimeters","unit","orientation","inputDate","CharacterType","SPACE","ALPHA_LETTER","PUNCT","HAN_LETTER","KATAKANA_LETTER","HIRAGANA_LETTER","HALFWIDTH_KATAKANA_LETTER","THAI_LETTER","getCharacterType","charCode","isAlphabeticalScript","isAsciiSpace","isAsciiAlpha","isAsciiDigit","isThai","isHan","isKatakana","isHiragana","isHalfwidthKatakana","pdf_find_utils","FindState","FOUND","NOT_FOUND","PENDING","FIND_TIMEOUT","MATCH_SCROLL_OFFSET_TOP","MATCH_SCROLL_OFFSET_LEFT","CHARACTERS_TO_NORMALIZE","‘","’","‚","‛","“","”","„","‟","¼","½","¾","normalizationRegex","normalize","diffs","normalizedText","normalizedCh","diff","getOriginalIndex","matchIndex","totalDiff","PDFFindController","_linkService","_eventBus","_onFindBarClose","highlightMatches","_highlightMatches","pageMatches","_pageMatches","pageMatchesLength","_pageMatchesLength","selected","_selected","_state","_firstPageCapability","_shouldDirtyMatch","_dirtyMatch","_updateUIState","_extractText","findbarClosed","pendingTimeout","_findTimeout","_nextMatch","highlightAll","_updateAllPages","_scrollMatches","matchIdx","pageIdx","_offset","wrapped","_extractTextPromises","_pageContents","_pageDiffs","_matchesCountTotal","_pagesToSearch","_pendingFindMatches","_resumePageIdx","_query","_rawQuery","_normalizedQuery","pagesCount","isPageVisible","matchesWithLength","matchesLength","isSubTerm","currentElem","nextElem","skipped","prevElem","matchLength","startIdx","endIdx","pageContent","pageDiffs","entireWord","queryLen","_isEntireWord","originalMatchIdx","matchEnd","originalQueryLen","queryArray","subquery","subqueryLen","_prepareMatches","caseSensitive","phraseSearch","_calculatePhraseMatch","_calculateWordMatch","_updatePage","_nextPageMatch","pageMatchesCount","_updateUIResultsCount","extractTextCapability","getTextContent","previous","findPrevious","currentPageIndex","_calculateMatch","numPageMatches","_updateMatch","_advanceOffsetPage","numMatches","_matchesReady","previousPage","matchesCount","_requestMatchesCount","rawQuery","pdf_find_controller","MATCHES_COUNT_LIMIT","PDFFindBar","opened","toggleButton","findField","highlightAllCheckbox","caseSensitiveCheckbox","entireWordCheckbox","findMsg","findResultsCount","findPreviousButton","findNextButton","_adjustWidth","updateUIState","findPrev","updateResultsCount","matchesCountMsg","select","findbarHeight","inputContainerHeight","HASH_CHANGE_TIMEOUT","POSITION_UPDATED_THRESHOLD","UPDATE_VIEWAREA_TIMEOUT","getCurrentHash","hash","isDestHashesEqual","destHash","pushHash","nameddest","isDestArraysEqual","firstDest","secondDest","isEntryEqual","PDFHistory","_initialized","_fingerprint","_boundEvents","_isViewerInPresentationMode","_isPagesLoaded","resetHistory","updateUrl","reInitialized","_updateUrl","_bindEvents","history","_popStateInProgress","_blockHashChange","_currentHash","_numPositionUpdates","_uid","_maxUid","_destination","_position","_isValidState","_parseCurrentHash","_pushOrReplaceState","_updateInternalState","uid","_initialRotation","_initialBookmark","_pageHide","_unbindEvents","_updateViewareaTimeout","namedDest","explicitDest","forceReplace","_tryPushCurrentPosition","back","forward","popStateInProgress","initialBookmark","initialRotation","shouldReplace","newState","newUrl","chromecomState","replaceState","pushState","sendMessage","temporary","checkReload","perfEntry","performance","getEntriesByType","removeTemporary","checkNameddest","pdfOpenParams","newHash","hashChanged","setHash","updateViewarea","_updateViewarea","popState","_popState","pageHide","PDFLayerViewer","_resetLayers","_toggleAllTreeItems","_optionalContentConfig","layersCount","groupId","setVisibility","_addToggleButton","getOrder","queue","levelData","_setNestedName","itemsDiv","getGroup","PDFLinkService","_ignoreDestinationZoom","pdfHistory","_pagesRefCache","rawDest","destRef","_cachedPageNumber","cachePageRef","_goToDestinationHelper","pushCurrentPosition","scrollPageIntoView","destArray","pageLabelToPageNumber","pushPage","search","phrase","zoomArgs","zoom","zoomArg","zoomArgNumber","parseFloat","allowNegativeOffset","pagemode","destLength","num","gen","allowNull","isValidExplicitDestination","nextPage","pageNum","pageRef","refStr","isPageCached","SimpleLinkService","PDFOutlineViewer","_currentOutlineItem","_sidebarView","_outline","_pageNumberToDestHashCapability","outlineCount","enableCurrentOutlineItemButton","totalCount","nestedCount","nestedItems","outline","_setStyles","pageNumberToDestHash","_getPageNumberToDestHash","_scrollToCurrentTreeItem","pageNumberNesting","nesting","currentNesting","DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS","DELAY_BEFORE_HIDING_CONTROLS","ACTIVE_SELECTOR","CONTROLS_SELECTOR","MOUSE_SCROLL_COOLDOWN_TIME","PAGE_SWITCH_THRESHOLD","SWIPE_MIN_DISTANCE_THRESHOLD","SWIPE_ANGLE_THRESHOLD","PDFPresentationMode","contextMenuItems","contextMenuOpen","mouseScrollTimeStamp","mouseScrollDelta","touchSwipeState","contextFirstPage","contextLastPage","contextPageRotateCw","contextPageRotateCcw","switchInProgress","_addFullscreenChangeListeners","_setSwitchInProgress","_notifyStateChange","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","previousScale","currentScaleValue","currentTime","getTime","storedTime","_resetMouseScrollState","totalDelta","isFullscreen","fullscreenElement","mozFullScreen","webkitIsFullScreen","_removeFullscreenChangeListeners","_resetSwitchInProgress","_addWindowListeners","_showControls","getSelection","removeAllRanges","_removeWindowListeners","_hideControls","isInternalLink","controlsTimeout","touches","startX","pageX","startY","pageY","endX","endY","dx","dy","absAngle","showControlsBind","mouseDownBind","_mouseDown","mouseWheelBind","_mouseWheel","resetMouseScrollStateBind","contextMenuBind","_contextMenu","touchSwipeBind","_touchSwipe","passive","_enter","_exit","fullscreenChangeBind","_fullscreenChange","pdf_rendering_queue","UI_NOTIFICATION_CLASS","PDFSidebar","isOpen","isInitialViewSet","onToggled","outerContainer","viewerContainer","thumbnailButton","outlineButton","attachmentsButton","layersButton","thumbnailView","outlineView","attachmentsView","layersView","_outlineOptionsContainer","outlineOptionsContainer","_currentOutlineItemButton","currentOutlineItemButton","_hideUINotification","switchView","visibleView","isThumbnailViewVisible","isOutlineViewVisible","isAttachmentsViewVisible","isLayersViewVisible","_switchView","forceOpen","isViewChanged","shouldForceRendering","_updateThumbnailViewer","_forceRendering","pageView","getPageView","getThumbnail","setImage","scrollThumbnailIntoView","onTreeLoaded","_showUINotification","pagesPromise","SIDEBAR_WIDTH_VAR","SIDEBAR_MIN_WIDTH","SIDEBAR_RESIZING_CLASS","PDFSidebarResizer","isRTL","sidebarOpen","_width","_outerContainerWidth","resizer","dir","outerContainerWidth","maxWidth","_updateWidth","mouseMove","mouseUp","_mouseMove","_mouseUp","updated","MAX_NUM_SCALING_STEPS","THUMBNAIL_CANVAS_BORDER_WIDTH","THUMBNAIL_WIDTH","TempImageFactory","tempCanvasCache","tempCanvas","PDFThumbnailView","defaultViewport","renderingQueue","checkSetImageDisabled","disableCanvasToImageConversion","pageLabel","pdfPageRotate","_optionalContentConfigPromise","_checkSetImageDisabled","pageWidth","pageHeight","pageRatio","canvasHeight","_thumbPageTitle","goToPage","ring","borderAdjustment","totalRotation","getViewport","cancelRendering","outputScale","_thumbPageCanvas","toDataURL","finishRenderTask","_convertCanvasToImage","_getPageDrawContext","drawViewport","renderContext","cont","isHighestPriority","resultPromise","pageCached","setPdfPage","reducedWidth","reducedHeight","reducedImage","reducedImageCtx","pdf_thumbnail_view","THUMBNAIL_SCROLL_MARGIN","THUMBNAIL_SELECTED_CLASS","PDFThumbnailViewer","scroll","_scrollUpdated","_resetView","_setImageDisabled","_thumbnails","prevThumbnailView","visibleThumbs","_getVisibleThumbs","numVisibleThumbs","shouldScroll","update","destroyCanvas","_pageLabels","_pagesRequests","_cancelRendering","firstPagePromise","firstPdfPage","thumbnail","firstThumbnailView","labels","setPageLabel","thumbView","getHighestPriority","_ensurePdfPageLoaded","renderView","pdf_link_service","AnnotationLayerBuilder","pageDiv","hasJSActionsPromise","_cancelled","DefaultAnnotationLayerFactory","MAX_CANVAS_PIXELS","PDFPageView","hasRestrictedScaling","textLayerFactory","annotationLayerFactory","paintTask","paintedViewportMap","_renderError","annotationLayer","textLayer","zoomLayer","removeFromDOM","zoomLayerCanvas","keepZoomLayer","keepAnnotations","currentZoomLayerNode","currentAnnotationNode","hide","_resetZoomLayer","loadingIconDiv","cssTransform","timestamp","isScalingRestricted","redrawAnnotations","relativeRotation","absRotation","textLayerViewport","textRelativeRotation","textAbsRotation","textLayerDiv","transX","transY","_renderAnnotationLayer","convertToPdfPoint","canvasWrapper","createTextLayerBuilder","renderContinueCallback","finishPaintTask","paintOnSvg","paintOnCanvas","onRenderContinue","setTextContentStream","createAnnotationLayerBuilder","renderCapability","isCanvasHidden","showCanvas","actualSizeViewport","pixelsInViewport","maxScale","sfx","sfy","ensureNotCancelled","getOperatorList","svgGfx","getSVG","EXPAND_DIVS_TIMEOUT","TextLayerBuilder","findController","renderingDone","textLayerRenderTask","_onUpdateTextLayerMatches","_bindMouse","endOfContent","numTextDivs","textLayerFrag","_updateMatches","iIndex","mm","divIdx","isSelectedPage","selectedMatchIdx","prevEnd","infinity","appendTextToDiv","fromOffset","toOffset","i0","i1","isSelected","highlightSuffix","scrollMatchIntoView","n0","n1","clearedUntilDivIdx","_convertMatches","_renderMatches","expandDivsTimer","adjustTop","getPropertyValue","divBounds","getBoundingClientRect","DefaultTextLayerFactory","annotation_layer_builder","pdf_page_view","text_layer_builder","DEFAULT_CACHE_SIZE","BaseViewer","viewerVersion","_name","removePageBorders","defaultRenderingQueue","setViewer","_scrollUpdate","presentationModeState","_onBeforeDraw","_onAfterDraw","_pages","pageViewsReady","_pagesCapability","_setCurrentPageNumber","resetCurrentPageView","_resetCurrentPageView","currentPageLabel","currentScale","_currentScale","_setScale","_currentScaleValue","onePageRendered","_onePageRenderedCapability","_viewerElement","_getVisiblePages","setDocument","_buffer","firstPageView","_spreadMode","_updateSpreadMode","_onePageRenderedOrForceFetch","getPagesLeft","resize","newSize","pagesToKeep","pageIdsToKeep","Set","iMax","_location","_scrollMode","_resetScriptingEvents","_updateScrollMode","pageSpot","newScale","newValue","noScroll","preset","oldScale","isSameScale","presetValue","isInPresentationMode","isChangingPresentationMode","_pageWidthScaleFactor","spreadMode","scrollMode","_setScaleUpdatePages","currentPage","noPadding","hPadding","vPadding","_isScrollModeHorizontal","pageWidthScale","pageHeightScale","horizontalScale","_scrollIntoView","boundingRect","convertToViewportPoint","firstPage","normalizedScaleValue","currentPageView","getPagePoint","intLeft","intTop","visiblePages","numVisiblePages","newCacheSize","_updateHelper","_updateLocation","_isContainerRtl","direction","isHorizontalScrollbarEnabled","isVerticalScrollbarEnabled","scrollAhead","hasEqualPageSizes","pagesOverview","pages","parity","spread","pageLayout","yArray","currentId","expectedId","firstId","lastId","advance","_getPageAdvance","_pageOpenPendingSet","pageOpenPendingSet","scriptingEvents","_scriptingEvents","dispatchPageClose","dispatchPageOpen","actionsPromise","getJSActions","onPageChanging","onPageRendered","onPagesDestroy","base_viewer","PDFViewer","_getCurrentVisiblePage","stillFullyVisible","PDFSinglePageViewer","_ensurePageViewVisible","_shadowViewer","_previousPageNumber","_updateScrollDown","previousPageView","viewerNodes","pdf_cursor_tools","pdf_single_page_viewer","SecondaryToolbar","mainContainer","toolbar","toolbarButtonContainer","presentationModeButton","openFileButton","printButton","downloadButton","viewBookmarkButton","firstPageButton","lastPageButton","pageRotateCwButton","pageRotateCcwButton","cursorSelectToolButton","eventDetails","cursorHandToolButton","scrollVerticalButton","scrollHorizontalButton","scrollWrappedButton","spreadNoneButton","spreadOddButton","spreadEvenButton","documentPropertiesButton","lastPage","pageRotateCw","pageRotateCcw","containerHeight","previousContainerHeight","_bindClickListeners","_bindCursorToolsListener","_bindScrollModeListener","_bindSpreadModeListener","_setMaxHeight","scrollModeChanged","isScrollModeHorizontal","spreadModeChanged","maxHeight","PAGE_NUMBER_LOADING_INDICATOR","SCALE_SELECT_CONTAINER_WIDTH","SCALE_SELECT_WIDTH","Toolbar","next","zoomIn","zoomOut","openFile","print","download","viewBookmark","scaleSelectContainer","scaleSelect","customScaleOption","_wasLocalized","_bindListeners","hasPageLabels","pageScaleValue","pageScale","updateLoadingIndicatorState","oncontextmenu","_adjustScaleWidth","resetNumPages","customScale","predefinedValueFound","loading","pageNumberInput","predefinedValuesPromise","predefinedValue","DEFAULT_VIEW_HISTORY_CACHE_SIZE","ViewHistory","cacheSize","_initializedPromise","_readFromStorage","databaseStr","database","files","branch","sessionStorage","setItem","localStorage","getItem","_writeToStorage","app_options","overlay_manager","password_prompt","pdf_attachment_viewer","pdf_document_properties","pdf_find_bar","pdf_history","pdf_layer_viewer","pdf_outline_viewer","pdf_presentation_mode","pdf_sidebar","pdf_sidebar_resizer","pdf_thumbnail_viewer","pdf_viewer","secondary_toolbar","view_history","WHEEL_ZOOM_DISABLED_TIMEOUT","ENABLE_PERMISSIONS_CLASS","ViewOnLoad","PREVIOUS","ViewerCssTheme","AUTOMATIC","LIGHT","DARK","KNOWN_VERSIONS","KNOWN_GENERATORS","DefaultExternalServices","callbacks","supportsIntegratedFind","supportsDocumentFonts","supportedMouseWheelZoomModifierKeys","PDFViewerApplication","_initializedCapability","fellback","appConfig","pdfLoadingTask","printService","pdfRenderingQueue","pdfPresentationMode","pdfDocumentProperties","pdfLinkService","pdfSidebar","pdfSidebarResizer","pdfOutlineViewer","pdfAttachmentViewer","pdfLayerViewer","pdfCursorTools","store","preferences","secondaryToolbar","downloadComplete","isViewerEmbedded","externalServices","documentInfo","_contentDispositionFilename","triggerDelayedFallback","_saveInProgress","_wheelUnusedTicks","_idleCallbacks","_scriptingInstance","createPreferences","_readPreferences","_parseHashParameters","_forceCssTheme","_initializeL10n","_initializeViewerComponents","bindEvents","bindWindowEvents","appContainer","setAll","hashParams","disableworker","import","loadFakeWorker","disablerange","disablestream","disableautofetch","disablefontface","disablehistory","webgl","textlayer","pdfbug","enabledTabs","debuggerScriptPath","PDFBug","loadAndEnablePDFBug","createL10n","cssTheme","styleSheets","CSSMediaRule","media","deleteRule","darkRules","cssText","createDownloadManager","sidebar","setThumbnailViewer","setHistory","findBar","documentProperties","supportsFullscreen","fullscreen","passwordPrompt","passwordOverlay","sidebarResizer","config","initialize","webViewerInitialized","initialized","initializedPromise","ticks","supportsPrinting","PDFPrintServiceFactory","instance","support","fullscreenEnabled","mozFullScreenEnabled","webkitRequestFullScreen","webkitFullscreenEnabled","loadingBar","initPassiveLoading","originalUrl","progress","setTitle","_docFilename","cancelIdleCallback","scripting","internalEvents","domEvents","destroySandbox","errorWrapper","promises","webViewerResetPermissions","_cancelIdleCallbacks","_destroyScriptingInstance","workerParameters","setTitleUsingUrl","apiParameters","setUpdateCallback","load","loadingErrorMessage","sourceEventType","downloadByUrl","downloadUrl","dispatchEventInSandbox","reportTelemetry","moreInfo","moreInfoText","lineNumber","errorWrapperConfig","errorMessage","errorMoreInfo","moreInfoButton","lessInfoButton","disableAutoFetchLoadingBarTimeout","pageLayoutPromise","pageModePromise","openActionPromise","baseDocumentUrl","setPagesCount","storedPromise","getMultiple","sidebarView","setWidth","_initializeAnnotationStorageCallbacks","timeStamp","stored","pageMode","openAction","_initializePdfHistory","initialDest","apiPageModeToSidebarView","apiPageLayoutToSpreadMode","setInitialView","_initializePermissions","race","_initializeAutoPrint","requestIdleCallback","_collectTelemetry","_initializeJavaScript","_initializePageLabels","_initializeMetadata","objects","calculationOrder","docActions","createScripting","command","triggerPrinting","getElementById","CustomEvent","visitedPages","createSandbox","appInfo","docInfo","baseURL","filesize","getRaw","initializeScriptingEvents","markInfo","tagged","Marked","triggerAutoPrint","_delayedFallback","pdfTitle","infoTitle","metadataTitle","IsXFAPresent","IsAcroFormPresent","versionId","generatorId","generator","formType","numLabels","setPageLabels","setPageNumber","permissions","beforeUnload","storedHash","setRotation","setViewerModes","printMessage","notReadyMessage","alert","getPagesOverview","printContainer","createPrintService","layout","newRotation","beforePrint","afterPrint","webViewerResize","webViewerHashchange","webViewerPageRendered","webViewerUpdateViewarea","webViewerPageChanging","webViewerScaleChanging","webViewerRotationChanging","webViewerSidebarViewChanged","webViewerPageMode","webViewerNamedAction","webViewerPresentationModeChanged","webViewerPresentationMode","webViewerPrint","webViewerDownload","webViewerSave","webViewerFirstPage","webViewerLastPage","webViewerNextPage","webViewerPreviousPage","webViewerZoomIn","webViewerZoomOut","webViewerZoomReset","webViewerPageNumberChanged","webViewerScaleChanged","webViewerRotateCw","webViewerRotateCcw","webViewerOptionalContentConfig","webViewerSwitchScrollMode","webViewerScrollModeChanged","webViewerSwitchSpreadMode","webViewerSpreadModeChanged","webViewerDocumentProperties","webViewerFind","webViewerFindFromUrlHash","webViewerUpdateFindMatchesCount","webViewerUpdateFindControlState","reportPageStatsPDFBug","webViewerFileInputChange","webViewerOpenFile","windowResize","windowHashChange","windowBeforePrint","windowAfterPrint","windowUpdateFromSandbox","webViewerVisibilityChange","webViewerWheel","webViewerTouchStart","webViewerClick","webViewerKeyDown","webViewerKeyUp","wholeTicks","sign","scriptingReady","validateFileURL","webViewerOpenFileViaURL","HOSTED_VIEWER_ORIGINS","viewerOrigin","Stats","pageStats","queryString","fileInput","openFileInputName","File","FileReader","FileList","dataTransfer","dropEffect","viewFind","setMultiple","requestPresentationMode","downloadOrSave","zoomReset","rotatePages","executeCommand","updateFindMatchesCount","updateFindControlState","setPageScale","visibilityState","setZoomDisabledTimeout","fileReader","readAsArrayBuffer","click","zoomDisabledTimeout","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","accumulateWheelTicks","PIXELS_PER_LINE_SCALE","scaleCorrectionFactor","containsElement","handled","ensureViewerFocused","altKey","isViewerInPresentationMode","findState","curElement","curElementTagName","isContentEditable","turnPage","turnOnlyIfPageFit","returnValue","BasePreferences","json","prefs","defaults","prefValue","prefObj","defaultType","DownloadManager","webL10n","gL10nData","gTextData","gTextProp","gLanguage","gMacros","gReadyState","gAsyncResourceLoading","xhrLoadText","onSuccess","onFailure","overrideMimeType","ontimeout","parseResource","lang","successCallback","failureCallback","evalString","parsedPropertiesCallback","dictionary","reBlank","reComment","reSection","reImport","reSplit","parseRawLines","rawText","extendedSyntax","parsedRawLinesCallback","currentLang","genericLang","skipLang","nextEntry","loadImport","parseProperties","loadLocale","langLinks","langCount","onResourceLoaded","gResourceCount","resource","L10nResourceLink","dict","innerHTML","locales","default_locale","defaultLocale","anyCaseLang","getL10nData","rv","substArguments","substIndexes","reMatch","macroName","paramName","macro","matched_text","arg","translateElement","getL10nAttributes","children","childElementCount","nodeType","getChildElementCount","textNode","plural","_pluralRules","isIn","list","isBetween","pluralRules","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","af","ak","am","ar","asa","az","be","bem","bez","bg","bh","bm","bn","bo","brx","bs","ca","cgg","chr","cy","da","de","dv","dz","ee","el","en","eo","es","et","eu","fa","ff","fi","fil","fo","fr","fur","fy","ga","gd","gsw","gu","guw","gv","ha","haw","he","hi","hr","hu","ig","is","it","iu","ja","jmc","jv","ka","kab","kaj","kcg","kde","kea","kl","km","kn","ko","ksb","ksh","ku","kw","lag","lb","lg","ln","lo","lt","lv","mas","mg","mk","ml","mn","mo","mr","ms","mt","my","nah","naq","nb","nd","ne","nl","nn","no","nr","nso","ny","nyn","om","or","pa","pap","pl","pt","rm","ro","rof","ru","rwk","sah","saq","se","seh","ses","sg","sh","shi","sk","sl","sma","smi","smj","smn","sms","sn","so","sq","sr","ss","ssy","st","sv","sw","syr","ta","te","teo","th","ti","tig","tk","tl","tn","to","tr","tzm","uk","ve","vi","vun","wa","wae","wo","xh","xog","yo","zh","zu","getPluralRules","fallbackString","getText","setLanguage","shortCode","getTranslatableChildren","elementCount","getReadyState","GenericL10n","_lang","_ready","GenericScripting","pdfjsSandbox","QuickJSSandbox","sandbox","nukeSandbox","download_manager","genericl10n","generic_scripting","GenericPreferences","GenericCom","activeService","PDFPrintService","_printResolution","throwIfInactive","pageStyleSheet","ensureOverlay","renderNextPage","renderProgress","activeServiceOnEntry","PRINT_UNITS","renderPage","useRenderedPage","printItem","toBlob","eventType","progressContainer","progressBar","progressPerc","renderPages","performPrint","opera","stopImmediatePropagation","stopPropagationIfNeeded","overlayPromise","PDFViewerApplicationOptions","humanReadableUrl","webViewerLoad","run"],"mappings":"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","file":"../skylark-pdfjs-viewer-all.js","sourcesContent":["define('skylark-pdfjs-viewer/pdfjs_dev',[],function(){\r\n\tfunction evalInScope(js, contextAsScope) {\r\n\t    //# Return the results of the in-line anonymous function we .call with the passed context\r\n\t    return function() { with(this) { return eval(js); }; }.call(contextAsScope);\r\n\t}\r\n\r\n\r\n\tvar DEFINES = {\r\n\t  BUNDLE_VERSION : \"2.7.570\",\r\n\t  BUNDLE_BUILD : 0,\r\n\t  PRODUCTION: true,\r\n\t  SKIP_BABEL: true,\r\n\t  TESTING: false,\r\n\t  // The main build targets:\r\n\t  GENERIC: true,\r\n\t  MOZCENTRAL: false,\r\n\t  CHROME: false,\r\n\t  MINIFIED: false,\r\n\t  COMPONENTS: false,\r\n\t  LIB: false,\r\n\t  IMAGE_DECODERS: false,\r\n\t};\r\n\r\n\r\n\treturn   {\r\n\t\tDEFINES,\r\n\r\n\t\teval(s) {\r\n\t\t\treturn evalInScope(s,DEFINES);\r\n\t\t},\r\n\r\n\r\n\t\ttest(s) {\r\n\t\t\treturn !!evalInScope(s,DEFINES);\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n});\ndefine('skylark-pdfjs-viewer/viewer_compatibility',[\n  \"./pdfjs_dev\"\n],function(PDFJSDev){\n  /* Copyright 2018 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const compatibilityParams = Object.create(null);\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    const userAgent =\n      (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n    const platform =\n      (typeof navigator !== \"undefined\" && navigator.platform) || \"\";\n    const maxTouchPoints =\n      (typeof navigator !== \"undefined\" && navigator.maxTouchPoints) || 1;\n\n    const isAndroid = /Android/.test(userAgent);\n    const isIOS =\n      /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent) ||\n      (platform === \"MacIntel\" && maxTouchPoints > 1);\n    const isIOSChrome = /CriOS/.test(userAgent);\n\n    // Checks if possible to use URL.createObjectURL()\n    // Support: IE, Chrome on iOS\n    (function checkOnBlobSupport() {\n      // Sometimes Chrome on iOS loses data created with createObjectURL(),\n      // see issue #8081.\n      if (isIOSChrome) {\n        compatibilityParams.disableCreateObjectURL = true;\n      }\n    })();\n\n    // Limit canvas size to 5 mega-pixels on mobile.\n    // Support: Android, iOS\n    (function checkCanvasSizeLimitation() {\n      if (isIOS || isAndroid) {\n        compatibilityParams.maxCanvasPixels = 5242880;\n      }\n    })();\n  }\n  const viewerCompatibilityParams = Object.freeze(compatibilityParams);\n\n  return { viewerCompatibilityParams };\n});\ndefine('skylark-pdfjs-viewer/app_options',[\n  \"./viewer_compatibility\",\n  \"./pdfjs_dev\"\n],function(viewer_compatibility,PDFJSDev){\n\n  /* Copyright 2018 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { viewerCompatibilityParams } = viewer_compatibility;\n\n  const OptionKind = {\n    VIEWER: 0x02,\n    API: 0x04,\n    WORKER: 0x08,\n    PREFERENCE: 0x80,\n  };\n\n  /**\n   * PLEASE NOTE: To avoid introducing unnecessary dependencies, we specify the\n   *              values below *explicitly* rather than relying on imported types.\n   */\n  const defaultOptions = {\n    cursorToolOnLoad: {\n      /** @type {number} */\n      value: 0,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    defaultUrl: {\n      /** @type {string} */\n      value: \"compressed.tracemonkey-pldi-09.pdf\",\n      kind: OptionKind.VIEWER,\n    },\n    defaultZoomValue: {\n      /** @type {string} */\n      value: \"\",\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    disableHistory: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER,\n    },\n    disablePageLabels: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    /**\n     * The `disablePreferences` is, conditionally, defined below.\n     */\n    enablePermissions: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    enablePrintAutoRotate: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    enableScripting: {\n      /** @type {boolean} */\n      value: typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\"),\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    enableWebGL: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    externalLinkRel: {\n      /** @type {string} */\n      value: \"noopener noreferrer nofollow\",\n      kind: OptionKind.VIEWER,\n    },\n    externalLinkTarget: {\n      /** @type {number} */\n      value: 0,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    historyUpdateUrl: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    ignoreDestinationZoom: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    imageResourcesPath: {\n      /** @type {string} */\n      value: \"./images/\",\n      kind: OptionKind.VIEWER,\n    },\n    /**\n     * The `locale` is, conditionally, defined below.\n     */\n    maxCanvasPixels: {\n      /** @type {number} */\n      value: 16777216,\n      compatibility: viewerCompatibilityParams.maxCanvasPixels,\n      kind: OptionKind.VIEWER,\n    },\n    pdfBugEnabled: {\n      /** @type {boolean} */\n      value: typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\"),\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    printResolution: {\n      /** @type {number} */\n      value: 150,\n      kind: OptionKind.VIEWER,\n    },\n    renderer: {\n      /** @type {string} */\n      value: \"canvas\",\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    renderInteractiveForms: {\n      /** @type {boolean} */\n      value: true,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    sidebarViewOnLoad: {\n      /** @type {number} */\n      value: -1,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    scrollModeOnLoad: {\n      /** @type {number} */\n      value: -1,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    spreadModeOnLoad: {\n      /** @type {number} */\n      value: -1,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    textLayerMode: {\n      /** @type {number} */\n      value: 1,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    useOnlyCssZoom: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    viewerCssTheme: {\n      /** @type {number} */\n      value: 0,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n    viewOnLoad: {\n      /** @type {boolean} */\n      value: 0,\n      kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n    },\n\n    cMapPacked: {\n      /** @type {boolean} */\n      value: true,\n      kind: OptionKind.API,\n    },\n    cMapUrl: {\n      /** @type {string} */\n      value:\n        typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n          ? \"../external/bcmaps/\"\n          : \"../web/cmaps/\",\n      kind: OptionKind.API,\n    },\n    disableAutoFetch: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.API + OptionKind.PREFERENCE,\n    },\n    disableFontFace: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.API + OptionKind.PREFERENCE,\n    },\n    disableRange: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.API + OptionKind.PREFERENCE,\n    },\n    disableStream: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.API + OptionKind.PREFERENCE,\n    },\n    docBaseUrl: {\n      /** @type {string} */\n      value: \"\",\n      kind: OptionKind.API,\n    },\n    fontExtraProperties: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.API,\n    },\n    isEvalSupported: {\n      /** @type {boolean} */\n      value: true,\n      kind: OptionKind.API,\n    },\n    maxImageSize: {\n      /** @type {number} */\n      value: -1,\n      kind: OptionKind.API,\n    },\n    pdfBug: {\n      /** @type {boolean} */\n      value: false,\n      kind: OptionKind.API,\n    },\n    verbosity: {\n      /** @type {number} */\n      value: 1,\n      kind: OptionKind.API,\n    },\n\n    workerPort: {\n      /** @type {Object} */\n      value: null,\n      kind: OptionKind.WORKER,\n    },\n    workerSrc: {\n      /** @type {string} */\n      value:\n        typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n          ? \"../src/worker_loader.js\"\n          : \"../build/pdf.worker.js\",\n      kind: OptionKind.WORKER,\n    },\n  };\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || (GENERIC && !LIB)\")\n  ) {\n    defaultOptions.disablePreferences = {\n      /** @type {boolean} */\n      value: typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\"),\n      kind: OptionKind.VIEWER,\n    };\n    defaultOptions.locale = {\n      /** @type {string} */\n      value: typeof navigator !== \"undefined\" ? navigator.language : \"en-US\",\n      kind: OptionKind.VIEWER,\n    };\n    defaultOptions.sandboxBundleSrc = {\n      /** @type {string} */\n      value:\n        typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n          ? \"../build/dev-sandbox/pdf.sandbox.js\"\n          : \"../build/pdf.sandbox.js\",\n      kind: OptionKind.VIEWER,\n    };\n  } else if (PDFJSDev.test(\"CHROME\")) {\n    defaultOptions.sandboxBundleSrc = {\n      /** @type {string} */\n      value: \"../build/pdf.sandbox.js\",\n      kind: OptionKind.VIEWER,\n    };\n  }\n\n  const userOptions = Object.create(null);\n\n  class AppOptions {\n    constructor() {\n      throw new Error(\"Cannot initialize AppOptions.\");\n    }\n\n    static get(name) {\n      const userOption = userOptions[name];\n      if (userOption !== undefined) {\n        return userOption;\n      }\n      const defaultOption = defaultOptions[name];\n      if (defaultOption !== undefined) {\n        return defaultOption.compatibility || defaultOption.value;\n      }\n      return undefined;\n    }\n\n    static getAll(kind = null) {\n      const options = Object.create(null);\n      for (const name in defaultOptions) {\n        const defaultOption = defaultOptions[name];\n        if (kind) {\n          if ((kind & defaultOption.kind) === 0) {\n            continue;\n          }\n          if (kind === OptionKind.PREFERENCE) {\n            const value = defaultOption.value,\n              valueType = typeof value;\n\n            if (\n              valueType === \"boolean\" ||\n              valueType === \"string\" ||\n              (valueType === \"number\" && Number.isInteger(value))\n            ) {\n              options[name] = value;\n              continue;\n            }\n            throw new Error(`Invalid type for preference: ${name}`);\n          }\n        }\n        const userOption = userOptions[name];\n        options[name] =\n          userOption !== undefined\n            ? userOption\n            : defaultOption.compatibility || defaultOption.value;\n      }\n      return options;\n    }\n\n    static set(name, value) {\n      userOptions[name] = value;\n    }\n\n    static setAll(options) {\n      for (const name in options) {\n        userOptions[name] = options[name];\n      }\n    }\n\n    static remove(name) {\n      delete userOptions[name];\n    }\n  }\n\n  return { AppOptions, OptionKind };\n});\ndefine('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        if (ns[name]) {\r\n            if (obj2) {\r\n                throw new Error(\"This namespace already exists:\" + path);\r\n            }\r\n\r\n        } else {\r\n            ns[name] = obj2 || {};\r\n        }\r\n        return ns[name];\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var root = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(root,path,obj);\r\n    \t}\r\n    };\r\n    return root;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-pdfjs-display/pdfjs',[\r\n\t\"skylark-langx-ns\"\r\n],function(skylark) {\r\n\treturn skylark.attach(\"intg.pdfjs\");\r\n});\ndefine('skylark-pdfjs-display/display',[\n  \"./pdfjs\"\n],function(pdfjs){\nreturn pdfjs.display = /******/ (() => { // webpackBootstrap\n/******/  \"use strict\";\n/******/  var __webpack_modules__ = ([\n/* 0 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  Object.defineProperty(exports, \"addLinkAttributes\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.addLinkAttributes;\n    }\n  }));\n  Object.defineProperty(exports, \"getFilenameFromUrl\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.getFilenameFromUrl;\n    }\n  }));\n  Object.defineProperty(exports, \"LinkTarget\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.LinkTarget;\n    }\n  }));\n  Object.defineProperty(exports, \"loadScript\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.loadScript;\n    }\n  }));\n  Object.defineProperty(exports, \"PDFDateString\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.PDFDateString;\n    }\n  }));\n  Object.defineProperty(exports, \"RenderingCancelledException\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.RenderingCancelledException;\n    }\n  }));\n  Object.defineProperty(exports, \"build\", ({\n    enumerable: true,\n    get: function () {\n      return _api.build;\n    }\n  }));\n  Object.defineProperty(exports, \"getDocument\", ({\n    enumerable: true,\n    get: function () {\n      return _api.getDocument;\n    }\n  }));\n  Object.defineProperty(exports, \"LoopbackPort\", ({\n    enumerable: true,\n    get: function () {\n      return _api.LoopbackPort;\n    }\n  }));\n  Object.defineProperty(exports, \"PDFDataRangeTransport\", ({\n    enumerable: true,\n    get: function () {\n      return _api.PDFDataRangeTransport;\n    }\n  }));\n  Object.defineProperty(exports, \"PDFWorker\", ({\n    enumerable: true,\n    get: function () {\n      return _api.PDFWorker;\n    }\n  }));\n  Object.defineProperty(exports, \"version\", ({\n    enumerable: true,\n    get: function () {\n      return _api.version;\n    }\n  }));\n  Object.defineProperty(exports, \"CMapCompressionType\", ({\n    enumerable: true,\n    get: function () {\n      return _util.CMapCompressionType;\n    }\n  }));\n  Object.defineProperty(exports, \"createObjectURL\", ({\n    enumerable: true,\n    get: function () {\n      return _util.createObjectURL;\n    }\n  }));\n  Object.defineProperty(exports, \"createPromiseCapability\", ({\n    enumerable: true,\n    get: function () {\n      return _util.createPromiseCapability;\n    }\n  }));\n  Object.defineProperty(exports, \"createValidAbsoluteUrl\", ({\n    enumerable: true,\n    get: function () {\n      return _util.createValidAbsoluteUrl;\n    }\n  }));\n  Object.defineProperty(exports, \"InvalidPDFException\", ({\n    enumerable: true,\n    get: function () {\n      return _util.InvalidPDFException;\n    }\n  }));\n  Object.defineProperty(exports, \"MissingPDFException\", ({\n    enumerable: true,\n    get: function () {\n      return _util.MissingPDFException;\n    }\n  }));\n  Object.defineProperty(exports, \"OPS\", ({\n    enumerable: true,\n    get: function () {\n      return _util.OPS;\n    }\n  }));\n  Object.defineProperty(exports, \"PasswordResponses\", ({\n    enumerable: true,\n    get: function () {\n      return _util.PasswordResponses;\n    }\n  }));\n  Object.defineProperty(exports, \"PermissionFlag\", ({\n    enumerable: true,\n    get: function () {\n      return _util.PermissionFlag;\n    }\n  }));\n  Object.defineProperty(exports, \"removeNullCharacters\", ({\n    enumerable: true,\n    get: function () {\n      return _util.removeNullCharacters;\n    }\n  }));\n  Object.defineProperty(exports, \"shadow\", ({\n    enumerable: true,\n    get: function () {\n      return _util.shadow;\n    }\n  }));\n  Object.defineProperty(exports, \"UnexpectedResponseException\", ({\n    enumerable: true,\n    get: function () {\n      return _util.UnexpectedResponseException;\n    }\n  }));\n  Object.defineProperty(exports, \"UNSUPPORTED_FEATURES\", ({\n    enumerable: true,\n    get: function () {\n      return _util.UNSUPPORTED_FEATURES;\n    }\n  }));\n  Object.defineProperty(exports, \"Util\", ({\n    enumerable: true,\n    get: function () {\n      return _util.Util;\n    }\n  }));\n  Object.defineProperty(exports, \"VerbosityLevel\", ({\n    enumerable: true,\n    get: function () {\n      return _util.VerbosityLevel;\n    }\n  }));\n  Object.defineProperty(exports, \"AnnotationLayer\", ({\n    enumerable: true,\n    get: function () {\n      return _annotation_layer.AnnotationLayer;\n    }\n  }));\n  Object.defineProperty(exports, \"apiCompatibilityParams\", ({\n    enumerable: true,\n    get: function () {\n      return _api_compatibility.apiCompatibilityParams;\n    }\n  }));\n  Object.defineProperty(exports, \"GlobalWorkerOptions\", ({\n    enumerable: true,\n    get: function () {\n      return _worker_options.GlobalWorkerOptions;\n    }\n  }));\n  Object.defineProperty(exports, \"renderTextLayer\", ({\n    enumerable: true,\n    get: function () {\n      return _text_layer.renderTextLayer;\n    }\n  }));\n  Object.defineProperty(exports, \"SVGGraphics\", ({\n    enumerable: true,\n    get: function () {\n      return _svg.SVGGraphics;\n    }\n  }));\n\n  var _display_utils = __w_pdfjs_require__(1);\n\n  var _api = __w_pdfjs_require__(5);\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _annotation_layer = __w_pdfjs_require__(19);\n\n  var _api_compatibility = __w_pdfjs_require__(9);\n\n  var _worker_options = __w_pdfjs_require__(12);\n\n  var _text_layer = __w_pdfjs_require__(21);\n\n  var _svg = __w_pdfjs_require__(22);\n\n  const pdfjsVersion = '2.7.570';\n  const pdfjsBuild = 'f2c7338b0';\n  {\n    const {\n      isNodeJS\n    } = __w_pdfjs_require__(4);\n\n    if (isNodeJS) {\n      const PDFNodeStream = __w_pdfjs_require__(23).PDFNodeStream;\n\n      (0, _api.setPDFNetworkStreamFactory)(params => {\n        return new PDFNodeStream(params);\n      });\n    } else {\n      const PDFNetworkStream = __w_pdfjs_require__(26).PDFNetworkStream;\n\n      let PDFFetchStream;\n\n      if ((0, _display_utils.isFetchSupported)()) {\n        PDFFetchStream = __w_pdfjs_require__(27).PDFFetchStream;\n      }\n\n      (0, _api.setPDFNetworkStreamFactory)(params => {\n        if (PDFFetchStream && (0, _display_utils.isValidFetchUrl)(params.url)) {\n          return new PDFFetchStream(params);\n        }\n\n        return new PDFNetworkStream(params);\n      });\n    }\n  }\n\n  /***/ }),\n  /* 1 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.addLinkAttributes = addLinkAttributes;\n  exports.deprecated = deprecated;\n  exports.getFilenameFromUrl = getFilenameFromUrl;\n  exports.isFetchSupported = isFetchSupported;\n  exports.isValidFetchUrl = isValidFetchUrl;\n  exports.loadScript = loadScript;\n  exports.StatTimer = exports.RenderingCancelledException = exports.PDFDateString = exports.PageViewport = exports.LinkTarget = exports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.DOMCanvasFactory = exports.DEFAULT_LINK_REL = exports.BaseCMapReaderFactory = exports.BaseCanvasFactory = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  const DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\n  exports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;\n  const SVG_NS = \"http://www.w3.org/2000/svg\";\n\n  class BaseCanvasFactory {\n    constructor() {\n      if (this.constructor === BaseCanvasFactory) {\n        (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n      }\n    }\n\n    create(width, height) {\n      (0, _util.unreachable)(\"Abstract method `create` called.\");\n    }\n\n    reset(canvasAndContext, width, height) {\n      if (!canvasAndContext.canvas) {\n        throw new Error(\"Canvas is not specified\");\n      }\n\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n\n      canvasAndContext.canvas.width = width;\n      canvasAndContext.canvas.height = height;\n    }\n\n    destroy(canvasAndContext) {\n      if (!canvasAndContext.canvas) {\n        throw new Error(\"Canvas is not specified\");\n      }\n\n      canvasAndContext.canvas.width = 0;\n      canvasAndContext.canvas.height = 0;\n      canvasAndContext.canvas = null;\n      canvasAndContext.context = null;\n    }\n\n  }\n\n  exports.BaseCanvasFactory = BaseCanvasFactory;\n\n  class DOMCanvasFactory extends BaseCanvasFactory {\n    constructor({\n      ownerDocument = globalThis.document\n    } = {}) {\n      super();\n      this._document = ownerDocument;\n    }\n\n    create(width, height) {\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n\n      const canvas = this._document.createElement(\"canvas\");\n\n      const context = canvas.getContext(\"2d\");\n      canvas.width = width;\n      canvas.height = height;\n      return {\n        canvas,\n        context\n      };\n    }\n\n  }\n\n  exports.DOMCanvasFactory = DOMCanvasFactory;\n\n  class BaseCMapReaderFactory {\n    constructor({\n      baseUrl = null,\n      isCompressed = false\n    }) {\n      if (this.constructor === BaseCMapReaderFactory) {\n        (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n      }\n\n      this.baseUrl = baseUrl;\n      this.isCompressed = isCompressed;\n    }\n\n    async fetch({\n      name\n    }) {\n      if (!this.baseUrl) {\n        throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n      }\n\n      if (!name) {\n        throw new Error(\"CMap name must be specified.\");\n      }\n\n      const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n      const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n      return this._fetchData(url, compressionType).catch(reason => {\n        throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\n      });\n    }\n\n    _fetchData(url, compressionType) {\n      (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n    }\n\n  }\n\n  exports.BaseCMapReaderFactory = BaseCMapReaderFactory;\n\n  class DOMCMapReaderFactory extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      if (isFetchSupported() && isValidFetchUrl(url, document.baseURI)) {\n        return fetch(url).then(async response => {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          let cMapData;\n\n          if (this.isCompressed) {\n            cMapData = new Uint8Array(await response.arrayBuffer());\n          } else {\n            cMapData = (0, _util.stringToBytes)(await response.text());\n          }\n\n          return {\n            cMapData,\n            compressionType\n          };\n        });\n      }\n\n      return new Promise((resolve, reject) => {\n        const request = new XMLHttpRequest();\n        request.open(\"GET\", url, true);\n\n        if (this.isCompressed) {\n          request.responseType = \"arraybuffer\";\n        }\n\n        request.onreadystatechange = () => {\n          if (request.readyState !== XMLHttpRequest.DONE) {\n            return;\n          }\n\n          if (request.status === 200 || request.status === 0) {\n            let cMapData;\n\n            if (this.isCompressed && request.response) {\n              cMapData = new Uint8Array(request.response);\n            } else if (!this.isCompressed && request.responseText) {\n              cMapData = (0, _util.stringToBytes)(request.responseText);\n            }\n\n            if (cMapData) {\n              resolve({\n                cMapData,\n                compressionType\n              });\n              return;\n            }\n          }\n\n          reject(new Error(request.statusText));\n        };\n\n        request.send(null);\n      });\n    }\n\n  }\n\n  exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n\n  class DOMSVGFactory {\n    create(width, height) {\n      (0, _util.assert)(width > 0 && height > 0, \"Invalid SVG dimensions\");\n      const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n      svg.setAttribute(\"version\", \"1.1\");\n      svg.setAttribute(\"width\", width + \"px\");\n      svg.setAttribute(\"height\", height + \"px\");\n      svg.setAttribute(\"preserveAspectRatio\", \"none\");\n      svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n      return svg;\n    }\n\n    createElement(type) {\n      (0, _util.assert)(typeof type === \"string\", \"Invalid SVG element type\");\n      return document.createElementNS(SVG_NS, type);\n    }\n\n  }\n\n  exports.DOMSVGFactory = DOMSVGFactory;\n\n  class PageViewport {\n    constructor({\n      viewBox,\n      scale,\n      rotation,\n      offsetX = 0,\n      offsetY = 0,\n      dontFlip = false\n    }) {\n      this.viewBox = viewBox;\n      this.scale = scale;\n      this.rotation = rotation;\n      this.offsetX = offsetX;\n      this.offsetY = offsetY;\n      const centerX = (viewBox[2] + viewBox[0]) / 2;\n      const centerY = (viewBox[3] + viewBox[1]) / 2;\n      let rotateA, rotateB, rotateC, rotateD;\n      rotation = rotation % 360;\n      rotation = rotation < 0 ? rotation + 360 : rotation;\n\n      switch (rotation) {\n        case 180:\n          rotateA = -1;\n          rotateB = 0;\n          rotateC = 0;\n          rotateD = 1;\n          break;\n\n        case 90:\n          rotateA = 0;\n          rotateB = 1;\n          rotateC = 1;\n          rotateD = 0;\n          break;\n\n        case 270:\n          rotateA = 0;\n          rotateB = -1;\n          rotateC = -1;\n          rotateD = 0;\n          break;\n\n        case 0:\n          rotateA = 1;\n          rotateB = 0;\n          rotateC = 0;\n          rotateD = -1;\n          break;\n\n        default:\n          throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n      }\n\n      if (dontFlip) {\n        rotateC = -rotateC;\n        rotateD = -rotateD;\n      }\n\n      let offsetCanvasX, offsetCanvasY;\n      let width, height;\n\n      if (rotateA === 0) {\n        offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n        offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n        width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n        height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      } else {\n        offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n        offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n        width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n        height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      }\n\n      this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n      this.width = width;\n      this.height = height;\n    }\n\n    clone({\n      scale = this.scale,\n      rotation = this.rotation,\n      offsetX = this.offsetX,\n      offsetY = this.offsetY,\n      dontFlip = false\n    } = {}) {\n      return new PageViewport({\n        viewBox: this.viewBox.slice(),\n        scale,\n        rotation,\n        offsetX,\n        offsetY,\n        dontFlip\n      });\n    }\n\n    convertToViewportPoint(x, y) {\n      return _util.Util.applyTransform([x, y], this.transform);\n    }\n\n    convertToViewportRectangle(rect) {\n      const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n\n      const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n\n      return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n    }\n\n    convertToPdfPoint(x, y) {\n      return _util.Util.applyInverseTransform([x, y], this.transform);\n    }\n\n  }\n\n  exports.PageViewport = PageViewport;\n\n  class RenderingCancelledException extends _util.BaseException {\n    constructor(msg, type) {\n      super(msg);\n      this.type = type;\n    }\n\n  }\n\n  exports.RenderingCancelledException = RenderingCancelledException;\n  const LinkTarget = {\n    NONE: 0,\n    SELF: 1,\n    BLANK: 2,\n    PARENT: 3,\n    TOP: 4\n  };\n  exports.LinkTarget = LinkTarget;\n\n  function addLinkAttributes(link, {\n    url,\n    target,\n    rel,\n    enabled = true\n  } = {}) {\n    (0, _util.assert)(url && typeof url === \"string\", 'addLinkAttributes: A valid \"url\" parameter must provided.');\n    const urlNullRemoved = (0, _util.removeNullCharacters)(url);\n\n    if (enabled) {\n      link.href = link.title = urlNullRemoved;\n    } else {\n      link.href = \"\";\n      link.title = `Disabled: ${urlNullRemoved}`;\n\n      link.onclick = () => {\n        return false;\n      };\n    }\n\n    let targetStr = \"\";\n\n    switch (target) {\n      case LinkTarget.NONE:\n        break;\n\n      case LinkTarget.SELF:\n        targetStr = \"_self\";\n        break;\n\n      case LinkTarget.BLANK:\n        targetStr = \"_blank\";\n        break;\n\n      case LinkTarget.PARENT:\n        targetStr = \"_parent\";\n        break;\n\n      case LinkTarget.TOP:\n        targetStr = \"_top\";\n        break;\n    }\n\n    link.target = targetStr;\n    link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n  }\n\n  function getFilenameFromUrl(url) {\n    const anchor = url.indexOf(\"#\");\n    const query = url.indexOf(\"?\");\n    const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n    return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n  }\n\n  class StatTimer {\n    constructor() {\n      this.started = Object.create(null);\n      this.times = [];\n    }\n\n    time(name) {\n      if (name in this.started) {\n        (0, _util.warn)(`Timer is already running for ${name}`);\n      }\n\n      this.started[name] = Date.now();\n    }\n\n    timeEnd(name) {\n      if (!(name in this.started)) {\n        (0, _util.warn)(`Timer has not been started for ${name}`);\n      }\n\n      this.times.push({\n        name,\n        start: this.started[name],\n        end: Date.now()\n      });\n      delete this.started[name];\n    }\n\n    toString() {\n      const outBuf = [];\n      let longest = 0;\n\n      for (const time of this.times) {\n        const name = time.name;\n\n        if (name.length > longest) {\n          longest = name.length;\n        }\n      }\n\n      for (const time of this.times) {\n        const duration = time.end - time.start;\n        outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n      }\n\n      return outBuf.join(\"\");\n    }\n\n  }\n\n  exports.StatTimer = StatTimer;\n\n  function isFetchSupported() {\n    return typeof fetch !== \"undefined\" && typeof Response !== \"undefined\" && \"body\" in Response.prototype && typeof ReadableStream !== \"undefined\";\n  }\n\n  function isValidFetchUrl(url, baseUrl) {\n    try {\n      const {\n        protocol\n      } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n      return protocol === \"http:\" || protocol === \"https:\";\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  function loadScript(src, removeScriptElement = false) {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n\n      script.onload = function (evt) {\n        if (removeScriptElement) {\n          script.remove();\n        }\n\n        resolve(evt);\n      };\n\n      script.onerror = function () {\n        reject(new Error(`Cannot load script at: ${script.src}`));\n      };\n\n      (document.head || document.documentElement).appendChild(script);\n    });\n  }\n\n  function deprecated(details) {\n    console.log(\"Deprecated API usage: \" + details);\n  }\n\n  let pdfDateStringRegex;\n\n  class PDFDateString {\n    static toDateObject(input) {\n      if (!input || !(0, _util.isString)(input)) {\n        return null;\n      }\n\n      if (!pdfDateStringRegex) {\n        pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n      }\n\n      const matches = pdfDateStringRegex.exec(input);\n\n      if (!matches) {\n        return null;\n      }\n\n      const year = parseInt(matches[1], 10);\n      let month = parseInt(matches[2], 10);\n      month = month >= 1 && month <= 12 ? month - 1 : 0;\n      let day = parseInt(matches[3], 10);\n      day = day >= 1 && day <= 31 ? day : 1;\n      let hour = parseInt(matches[4], 10);\n      hour = hour >= 0 && hour <= 23 ? hour : 0;\n      let minute = parseInt(matches[5], 10);\n      minute = minute >= 0 && minute <= 59 ? minute : 0;\n      let second = parseInt(matches[6], 10);\n      second = second >= 0 && second <= 59 ? second : 0;\n      const universalTimeRelation = matches[7] || \"Z\";\n      let offsetHour = parseInt(matches[8], 10);\n      offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n      let offsetMinute = parseInt(matches[9], 10) || 0;\n      offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n      if (universalTimeRelation === \"-\") {\n        hour += offsetHour;\n        minute += offsetMinute;\n      } else if (universalTimeRelation === \"+\") {\n        hour -= offsetHour;\n        minute -= offsetMinute;\n      }\n\n      return new Date(Date.UTC(year, month, day, hour, minute, second));\n    }\n\n  }\n\n  exports.PDFDateString = PDFDateString;\n\n  /***/ }),\n  /* 2 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.arrayByteLength = arrayByteLength;\n  exports.arraysToBytes = arraysToBytes;\n  exports.assert = assert;\n  exports.bytesToString = bytesToString;\n  exports.createPromiseCapability = createPromiseCapability;\n  exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n  exports.encodeToXmlString = encodeToXmlString;\n  exports.escapeString = escapeString;\n  exports.getModificationDate = getModificationDate;\n  exports.getVerbosityLevel = getVerbosityLevel;\n  exports.info = info;\n  exports.isArrayBuffer = isArrayBuffer;\n  exports.isArrayEqual = isArrayEqual;\n  exports.isAscii = isAscii;\n  exports.isBool = isBool;\n  exports.isNum = isNum;\n  exports.isSameOrigin = isSameOrigin;\n  exports.isString = isString;\n  exports.objectFromEntries = objectFromEntries;\n  exports.objectSize = objectSize;\n  exports.removeNullCharacters = removeNullCharacters;\n  exports.setVerbosityLevel = setVerbosityLevel;\n  exports.shadow = shadow;\n  exports.string32 = string32;\n  exports.stringToBytes = stringToBytes;\n  exports.stringToPDFString = stringToPDFString;\n  exports.stringToUTF16BEString = stringToUTF16BEString;\n  exports.stringToUTF8String = stringToUTF8String;\n  exports.unreachable = unreachable;\n  exports.utf8StringToString = utf8StringToString;\n  exports.warn = warn;\n  exports.VerbosityLevel = exports.Util = exports.UNSUPPORTED_FEATURES = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.IsLittleEndianCached = exports.IsEvalSupportedCached = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FontType = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.createObjectURL = exports.CMapCompressionType = exports.BaseException = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0;\n\n  __w_pdfjs_require__(3);\n\n  const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n  exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n  const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n  exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n  const PermissionFlag = {\n    PRINT: 0x04,\n    MODIFY_CONTENTS: 0x08,\n    COPY: 0x10,\n    MODIFY_ANNOTATIONS: 0x20,\n    FILL_INTERACTIVE_FORMS: 0x100,\n    COPY_FOR_ACCESSIBILITY: 0x200,\n    ASSEMBLE: 0x400,\n    PRINT_HIGH_QUALITY: 0x800\n  };\n  exports.PermissionFlag = PermissionFlag;\n  const TextRenderingMode = {\n    FILL: 0,\n    STROKE: 1,\n    FILL_STROKE: 2,\n    INVISIBLE: 3,\n    FILL_ADD_TO_PATH: 4,\n    STROKE_ADD_TO_PATH: 5,\n    FILL_STROKE_ADD_TO_PATH: 6,\n    ADD_TO_PATH: 7,\n    FILL_STROKE_MASK: 3,\n    ADD_TO_PATH_FLAG: 4\n  };\n  exports.TextRenderingMode = TextRenderingMode;\n  const ImageKind = {\n    GRAYSCALE_1BPP: 1,\n    RGB_24BPP: 2,\n    RGBA_32BPP: 3\n  };\n  exports.ImageKind = ImageKind;\n  const AnnotationType = {\n    TEXT: 1,\n    LINK: 2,\n    FREETEXT: 3,\n    LINE: 4,\n    SQUARE: 5,\n    CIRCLE: 6,\n    POLYGON: 7,\n    POLYLINE: 8,\n    HIGHLIGHT: 9,\n    UNDERLINE: 10,\n    SQUIGGLY: 11,\n    STRIKEOUT: 12,\n    STAMP: 13,\n    CARET: 14,\n    INK: 15,\n    POPUP: 16,\n    FILEATTACHMENT: 17,\n    SOUND: 18,\n    MOVIE: 19,\n    WIDGET: 20,\n    SCREEN: 21,\n    PRINTERMARK: 22,\n    TRAPNET: 23,\n    WATERMARK: 24,\n    THREED: 25,\n    REDACT: 26\n  };\n  exports.AnnotationType = AnnotationType;\n  const AnnotationStateModelType = {\n    MARKED: \"Marked\",\n    REVIEW: \"Review\"\n  };\n  exports.AnnotationStateModelType = AnnotationStateModelType;\n  const AnnotationMarkedState = {\n    MARKED: \"Marked\",\n    UNMARKED: \"Unmarked\"\n  };\n  exports.AnnotationMarkedState = AnnotationMarkedState;\n  const AnnotationReviewState = {\n    ACCEPTED: \"Accepted\",\n    REJECTED: \"Rejected\",\n    CANCELLED: \"Cancelled\",\n    COMPLETED: \"Completed\",\n    NONE: \"None\"\n  };\n  exports.AnnotationReviewState = AnnotationReviewState;\n  const AnnotationReplyType = {\n    GROUP: \"Group\",\n    REPLY: \"R\"\n  };\n  exports.AnnotationReplyType = AnnotationReplyType;\n  const AnnotationFlag = {\n    INVISIBLE: 0x01,\n    HIDDEN: 0x02,\n    PRINT: 0x04,\n    NOZOOM: 0x08,\n    NOROTATE: 0x10,\n    NOVIEW: 0x20,\n    READONLY: 0x40,\n    LOCKED: 0x80,\n    TOGGLENOVIEW: 0x100,\n    LOCKEDCONTENTS: 0x200\n  };\n  exports.AnnotationFlag = AnnotationFlag;\n  const AnnotationFieldFlag = {\n    READONLY: 0x0000001,\n    REQUIRED: 0x0000002,\n    NOEXPORT: 0x0000004,\n    MULTILINE: 0x0001000,\n    PASSWORD: 0x0002000,\n    NOTOGGLETOOFF: 0x0004000,\n    RADIO: 0x0008000,\n    PUSHBUTTON: 0x0010000,\n    COMBO: 0x0020000,\n    EDIT: 0x0040000,\n    SORT: 0x0080000,\n    FILESELECT: 0x0100000,\n    MULTISELECT: 0x0200000,\n    DONOTSPELLCHECK: 0x0400000,\n    DONOTSCROLL: 0x0800000,\n    COMB: 0x1000000,\n    RICHTEXT: 0x2000000,\n    RADIOSINUNISON: 0x2000000,\n    COMMITONSELCHANGE: 0x4000000\n  };\n  exports.AnnotationFieldFlag = AnnotationFieldFlag;\n  const AnnotationBorderStyleType = {\n    SOLID: 1,\n    DASHED: 2,\n    BEVELED: 3,\n    INSET: 4,\n    UNDERLINE: 5\n  };\n  exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n  const AnnotationActionEventType = {\n    E: \"Mouse Enter\",\n    X: \"Mouse Exit\",\n    D: \"Mouse Down\",\n    U: \"Mouse Up\",\n    Fo: \"Focus\",\n    Bl: \"Blur\",\n    PO: \"PageOpen\",\n    PC: \"PageClose\",\n    PV: \"PageVisible\",\n    PI: \"PageInvisible\",\n    K: \"Keystroke\",\n    F: \"Format\",\n    V: \"Validate\",\n    C: \"Calculate\"\n  };\n  exports.AnnotationActionEventType = AnnotationActionEventType;\n  const DocumentActionEventType = {\n    WC: \"WillClose\",\n    WS: \"WillSave\",\n    DS: \"DidSave\",\n    WP: \"WillPrint\",\n    DP: \"DidPrint\"\n  };\n  exports.DocumentActionEventType = DocumentActionEventType;\n  const PageActionEventType = {\n    O: \"PageOpen\",\n    C: \"PageClose\"\n  };\n  exports.PageActionEventType = PageActionEventType;\n  const StreamType = {\n    UNKNOWN: \"UNKNOWN\",\n    FLATE: \"FLATE\",\n    LZW: \"LZW\",\n    DCT: \"DCT\",\n    JPX: \"JPX\",\n    JBIG: \"JBIG\",\n    A85: \"A85\",\n    AHX: \"AHX\",\n    CCF: \"CCF\",\n    RLX: \"RLX\"\n  };\n  exports.StreamType = StreamType;\n  const FontType = {\n    UNKNOWN: \"UNKNOWN\",\n    TYPE1: \"TYPE1\",\n    TYPE1C: \"TYPE1C\",\n    CIDFONTTYPE0: \"CIDFONTTYPE0\",\n    CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n    TRUETYPE: \"TRUETYPE\",\n    CIDFONTTYPE2: \"CIDFONTTYPE2\",\n    TYPE3: \"TYPE3\",\n    OPENTYPE: \"OPENTYPE\",\n    TYPE0: \"TYPE0\",\n    MMTYPE1: \"MMTYPE1\"\n  };\n  exports.FontType = FontType;\n  const VerbosityLevel = {\n    ERRORS: 0,\n    WARNINGS: 1,\n    INFOS: 5\n  };\n  exports.VerbosityLevel = VerbosityLevel;\n  const CMapCompressionType = {\n    NONE: 0,\n    BINARY: 1,\n    STREAM: 2\n  };\n  exports.CMapCompressionType = CMapCompressionType;\n  const OPS = {\n    dependency: 1,\n    setLineWidth: 2,\n    setLineCap: 3,\n    setLineJoin: 4,\n    setMiterLimit: 5,\n    setDash: 6,\n    setRenderingIntent: 7,\n    setFlatness: 8,\n    setGState: 9,\n    save: 10,\n    restore: 11,\n    transform: 12,\n    moveTo: 13,\n    lineTo: 14,\n    curveTo: 15,\n    curveTo2: 16,\n    curveTo3: 17,\n    closePath: 18,\n    rectangle: 19,\n    stroke: 20,\n    closeStroke: 21,\n    fill: 22,\n    eoFill: 23,\n    fillStroke: 24,\n    eoFillStroke: 25,\n    closeFillStroke: 26,\n    closeEOFillStroke: 27,\n    endPath: 28,\n    clip: 29,\n    eoClip: 30,\n    beginText: 31,\n    endText: 32,\n    setCharSpacing: 33,\n    setWordSpacing: 34,\n    setHScale: 35,\n    setLeading: 36,\n    setFont: 37,\n    setTextRenderingMode: 38,\n    setTextRise: 39,\n    moveText: 40,\n    setLeadingMoveText: 41,\n    setTextMatrix: 42,\n    nextLine: 43,\n    showText: 44,\n    showSpacedText: 45,\n    nextLineShowText: 46,\n    nextLineSetSpacingShowText: 47,\n    setCharWidth: 48,\n    setCharWidthAndBounds: 49,\n    setStrokeColorSpace: 50,\n    setFillColorSpace: 51,\n    setStrokeColor: 52,\n    setStrokeColorN: 53,\n    setFillColor: 54,\n    setFillColorN: 55,\n    setStrokeGray: 56,\n    setFillGray: 57,\n    setStrokeRGBColor: 58,\n    setFillRGBColor: 59,\n    setStrokeCMYKColor: 60,\n    setFillCMYKColor: 61,\n    shadingFill: 62,\n    beginInlineImage: 63,\n    beginImageData: 64,\n    endInlineImage: 65,\n    paintXObject: 66,\n    markPoint: 67,\n    markPointProps: 68,\n    beginMarkedContent: 69,\n    beginMarkedContentProps: 70,\n    endMarkedContent: 71,\n    beginCompat: 72,\n    endCompat: 73,\n    paintFormXObjectBegin: 74,\n    paintFormXObjectEnd: 75,\n    beginGroup: 76,\n    endGroup: 77,\n    beginAnnotations: 78,\n    endAnnotations: 79,\n    beginAnnotation: 80,\n    endAnnotation: 81,\n    paintJpegXObject: 82,\n    paintImageMaskXObject: 83,\n    paintImageMaskXObjectGroup: 84,\n    paintImageXObject: 85,\n    paintInlineImageXObject: 86,\n    paintInlineImageXObjectGroup: 87,\n    paintImageXObjectRepeat: 88,\n    paintImageMaskXObjectRepeat: 89,\n    paintSolidColorImageMask: 90,\n    constructPath: 91\n  };\n  exports.OPS = OPS;\n  const UNSUPPORTED_FEATURES = {\n    unknown: \"unknown\",\n    forms: \"forms\",\n    javaScript: \"javaScript\",\n    smask: \"smask\",\n    shadingPattern: \"shadingPattern\",\n    font: \"font\",\n    errorTilingPattern: \"errorTilingPattern\",\n    errorExtGState: \"errorExtGState\",\n    errorXObject: \"errorXObject\",\n    errorFontLoadType3: \"errorFontLoadType3\",\n    errorFontState: \"errorFontState\",\n    errorFontMissing: \"errorFontMissing\",\n    errorFontTranslate: \"errorFontTranslate\",\n    errorColorSpace: \"errorColorSpace\",\n    errorOperatorList: \"errorOperatorList\",\n    errorFontToUnicode: \"errorFontToUnicode\",\n    errorFontLoadNative: \"errorFontLoadNative\",\n    errorFontGetPath: \"errorFontGetPath\",\n    errorMarkedContent: \"errorMarkedContent\"\n  };\n  exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n  const PasswordResponses = {\n    NEED_PASSWORD: 1,\n    INCORRECT_PASSWORD: 2\n  };\n  exports.PasswordResponses = PasswordResponses;\n  let verbosity = VerbosityLevel.WARNINGS;\n\n  function setVerbosityLevel(level) {\n    if (Number.isInteger(level)) {\n      verbosity = level;\n    }\n  }\n\n  function getVerbosityLevel() {\n    return verbosity;\n  }\n\n  function info(msg) {\n    if (verbosity >= VerbosityLevel.INFOS) {\n      console.log(`Info: ${msg}`);\n    }\n  }\n\n  function warn(msg) {\n    if (verbosity >= VerbosityLevel.WARNINGS) {\n      console.log(`Warning: ${msg}`);\n    }\n  }\n\n  function unreachable(msg) {\n    throw new Error(msg);\n  }\n\n  function assert(cond, msg) {\n    if (!cond) {\n      unreachable(msg);\n    }\n  }\n\n  function isSameOrigin(baseUrl, otherUrl) {\n    let base;\n\n    try {\n      base = new URL(baseUrl);\n\n      if (!base.origin || base.origin === \"null\") {\n        return false;\n      }\n    } catch (e) {\n      return false;\n    }\n\n    const other = new URL(otherUrl, base);\n    return base.origin === other.origin;\n  }\n\n  function _isValidProtocol(url) {\n    if (!url) {\n      return false;\n    }\n\n    switch (url.protocol) {\n      case \"http:\":\n      case \"https:\":\n      case \"ftp:\":\n      case \"mailto:\":\n      case \"tel:\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  function createValidAbsoluteUrl(url, baseUrl) {\n    if (!url) {\n      return null;\n    }\n\n    try {\n      const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\n      if (_isValidProtocol(absoluteUrl)) {\n        return absoluteUrl;\n      }\n    } catch (ex) {}\n\n    return null;\n  }\n\n  function shadow(obj, prop, value) {\n    Object.defineProperty(obj, prop, {\n      value,\n      enumerable: true,\n      configurable: true,\n      writable: false\n    });\n    return value;\n  }\n\n  const BaseException = function BaseExceptionClosure() {\n    function BaseException(message) {\n      if (this.constructor === BaseException) {\n        unreachable(\"Cannot initialize BaseException.\");\n      }\n\n      this.message = message;\n      this.name = this.constructor.name;\n    }\n\n    BaseException.prototype = new Error();\n    BaseException.constructor = BaseException;\n    return BaseException;\n  }();\n\n  exports.BaseException = BaseException;\n\n  class PasswordException extends BaseException {\n    constructor(msg, code) {\n      super(msg);\n      this.code = code;\n    }\n\n  }\n\n  exports.PasswordException = PasswordException;\n\n  class UnknownErrorException extends BaseException {\n    constructor(msg, details) {\n      super(msg);\n      this.details = details;\n    }\n\n  }\n\n  exports.UnknownErrorException = UnknownErrorException;\n\n  class InvalidPDFException extends BaseException {}\n\n  exports.InvalidPDFException = InvalidPDFException;\n\n  class MissingPDFException extends BaseException {}\n\n  exports.MissingPDFException = MissingPDFException;\n\n  class UnexpectedResponseException extends BaseException {\n    constructor(msg, status) {\n      super(msg);\n      this.status = status;\n    }\n\n  }\n\n  exports.UnexpectedResponseException = UnexpectedResponseException;\n\n  class FormatError extends BaseException {}\n\n  exports.FormatError = FormatError;\n\n  class AbortException extends BaseException {}\n\n  exports.AbortException = AbortException;\n  const NullCharactersRegExp = /\\x00/g;\n\n  function removeNullCharacters(str) {\n    if (typeof str !== \"string\") {\n      warn(\"The argument for removeNullCharacters must be a string.\");\n      return str;\n    }\n\n    return str.replace(NullCharactersRegExp, \"\");\n  }\n\n  function bytesToString(bytes) {\n    assert(bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined, \"Invalid argument for bytesToString\");\n    const length = bytes.length;\n    const MAX_ARGUMENT_COUNT = 8192;\n\n    if (length < MAX_ARGUMENT_COUNT) {\n      return String.fromCharCode.apply(null, bytes);\n    }\n\n    const strBuf = [];\n\n    for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n      const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n      const chunk = bytes.subarray(i, chunkEnd);\n      strBuf.push(String.fromCharCode.apply(null, chunk));\n    }\n\n    return strBuf.join(\"\");\n  }\n\n  function stringToBytes(str) {\n    assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n    const length = str.length;\n    const bytes = new Uint8Array(length);\n\n    for (let i = 0; i < length; ++i) {\n      bytes[i] = str.charCodeAt(i) & 0xff;\n    }\n\n    return bytes;\n  }\n\n  function arrayByteLength(arr) {\n    if (arr.length !== undefined) {\n      return arr.length;\n    }\n\n    assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n    return arr.byteLength;\n  }\n\n  function arraysToBytes(arr) {\n    const length = arr.length;\n\n    if (length === 1 && arr[0] instanceof Uint8Array) {\n      return arr[0];\n    }\n\n    let resultLength = 0;\n\n    for (let i = 0; i < length; i++) {\n      resultLength += arrayByteLength(arr[i]);\n    }\n\n    let pos = 0;\n    const data = new Uint8Array(resultLength);\n\n    for (let i = 0; i < length; i++) {\n      let item = arr[i];\n\n      if (!(item instanceof Uint8Array)) {\n        if (typeof item === \"string\") {\n          item = stringToBytes(item);\n        } else {\n          item = new Uint8Array(item);\n        }\n      }\n\n      const itemLength = item.byteLength;\n      data.set(item, pos);\n      pos += itemLength;\n    }\n\n    return data;\n  }\n\n  function string32(value) {\n    return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n  }\n\n  function objectSize(obj) {\n    return Object.keys(obj).length;\n  }\n\n  function objectFromEntries(iterable) {\n    return Object.assign(Object.create(null), Object.fromEntries(iterable));\n  }\n\n  function isLittleEndian() {\n    const buffer8 = new Uint8Array(4);\n    buffer8[0] = 1;\n    const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n    return view32[0] === 1;\n  }\n\n  const IsLittleEndianCached = {\n    get value() {\n      return shadow(this, \"value\", isLittleEndian());\n    }\n\n  };\n  exports.IsLittleEndianCached = IsLittleEndianCached;\n\n  function isEvalSupported() {\n    try {\n      new Function(\"\");\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const IsEvalSupportedCached = {\n    get value() {\n      return shadow(this, \"value\", isEvalSupported());\n    }\n\n  };\n  exports.IsEvalSupportedCached = IsEvalSupportedCached;\n  const hexNumbers = [...Array(256).keys()].map(n => n.toString(16).padStart(2, \"0\"));\n\n  class Util {\n    static makeHexColor(r, g, b) {\n      return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n    }\n\n    static transform(m1, m2) {\n      return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n    }\n\n    static applyTransform(p, m) {\n      const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n      const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n      return [xt, yt];\n    }\n\n    static applyInverseTransform(p, m) {\n      const d = m[0] * m[3] - m[1] * m[2];\n      const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n      const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n      return [xt, yt];\n    }\n\n    static getAxialAlignedBoundingBox(r, m) {\n      const p1 = Util.applyTransform(r, m);\n      const p2 = Util.applyTransform(r.slice(2, 4), m);\n      const p3 = Util.applyTransform([r[0], r[3]], m);\n      const p4 = Util.applyTransform([r[2], r[1]], m);\n      return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n    }\n\n    static inverseTransform(m) {\n      const d = m[0] * m[3] - m[1] * m[2];\n      return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n    }\n\n    static apply3dTransform(m, v) {\n      return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n    }\n\n    static singularValueDecompose2dScale(m) {\n      const transpose = [m[0], m[2], m[1], m[3]];\n      const a = m[0] * transpose[0] + m[1] * transpose[2];\n      const b = m[0] * transpose[1] + m[1] * transpose[3];\n      const c = m[2] * transpose[0] + m[3] * transpose[2];\n      const d = m[2] * transpose[1] + m[3] * transpose[3];\n      const first = (a + d) / 2;\n      const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n      const sx = first + second || 1;\n      const sy = first - second || 1;\n      return [Math.sqrt(sx), Math.sqrt(sy)];\n    }\n\n    static normalizeRect(rect) {\n      const r = rect.slice(0);\n\n      if (rect[0] > rect[2]) {\n        r[0] = rect[2];\n        r[2] = rect[0];\n      }\n\n      if (rect[1] > rect[3]) {\n        r[1] = rect[3];\n        r[3] = rect[1];\n      }\n\n      return r;\n    }\n\n    static intersect(rect1, rect2) {\n      function compare(a, b) {\n        return a - b;\n      }\n\n      const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n      const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n      const result = [];\n      rect1 = Util.normalizeRect(rect1);\n      rect2 = Util.normalizeRect(rect2);\n\n      if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n        result[0] = orderedX[1];\n        result[2] = orderedX[2];\n      } else {\n        return null;\n      }\n\n      if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n        result[1] = orderedY[1];\n        result[3] = orderedY[2];\n      } else {\n        return null;\n      }\n\n      return result;\n    }\n\n  }\n\n  exports.Util = Util;\n  const PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n\n  function stringToPDFString(str) {\n    const length = str.length,\n          strBuf = [];\n\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      for (let i = 2; i < length; i += 2) {\n        strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n      }\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      for (let i = 2; i < length; i += 2) {\n        strBuf.push(String.fromCharCode(str.charCodeAt(i + 1) << 8 | str.charCodeAt(i)));\n      }\n    } else {\n      for (let i = 0; i < length; ++i) {\n        const code = PDFStringTranslateTable[str.charCodeAt(i)];\n        strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n      }\n    }\n\n    return strBuf.join(\"\");\n  }\n\n  function escapeString(str) {\n    return str.replace(/([()\\\\\\n\\r])/g, match => {\n      if (match === \"\\n\") {\n        return \"\\\\n\";\n      } else if (match === \"\\r\") {\n        return \"\\\\r\";\n      }\n\n      return `\\\\${match}`;\n    });\n  }\n\n  function isAscii(str) {\n    return /^[\\x00-\\x7F]*$/.test(str);\n  }\n\n  function stringToUTF16BEString(str) {\n    const buf = [\"\\xFE\\xFF\"];\n\n    for (let i = 0, ii = str.length; i < ii; i++) {\n      const char = str.charCodeAt(i);\n      buf.push(String.fromCharCode(char >> 8 & 0xff));\n      buf.push(String.fromCharCode(char & 0xff));\n    }\n\n    return buf.join(\"\");\n  }\n\n  function stringToUTF8String(str) {\n    return decodeURIComponent(escape(str));\n  }\n\n  function utf8StringToString(str) {\n    return unescape(encodeURIComponent(str));\n  }\n\n  function isBool(v) {\n    return typeof v === \"boolean\";\n  }\n\n  function isNum(v) {\n    return typeof v === \"number\";\n  }\n\n  function isString(v) {\n    return typeof v === \"string\";\n  }\n\n  function isArrayBuffer(v) {\n    return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n  }\n\n  function isArrayEqual(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n      return false;\n    }\n\n    return arr1.every(function (element, index) {\n      return element === arr2[index];\n    });\n  }\n\n  function getModificationDate(date = new Date()) {\n    const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n    return buffer.join(\"\");\n  }\n\n  function createPromiseCapability() {\n    const capability = Object.create(null);\n    let isSettled = false;\n    Object.defineProperty(capability, \"settled\", {\n      get() {\n        return isSettled;\n      }\n\n    });\n    capability.promise = new Promise(function (resolve, reject) {\n      capability.resolve = function (data) {\n        isSettled = true;\n        resolve(data);\n      };\n\n      capability.reject = function (reason) {\n        isSettled = true;\n        reject(reason);\n      };\n    });\n    return capability;\n  }\n\n  const createObjectURL = function createObjectURLClosure() {\n    const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    return function createObjectURL(data, contentType, forceDataSchema = false) {\n      if (!forceDataSchema && URL.createObjectURL) {\n        const blob = new Blob([data], {\n          type: contentType\n        });\n        return URL.createObjectURL(blob);\n      }\n\n      let buffer = `data:${contentType};base64,`;\n\n      for (let i = 0, ii = data.length; i < ii; i += 3) {\n        const b1 = data[i] & 0xff;\n        const b2 = data[i + 1] & 0xff;\n        const b3 = data[i + 2] & 0xff;\n        const d1 = b1 >> 2,\n              d2 = (b1 & 3) << 4 | b2 >> 4;\n        const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n        const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n        buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n      }\n\n      return buffer;\n    };\n  }();\n\n  exports.createObjectURL = createObjectURL;\n  const XMLEntities = {\n    0x3c: \"&lt;\",\n    0x3e: \"&gt;\",\n    0x26: \"&amp;\",\n    0x22: \"&quot;\",\n    0x27: \"&apos;\"\n  };\n\n  function encodeToXmlString(str) {\n    const buffer = [];\n    let start = 0;\n\n    for (let i = 0, ii = str.length; i < ii; i++) {\n      const char = str.codePointAt(i);\n\n      if (0x20 <= char && char <= 0x7e) {\n        const entity = XMLEntities[char];\n\n        if (entity) {\n          if (start < i) {\n            buffer.push(str.substring(start, i));\n          }\n\n          buffer.push(entity);\n          start = i + 1;\n        }\n      } else {\n        if (start < i) {\n          buffer.push(str.substring(start, i));\n        }\n\n        buffer.push(`&#x${char.toString(16).toUpperCase()};`);\n\n        if (char > 0xd7ff && (char < 0xe000 || char > 0xfffd)) {\n          i++;\n        }\n\n        start = i + 1;\n      }\n    }\n\n    if (buffer.length === 0) {\n      return str;\n    }\n\n    if (start < str.length) {\n      buffer.push(str.substring(start, str.length));\n    }\n\n    return buffer.join(\"\");\n  }\n\n  /***/ }),\n  /* 3 */\n  /***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n\n\n  var _is_node = __w_pdfjs_require__(4);\n\n  ;\n\n  /***/ }),\n  /* 4 */\n  /***/ ((__unused_webpack_module, exports) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.isNodeJS = void 0;\n  const isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\n  exports.isNodeJS = isNodeJS;\n\n  /***/ }),\n  /* 5 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.getDocument = getDocument;\n  exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n  exports.version = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultCMapReaderFactory = exports.DefaultCanvasFactory = exports.build = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _display_utils = __w_pdfjs_require__(1);\n\n  var _font_loader = __w_pdfjs_require__(6);\n\n  var _node_utils = __w_pdfjs_require__(7);\n\n  var _annotation_storage = __w_pdfjs_require__(8);\n\n  var _api_compatibility = __w_pdfjs_require__(9);\n\n  var _canvas = __w_pdfjs_require__(10);\n\n  var _worker_options = __w_pdfjs_require__(12);\n\n  var _is_node = __w_pdfjs_require__(4);\n\n  var _message_handler = __w_pdfjs_require__(13);\n\n  var _metadata = __w_pdfjs_require__(14);\n\n  var _optional_content_config = __w_pdfjs_require__(16);\n\n  var _transport_stream = __w_pdfjs_require__(17);\n\n  var _webgl = __w_pdfjs_require__(18);\n\n  const DEFAULT_RANGE_CHUNK_SIZE = 65536;\n  const RENDERING_CANCELLED_TIMEOUT = 100;\n  const DefaultCanvasFactory = _is_node.isNodeJS ? _node_utils.NodeCanvasFactory : _display_utils.DOMCanvasFactory;\n  exports.DefaultCanvasFactory = DefaultCanvasFactory;\n  const DefaultCMapReaderFactory = _is_node.isNodeJS ? _node_utils.NodeCMapReaderFactory : _display_utils.DOMCMapReaderFactory;\n  exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;\n  let createPDFNetworkStream;\n\n  function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n    createPDFNetworkStream = pdfNetworkStreamFactory;\n  }\n\n  function getDocument(src) {\n    const task = new PDFDocumentLoadingTask();\n    let source;\n\n    if (typeof src === \"string\") {\n      source = {\n        url: src\n      };\n    } else if ((0, _util.isArrayBuffer)(src)) {\n      source = {\n        data: src\n      };\n    } else if (src instanceof PDFDataRangeTransport) {\n      source = {\n        range: src\n      };\n    } else {\n      if (typeof src !== \"object\") {\n        throw new Error(\"Invalid parameter in getDocument, \" + \"need either Uint8Array, string or a parameter object\");\n      }\n\n      if (!src.url && !src.data && !src.range) {\n        throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n      }\n\n      source = src;\n    }\n\n    const params = Object.create(null);\n    let rangeTransport = null,\n        worker = null;\n\n    for (const key in source) {\n      if (key === \"url\" && typeof window !== \"undefined\") {\n        params[key] = new URL(source[key], window.location).href;\n        continue;\n      } else if (key === \"range\") {\n        rangeTransport = source[key];\n        continue;\n      } else if (key === \"worker\") {\n        worker = source[key];\n        continue;\n      } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n        const pdfBytes = source[key];\n\n        if (typeof pdfBytes === \"string\") {\n          params[key] = (0, _util.stringToBytes)(pdfBytes);\n        } else if (typeof pdfBytes === \"object\" && pdfBytes !== null && !isNaN(pdfBytes.length)) {\n          params[key] = new Uint8Array(pdfBytes);\n        } else if ((0, _util.isArrayBuffer)(pdfBytes)) {\n          params[key] = new Uint8Array(pdfBytes);\n        } else {\n          throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string or array-like object is expected in the \" + \"data property.\");\n        }\n\n        continue;\n      }\n\n      params[key] = source[key];\n    }\n\n    params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n    params.CMapReaderFactory = params.CMapReaderFactory || DefaultCMapReaderFactory;\n    params.ignoreErrors = params.stopAtErrors !== true;\n    params.fontExtraProperties = params.fontExtraProperties === true;\n    params.pdfBug = params.pdfBug === true;\n\n    if (!Number.isInteger(params.maxImageSize)) {\n      params.maxImageSize = -1;\n    }\n\n    if (typeof params.isEvalSupported !== \"boolean\") {\n      params.isEvalSupported = true;\n    }\n\n    if (typeof params.disableFontFace !== \"boolean\") {\n      params.disableFontFace = _api_compatibility.apiCompatibilityParams.disableFontFace || false;\n    }\n\n    if (typeof params.ownerDocument === \"undefined\") {\n      params.ownerDocument = globalThis.document;\n    }\n\n    if (typeof params.disableRange !== \"boolean\") {\n      params.disableRange = false;\n    }\n\n    if (typeof params.disableStream !== \"boolean\") {\n      params.disableStream = false;\n    }\n\n    if (typeof params.disableAutoFetch !== \"boolean\") {\n      params.disableAutoFetch = false;\n    }\n\n    (0, _util.setVerbosityLevel)(params.verbosity);\n\n    if (!worker) {\n      const workerParams = {\n        verbosity: params.verbosity,\n        port: _worker_options.GlobalWorkerOptions.workerPort\n      };\n      worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n      task._worker = worker;\n    }\n\n    const docId = task.docId;\n    worker.promise.then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\n\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n\n        if (rangeTransport) {\n          networkStream = new _transport_stream.PDFDataTransportStream({\n            length: params.length,\n            initialData: params.initialData,\n            progressiveDone: params.progressiveDone,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream\n          }, rangeTransport);\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream\n          });\n        }\n\n        resolve(networkStream);\n      });\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(function ([workerId, networkStream]) {\n        if (task.destroyed) {\n          throw new Error(\"Loading aborted\");\n        }\n\n        const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n        messageHandler.postMessageTransfers = worker.postMessageTransfers;\n        const transport = new WorkerTransport(messageHandler, task, networkStream, params);\n        task._transport = transport;\n        messageHandler.send(\"Ready\", null);\n      });\n    }).catch(task._capability.reject);\n    return task;\n  }\n\n  function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n    if (worker.destroyed) {\n      return Promise.reject(new Error(\"Worker was destroyed\"));\n    }\n\n    if (pdfDataRangeTransport) {\n      source.length = pdfDataRangeTransport.length;\n      source.initialData = pdfDataRangeTransport.initialData;\n      source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    }\n\n    return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion: '2.7.570',\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties\n    }).then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n\n      return workerId;\n    });\n  }\n\n  const PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\n    let nextDocumentId = 0;\n\n    class PDFDocumentLoadingTask {\n      constructor() {\n        this._capability = (0, _util.createPromiseCapability)();\n        this._transport = null;\n        this._worker = null;\n        this.docId = \"d\" + nextDocumentId++;\n        this.destroyed = false;\n        this.onPassword = null;\n        this.onProgress = null;\n        this.onUnsupportedFeature = null;\n      }\n\n      get promise() {\n        return this._capability.promise;\n      }\n\n      destroy() {\n        this.destroyed = true;\n        const transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\n        return transportDestroyed.then(() => {\n          this._transport = null;\n\n          if (this._worker) {\n            this._worker.destroy();\n\n            this._worker = null;\n          }\n        });\n      }\n\n    }\n\n    return PDFDocumentLoadingTask;\n  }();\n\n  class PDFDataRangeTransport {\n    constructor(length, initialData, progressiveDone = false) {\n      this.length = length;\n      this.initialData = initialData;\n      this.progressiveDone = progressiveDone;\n      this._rangeListeners = [];\n      this._progressListeners = [];\n      this._progressiveReadListeners = [];\n      this._progressiveDoneListeners = [];\n      this._readyCapability = (0, _util.createPromiseCapability)();\n    }\n\n    addRangeListener(listener) {\n      this._rangeListeners.push(listener);\n    }\n\n    addProgressListener(listener) {\n      this._progressListeners.push(listener);\n    }\n\n    addProgressiveReadListener(listener) {\n      this._progressiveReadListeners.push(listener);\n    }\n\n    addProgressiveDoneListener(listener) {\n      this._progressiveDoneListeners.push(listener);\n    }\n\n    onDataRange(begin, chunk) {\n      for (const listener of this._rangeListeners) {\n        listener(begin, chunk);\n      }\n    }\n\n    onDataProgress(loaded, total) {\n      this._readyCapability.promise.then(() => {\n        for (const listener of this._progressListeners) {\n          listener(loaded, total);\n        }\n      });\n    }\n\n    onDataProgressiveRead(chunk) {\n      this._readyCapability.promise.then(() => {\n        for (const listener of this._progressiveReadListeners) {\n          listener(chunk);\n        }\n      });\n    }\n\n    onDataProgressiveDone() {\n      this._readyCapability.promise.then(() => {\n        for (const listener of this._progressiveDoneListeners) {\n          listener();\n        }\n      });\n    }\n\n    transportReady() {\n      this._readyCapability.resolve();\n    }\n\n    requestDataRange(begin, end) {\n      (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n    }\n\n    abort() {}\n\n  }\n\n  exports.PDFDataRangeTransport = PDFDataRangeTransport;\n\n  class PDFDocumentProxy {\n    constructor(pdfInfo, transport) {\n      this._pdfInfo = pdfInfo;\n      this._transport = transport;\n    }\n\n    get annotationStorage() {\n      return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n    }\n\n    get numPages() {\n      return this._pdfInfo.numPages;\n    }\n\n    get fingerprint() {\n      return this._pdfInfo.fingerprint;\n    }\n\n    getPage(pageNumber) {\n      return this._transport.getPage(pageNumber);\n    }\n\n    getPageIndex(ref) {\n      return this._transport.getPageIndex(ref);\n    }\n\n    getDestinations() {\n      return this._transport.getDestinations();\n    }\n\n    getDestination(id) {\n      return this._transport.getDestination(id);\n    }\n\n    getPageLabels() {\n      return this._transport.getPageLabels();\n    }\n\n    getPageLayout() {\n      return this._transport.getPageLayout();\n    }\n\n    getPageMode() {\n      return this._transport.getPageMode();\n    }\n\n    getViewerPreferences() {\n      return this._transport.getViewerPreferences();\n    }\n\n    getOpenAction() {\n      return this._transport.getOpenAction();\n    }\n\n    getAttachments() {\n      return this._transport.getAttachments();\n    }\n\n    getJavaScript() {\n      return this._transport.getJavaScript();\n    }\n\n    getJSActions() {\n      return this._transport.getDocJSActions();\n    }\n\n    getOutline() {\n      return this._transport.getOutline();\n    }\n\n    getOptionalContentConfig() {\n      return this._transport.getOptionalContentConfig();\n    }\n\n    getPermissions() {\n      return this._transport.getPermissions();\n    }\n\n    getMetadata() {\n      return this._transport.getMetadata();\n    }\n\n    getMarkInfo() {\n      return this._transport.getMarkInfo();\n    }\n\n    getData() {\n      return this._transport.getData();\n    }\n\n    getDownloadInfo() {\n      return this._transport.downloadInfoCapability.promise;\n    }\n\n    getStats() {\n      return this._transport.getStats();\n    }\n\n    cleanup() {\n      return this._transport.startCleanup();\n    }\n\n    destroy() {\n      return this.loadingTask.destroy();\n    }\n\n    get loadingParams() {\n      return this._transport.loadingParams;\n    }\n\n    get loadingTask() {\n      return this._transport.loadingTask;\n    }\n\n    saveDocument(annotationStorage) {\n      return this._transport.saveDocument(annotationStorage);\n    }\n\n    getFieldObjects() {\n      return this._transport.getFieldObjects();\n    }\n\n    hasJSActions() {\n      return this._transport.hasJSActions();\n    }\n\n    getCalculationOrderIds() {\n      return this._transport.getCalculationOrderIds();\n    }\n\n  }\n\n  exports.PDFDocumentProxy = PDFDocumentProxy;\n\n  class PDFPageProxy {\n    constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n      this._pageIndex = pageIndex;\n      this._pageInfo = pageInfo;\n      this._ownerDocument = ownerDocument;\n      this._transport = transport;\n      this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n      this._pdfBug = pdfBug;\n      this.commonObjs = transport.commonObjs;\n      this.objs = new PDFObjects();\n      this.cleanupAfterRender = false;\n      this.pendingCleanup = false;\n      this._intentStates = new Map();\n      this.destroyed = false;\n    }\n\n    get pageNumber() {\n      return this._pageIndex + 1;\n    }\n\n    get rotate() {\n      return this._pageInfo.rotate;\n    }\n\n    get ref() {\n      return this._pageInfo.ref;\n    }\n\n    get userUnit() {\n      return this._pageInfo.userUnit;\n    }\n\n    get view() {\n      return this._pageInfo.view;\n    }\n\n    getViewport({\n      scale,\n      rotation = this.rotate,\n      offsetX = 0,\n      offsetY = 0,\n      dontFlip = false\n    } = {}) {\n      return new _display_utils.PageViewport({\n        viewBox: this.view,\n        scale,\n        rotation,\n        offsetX,\n        offsetY,\n        dontFlip\n      });\n    }\n\n    getAnnotations({\n      intent = null\n    } = {}) {\n      if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n        this.annotationsPromise = this._transport.getAnnotations(this._pageIndex, intent);\n        this.annotationsIntent = intent;\n      }\n\n      return this.annotationsPromise;\n    }\n\n    getJSActions() {\n      return this._jsActionsPromise || (this._jsActionsPromise = this._transport.getPageJSActions(this._pageIndex));\n    }\n\n    render({\n      canvasContext,\n      viewport,\n      intent = \"display\",\n      enableWebGL = false,\n      renderInteractiveForms = false,\n      transform = null,\n      imageLayer = null,\n      canvasFactory = null,\n      background = null,\n      annotationStorage = null,\n      optionalContentConfigPromise = null\n    }) {\n      if (this._stats) {\n        this._stats.time(\"Overall\");\n      }\n\n      const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n      this.pendingCleanup = false;\n\n      if (!optionalContentConfigPromise) {\n        optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n      }\n\n      let intentState = this._intentStates.get(renderingIntent);\n\n      if (!intentState) {\n        intentState = Object.create(null);\n\n        this._intentStates.set(renderingIntent, intentState);\n      }\n\n      if (intentState.streamReaderCancelTimeout) {\n        clearTimeout(intentState.streamReaderCancelTimeout);\n        intentState.streamReaderCancelTimeout = null;\n      }\n\n      const canvasFactoryInstance = canvasFactory || new DefaultCanvasFactory({\n        ownerDocument: this._ownerDocument\n      });\n      const webGLContext = new _webgl.WebGLContext({\n        enable: enableWebGL\n      });\n\n      if (!intentState.displayReadyCapability) {\n        intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n        intentState.operatorList = {\n          fnArray: [],\n          argsArray: [],\n          lastChunk: false\n        };\n\n        if (this._stats) {\n          this._stats.time(\"Page Request\");\n        }\n\n        this._pumpOperatorList({\n          pageIndex: this._pageIndex,\n          intent: renderingIntent,\n          renderInteractiveForms: renderInteractiveForms === true,\n          annotationStorage: annotationStorage && annotationStorage.getAll() || null  // lwf\n        });\n      }\n\n      const complete = error => {\n        const i = intentState.renderTasks.indexOf(internalRenderTask);\n\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n\n        if (this.cleanupAfterRender || renderingIntent === \"print\") {\n          this.pendingCleanup = true;\n        }\n\n        this._tryCleanup();\n\n        if (error) {\n          internalRenderTask.capability.reject(error);\n\n          this._abortOperatorList({\n            intentState,\n            reason: error\n          });\n        } else {\n          internalRenderTask.capability.resolve();\n        }\n\n        if (this._stats) {\n          this._stats.timeEnd(\"Rendering\");\n\n          this._stats.timeEnd(\"Overall\");\n        }\n      };\n\n      const internalRenderTask = new InternalRenderTask({\n        callback: complete,\n        params: {\n          canvasContext,\n          viewport,\n          transform,\n          imageLayer,\n          background\n        },\n        objs: this.objs,\n        commonObjs: this.commonObjs,\n        operatorList: intentState.operatorList,\n        pageIndex: this._pageIndex,\n        canvasFactory: canvasFactoryInstance,\n        webGLContext,\n        useRequestAnimationFrame: renderingIntent !== \"print\",\n        pdfBug: this._pdfBug\n      });\n\n      if (!intentState.renderTasks) {\n        intentState.renderTasks = [];\n      }\n\n      intentState.renderTasks.push(internalRenderTask);\n      const renderTask = internalRenderTask.task;\n      Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig\n        });\n        internalRenderTask.operatorListChanged();\n      }).catch(complete);\n      return renderTask;\n    }\n\n    getOperatorList() {\n      function operatorListChanged() {\n        if (intentState.operatorList.lastChunk) {\n          intentState.opListReadCapability.resolve(intentState.operatorList);\n          const i = intentState.renderTasks.indexOf(opListTask);\n\n          if (i >= 0) {\n            intentState.renderTasks.splice(i, 1);\n          }\n        }\n      }\n\n      const renderingIntent = \"oplist\";\n\n      let intentState = this._intentStates.get(renderingIntent);\n\n      if (!intentState) {\n        intentState = Object.create(null);\n\n        this._intentStates.set(renderingIntent, intentState);\n      }\n\n      let opListTask;\n\n      if (!intentState.opListReadCapability) {\n        opListTask = Object.create(null);\n        opListTask.operatorListChanged = operatorListChanged;\n        intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n        intentState.renderTasks = [];\n        intentState.renderTasks.push(opListTask);\n        intentState.operatorList = {\n          fnArray: [],\n          argsArray: [],\n          lastChunk: false\n        };\n\n        if (this._stats) {\n          this._stats.time(\"Page Request\");\n        }\n\n        this._pumpOperatorList({\n          pageIndex: this._pageIndex,\n          intent: renderingIntent\n        });\n      }\n\n      return intentState.opListReadCapability.promise;\n    }\n\n    streamTextContent({\n      normalizeWhitespace = false,\n      disableCombineTextItems = false\n    } = {}) {\n      const TEXT_CONTENT_CHUNK_SIZE = 100;\n      return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true\n      }, {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n\n        size(textContent) {\n          return textContent.items.length;\n        }\n\n      });\n    }\n\n    getTextContent(params = {}) {\n      const readableStream = this.streamTextContent(params);\n      return new Promise(function (resolve, reject) {\n        function pump() {\n          reader.read().then(function ({\n            value,\n            done\n          }) {\n            if (done) {\n              resolve(textContent);\n              return;\n            }\n\n            Object.assign(textContent.styles, value.styles);\n            textContent.items.push(...value.items);\n            pump();\n          }, reject);\n        }\n\n        const reader = readableStream.getReader();\n        const textContent = {\n          items: [],\n          styles: Object.create(null)\n        };\n        pump();\n      });\n    }\n\n    _destroy() {\n      this.destroyed = true;\n      this._transport.pageCache[this._pageIndex] = null;\n      const waitOn = [];\n\n      for (const [intent, intentState] of this._intentStates) {\n        this._abortOperatorList({\n          intentState,\n          reason: new Error(\"Page was destroyed.\"),\n          force: true\n        });\n\n        if (intent === \"oplist\") {\n          continue;\n        }\n\n        for (const internalRenderTask of intentState.renderTasks) {\n          waitOn.push(internalRenderTask.completed);\n          internalRenderTask.cancel();\n        }\n      }\n\n      this.objs.clear();\n      this.annotationsPromise = null;\n      this._jsActionsPromise = null;\n      this.pendingCleanup = false;\n      return Promise.all(waitOn);\n    }\n\n    cleanup(resetStats = false) {\n      this.pendingCleanup = true;\n      return this._tryCleanup(resetStats);\n    }\n\n    _tryCleanup(resetStats = false) {\n      if (!this.pendingCleanup) {\n        return false;\n      }\n\n      for (const {\n        renderTasks,\n        operatorList\n      } of this._intentStates.values()) {\n        if (renderTasks.length !== 0 || !operatorList.lastChunk) {\n          return false;\n        }\n      }\n\n      this._intentStates.clear();\n\n      this.objs.clear();\n      this.annotationsPromise = null;\n      this._jsActionsPromise = null;\n\n      if (resetStats && this._stats) {\n        this._stats = new _display_utils.StatTimer();\n      }\n\n      this.pendingCleanup = false;\n      return true;\n    }\n\n    _startRenderPage(transparency, intent) {\n      const intentState = this._intentStates.get(intent);\n\n      if (!intentState) {\n        return;\n      }\n\n      if (this._stats) {\n        this._stats.timeEnd(\"Page Request\");\n      }\n\n      if (intentState.displayReadyCapability) {\n        intentState.displayReadyCapability.resolve(transparency);\n      }\n    }\n\n    _renderPageChunk(operatorListChunk, intentState) {\n      for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n        intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n        intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n      }\n\n      intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n      for (let i = 0; i < intentState.renderTasks.length; i++) {\n        intentState.renderTasks[i].operatorListChanged();\n      }\n\n      if (operatorListChunk.lastChunk) {\n        this._tryCleanup();\n      }\n    }\n\n    _pumpOperatorList(args) {\n      (0, _util.assert)(args.intent, 'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.');\n\n      const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", args);\n\n      const reader = readableStream.getReader();\n\n      const intentState = this._intentStates.get(args.intent);\n\n      intentState.streamReader = reader;\n\n      const pump = () => {\n        reader.read().then(({\n          value,\n          done\n        }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n\n          if (this._transport.destroyed) {\n            return;\n          }\n\n          this._renderPageChunk(value, intentState);\n\n          pump();\n        }, reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return;\n          }\n\n          if (intentState.operatorList) {\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        });\n      };\n\n      pump();\n    }\n\n    _abortOperatorList({\n      intentState,\n      reason,\n      force = false\n    }) {\n      (0, _util.assert)(reason instanceof Error || typeof reason === \"object\" && reason !== null, 'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.');\n\n      if (!intentState.streamReader) {\n        return;\n      }\n\n      if (!force) {\n        if (intentState.renderTasks.length !== 0) {\n          return;\n        }\n\n        if (reason instanceof _display_utils.RenderingCancelledException) {\n          intentState.streamReaderCancelTimeout = setTimeout(() => {\n            this._abortOperatorList({\n              intentState,\n              reason,\n              force: true\n            });\n\n            intentState.streamReaderCancelTimeout = null;\n          }, RENDERING_CANCELLED_TIMEOUT);\n          return;\n        }\n      }\n\n      intentState.streamReader.cancel(new _util.AbortException(reason && reason.message)); // lwf\n      intentState.streamReader = null;\n\n      if (this._transport.destroyed) {\n        return;\n      }\n\n      for (const [intent, curIntentState] of this._intentStates) {\n        if (curIntentState === intentState) {\n          this._intentStates.delete(intent);\n\n          break;\n        }\n      }\n\n      this.cleanup();\n    }\n\n    get stats() {\n      return this._stats;\n    }\n\n  }\n\n  exports.PDFPageProxy = PDFPageProxy;\n\n  class LoopbackPort {\n    constructor(defer = true) {\n      this._listeners = [];\n      this._defer = defer;\n      this._deferred = Promise.resolve(undefined);\n    }\n\n    postMessage(obj, transfers) {\n      function cloneValue(value) {\n        if (typeof value !== \"object\" || value === null) {\n          return value;\n        }\n\n        if (cloned.has(value)) {\n          return cloned.get(value);\n        }\n\n        let buffer, result;\n\n        if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {\n          if (transfers && transfers.includes(buffer)) { // lwf\n            result = new value.constructor(buffer, value.byteOffset, value.byteLength);\n          } else {\n            result = new value.constructor(value);\n          }\n\n          cloned.set(value, result);\n          return result;\n        }\n\n        result = Array.isArray(value) ? [] : {};\n        cloned.set(value, result);\n\n        for (const i in value) {\n          let desc,\n              p = value;\n\n          while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n            p = Object.getPrototypeOf(p);\n          }\n\n          if (typeof desc.value === \"undefined\") {\n            continue;\n          }\n\n          if (typeof desc.value === \"function\") {\n            if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n              throw new Error(`LoopbackPort.postMessage - cannot clone: ${value[i]}`);\n            }\n\n            continue;\n          }\n\n          result[i] = cloneValue(desc.value);\n        }\n\n        return result;\n      }\n\n      if (!this._defer) {\n        this._listeners.forEach(listener => {\n          listener.call(this, {\n            data: obj\n          });\n        });\n\n        return;\n      }\n\n      const cloned = new WeakMap();\n      const e = {\n        data: cloneValue(obj)\n      };\n\n      this._deferred.then(() => {\n        this._listeners.forEach(listener => {\n          listener.call(this, e);\n        });\n      });\n    }\n\n    addEventListener(name, listener) {\n      this._listeners.push(listener);\n    }\n\n    removeEventListener(name, listener) {\n      const i = this._listeners.indexOf(listener);\n\n      this._listeners.splice(i, 1);\n    }\n\n    terminate() {\n      this._listeners.length = 0;\n    }\n\n  }\n\n  exports.LoopbackPort = LoopbackPort;\n\n  const PDFWorker = function PDFWorkerClosure() {\n    const pdfWorkerPorts = new WeakMap();\n    let isWorkerDisabled = false;\n    let fallbackWorkerSrc;\n    let nextFakeWorkerId = 0;\n    let fakeWorkerCapability;\n\n    if (_is_node.isNodeJS && typeof require === \"function\") {\n      isWorkerDisabled = true;\n      fallbackWorkerSrc = \"./skylark-pdfjs-worker-all.js\"; //\"./pdf.worker.js\";\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath = document.currentScript && document.currentScript.src; // lwf\n\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n      }\n    }\n\n    function getWorkerSrc() {\n      if (_worker_options.GlobalWorkerOptions.workerSrc) {\n        return _worker_options.GlobalWorkerOptions.workerSrc;\n      }\n\n      if (typeof fallbackWorkerSrc !== \"undefined\") {\n        if (!_is_node.isNodeJS) {\n          (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n        }\n\n        return fallbackWorkerSrc;\n      }\n\n      throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n    }\n\n    function getMainThreadWorkerMessageHandler() {\n      let mainWorkerMessageHandler;\n\n      try {\n        ///mainWorkerMessageHandler = globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;  // lwf\n        mainWorkerMessageHandler = pdfjs.worker.WorkerMessageHandler; \n      } catch (ex) {}\n\n      return mainWorkerMessageHandler || null;\n    }\n\n    function setupFakeWorkerGlobal() {\n      if (fakeWorkerCapability) {\n        return fakeWorkerCapability.promise;\n      }\n\n      fakeWorkerCapability = (0, _util.createPromiseCapability)();\n\n      const loader = async function () {\n        const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n        if (mainWorkerMessageHandler) {\n          return mainWorkerMessageHandler;\n        }\n\n        if (_is_node.isNodeJS && typeof require === \"function\") {\n          const worker = eval(\"require\")(getWorkerSrc());\n          return worker.WorkerMessageHandler;\n        }\n\n        await (0, _display_utils.loadScript)(getWorkerSrc());\n        return window.pdfjsWorker.WorkerMessageHandler;\n      };\n\n      loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n      return fakeWorkerCapability.promise;\n    }\n\n    function createCDNWrapper(url) {\n      const wrapper = \"importScripts('\" + url + \"');\";\n      return URL.createObjectURL(new Blob([wrapper]));\n    }\n\n    class PDFWorker {\n      constructor({\n        name = null,\n        port = null,\n        verbosity = (0, _util.getVerbosityLevel)()\n      } = {}) {\n        if (port && pdfWorkerPorts.has(port)) {\n          throw new Error(\"Cannot use more than one PDFWorker per port\");\n        }\n\n        this.name = name;\n        this.destroyed = false;\n        this.postMessageTransfers = true;\n        this.verbosity = verbosity;\n        this._readyCapability = (0, _util.createPromiseCapability)();\n        this._port = null;\n        this._webWorker = null;\n        this._messageHandler = null;\n\n        if (port) {\n          pdfWorkerPorts.set(port, this);\n\n          this._initializeFromPort(port);\n\n          return;\n        }\n\n        this._initialize();\n      }\n\n      get promise() {\n        return this._readyCapability.promise;\n      }\n\n      get port() {\n        return this._port;\n      }\n\n      get messageHandler() {\n        return this._messageHandler;\n      }\n\n      _initializeFromPort(port) {\n        this._port = port;\n        this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n\n        this._messageHandler.on(\"ready\", function () {});\n\n        this._readyCapability.resolve();\n      }\n\n      _initialize() {\n        if (typeof Worker !== \"undefined\" && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {\n          let workerSrc = getWorkerSrc();\n\n          try {\n            if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n              workerSrc = createCDNWrapper(new URL(workerSrc, window.location).href);\n            }\n\n            const worker = new Worker(workerSrc);\n            const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n\n            const terminateEarly = () => {\n              worker.removeEventListener(\"error\", onWorkerError);\n              messageHandler.destroy();\n              worker.terminate();\n\n              if (this.destroyed) {\n                this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n              } else {\n                this._setupFakeWorker();\n              }\n            };\n\n            const onWorkerError = () => {\n              if (!this._webWorker) {\n                terminateEarly();\n              }\n            };\n\n            worker.addEventListener(\"error\", onWorkerError);\n            messageHandler.on(\"test\", data => {\n              worker.removeEventListener(\"error\", onWorkerError);\n\n              if (this.destroyed) {\n                terminateEarly();\n                return;\n              }\n\n              if (data) {\n                this._messageHandler = messageHandler;\n                this._port = worker;\n                this._webWorker = worker;\n\n                if (!data.supportTransfers) {\n                  this.postMessageTransfers = false;\n                }\n\n                this._readyCapability.resolve();\n\n                messageHandler.send(\"configure\", {\n                  verbosity: this.verbosity\n                });\n              } else {\n                this._setupFakeWorker();\n\n                messageHandler.destroy();\n                worker.terminate();\n              }\n            });\n            messageHandler.on(\"ready\", data => {\n              worker.removeEventListener(\"error\", onWorkerError);\n\n              if (this.destroyed) {\n                terminateEarly();\n                return;\n              }\n\n              try {\n                sendTest();\n              } catch (e) {\n                this._setupFakeWorker();\n              }\n            });\n\n            const sendTest = () => {\n              const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]);\n\n              try {\n                messageHandler.send(\"test\", testObj, [testObj.buffer]);\n              } catch (ex) {\n                (0, _util.warn)(\"Cannot use postMessage transfers.\");\n                testObj[0] = 0;\n                messageHandler.send(\"test\", testObj);\n              }\n            };\n\n            sendTest();\n            return;\n          } catch (e) {\n            (0, _util.info)(\"The worker has been disabled.\");\n          }\n        }\n\n        this._setupFakeWorker();\n      }\n\n      _setupFakeWorker() {\n        if (!isWorkerDisabled) {\n          (0, _util.warn)(\"Setting up fake worker.\");\n          isWorkerDisabled = true;\n        }\n\n        setupFakeWorkerGlobal().then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n\n            return;\n          }\n\n          const port = new LoopbackPort();\n          this._port = port;\n          const id = \"fake\" + nextFakeWorkerId++;\n          const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n          const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n\n          this._readyCapability.resolve();\n\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity\n          });\n        }).catch(reason => {\n          this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n        });\n      }\n\n      destroy() {\n        this.destroyed = true;\n\n        if (this._webWorker) {\n          this._webWorker.terminate();\n\n          this._webWorker = null;\n        }\n\n        pdfWorkerPorts.delete(this._port);\n        this._port = null;\n\n        if (this._messageHandler) {\n          this._messageHandler.destroy();\n\n          this._messageHandler = null;\n        }\n      }\n\n      static fromPort(params) {\n        if (!params || !params.port) {\n          throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n        }\n\n        if (pdfWorkerPorts.has(params.port)) {\n          return pdfWorkerPorts.get(params.port);\n        }\n\n        return new PDFWorker(params);\n      }\n\n      static getWorkerSrc() {\n        return getWorkerSrc();\n      }\n\n    }\n\n    return PDFWorker;\n  }();\n\n  exports.PDFWorker = PDFWorker;\n\n  class WorkerTransport {\n    constructor(messageHandler, loadingTask, networkStream, params) {\n      this.messageHandler = messageHandler;\n      this.loadingTask = loadingTask;\n      this.commonObjs = new PDFObjects();\n      this.fontLoader = new _font_loader.FontLoader({\n        docId: loadingTask.docId,\n        onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n        ownerDocument: params.ownerDocument\n      });\n      this._params = params;\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: params.cMapUrl,\n        isCompressed: params.cMapPacked\n      });\n      this.destroyed = false;\n      this.destroyCapability = null;\n      this._passwordCapability = null;\n      this._networkStream = networkStream;\n      this._fullReader = null;\n      this._lastProgress = null;\n      this.pageCache = [];\n      this.pagePromises = [];\n      this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n      this.setupMessageHandler();\n    }\n\n    get loadingTaskSettled() {\n      return this.loadingTask._capability.settled;\n    }\n\n    destroy() {\n      if (this.destroyCapability) {\n        return this.destroyCapability.promise;\n      }\n\n      this.destroyed = true;\n      this.destroyCapability = (0, _util.createPromiseCapability)();\n\n      if (this._passwordCapability) {\n        this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n      }\n\n      const waitOn = [];\n      this.pageCache.forEach(function (page) {\n        if (page) {\n          waitOn.push(page._destroy());\n        }\n      });\n      this.pageCache.length = 0;\n      this.pagePromises.length = 0;\n      const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n      waitOn.push(terminated);\n\n      if (this.loadingTaskSettled) {\n        const annotationStorageResetModified = this.loadingTask.promise.then(pdfDocument => {\n          if (pdfDocument.hasOwnProperty(\"annotationStorage\")) {\n            pdfDocument.annotationStorage.resetModified();\n          }\n        }).catch(() => {});\n        waitOn.push(annotationStorageResetModified);\n      }\n\n      Promise.all(waitOn).then(() => {\n        this.commonObjs.clear();\n        this.fontLoader.clear();\n        this._hasJSActionsPromise = null;\n\n        if (this._networkStream) {\n          this._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n        }\n\n        if (this.messageHandler) {\n          this.messageHandler.destroy();\n          this.messageHandler = null;\n        }\n\n        this.destroyCapability.resolve();\n      }, this.destroyCapability.reject);\n      return this.destroyCapability.promise;\n    }\n\n    setupMessageHandler() {\n      const {\n        messageHandler,\n        loadingTask\n      } = this;\n      messageHandler.on(\"GetReader\", (data, sink) => {\n        (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n        this._fullReader = this._networkStream.getFullReader();\n\n        this._fullReader.onProgress = evt => {\n          this._lastProgress = {\n            loaded: evt.loaded,\n            total: evt.total\n          };\n        };\n\n        sink.onPull = () => {\n          this._fullReader.read().then(function ({\n            value,\n            done\n          }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n\n            (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\");\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          }).catch(reason => {\n            sink.error(reason);\n          });\n        };\n\n        sink.onCancel = reason => {\n          this._fullReader.cancel(reason);\n\n          sink.ready.catch(readyReason => {\n            if (this.destroyed) {\n              return;\n            }\n\n            throw readyReason;\n          });\n        };\n      });\n      messageHandler.on(\"ReaderHeadersReady\", data => {\n        const headersCapability = (0, _util.createPromiseCapability)();\n        const fullReader = this._fullReader;\n        fullReader.headersReady.then(() => {\n          if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n            if (this._lastProgress && loadingTask.onProgress) {\n              loadingTask.onProgress(this._lastProgress);\n            }\n\n            fullReader.onProgress = evt => {\n              if (loadingTask.onProgress) {\n                loadingTask.onProgress({\n                  loaded: evt.loaded,\n                  total: evt.total\n                });\n              }\n            };\n          }\n\n          headersCapability.resolve({\n            isStreamingSupported: fullReader.isStreamingSupported,\n            isRangeSupported: fullReader.isRangeSupported,\n            contentLength: fullReader.contentLength\n          });\n        }, headersCapability.reject);\n        return headersCapability.promise;\n      });\n      messageHandler.on(\"GetRangeReader\", (data, sink) => {\n        (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n\n        const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n\n        if (!rangeReader) {\n          sink.close();\n          return;\n        }\n\n        sink.onPull = () => {\n          rangeReader.read().then(function ({\n            value,\n            done\n          }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n\n            (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\");\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          }).catch(reason => {\n            sink.error(reason);\n          });\n        };\n\n        sink.onCancel = reason => {\n          rangeReader.cancel(reason);\n          sink.ready.catch(readyReason => {\n            if (this.destroyed) {\n              return;\n            }\n\n            throw readyReason;\n          });\n        };\n      });\n      messageHandler.on(\"GetDoc\", ({\n        pdfInfo\n      }) => {\n        this._numPages = pdfInfo.numPages;\n\n        loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n      });\n      messageHandler.on(\"DocException\", function (ex) {\n        let reason;\n\n        switch (ex.name) {\n          case \"PasswordException\":\n            reason = new _util.PasswordException(ex.message, ex.code);\n            break;\n\n          case \"InvalidPDFException\":\n            reason = new _util.InvalidPDFException(ex.message);\n            break;\n\n          case \"MissingPDFException\":\n            reason = new _util.MissingPDFException(ex.message);\n            break;\n\n          case \"UnexpectedResponseException\":\n            reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n            break;\n\n          case \"UnknownErrorException\":\n            reason = new _util.UnknownErrorException(ex.message, ex.details);\n            break;\n        }\n\n        if (!(reason instanceof Error)) {\n          const msg = \"DocException - expected a valid Error.\";\n          (0, _util.warn)(msg);\n        }\n\n        loadingTask._capability.reject(reason);\n      });\n      messageHandler.on(\"PasswordRequest\", exception => {\n        this._passwordCapability = (0, _util.createPromiseCapability)();\n\n        if (loadingTask.onPassword) {\n          const updatePassword = password => {\n            this._passwordCapability.resolve({\n              password\n            });\n          };\n\n          try {\n            loadingTask.onPassword(updatePassword, exception.code);\n          } catch (ex) {\n            this._passwordCapability.reject(ex);\n          }\n        } else {\n          this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n        }\n\n        return this._passwordCapability.promise;\n      });\n      messageHandler.on(\"DataLoaded\", data => {\n        if (loadingTask.onProgress) {\n          loadingTask.onProgress({\n            loaded: data.length,\n            total: data.length\n          });\n        }\n\n        this.downloadInfoCapability.resolve(data);\n      });\n      messageHandler.on(\"StartRenderPage\", data => {\n        if (this.destroyed) {\n          return;\n        }\n\n        const page = this.pageCache[data.pageIndex];\n\n        page._startRenderPage(data.transparency, data.intent);\n      });\n      messageHandler.on(\"commonobj\", data => {\n        if (this.destroyed) {\n          return;\n        }\n\n        const [id, type, exportedData] = data;\n\n        if (this.commonObjs.has(id)) {\n          return;\n        }\n\n        switch (type) {\n          case \"Font\":\n            const params = this._params;\n\n            if (\"error\" in exportedData) {\n              const exportedError = exportedData.error;\n              (0, _util.warn)(`Error during font loading: ${exportedError}`);\n              this.commonObjs.resolve(id, exportedError);\n              break;\n            }\n\n            let fontRegistry = null;\n\n            if (params.pdfBug && globalThis.FontInspector && globalThis.FontInspector.enabled) { //lwf\n              fontRegistry = {\n                registerFont(font, url) {\n                  globalThis.FontInspector.fontAdded(font, url);\n                }\n\n              };\n            }\n\n            const font = new _font_loader.FontFaceObject(exportedData, {\n              isEvalSupported: params.isEvalSupported,\n              disableFontFace: params.disableFontFace,\n              ignoreErrors: params.ignoreErrors,\n              onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n              fontRegistry\n            });\n            this.fontLoader.bind(font).catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", {\n                id\n              });\n            }).finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                font.data = null;\n              }\n\n              this.commonObjs.resolve(id, font);\n            });\n            break;\n\n          case \"FontPath\":\n          case \"Image\":\n            this.commonObjs.resolve(id, exportedData);\n            break;\n\n          default:\n            throw new Error(`Got unknown common object type ${type}`);\n        }\n      });\n      messageHandler.on(\"obj\", data => {\n        if (this.destroyed) {\n          return undefined;\n        }\n\n        const [id, pageIndex, type, imageData] = data;\n        const pageProxy = this.pageCache[pageIndex];\n\n        if (pageProxy.objs.has(id)) {\n          return undefined;\n        }\n\n        switch (type) {\n          case \"Image\":\n            pageProxy.objs.resolve(id, imageData);\n            const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n\n            if (imageData && imageData.data && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) { //lwf\n              pageProxy.cleanupAfterRender = true;\n            }\n\n            break;\n\n          default:\n            throw new Error(`Got unknown object type ${type}`);\n        }\n\n        return undefined;\n      });\n      messageHandler.on(\"DocProgress\", data => {\n        if (this.destroyed) {\n          return;\n        }\n\n        if (loadingTask.onProgress) {\n          loadingTask.onProgress({\n            loaded: data.loaded,\n            total: data.total\n          });\n        }\n      });\n      messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n      messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n        if (this.destroyed) {\n          sink.error(new Error(\"Worker was destroyed\"));\n          return;\n        }\n\n        let fetched = false;\n\n        sink.onPull = () => {\n          if (fetched) {\n            sink.close();\n            return;\n          }\n\n          fetched = true;\n          this.CMapReaderFactory.fetch(data).then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          }).catch(function (reason) {\n            sink.error(reason);\n          });\n        };\n      });\n    }\n\n    _onUnsupportedFeature({\n      featureId\n    }) {\n      if (this.destroyed) {\n        return;\n      }\n\n      if (this.loadingTask.onUnsupportedFeature) {\n        this.loadingTask.onUnsupportedFeature(featureId);\n      }\n    }\n\n    getData() {\n      return this.messageHandler.sendWithPromise(\"GetData\", null);\n    }\n\n    getPage(pageNumber) {\n      if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n        return Promise.reject(new Error(\"Invalid page request\"));\n      }\n\n      const pageIndex = pageNumber - 1;\n\n      if (pageIndex in this.pagePromises) {\n        return this.pagePromises[pageIndex];\n      }\n\n      const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n        pageIndex\n      }).then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n\n        const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.ownerDocument, this._params.pdfBug);\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n      this.pagePromises[pageIndex] = promise;\n      return promise;\n    }\n\n    getPageIndex(ref) {\n      return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n        ref\n      }).catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n    }\n\n    getAnnotations(pageIndex, intent) {\n      return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n        pageIndex,\n        intent\n      });\n    }\n\n    saveDocument(annotationStorage) {\n      return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n        numPages: this._numPages,\n        annotationStorage: annotationStorage && annotationStorage.getAll() || null,  // lwf\n        filename: this._fullReader && this._fullReader.filename || null // lwf\n      }).finally(() => {\n        if (annotationStorage) {\n          annotationStorage.resetModified();\n        }\n      });\n    }\n\n    getFieldObjects() {\n      return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n    }\n\n    hasJSActions() {\n      return this._hasJSActionsPromise || (this._hasJSActionsPromise = this.messageHandler.sendWithPromise(\"HasJSActions\", null));\n    }\n\n    getCalculationOrderIds() {\n      return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n    }\n\n    getDestinations() {\n      return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n    }\n\n    getDestination(id) {\n      if (typeof id !== \"string\") {\n        return Promise.reject(new Error(\"Invalid destination request.\"));\n      }\n\n      return this.messageHandler.sendWithPromise(\"GetDestination\", {\n        id\n      });\n    }\n\n    getPageLabels() {\n      return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n    }\n\n    getPageLayout() {\n      return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n    }\n\n    getPageMode() {\n      return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n    }\n\n    getViewerPreferences() {\n      return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n    }\n\n    getOpenAction() {\n      return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n    }\n\n    getAttachments() {\n      return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n    }\n\n    getJavaScript() {\n      return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n    }\n\n    getDocJSActions() {\n      return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n    }\n\n    getPageJSActions(pageIndex) {\n      return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n        pageIndex\n      });\n    }\n\n    getOutline() {\n      return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n    }\n\n    getOptionalContentConfig() {\n      return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(results => {\n        return new _optional_content_config.OptionalContentConfig(results);\n      });\n    }\n\n    getPermissions() {\n      return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n    }\n\n    getMetadata() {\n      return this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader && this._fullReader.filename || null, // lwf\n          contentLength: this._fullReader && this._fullReader.contentLength || null  // lwf\n        };\n      });\n    }\n\n    getMarkInfo() {\n      return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n    }\n\n    getStats() {\n      return this.messageHandler.sendWithPromise(\"GetStats\", null);\n    }\n\n    startCleanup() {\n      return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n        for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n          const page = this.pageCache[i];\n\n          if (page) {\n            const cleanupSuccessful = page.cleanup();\n\n            if (!cleanupSuccessful) {\n              throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n            }\n          }\n        }\n\n        this.commonObjs.clear();\n        this.fontLoader.clear();\n        this._hasJSActionsPromise = null;\n      });\n    }\n\n    get loadingParams() {\n      const params = this._params;\n      return (0, _util.shadow)(this, \"loadingParams\", {\n        disableAutoFetch: params.disableAutoFetch,\n        disableFontFace: params.disableFontFace\n      });\n    }\n\n  }\n\n  class PDFObjects {\n    constructor() {\n      this._objs = Object.create(null);\n    }\n\n    _ensureObj(objId) {\n      if (this._objs[objId]) {\n        return this._objs[objId];\n      }\n\n      return this._objs[objId] = {\n        capability: (0, _util.createPromiseCapability)(),\n        data: null,\n        resolved: false\n      };\n    }\n\n    get(objId, callback = null) {\n      if (callback) {\n        this._ensureObj(objId).capability.promise.then(callback);\n\n        return null;\n      }\n\n      const obj = this._objs[objId];\n\n      if (!obj || !obj.resolved) {\n        throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n      }\n\n      return obj.data;\n    }\n\n    has(objId) {\n      const obj = this._objs[objId];\n      return obj && obj.resolved || false; // lwf\n    }\n\n    resolve(objId, data) {\n      const obj = this._ensureObj(objId);\n\n      obj.resolved = true;\n      obj.data = data;\n      obj.capability.resolve(data);\n    }\n\n    clear() {\n      this._objs = Object.create(null);\n    }\n\n  }\n\n  class RenderTask {\n    constructor(internalRenderTask) {\n      this._internalRenderTask = internalRenderTask;\n      this.onContinue = null;\n    }\n\n    get promise() {\n      return this._internalRenderTask.capability.promise;\n    }\n\n    cancel() {\n      this._internalRenderTask.cancel();\n    }\n\n  }\n\n  const InternalRenderTask = function InternalRenderTaskClosure() {\n    const canvasInRendering = new WeakSet();\n\n    class InternalRenderTask {\n      constructor({\n        callback,\n        params,\n        objs,\n        commonObjs,\n        operatorList,\n        pageIndex,\n        canvasFactory,\n        webGLContext,\n        useRequestAnimationFrame = false,\n        pdfBug = false\n      }) {\n        this.callback = callback;\n        this.params = params;\n        this.objs = objs;\n        this.commonObjs = commonObjs;\n        this.operatorListIdx = null;\n        this.operatorList = operatorList;\n        this._pageIndex = pageIndex;\n        this.canvasFactory = canvasFactory;\n        this.webGLContext = webGLContext;\n        this._pdfBug = pdfBug;\n        this.running = false;\n        this.graphicsReadyCallback = null;\n        this.graphicsReady = false;\n        this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n        this.cancelled = false;\n        this.capability = (0, _util.createPromiseCapability)();\n        this.task = new RenderTask(this);\n        this._continueBound = this._continue.bind(this);\n        this._scheduleNextBound = this._scheduleNext.bind(this);\n        this._nextBound = this._next.bind(this);\n        this._canvas = params.canvasContext.canvas;\n      }\n\n      get completed() {\n        return this.capability.promise.catch(function () {});\n      }\n\n      initializeGraphics({\n        transparency = false,\n        optionalContentConfig\n      }) {\n        if (this.cancelled) {\n          return;\n        }\n\n        if (this._canvas) {\n          if (canvasInRendering.has(this._canvas)) {\n            throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n          }\n\n          canvasInRendering.add(this._canvas);\n        }\n\n        if (this._pdfBug && globalThis.StepperManager && globalThis.StepperManager.enabled) { // lwf\n          this.stepper = globalThis.StepperManager.create(this._pageIndex);\n          this.stepper.init(this.operatorList);\n          this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n        }\n\n        const {\n          canvasContext,\n          viewport,\n          transform,\n          imageLayer,\n          background\n        } = this.params;\n        this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext, imageLayer, optionalContentConfig);\n        this.gfx.beginDrawing({\n          transform,\n          viewport,\n          transparency,\n          background\n        });\n        this.operatorListIdx = 0;\n        this.graphicsReady = true;\n\n        if (this.graphicsReadyCallback) {\n          this.graphicsReadyCallback();\n        }\n      }\n\n      cancel(error = null) {\n        this.running = false;\n        this.cancelled = true;\n\n        if (this.gfx) {\n          this.gfx.endDrawing();\n        }\n\n        if (this._canvas) {\n          canvasInRendering.delete(this._canvas);\n        }\n\n        this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, \"canvas\"));\n      }\n\n      operatorListChanged() {\n        if (!this.graphicsReady) {\n          if (!this.graphicsReadyCallback) {\n            this.graphicsReadyCallback = this._continueBound;\n          }\n\n          return;\n        }\n\n        if (this.stepper) {\n          this.stepper.updateOperatorList(this.operatorList);\n        }\n\n        if (this.running) {\n          return;\n        }\n\n        this._continue();\n      }\n\n      _continue() {\n        this.running = true;\n\n        if (this.cancelled) {\n          return;\n        }\n\n        if (this.task.onContinue) {\n          this.task.onContinue(this._scheduleNextBound);\n        } else {\n          this._scheduleNext();\n        }\n      }\n\n      _scheduleNext() {\n        if (this._useRequestAnimationFrame) {\n          window.requestAnimationFrame(() => {\n            this._nextBound().catch(this.cancel.bind(this));\n          });\n        } else {\n          Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n        }\n      }\n\n      async _next() {\n        if (this.cancelled) {\n          return;\n        }\n\n        this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n\n        if (this.operatorListIdx === this.operatorList.argsArray.length) {\n          this.running = false;\n\n          if (this.operatorList.lastChunk) {\n            this.gfx.endDrawing();\n\n            if (this._canvas) {\n              canvasInRendering.delete(this._canvas);\n            }\n\n            this.callback();\n          }\n        }\n      }\n\n    }\n\n    return InternalRenderTask;\n  }();\n\n  const version = '2.7.570';\n  exports.version = version;\n  const build = 'f2c7338b0';\n  exports.build = build;\n\n  /***/ }),\n  /* 6 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.FontLoader = exports.FontFaceObject = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  class BaseFontLoader {\n    constructor({\n      docId,\n      onUnsupportedFeature,\n      ownerDocument = globalThis.document\n    }) {\n      if (this.constructor === BaseFontLoader) {\n        (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n      }\n\n      this.docId = docId;\n      this._onUnsupportedFeature = onUnsupportedFeature;\n      this._document = ownerDocument;\n      this.nativeFontFaces = [];\n      this.styleElement = null;\n    }\n\n    addNativeFontFace(nativeFontFace) {\n      this.nativeFontFaces.push(nativeFontFace);\n\n      this._document.fonts.add(nativeFontFace);\n    }\n\n    insertRule(rule) {\n      let styleElement = this.styleElement;\n\n      if (!styleElement) {\n        styleElement = this.styleElement = this._document.createElement(\"style\");\n        styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n\n        this._document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n      }\n\n      const styleSheet = styleElement.sheet;\n      styleSheet.insertRule(rule, styleSheet.cssRules.length);\n    }\n\n    clear() {\n      this.nativeFontFaces.forEach(nativeFontFace => {\n        this._document.fonts.delete(nativeFontFace);\n      });\n      this.nativeFontFaces.length = 0;\n\n      if (this.styleElement) {\n        this.styleElement.remove();\n        this.styleElement = null;\n      }\n    }\n\n    async bind(font) {\n      if (font.attached || font.missingFile) {\n        return;\n      }\n\n      font.attached = true;\n\n      if (this.isFontLoadingAPISupported) {\n        const nativeFontFace = font.createNativeFontFace();\n\n        if (nativeFontFace) {\n          this.addNativeFontFace(nativeFontFace);\n\n          try {\n            await nativeFontFace.loaded;\n          } catch (ex) {\n            this._onUnsupportedFeature({\n              featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadNative\n            });\n\n            (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n            font.disableFontFace = true;\n            throw ex;\n          }\n        }\n\n        return;\n      }\n\n      const rule = font.createFontFaceRule();\n\n      if (rule) {\n        this.insertRule(rule);\n\n        if (this.isSyncFontLoadingSupported) {\n          return;\n        }\n\n        await new Promise(resolve => {\n          const request = this._queueLoadingCallback(resolve);\n\n          this._prepareFontLoadEvent([rule], [font], request);\n        });\n      }\n    }\n\n    _queueLoadingCallback(callback) {\n      (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n    }\n\n    get isFontLoadingAPISupported() {\n      return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", !!(this._document && this._document.fonts)); // lwf\n    }\n\n    get isSyncFontLoadingSupported() {\n      (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n    }\n\n    get _loadTestFont() {\n      (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n    }\n\n    _prepareFontLoadEvent(rules, fontsToLoad, request) {\n      (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n    }\n\n  }\n\n  let FontLoader;\n  exports.FontLoader = FontLoader;\n  {\n    exports.FontLoader = FontLoader = class GenericFontLoader extends BaseFontLoader {\n      constructor(params) {\n        super(params);\n        this.loadingContext = {\n          requests: [],\n          nextRequestId: 0\n        };\n        this.loadTestFontId = 0;\n      }\n\n      get isSyncFontLoadingSupported() {\n        let supported = false;\n\n        if (typeof navigator === \"undefined\") {\n          supported = true;\n        } else {\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n\n          if (m && m[1] >= 14) { // lwf\n            supported = true;\n          }\n        }\n\n        return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n      }\n\n      _queueLoadingCallback(callback) {\n        function completeRequest() {\n          (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n          request.done = true;\n\n          while (context.requests.length > 0 && context.requests[0].done) {\n            const otherRequest = context.requests.shift();\n            setTimeout(otherRequest.callback, 0);\n          }\n        }\n\n        const context = this.loadingContext;\n        const request = {\n          id: `pdfjs-font-loading-${context.nextRequestId++}`,\n          done: false,\n          complete: completeRequest,\n          callback\n        };\n        context.requests.push(request);\n        return request;\n      }\n\n      get _loadTestFont() {\n        const getLoadTestFont = function () {\n          return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n        };\n\n        return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n      }\n\n      _prepareFontLoadEvent(rules, fonts, request) {\n        function int32(data, offset) {\n          return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n        }\n\n        function spliceString(s, offset, remove, insert) {\n          const chunk1 = s.substring(0, offset);\n          const chunk2 = s.substring(offset + remove);\n          return chunk1 + insert + chunk2;\n        }\n\n        let i, ii;\n\n        const canvas = this._document.createElement(\"canvas\");\n\n        canvas.width = 1;\n        canvas.height = 1;\n        const ctx = canvas.getContext(\"2d\");\n        let called = 0;\n\n        function isFontReady(name, callback) {\n          called++;\n\n          if (called > 30) {\n            (0, _util.warn)(\"Load test font never loaded.\");\n            callback();\n            return;\n          }\n\n          ctx.font = \"30px \" + name;\n          ctx.fillText(\".\", 0, 20);\n          const imageData = ctx.getImageData(0, 0, 1, 1);\n\n          if (imageData.data[3] > 0) {\n            callback();\n            return;\n          }\n\n          setTimeout(isFontReady.bind(null, name, callback));\n        }\n\n        const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n        let data = this._loadTestFont;\n        const COMMENT_OFFSET = 976;\n        data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n        const CFF_CHECKSUM_OFFSET = 16;\n        const XXXX_VALUE = 0x58585858;\n        let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n\n        for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n          checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n        }\n\n        if (i < loadTestFontId.length) {\n          checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n        }\n\n        data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n        const url = `url(data:font/opentype;base64,${btoa(data)});`;\n        const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n        this.insertRule(rule);\n        const names = [];\n\n        for (i = 0, ii = fonts.length; i < ii; i++) {\n          names.push(fonts[i].loadedName);\n        }\n\n        names.push(loadTestFontId);\n\n        const div = this._document.createElement(\"div\");\n\n        div.style.visibility = \"hidden\";\n        div.style.width = div.style.height = \"10px\";\n        div.style.position = \"absolute\";\n        div.style.top = div.style.left = \"0px\";\n\n        for (i = 0, ii = names.length; i < ii; ++i) {\n          const span = this._document.createElement(\"span\");\n\n          span.textContent = \"Hi\";\n          span.style.fontFamily = names[i];\n          div.appendChild(span);\n        }\n\n        this._document.body.appendChild(div);\n\n        isFontReady(loadTestFontId, () => {\n          this._document.body.removeChild(div);\n\n          request.complete();\n        });\n      }\n\n    };\n  }\n\n  class FontFaceObject {\n    constructor(translatedData, {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null\n    }) {\n      this.compiledGlyphs = Object.create(null);\n\n      for (const i in translatedData) {\n        this[i] = translatedData[i];\n      }\n\n      this.isEvalSupported = isEvalSupported !== false;\n      this.disableFontFace = disableFontFace === true;\n      this.ignoreErrors = ignoreErrors === true;\n      this._onUnsupportedFeature = onUnsupportedFeature;\n      this.fontRegistry = fontRegistry;\n    }\n\n    createNativeFontFace() {\n      if (!this.data || this.disableFontFace) {\n        return null;\n      }\n\n      const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n      if (this.fontRegistry) {\n        this.fontRegistry.registerFont(this);\n      }\n\n      return nativeFontFace;\n    }\n\n    createFontFaceRule() {\n      if (!this.data || this.disableFontFace) {\n        return null;\n      }\n\n      const data = (0, _util.bytesToString)(new Uint8Array(this.data));\n      const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n      if (this.fontRegistry) {\n        this.fontRegistry.registerFont(this, url);\n      }\n\n      return rule;\n    }\n\n    getPathGenerator(objs, character) {\n      if (this.compiledGlyphs[character] !== undefined) {\n        return this.compiledGlyphs[character];\n      }\n\n      let cmds, current;\n\n      try {\n        cmds = objs.get(this.loadedName + \"_path_\" + character);\n      } catch (ex) {\n        if (!this.ignoreErrors) {\n          throw ex;\n        }\n\n        if (this._onUnsupportedFeature) {\n          this._onUnsupportedFeature({\n            featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath\n          });\n        }\n\n        (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n        return this.compiledGlyphs[character] = function (c, size) {};\n      }\n\n      if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n        let args,\n            js = \"\";\n\n        for (let i = 0, ii = cmds.length; i < ii; i++) {\n          current = cmds[i];\n\n          if (current.args !== undefined) {\n            args = current.args.join(\",\");\n          } else {\n            args = \"\";\n          }\n\n          js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n        }\n\n        return this.compiledGlyphs[character] = new Function(\"c\", \"size\", js);\n      }\n\n      return this.compiledGlyphs[character] = function (c, size) {\n        for (let i = 0, ii = cmds.length; i < ii; i++) {\n          current = cmds[i];\n\n          if (current.cmd === \"scale\") {\n            current.args = [size, -size];\n          }\n\n          c[current.cmd].apply(c, current.args);\n        }\n      };\n    }\n\n  }\n\n  exports.FontFaceObject = FontFaceObject;\n\n  /***/ }),\n  /* 7 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.NodeCMapReaderFactory = exports.NodeCanvasFactory = void 0;\n\n  var _display_utils = __w_pdfjs_require__(1);\n\n  var _is_node = __w_pdfjs_require__(4);\n\n  var _util = __w_pdfjs_require__(2);\n\n  let NodeCanvasFactory = class {\n    constructor() {\n      (0, _util.unreachable)(\"Not implemented: NodeCanvasFactory\");\n    }\n\n  };\n  exports.NodeCanvasFactory = NodeCanvasFactory;\n  let NodeCMapReaderFactory = class {\n    constructor() {\n      (0, _util.unreachable)(\"Not implemented: NodeCMapReaderFactory\");\n    }\n\n  };\n  exports.NodeCMapReaderFactory = NodeCMapReaderFactory;\n\n  if (_is_node.isNodeJS) {\n    exports.NodeCanvasFactory = NodeCanvasFactory = class extends _display_utils.BaseCanvasFactory {\n      create(width, height) {\n        if (width <= 0 || height <= 0) {\n          throw new Error(\"Invalid canvas size\");\n        }\n\n        const Canvas = require(\"canvas\");\n\n        const canvas = Canvas.createCanvas(width, height);\n        return {\n          canvas,\n          context: canvas.getContext(\"2d\")\n        };\n      }\n\n    };\n    exports.NodeCMapReaderFactory = NodeCMapReaderFactory = class extends _display_utils.BaseCMapReaderFactory {\n      _fetchData(url, compressionType) {\n        return new Promise((resolve, reject) => {\n          const fs = require(\"fs\");\n\n          fs.readFile(url, (error, data) => {\n            if (error || !data) {\n              reject(new Error(error));\n              return;\n            }\n\n            resolve({\n              cMapData: new Uint8Array(data),\n              compressionType\n            });\n          });\n        });\n      }\n\n    };\n  }\n\n  /***/ }),\n  /* 8 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.AnnotationStorage = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  class AnnotationStorage {\n    constructor() {\n      this._storage = new Map();\n      this._modified = false;\n      this.onSetModified = null;\n      this.onResetModified = null;\n    }\n\n    getOrCreateValue(key, defaultValue) {\n      if (this._storage.has(key)) {\n        return this._storage.get(key);\n      }\n\n      this._storage.set(key, defaultValue);\n\n      return defaultValue;\n    }\n\n    setValue(key, value) {\n      const obj = this._storage.get(key);\n\n      let modified = false;\n\n      if (obj !== undefined) {\n        for (const [entry, val] of Object.entries(value)) {\n          if (obj[entry] !== val) {\n            modified = true;\n            obj[entry] = val;\n          }\n        }\n      } else {\n        this._storage.set(key, value);\n\n        modified = true;\n      }\n\n      if (modified) {\n        this._setModified();\n      }\n    }\n\n    getAll() {\n      if (this._storage.size === 0) {\n        return null;\n      }\n\n      return (0, _util.objectFromEntries)(this._storage);\n    }\n\n    get size() {\n      return this._storage.size;\n    }\n\n    _setModified() {\n      if (!this._modified) {\n        this._modified = true;\n\n        if (typeof this.onSetModified === \"function\") {\n          this.onSetModified();\n        }\n      }\n    }\n\n    resetModified() {\n      if (this._modified) {\n        this._modified = false;\n\n        if (typeof this.onResetModified === \"function\") {\n          this.onResetModified();\n        }\n      }\n    }\n\n  }\n\n  exports.AnnotationStorage = AnnotationStorage;\n\n  /***/ }),\n  /* 9 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.apiCompatibilityParams = void 0;\n\n  var _is_node = __w_pdfjs_require__(4);\n\n  const compatibilityParams = Object.create(null);\n  {\n    (function checkFontFace() {\n      if (_is_node.isNodeJS) {\n        compatibilityParams.disableFontFace = true;\n      }\n    })();\n  }\n  const apiCompatibilityParams = Object.freeze(compatibilityParams);\n  exports.apiCompatibilityParams = apiCompatibilityParams;\n\n  /***/ }),\n  /* 10 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.CanvasGraphics = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _pattern_helper = __w_pdfjs_require__(11);\n\n  const MIN_FONT_SIZE = 16;\n  const MAX_FONT_SIZE = 100;\n  const MAX_GROUP_SIZE = 4096;\n  const COMPILE_TYPE3_GLYPHS = true;\n  const MAX_SIZE_TO_COMPILE = 1000;\n  const FULL_CHUNK_HEIGHT = 16;\n\n  function addContextCurrentTransform(ctx) {\n    if (!ctx.mozCurrentTransform) {\n      ctx._originalSave = ctx.save;\n      ctx._originalRestore = ctx.restore;\n      ctx._originalRotate = ctx.rotate;\n      ctx._originalScale = ctx.scale;\n      ctx._originalTranslate = ctx.translate;\n      ctx._originalTransform = ctx.transform;\n      ctx._originalSetTransform = ctx.setTransform;\n      ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n      ctx._transformStack = [];\n      Object.defineProperty(ctx, \"mozCurrentTransform\", {\n        get: function getCurrentTransform() {\n          return this._transformMatrix;\n        }\n      });\n      Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n        get: function getCurrentTransformInverse() {\n          const m = this._transformMatrix;\n          const a = m[0],\n                b = m[1],\n                c = m[2],\n                d = m[3],\n                e = m[4],\n                f = m[5];\n          const ad_bc = a * d - b * c;\n          const bc_ad = b * c - a * d;\n          return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n        }\n      });\n\n      ctx.save = function ctxSave() {\n        const old = this._transformMatrix;\n\n        this._transformStack.push(old);\n\n        this._transformMatrix = old.slice(0, 6);\n\n        this._originalSave();\n      };\n\n      ctx.restore = function ctxRestore() {\n        const prev = this._transformStack.pop();\n\n        if (prev) {\n          this._transformMatrix = prev;\n\n          this._originalRestore();\n        }\n      };\n\n      ctx.translate = function ctxTranslate(x, y) {\n        const m = this._transformMatrix;\n        m[4] = m[0] * x + m[2] * y + m[4];\n        m[5] = m[1] * x + m[3] * y + m[5];\n\n        this._originalTranslate(x, y);\n      };\n\n      ctx.scale = function ctxScale(x, y) {\n        const m = this._transformMatrix;\n        m[0] = m[0] * x;\n        m[1] = m[1] * x;\n        m[2] = m[2] * y;\n        m[3] = m[3] * y;\n\n        this._originalScale(x, y);\n      };\n\n      ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n        const m = this._transformMatrix;\n        this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n\n        ctx._originalTransform(a, b, c, d, e, f);\n      };\n\n      ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n        this._transformMatrix = [a, b, c, d, e, f];\n\n        ctx._originalSetTransform(a, b, c, d, e, f);\n      };\n\n      ctx.rotate = function ctxRotate(angle) {\n        const cosValue = Math.cos(angle);\n        const sinValue = Math.sin(angle);\n        const m = this._transformMatrix;\n        this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n\n        this._originalRotate(angle);\n      };\n    }\n  }\n\n  const CachedCanvases = function CachedCanvasesClosure() {\n    function CachedCanvases(canvasFactory) {\n      this.canvasFactory = canvasFactory;\n      this.cache = Object.create(null);\n    }\n\n    CachedCanvases.prototype = {\n      getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {\n        let canvasEntry;\n\n        if (this.cache[id] !== undefined) {\n          canvasEntry = this.cache[id];\n          this.canvasFactory.reset(canvasEntry, width, height);\n          canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n        } else {\n          canvasEntry = this.canvasFactory.create(width, height);\n          this.cache[id] = canvasEntry;\n        }\n\n        if (trackTransform) {\n          addContextCurrentTransform(canvasEntry.context);\n        }\n\n        return canvasEntry;\n      },\n\n      clear() {\n        for (const id in this.cache) {\n          const canvasEntry = this.cache[id];\n          this.canvasFactory.destroy(canvasEntry);\n          delete this.cache[id];\n        }\n      }\n\n    };\n    return CachedCanvases;\n  }();\n\n  function compileType3Glyph(imgData) {\n    const POINT_TO_PROCESS_LIMIT = 1000;\n    const width = imgData.width,\n          height = imgData.height,\n          width1 = width + 1;\n    let i, ii, j, j0;\n    const points = new Uint8Array(width1 * (height + 1));\n    const POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n    const lineSize = width + 7 & ~7,\n          data0 = imgData.data;\n    const data = new Uint8Array(lineSize * height);\n    let pos = 0;\n\n    for (i = 0, ii = data0.length; i < ii; i++) {\n      const elem = data0[i];\n      let mask = 128;\n\n      while (mask > 0) {\n        data[pos++] = elem & mask ? 0 : 255;\n        mask >>= 1;\n      }\n    }\n\n    let count = 0;\n    pos = 0;\n\n    if (data[pos] !== 0) {\n      points[0] = 1;\n      ++count;\n    }\n\n    for (j = 1; j < width; j++) {\n      if (data[pos] !== data[pos + 1]) {\n        points[j] = data[pos] ? 2 : 1;\n        ++count;\n      }\n\n      pos++;\n    }\n\n    if (data[pos] !== 0) {\n      points[j] = 2;\n      ++count;\n    }\n\n    for (i = 1; i < height; i++) {\n      pos = i * lineSize;\n      j0 = i * width1;\n\n      if (data[pos - lineSize] !== data[pos]) {\n        points[j0] = data[pos] ? 1 : 8;\n        ++count;\n      }\n\n      let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n\n      for (j = 1; j < width; j++) {\n        sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n\n        if (POINT_TYPES[sum]) {\n          points[j0 + j] = POINT_TYPES[sum];\n          ++count;\n        }\n\n        pos++;\n      }\n\n      if (data[pos - lineSize] !== data[pos]) {\n        points[j0 + j] = data[pos] ? 2 : 4;\n        ++count;\n      }\n\n      if (count > POINT_TO_PROCESS_LIMIT) {\n        return null;\n      }\n    }\n\n    pos = lineSize * (height - 1);\n    j0 = i * width1;\n\n    if (data[pos] !== 0) {\n      points[j0] = 8;\n      ++count;\n    }\n\n    for (j = 1; j < width; j++) {\n      if (data[pos] !== data[pos + 1]) {\n        points[j0 + j] = data[pos] ? 4 : 8;\n        ++count;\n      }\n\n      pos++;\n    }\n\n    if (data[pos] !== 0) {\n      points[j0 + j] = 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n\n    const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n    const outlines = [];\n\n    for (i = 0; count && i <= height; i++) {\n      let p = i * width1;\n      const end = p + width;\n\n      while (p < end && !points[p]) {\n        p++;\n      }\n\n      if (p === end) {\n        continue;\n      }\n\n      const coords = [p % width1, i];\n      const p0 = p;\n      let type = points[p];\n\n      do {\n        const step = steps[type];\n\n        do {\n          p += step;\n        } while (!points[p]);\n\n        const pp = points[p];\n\n        if (pp !== 5 && pp !== 10) {\n          type = pp;\n          points[p] = 0;\n        } else {\n          type = pp & 0x33 * type >> 4;\n          points[p] &= type >> 2 | type << 2;\n        }\n\n        coords.push(p % width1);\n        coords.push(p / width1 | 0);\n\n        if (!points[p]) {\n          --count;\n        }\n      } while (p0 !== p);\n\n      outlines.push(coords);\n      --i;\n    }\n\n    const drawOutline = function (c) {\n      c.save();\n      c.scale(1 / width, -1 / height);\n      c.translate(0, -height);\n      c.beginPath();\n\n      for (let k = 0, kk = outlines.length; k < kk; k++) {\n        const o = outlines[k];\n        c.moveTo(o[0], o[1]);\n\n        for (let l = 2, ll = o.length; l < ll; l += 2) {\n          c.lineTo(o[l], o[l + 1]);\n        }\n      }\n\n      c.fill();\n      c.beginPath();\n      c.restore();\n    };\n\n    return drawOutline;\n  }\n\n  const CanvasExtraState = function CanvasExtraStateClosure() {\n    function CanvasExtraState() {\n      this.alphaIsShape = false;\n      this.fontSize = 0;\n      this.fontSizeScale = 1;\n      this.textMatrix = _util.IDENTITY_MATRIX;\n      this.textMatrixScale = 1;\n      this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.x = 0;\n      this.y = 0;\n      this.lineX = 0;\n      this.lineY = 0;\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRenderingMode = _util.TextRenderingMode.FILL;\n      this.textRise = 0;\n      this.fillColor = \"#000000\";\n      this.strokeColor = \"#000000\";\n      this.patternFill = false;\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.activeSMask = null;\n      this.resumeSMaskCtx = null;\n      this.transferMaps = null;\n    }\n\n    CanvasExtraState.prototype = {\n      clone: function CanvasExtraState_clone() {\n        return Object.create(this);\n      },\n      setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n        this.x = x;\n        this.y = y;\n      }\n    };\n    return CanvasExtraState;\n  }();\n\n  const CanvasGraphics = function CanvasGraphicsClosure() {\n    const EXECUTION_TIME = 15;\n    const EXECUTION_STEPS = 10;\n\n    function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, webGLContext, imageLayer, optionalContentConfig) {\n      this.ctx = canvasCtx;\n      this.current = new CanvasExtraState();\n      this.stateStack = [];\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n      this.res = null;\n      this.xobjs = null;\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this.imageLayer = imageLayer;\n      this.groupStack = [];\n      this.processingType3 = null;\n      this.baseTransform = null;\n      this.baseTransformStack = [];\n      this.groupLevel = 0;\n      this.smaskStack = [];\n      this.smaskCounter = 0;\n      this.tempSMask = null;\n      this.contentVisible = true;\n      this.markedContentStack = [];\n      this.optionalContentConfig = optionalContentConfig;\n      this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n\n      if (canvasCtx) {\n        addContextCurrentTransform(canvasCtx);\n      }\n\n      this._cachedGetSinglePixelWidth = null;\n    }\n\n    function putBinaryImageData(ctx, imgData, transferMaps = null) {\n      if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n        ctx.putImageData(imgData, 0, 0);\n        return;\n      }\n\n      const height = imgData.height,\n            width = imgData.width;\n      const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n      const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n      const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n      const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n      let srcPos = 0,\n          destPos;\n      const src = imgData.data;\n      const dest = chunkImgData.data;\n      let i, j, thisChunkHeight, elemsInThisChunk;\n      let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n\n      if (transferMaps) {\n        switch (transferMaps.length) {\n          case 1:\n            transferMapRed = transferMaps[0];\n            transferMapGreen = transferMaps[0];\n            transferMapBlue = transferMaps[0];\n            transferMapGray = transferMaps[0];\n            break;\n\n          case 4:\n            transferMapRed = transferMaps[0];\n            transferMapGreen = transferMaps[1];\n            transferMapBlue = transferMaps[2];\n            transferMapGray = transferMaps[3];\n            break;\n        }\n      }\n\n      if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n        const srcLength = src.byteLength;\n        const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n        const dest32DataLength = dest32.length;\n        const fullSrcDiff = width + 7 >> 3;\n        let white = 0xffffffff;\n        let black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n        if (transferMapGray) {\n          if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n            [white, black] = [black, white];\n          }\n        }\n\n        for (i = 0; i < totalChunks; i++) {\n          thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n          destPos = 0;\n\n          for (j = 0; j < thisChunkHeight; j++) {\n            const srcDiff = srcLength - srcPos;\n            let k = 0;\n            const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n            const kEndUnrolled = kEnd & ~7;\n            let mask = 0;\n            let srcByte = 0;\n\n            for (; k < kEndUnrolled; k += 8) {\n              srcByte = src[srcPos++];\n              dest32[destPos++] = srcByte & 128 ? white : black;\n              dest32[destPos++] = srcByte & 64 ? white : black;\n              dest32[destPos++] = srcByte & 32 ? white : black;\n              dest32[destPos++] = srcByte & 16 ? white : black;\n              dest32[destPos++] = srcByte & 8 ? white : black;\n              dest32[destPos++] = srcByte & 4 ? white : black;\n              dest32[destPos++] = srcByte & 2 ? white : black;\n              dest32[destPos++] = srcByte & 1 ? white : black;\n            }\n\n            for (; k < kEnd; k++) {\n              if (mask === 0) {\n                srcByte = src[srcPos++];\n                mask = 128;\n              }\n\n              dest32[destPos++] = srcByte & mask ? white : black;\n              mask >>= 1;\n            }\n          }\n\n          while (destPos < dest32DataLength) {\n            dest32[destPos++] = 0;\n          }\n\n          ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n        }\n      } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n        const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n        j = 0;\n        elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n\n        for (i = 0; i < fullChunks; i++) {\n          dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n          srcPos += elemsInThisChunk;\n\n          if (hasTransferMaps) {\n            for (let k = 0; k < elemsInThisChunk; k += 4) {\n              if (transferMapRed) {\n                dest[k + 0] = transferMapRed[dest[k + 0]];\n              }\n\n              if (transferMapGreen) {\n                dest[k + 1] = transferMapGreen[dest[k + 1]];\n              }\n\n              if (transferMapBlue) {\n                dest[k + 2] = transferMapBlue[dest[k + 2]];\n              }\n            }\n          }\n\n          ctx.putImageData(chunkImgData, 0, j);\n          j += FULL_CHUNK_HEIGHT;\n        }\n\n        if (i < totalChunks) {\n          elemsInThisChunk = width * partialChunkHeight * 4;\n          dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n          if (hasTransferMaps) {\n            for (let k = 0; k < elemsInThisChunk; k += 4) {\n              if (transferMapRed) {\n                dest[k + 0] = transferMapRed[dest[k + 0]];\n              }\n\n              if (transferMapGreen) {\n                dest[k + 1] = transferMapGreen[dest[k + 1]];\n              }\n\n              if (transferMapBlue) {\n                dest[k + 2] = transferMapBlue[dest[k + 2]];\n              }\n            }\n          }\n\n          ctx.putImageData(chunkImgData, 0, j);\n        }\n      } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n        const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n        thisChunkHeight = FULL_CHUNK_HEIGHT;\n        elemsInThisChunk = width * thisChunkHeight;\n\n        for (i = 0; i < totalChunks; i++) {\n          if (i >= fullChunks) {\n            thisChunkHeight = partialChunkHeight;\n            elemsInThisChunk = width * thisChunkHeight;\n          }\n\n          destPos = 0;\n\n          for (j = elemsInThisChunk; j--;) {\n            dest[destPos++] = src[srcPos++];\n            dest[destPos++] = src[srcPos++];\n            dest[destPos++] = src[srcPos++];\n            dest[destPos++] = 255;\n          }\n\n          if (hasTransferMaps) {\n            for (let k = 0; k < destPos; k += 4) {\n              if (transferMapRed) {\n                dest[k + 0] = transferMapRed[dest[k + 0]];\n              }\n\n              if (transferMapGreen) {\n                dest[k + 1] = transferMapGreen[dest[k + 1]];\n              }\n\n              if (transferMapBlue) {\n                dest[k + 2] = transferMapBlue[dest[k + 2]];\n              }\n            }\n          }\n\n          ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n        }\n      } else {\n        throw new Error(`bad image kind: ${imgData.kind}`);\n      }\n    }\n\n    function putBinaryImageMask(ctx, imgData) {\n      const height = imgData.height,\n            width = imgData.width;\n      const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n      const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n      const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n      const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n      let srcPos = 0;\n      const src = imgData.data;\n      const dest = chunkImgData.data;\n\n      for (let i = 0; i < totalChunks; i++) {\n        const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        let destPos = 3;\n\n        for (let j = 0; j < thisChunkHeight; j++) {\n          let elem,\n              mask = 0;\n\n          for (let k = 0; k < width; k++) {\n            if (!mask) {\n              elem = src[srcPos++];\n              mask = 128;\n            }\n\n            dest[destPos] = elem & mask ? 0 : 255;\n            destPos += 4;\n            mask >>= 1;\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    }\n\n    function copyCtxState(sourceCtx, destCtx) {\n      const properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n\n      for (let i = 0, ii = properties.length; i < ii; i++) {\n        const property = properties[i];\n\n        if (sourceCtx[property] !== undefined) {\n          destCtx[property] = sourceCtx[property];\n        }\n      }\n\n      if (sourceCtx.setLineDash !== undefined) {\n        destCtx.setLineDash(sourceCtx.getLineDash());\n        destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n      }\n    }\n\n    function resetCtxToDefault(ctx) {\n      ctx.strokeStyle = \"#000000\";\n      ctx.fillStyle = \"#000000\";\n      ctx.fillRule = \"nonzero\";\n      ctx.globalAlpha = 1;\n      ctx.lineWidth = 1;\n      ctx.lineCap = \"butt\";\n      ctx.lineJoin = \"miter\";\n      ctx.miterLimit = 10;\n      ctx.globalCompositeOperation = \"source-over\";\n      ctx.font = \"10px sans-serif\";\n\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash([]);\n        ctx.lineDashOffset = 0;\n      }\n    }\n\n    function composeSMaskBackdrop(bytes, r0, g0, b0) {\n      const length = bytes.length;\n\n      for (let i = 3; i < length; i += 4) {\n        const alpha = bytes[i];\n\n        if (alpha === 0) {\n          bytes[i - 3] = r0;\n          bytes[i - 2] = g0;\n          bytes[i - 1] = b0;\n        } else if (alpha < 255) {\n          const alpha_ = 255 - alpha;\n          bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n          bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n          bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n        }\n      }\n    }\n\n    function composeSMaskAlpha(maskData, layerData, transferMap) {\n      const length = maskData.length;\n      const scale = 1 / 255;\n\n      for (let i = 3; i < length; i += 4) {\n        const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n        layerData[i] = layerData[i] * alpha * scale | 0;\n      }\n    }\n\n    function composeSMaskLuminosity(maskData, layerData, transferMap) {\n      const length = maskData.length;\n\n      for (let i = 3; i < length; i += 4) {\n        const y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n        layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n      }\n    }\n\n    function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\n      const hasBackdrop = !!backdrop;\n      const r0 = hasBackdrop ? backdrop[0] : 0;\n      const g0 = hasBackdrop ? backdrop[1] : 0;\n      const b0 = hasBackdrop ? backdrop[2] : 0;\n      let composeFn;\n\n      if (subtype === \"Luminosity\") {\n        composeFn = composeSMaskLuminosity;\n      } else {\n        composeFn = composeSMaskAlpha;\n      }\n\n      const PIXELS_TO_PROCESS = 1048576;\n      const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n\n      for (let row = 0; row < height; row += chunkSize) {\n        const chunkHeight = Math.min(chunkSize, height - row);\n        const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n        const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n        if (hasBackdrop) {\n          composeSMaskBackdrop(maskData.data, r0, g0, b0);\n        }\n\n        composeFn(maskData.data, layerData.data, transferMap);\n        maskCtx.putImageData(layerData, 0, row);\n      }\n    }\n\n    function composeSMask(ctx, smask, layerCtx, webGLContext) {\n      const mask = smask.canvas;\n      const maskCtx = smask.context;\n      ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\n      const backdrop = smask.backdrop || null;\n\n      if (!smask.transferMap && webGLContext.isEnabled) {\n        const composed = webGLContext.composeSMask({\n          layer: layerCtx.canvas,\n          mask,\n          properties: {\n            subtype: smask.subtype,\n            backdrop\n          }\n        });\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n        return;\n      }\n\n      genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);\n      ctx.drawImage(mask, 0, 0);\n    }\n\n    const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n    const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n    const NORMAL_CLIP = {};\n    const EO_CLIP = {};\n    CanvasGraphics.prototype = {\n      beginDrawing({\n        transform,\n        viewport,\n        transparency = false,\n        background = null\n      }) {\n        const width = this.ctx.canvas.width;\n        const height = this.ctx.canvas.height;\n        this.ctx.save();\n        this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.restore();\n\n        if (transparency) {\n          const transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n          this.compositeCtx = this.ctx;\n          this.transparentCanvas = transparentCanvas.canvas;\n          this.ctx = transparentCanvas.context;\n          this.ctx.save();\n          this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n        }\n\n        this.ctx.save();\n        resetCtxToDefault(this.ctx);\n\n        if (transform) {\n          this.ctx.transform.apply(this.ctx, transform);\n        }\n\n        this.ctx.transform.apply(this.ctx, viewport.transform);\n        this.baseTransform = this.ctx.mozCurrentTransform.slice();\n        this._combinedScaleFactor = Math.hypot(this.baseTransform[0], this.baseTransform[2]);\n\n        if (this.imageLayer) {\n          this.imageLayer.beginLayout();\n        }\n      },\n\n      executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n        const argsArray = operatorList.argsArray;\n        const fnArray = operatorList.fnArray;\n        let i = executionStartIdx || 0;\n        const argsArrayLen = argsArray.length;\n\n        if (argsArrayLen === i) {\n          return i;\n        }\n\n        const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n        const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n        let steps = 0;\n        const commonObjs = this.commonObjs;\n        const objs = this.objs;\n        let fnId;\n\n        while (true) {\n          if (stepper !== undefined && i === stepper.nextBreakPoint) {\n            stepper.breakIt(i, continueCallback);\n            return i;\n          }\n\n          fnId = fnArray[i];\n\n          if (fnId !== _util.OPS.dependency) {\n            this[fnId].apply(this, argsArray[i]);\n          } else {\n            for (const depObjId of argsArray[i]) {\n              const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n              if (!objsPool.has(depObjId)) {\n                objsPool.get(depObjId, continueCallback);\n                return i;\n              }\n            }\n          }\n\n          i++;\n\n          if (i === argsArrayLen) {\n            return i;\n          }\n\n          if (chunkOperations && ++steps > EXECUTION_STEPS) {\n            if (Date.now() > endTime) {\n              continueCallback();\n              return i;\n            }\n\n            steps = 0;\n          }\n        }\n      },\n      endDrawing: function CanvasGraphics_endDrawing() {\n        while (this.stateStack.length || this.current.activeSMask !== null) {\n          this.restore();\n        }\n\n        this.ctx.restore();\n\n        if (this.transparentCanvas) {\n          this.ctx = this.compositeCtx;\n          this.ctx.save();\n          this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n          this.ctx.drawImage(this.transparentCanvas, 0, 0);\n          this.ctx.restore();\n          this.transparentCanvas = null;\n        }\n\n        this.cachedCanvases.clear();\n        this.webGLContext.clear();\n\n        if (this.imageLayer) {\n          this.imageLayer.endLayout();\n        }\n      },\n      setLineWidth: function CanvasGraphics_setLineWidth(width) {\n        this.current.lineWidth = width;\n        this.ctx.lineWidth = width;\n      },\n      setLineCap: function CanvasGraphics_setLineCap(style) {\n        this.ctx.lineCap = LINE_CAP_STYLES[style];\n      },\n      setLineJoin: function CanvasGraphics_setLineJoin(style) {\n        this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n      },\n      setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n        this.ctx.miterLimit = limit;\n      },\n      setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n        const ctx = this.ctx;\n\n        if (ctx.setLineDash !== undefined) {\n          ctx.setLineDash(dashArray);\n          ctx.lineDashOffset = dashPhase;\n        }\n      },\n\n      setRenderingIntent(intent) {},\n\n      setFlatness(flatness) {},\n\n      setGState: function CanvasGraphics_setGState(states) {\n        for (let i = 0, ii = states.length; i < ii; i++) {\n          const state = states[i];\n          const key = state[0];\n          const value = state[1];\n\n          switch (key) {\n            case \"LW\":\n              this.setLineWidth(value);\n              break;\n\n            case \"LC\":\n              this.setLineCap(value);\n              break;\n\n            case \"LJ\":\n              this.setLineJoin(value);\n              break;\n\n            case \"ML\":\n              this.setMiterLimit(value);\n              break;\n\n            case \"D\":\n              this.setDash(value[0], value[1]);\n              break;\n\n            case \"RI\":\n              this.setRenderingIntent(value);\n              break;\n\n            case \"FL\":\n              this.setFlatness(value);\n              break;\n\n            case \"Font\":\n              this.setFont(value[0], value[1]);\n              break;\n\n            case \"CA\":\n              this.current.strokeAlpha = state[1];\n              break;\n\n            case \"ca\":\n              this.current.fillAlpha = state[1];\n              this.ctx.globalAlpha = state[1];\n              break;\n\n            case \"BM\":\n              this.ctx.globalCompositeOperation = value;\n              break;\n\n            case \"SMask\":\n              if (this.current.activeSMask) {\n                if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\n                  this.suspendSMaskGroup();\n                } else {\n                  this.endSMaskGroup();\n                }\n              }\n\n              this.current.activeSMask = value ? this.tempSMask : null;\n\n              if (this.current.activeSMask) {\n                this.beginSMaskGroup();\n              }\n\n              this.tempSMask = null;\n              break;\n\n            case \"TR\":\n              this.current.transferMaps = value;\n          }\n        }\n      },\n      beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n        const activeSMask = this.current.activeSMask;\n        const drawnWidth = activeSMask.canvas.width;\n        const drawnHeight = activeSMask.canvas.height;\n        const cacheId = \"smaskGroupAt\" + this.groupLevel;\n        const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n        const currentCtx = this.ctx;\n        const currentTransform = currentCtx.mozCurrentTransform;\n        this.ctx.save();\n        const groupCtx = scratchCanvas.context;\n        groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n        groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n        groupCtx.transform.apply(groupCtx, currentTransform);\n        activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n        copyCtxState(currentCtx, groupCtx);\n        this.ctx = groupCtx;\n        this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n        this.groupStack.push(currentCtx);\n        this.groupLevel++;\n      },\n      suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n        const groupCtx = this.ctx;\n        this.groupLevel--;\n        this.ctx = this.groupStack.pop();\n        composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n        this.ctx.restore();\n        this.ctx.save();\n        copyCtxState(groupCtx, this.ctx);\n        this.current.resumeSMaskCtx = groupCtx;\n\n        const deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n        this.ctx.transform.apply(this.ctx, deltaTransform);\n        groupCtx.save();\n        groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n        groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n        groupCtx.restore();\n      },\n      resumeSMaskGroup: function CanvasGraphics_resumeSMaskGroup() {\n        const groupCtx = this.current.resumeSMaskCtx;\n        const currentCtx = this.ctx;\n        this.ctx = groupCtx;\n        this.groupStack.push(currentCtx);\n        this.groupLevel++;\n      },\n      endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n        const groupCtx = this.ctx;\n        this.groupLevel--;\n        this.ctx = this.groupStack.pop();\n        composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n        this.ctx.restore();\n        copyCtxState(groupCtx, this.ctx);\n\n        const deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n        this.ctx.transform.apply(this.ctx, deltaTransform);\n      },\n      save: function CanvasGraphics_save() {\n        this.ctx.save();\n        const old = this.current;\n        this.stateStack.push(old);\n        this.current = old.clone();\n        this.current.resumeSMaskCtx = null;\n      },\n      restore: function CanvasGraphics_restore() {\n        if (this.current.resumeSMaskCtx) {\n          this.resumeSMaskGroup();\n        }\n\n        if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\n          this.endSMaskGroup();\n        }\n\n        if (this.stateStack.length !== 0) {\n          this.current = this.stateStack.pop();\n          this.ctx.restore();\n          this.pendingClip = null;\n          this._cachedGetSinglePixelWidth = null;\n        } else {\n          this.current.activeSMask = null;\n        }\n      },\n      transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n        this.ctx.transform(a, b, c, d, e, f);\n        this._cachedGetSinglePixelWidth = null;\n      },\n      constructPath: function CanvasGraphics_constructPath(ops, args) {\n        const ctx = this.ctx;\n        const current = this.current;\n        let x = current.x,\n            y = current.y;\n\n        for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n          switch (ops[i] | 0) {\n            case _util.OPS.rectangle:\n              x = args[j++];\n              y = args[j++];\n              const width = args[j++];\n              const height = args[j++];\n              const xw = x + width;\n              const yh = y + height;\n              ctx.moveTo(x, y);\n\n              if (width === 0 || height === 0) {\n                ctx.lineTo(xw, yh);\n              } else {\n                ctx.lineTo(xw, y);\n                ctx.lineTo(xw, yh);\n                ctx.lineTo(x, yh);\n              }\n\n              ctx.closePath();\n              break;\n\n            case _util.OPS.moveTo:\n              x = args[j++];\n              y = args[j++];\n              ctx.moveTo(x, y);\n              break;\n\n            case _util.OPS.lineTo:\n              x = args[j++];\n              y = args[j++];\n              ctx.lineTo(x, y);\n              break;\n\n            case _util.OPS.curveTo:\n              x = args[j + 4];\n              y = args[j + 5];\n              ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n              j += 6;\n              break;\n\n            case _util.OPS.curveTo2:\n              ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n              x = args[j + 2];\n              y = args[j + 3];\n              j += 4;\n              break;\n\n            case _util.OPS.curveTo3:\n              x = args[j + 2];\n              y = args[j + 3];\n              ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n              j += 4;\n              break;\n\n            case _util.OPS.closePath:\n              ctx.closePath();\n              break;\n          }\n        }\n\n        current.setCurrentPoint(x, y);\n      },\n      closePath: function CanvasGraphics_closePath() {\n        this.ctx.closePath();\n      },\n      stroke: function CanvasGraphics_stroke(consumePath) {\n        consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n        const ctx = this.ctx;\n        const strokeColor = this.current.strokeColor;\n        ctx.globalAlpha = this.current.strokeAlpha;\n\n        if (this.contentVisible) {\n          if (typeof strokeColor === \"object\" && strokeColor && strokeColor.getPattern) { // lwf\n            ctx.save();\n            const transform = ctx.mozCurrentTransform;\n\n            const scale = _util.Util.singularValueDecompose2dScale(transform)[0];\n\n            ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n            const lineWidth = this.getSinglePixelWidth();\n            const scaledLineWidth = this.current.lineWidth * scale;\n\n            if (lineWidth < 0 && -lineWidth >= scaledLineWidth) {\n              ctx.resetTransform();\n              ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            } else {\n              ctx.lineWidth = Math.max(lineWidth, scaledLineWidth);\n            }\n\n            ctx.stroke();\n            ctx.restore();\n          } else {\n            const lineWidth = this.getSinglePixelWidth();\n\n            if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n              ctx.save();\n              ctx.resetTransform();\n              ctx.lineWidth = Math.round(this._combinedScaleFactor);\n              ctx.stroke();\n              ctx.restore();\n            } else {\n              ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n              ctx.stroke();\n            }\n          }\n        }\n\n        if (consumePath) {\n          this.consumePath();\n        }\n\n        ctx.globalAlpha = this.current.fillAlpha;\n      },\n      closeStroke: function CanvasGraphics_closeStroke() {\n        this.closePath();\n        this.stroke();\n      },\n      fill: function CanvasGraphics_fill(consumePath) {\n        consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n        const ctx = this.ctx;\n        const fillColor = this.current.fillColor;\n        const isPatternFill = this.current.patternFill;\n        let needRestore = false;\n\n        if (isPatternFill) {\n          ctx.save();\n\n          if (this.baseTransform) {\n            ctx.setTransform.apply(ctx, this.baseTransform);\n          }\n\n          ctx.fillStyle = fillColor.getPattern(ctx, this);\n          needRestore = true;\n        }\n\n        if (this.contentVisible) {\n          if (this.pendingEOFill) {\n            ctx.fill(\"evenodd\");\n            this.pendingEOFill = false;\n          } else {\n            ctx.fill();\n          }\n        }\n\n        if (needRestore) {\n          ctx.restore();\n        }\n\n        if (consumePath) {\n          this.consumePath();\n        }\n      },\n      eoFill: function CanvasGraphics_eoFill() {\n        this.pendingEOFill = true;\n        this.fill();\n      },\n      fillStroke: function CanvasGraphics_fillStroke() {\n        this.fill(false);\n        this.stroke(false);\n        this.consumePath();\n      },\n      eoFillStroke: function CanvasGraphics_eoFillStroke() {\n        this.pendingEOFill = true;\n        this.fillStroke();\n      },\n      closeFillStroke: function CanvasGraphics_closeFillStroke() {\n        this.closePath();\n        this.fillStroke();\n      },\n      closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n        this.pendingEOFill = true;\n        this.closePath();\n        this.fillStroke();\n      },\n      endPath: function CanvasGraphics_endPath() {\n        this.consumePath();\n      },\n      clip: function CanvasGraphics_clip() {\n        this.pendingClip = NORMAL_CLIP;\n      },\n      eoClip: function CanvasGraphics_eoClip() {\n        this.pendingClip = EO_CLIP;\n      },\n      beginText: function CanvasGraphics_beginText() {\n        this.current.textMatrix = _util.IDENTITY_MATRIX;\n        this.current.textMatrixScale = 1;\n        this.current.x = this.current.lineX = 0;\n        this.current.y = this.current.lineY = 0;\n      },\n      endText: function CanvasGraphics_endText() {\n        const paths = this.pendingTextPaths;\n        const ctx = this.ctx;\n\n        if (paths === undefined) {\n          ctx.beginPath();\n          return;\n        }\n\n        ctx.save();\n        ctx.beginPath();\n\n        for (let i = 0; i < paths.length; i++) {\n          const path = paths[i];\n          ctx.setTransform.apply(ctx, path.transform);\n          ctx.translate(path.x, path.y);\n          path.addToPath(ctx, path.fontSize);\n        }\n\n        ctx.restore();\n        ctx.clip();\n        ctx.beginPath();\n        delete this.pendingTextPaths;\n      },\n      setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n        this.current.charSpacing = spacing;\n      },\n      setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n        this.current.wordSpacing = spacing;\n      },\n      setHScale: function CanvasGraphics_setHScale(scale) {\n        this.current.textHScale = scale / 100;\n      },\n      setLeading: function CanvasGraphics_setLeading(leading) {\n        this.current.leading = -leading;\n      },\n      setFont: function CanvasGraphics_setFont(fontRefName, size) {\n        const fontObj = this.commonObjs.get(fontRefName);\n        const current = this.current;\n\n        if (!fontObj) {\n          throw new Error(`Can't find font for ${fontRefName}`);\n        }\n\n        current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n\n        if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n          (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n        }\n\n        if (size < 0) {\n          size = -size;\n          current.fontDirection = -1;\n        } else {\n          current.fontDirection = 1;\n        }\n\n        this.current.font = fontObj;\n        this.current.fontSize = size;\n\n        if (fontObj.isType3Font) {\n          return;\n        }\n\n        const name = fontObj.loadedName || \"sans-serif\";\n        let bold = \"normal\";\n\n        if (fontObj.black) {\n          bold = \"900\";\n        } else if (fontObj.bold) {\n          bold = \"bold\";\n        }\n\n        const italic = fontObj.italic ? \"italic\" : \"normal\";\n        const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n        let browserFontSize = size;\n\n        if (size < MIN_FONT_SIZE) {\n          browserFontSize = MIN_FONT_SIZE;\n        } else if (size > MAX_FONT_SIZE) {\n          browserFontSize = MAX_FONT_SIZE;\n        }\n\n        this.current.fontSizeScale = size / browserFontSize;\n        this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n      },\n      setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n        this.current.textRenderingMode = mode;\n      },\n      setTextRise: function CanvasGraphics_setTextRise(rise) {\n        this.current.textRise = rise;\n      },\n      moveText: function CanvasGraphics_moveText(x, y) {\n        this.current.x = this.current.lineX += x;\n        this.current.y = this.current.lineY += y;\n      },\n      setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n        this.setLeading(-y);\n        this.moveText(x, y);\n      },\n      setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n        this.current.textMatrix = [a, b, c, d, e, f];\n        this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n        this.current.x = this.current.lineX = 0;\n        this.current.y = this.current.lineY = 0;\n      },\n      nextLine: function CanvasGraphics_nextLine() {\n        this.moveText(0, this.current.leading);\n      },\n\n      paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n        const ctx = this.ctx;\n        const current = this.current;\n        const font = current.font;\n        const textRenderingMode = current.textRenderingMode;\n        const fontSize = current.fontSize / current.fontSizeScale;\n        const fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n        const isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n        const patternFill = current.patternFill && !font.missingFile;\n        let addToPath;\n\n        if (font.disableFontFace || isAddToPathSet || patternFill) {\n          addToPath = font.getPathGenerator(this.commonObjs, character);\n        }\n\n        if (font.disableFontFace || patternFill) {\n          ctx.save();\n          ctx.translate(x, y);\n          ctx.beginPath();\n          addToPath(ctx, fontSize);\n\n          if (patternTransform) {\n            ctx.setTransform.apply(ctx, patternTransform);\n          }\n\n          if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            ctx.fill();\n          }\n\n          if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            if (resetLineWidthToOne) {\n              ctx.resetTransform();\n              ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            }\n\n            ctx.stroke();\n          }\n\n          ctx.restore();\n        } else {\n          if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            ctx.fillText(character, x, y);\n          }\n\n          if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            if (resetLineWidthToOne) {\n              ctx.save();\n              ctx.moveTo(x, y);\n              ctx.resetTransform();\n              ctx.lineWidth = Math.round(this._combinedScaleFactor);\n              ctx.strokeText(character, 0, 0);\n              ctx.restore();\n            } else {\n              ctx.strokeText(character, x, y);\n            }\n          }\n        }\n\n        if (isAddToPathSet) {\n          const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n          paths.push({\n            transform: ctx.mozCurrentTransform,\n            x,\n            y,\n            fontSize,\n            addToPath\n          });\n        }\n      },\n\n      get isFontSubpixelAAEnabled() {\n        const {\n          context: ctx\n        } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n        ctx.scale(1.5, 1);\n        ctx.fillText(\"I\", 0, 10);\n        const data = ctx.getImageData(0, 0, 10, 10).data;\n        let enabled = false;\n\n        for (let i = 3; i < data.length; i += 4) {\n          if (data[i] > 0 && data[i] < 255) {\n            enabled = true;\n            break;\n          }\n        }\n\n        return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n      },\n\n      showText: function CanvasGraphics_showText(glyphs) {\n        const current = this.current;\n        const font = current.font;\n\n        if (font.isType3Font) {\n          return this.showType3Text(glyphs);\n        }\n\n        const fontSize = current.fontSize;\n\n        if (fontSize === 0) {\n          return undefined;\n        }\n\n        const ctx = this.ctx;\n        const fontSizeScale = current.fontSizeScale;\n        const charSpacing = current.charSpacing;\n        const wordSpacing = current.wordSpacing;\n        const fontDirection = current.fontDirection;\n        const textHScale = current.textHScale * fontDirection;\n        const glyphsLength = glyphs.length;\n        const vertical = font.vertical;\n        const spacingDir = vertical ? 1 : -1;\n        const defaultVMetrics = font.defaultVMetrics;\n        const widthAdvanceScale = fontSize * current.fontMatrix[0];\n        const simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n        ctx.save();\n        let patternTransform;\n\n        if (current.patternFill) {\n          ctx.save();\n          const pattern = current.fillColor.getPattern(ctx, this);\n          patternTransform = ctx.mozCurrentTransform;\n          ctx.restore();\n          ctx.fillStyle = pattern;\n        }\n\n        ctx.transform.apply(ctx, current.textMatrix);\n        ctx.translate(current.x, current.y + current.textRise);\n\n        if (fontDirection > 0) {\n          ctx.scale(textHScale, -1);\n        } else {\n          ctx.scale(textHScale, 1);\n        }\n\n        let lineWidth = current.lineWidth;\n        let resetLineWidthToOne = false;\n        const scale = current.textMatrixScale;\n\n        if (scale === 0 || lineWidth === 0) {\n          const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n          if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            this._cachedGetSinglePixelWidth = null;\n            lineWidth = this.getSinglePixelWidth();\n            resetLineWidthToOne = lineWidth < 0;\n          }\n        } else {\n          lineWidth /= scale;\n        }\n\n        if (fontSizeScale !== 1.0) {\n          ctx.scale(fontSizeScale, fontSizeScale);\n          lineWidth /= fontSizeScale;\n        }\n\n        ctx.lineWidth = lineWidth;\n        let x = 0,\n            i;\n\n        for (i = 0; i < glyphsLength; ++i) {\n          const glyph = glyphs[i];\n\n          if ((0, _util.isNum)(glyph)) {\n            x += spacingDir * glyph * fontSize / 1000;\n            continue;\n          }\n\n          let restoreNeeded = false;\n          const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n          const character = glyph.fontChar;\n          const accent = glyph.accent;\n          let scaledX, scaledY;\n          let width = glyph.width;\n\n          if (vertical) {\n            const vmetric = glyph.vmetric || defaultVMetrics;\n            const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n            const vy = vmetric[2] * widthAdvanceScale;\n            width = vmetric ? -vmetric[0] : width;\n            scaledX = vx / fontSizeScale;\n            scaledY = (x + vy) / fontSizeScale;\n          } else {\n            scaledX = x / fontSizeScale;\n            scaledY = 0;\n          }\n\n          if (font.remeasure && width > 0) {\n            const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n\n            if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n              const characterScaleX = width / measuredWidth;\n              restoreNeeded = true;\n              ctx.save();\n              ctx.scale(characterScaleX, 1);\n              scaledX /= characterScaleX;\n            } else if (width !== measuredWidth) {\n              scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n            }\n          }\n\n          if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n            if (simpleFillText && !accent) {\n              ctx.fillText(character, scaledX, scaledY);\n            } else {\n              this.paintChar(character, scaledX, scaledY, patternTransform, resetLineWidthToOne);\n\n              if (accent) {\n                const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n                const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n                this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform, resetLineWidthToOne);\n              }\n            }\n          }\n\n          let charWidth;\n\n          if (vertical) {\n            charWidth = width * widthAdvanceScale - spacing * fontDirection;\n          } else {\n            charWidth = width * widthAdvanceScale + spacing * fontDirection;\n          }\n\n          x += charWidth;\n\n          if (restoreNeeded) {\n            ctx.restore();\n          }\n        }\n\n        if (vertical) {\n          current.y -= x;\n        } else {\n          current.x += x * textHScale;\n        }\n\n        ctx.restore();\n      },\n      showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n        const ctx = this.ctx;\n        const current = this.current;\n        const font = current.font;\n        const fontSize = current.fontSize;\n        const fontDirection = current.fontDirection;\n        const spacingDir = font.vertical ? 1 : -1;\n        const charSpacing = current.charSpacing;\n        const wordSpacing = current.wordSpacing;\n        const textHScale = current.textHScale * fontDirection;\n        const fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        const glyphsLength = glyphs.length;\n        const isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n        let i, glyph, width, spacingLength;\n\n        if (isTextInvisible || fontSize === 0) {\n          return;\n        }\n\n        this._cachedGetSinglePixelWidth = null;\n        ctx.save();\n        ctx.transform.apply(ctx, current.textMatrix);\n        ctx.translate(current.x, current.y);\n        ctx.scale(textHScale, fontDirection);\n\n        for (i = 0; i < glyphsLength; ++i) {\n          glyph = glyphs[i];\n\n          if ((0, _util.isNum)(glyph)) {\n            spacingLength = spacingDir * glyph * fontSize / 1000;\n            this.ctx.translate(spacingLength, 0);\n            current.x += spacingLength * textHScale;\n            continue;\n          }\n\n          const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n          const operatorList = font.charProcOperatorList[glyph.operatorListId];\n\n          if (!operatorList) {\n            (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n            continue;\n          }\n\n          if (this.contentVisible) {\n            this.processingType3 = glyph;\n            this.save();\n            ctx.scale(fontSize, fontSize);\n            ctx.transform.apply(ctx, fontMatrix);\n            this.executeOperatorList(operatorList);\n            this.restore();\n          }\n\n          const transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n\n          width = transformed[0] * fontSize + spacing;\n          ctx.translate(width, 0);\n          current.x += width * textHScale;\n        }\n\n        ctx.restore();\n        this.processingType3 = null;\n      },\n      setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {},\n      setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n        this.ctx.rect(llx, lly, urx - llx, ury - lly);\n        this.clip();\n        this.endPath();\n      },\n      getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n        let pattern;\n\n        if (IR[0] === \"TilingPattern\") {\n          const color = IR[1];\n          const baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n          const canvasGraphicsFactory = {\n            createCanvasGraphics: ctx => {\n              return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext);\n            }\n          };\n          pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n        } else {\n          pattern = (0, _pattern_helper.getShadingPatternFromIR)(IR);\n        }\n\n        return pattern;\n      },\n      setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n        this.current.strokeColor = this.getColorN_Pattern(arguments);\n      },\n      setFillColorN: function CanvasGraphics_setFillColorN() {\n        this.current.fillColor = this.getColorN_Pattern(arguments);\n        this.current.patternFill = true;\n      },\n      setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n        const color = _util.Util.makeHexColor(r, g, b);\n\n        this.ctx.strokeStyle = color;\n        this.current.strokeColor = color;\n      },\n      setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n        const color = _util.Util.makeHexColor(r, g, b);\n\n        this.ctx.fillStyle = color;\n        this.current.fillColor = color;\n        this.current.patternFill = false;\n      },\n      shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const ctx = this.ctx;\n        this.save();\n        const pattern = (0, _pattern_helper.getShadingPatternFromIR)(patternIR);\n        ctx.fillStyle = pattern.getPattern(ctx, this, true);\n        const inv = ctx.mozCurrentTransformInverse;\n\n        if (inv) {\n          const canvas = ctx.canvas;\n          const width = canvas.width;\n          const height = canvas.height;\n\n          const bl = _util.Util.applyTransform([0, 0], inv);\n\n          const br = _util.Util.applyTransform([0, height], inv);\n\n          const ul = _util.Util.applyTransform([width, 0], inv);\n\n          const ur = _util.Util.applyTransform([width, height], inv);\n\n          const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n          const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n          const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n          const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n          this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n        } else {\n          this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n        }\n\n        this.restore();\n      },\n      beginInlineImage: function CanvasGraphics_beginInlineImage() {\n        (0, _util.unreachable)(\"Should not call beginInlineImage\");\n      },\n      beginImageData: function CanvasGraphics_beginImageData() {\n        (0, _util.unreachable)(\"Should not call beginImageData\");\n      },\n      paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        this.save();\n        this.baseTransformStack.push(this.baseTransform);\n\n        if (Array.isArray(matrix) && matrix.length === 6) {\n          this.transform.apply(this, matrix);\n        }\n\n        this.baseTransform = this.ctx.mozCurrentTransform;\n\n        if (bbox) {\n          const width = bbox[2] - bbox[0];\n          const height = bbox[3] - bbox[1];\n          this.ctx.rect(bbox[0], bbox[1], width, height);\n          this.clip();\n          this.endPath();\n        }\n      },\n      paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        this.restore();\n        this.baseTransform = this.baseTransformStack.pop();\n      },\n      beginGroup: function CanvasGraphics_beginGroup(group) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        this.save();\n        const currentCtx = this.ctx;\n\n        if (!group.isolated) {\n          (0, _util.info)(\"TODO: Support non-isolated groups.\");\n        }\n\n        if (group.knockout) {\n          (0, _util.warn)(\"Knockout groups not supported.\");\n        }\n\n        const currentTransform = currentCtx.mozCurrentTransform;\n\n        if (group.matrix) {\n          currentCtx.transform.apply(currentCtx, group.matrix);\n        }\n\n        if (!group.bbox) {\n          throw new Error(\"Bounding box is required.\");\n        }\n\n        let bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n\n        const canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n        bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n        const offsetX = Math.floor(bounds[0]);\n        const offsetY = Math.floor(bounds[1]);\n        let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n        let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n        let scaleX = 1,\n            scaleY = 1;\n\n        if (drawnWidth > MAX_GROUP_SIZE) {\n          scaleX = drawnWidth / MAX_GROUP_SIZE;\n          drawnWidth = MAX_GROUP_SIZE;\n        }\n\n        if (drawnHeight > MAX_GROUP_SIZE) {\n          scaleY = drawnHeight / MAX_GROUP_SIZE;\n          drawnHeight = MAX_GROUP_SIZE;\n        }\n\n        let cacheId = \"groupAt\" + this.groupLevel;\n\n        if (group.smask) {\n          cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n        }\n\n        const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n        const groupCtx = scratchCanvas.context;\n        groupCtx.scale(1 / scaleX, 1 / scaleY);\n        groupCtx.translate(-offsetX, -offsetY);\n        groupCtx.transform.apply(groupCtx, currentTransform);\n\n        if (group.smask) {\n          this.smaskStack.push({\n            canvas: scratchCanvas.canvas,\n            context: groupCtx,\n            offsetX,\n            offsetY,\n            scaleX,\n            scaleY,\n            subtype: group.smask.subtype,\n            backdrop: group.smask.backdrop,\n            transferMap: group.smask.transferMap || null,\n            startTransformInverse: null\n          });\n        } else {\n          currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n          currentCtx.translate(offsetX, offsetY);\n          currentCtx.scale(scaleX, scaleY);\n        }\n\n        copyCtxState(currentCtx, groupCtx);\n        this.ctx = groupCtx;\n        this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n        this.groupStack.push(currentCtx);\n        this.groupLevel++;\n        this.current.activeSMask = null;\n      },\n      endGroup: function CanvasGraphics_endGroup(group) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        this.groupLevel--;\n        const groupCtx = this.ctx;\n        this.ctx = this.groupStack.pop();\n\n        if (this.ctx.imageSmoothingEnabled !== undefined) {\n          this.ctx.imageSmoothingEnabled = false;\n        } else {\n          this.ctx.mozImageSmoothingEnabled = false;\n        }\n\n        if (group.smask) {\n          this.tempSMask = this.smaskStack.pop();\n        } else {\n          this.ctx.drawImage(groupCtx.canvas, 0, 0);\n        }\n\n        this.restore();\n      },\n      beginAnnotations: function CanvasGraphics_beginAnnotations() {\n        this.save();\n\n        if (this.baseTransform) {\n          this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n        }\n      },\n      endAnnotations: function CanvasGraphics_endAnnotations() {\n        this.restore();\n      },\n      beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {\n        this.save();\n        resetCtxToDefault(this.ctx);\n        this.current = new CanvasExtraState();\n\n        if (Array.isArray(rect) && rect.length === 4) {\n          const width = rect[2] - rect[0];\n          const height = rect[3] - rect[1];\n          this.ctx.rect(rect[0], rect[1], width, height);\n          this.clip();\n          this.endPath();\n        }\n\n        this.transform.apply(this, transform);\n        this.transform.apply(this, matrix);\n      },\n      endAnnotation: function CanvasGraphics_endAnnotation() {\n        this.restore();\n      },\n      paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const ctx = this.ctx;\n        const width = img.width,\n              height = img.height;\n        const fillColor = this.current.fillColor;\n        const isPatternFill = this.current.patternFill;\n        const glyph = this.processingType3;\n\n        if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n          if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n            glyph.compiled = compileType3Glyph({\n              data: img.data,\n              width,\n              height\n            });\n          } else {\n            glyph.compiled = null;\n          }\n        }\n\n        if (glyph && glyph.compiled) { // lwf\n          glyph.compiled(ctx);\n          return;\n        }\n\n        const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n        const maskCtx = maskCanvas.context;\n        maskCtx.save();\n        putBinaryImageMask(maskCtx, img);\n        maskCtx.globalCompositeOperation = \"source-in\";\n        maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n        maskCtx.restore();\n        this.paintInlineImageXObject(maskCanvas.canvas);\n      },\n\n      paintImageMaskXObjectRepeat(imgData, scaleX, skewX = 0, skewY = 0, scaleY, positions) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const width = imgData.width;\n        const height = imgData.height;\n        const fillColor = this.current.fillColor;\n        const isPatternFill = this.current.patternFill;\n        const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n        const maskCtx = maskCanvas.context;\n        maskCtx.save();\n        putBinaryImageMask(maskCtx, imgData);\n        maskCtx.globalCompositeOperation = \"source-in\";\n        maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n        maskCtx.restore();\n        const ctx = this.ctx;\n\n        for (let i = 0, ii = positions.length; i < ii; i += 2) {\n          ctx.save();\n          ctx.transform(scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]);\n          ctx.scale(1, -1);\n          ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n          ctx.restore();\n        }\n      },\n\n      paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const ctx = this.ctx;\n        const fillColor = this.current.fillColor;\n        const isPatternFill = this.current.patternFill;\n\n        for (let i = 0, ii = images.length; i < ii; i++) {\n          const image = images[i];\n          const width = image.width,\n                height = image.height;\n          const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n          const maskCtx = maskCanvas.context;\n          maskCtx.save();\n          putBinaryImageMask(maskCtx, image);\n          maskCtx.globalCompositeOperation = \"source-in\";\n          maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n          maskCtx.fillRect(0, 0, width, height);\n          maskCtx.restore();\n          ctx.save();\n          ctx.transform.apply(ctx, image.transform);\n          ctx.scale(1, -1);\n          ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n          ctx.restore();\n        }\n      },\n      paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n        if (!imgData) {\n          (0, _util.warn)(\"Dependent image isn't ready yet\");\n          return;\n        }\n\n        this.paintInlineImageXObject(imgData);\n      },\n      paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n        if (!imgData) {\n          (0, _util.warn)(\"Dependent image isn't ready yet\");\n          return;\n        }\n\n        const width = imgData.width;\n        const height = imgData.height;\n        const map = [];\n\n        for (let i = 0, ii = positions.length; i < ii; i += 2) {\n          map.push({\n            transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n            x: 0,\n            y: 0,\n            w: width,\n            h: height\n          });\n        }\n\n        this.paintInlineImageXObjectGroup(imgData, map);\n      },\n      paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const width = imgData.width;\n        const height = imgData.height;\n        const ctx = this.ctx;\n        this.save();\n        ctx.scale(1 / width, -1 / height);\n        const currentTransform = ctx.mozCurrentTransformInverse;\n        const a = currentTransform[0],\n              b = currentTransform[1];\n        let widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n        const c = currentTransform[2],\n              d = currentTransform[3];\n        let heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n        let imgToPaint, tmpCanvas, tmpCtx;\n\n        if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n          imgToPaint = imgData;\n        } else {\n          tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n          tmpCtx = tmpCanvas.context;\n          putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n          imgToPaint = tmpCanvas.canvas;\n        }\n\n        let paintWidth = width,\n            paintHeight = height;\n        let tmpCanvasId = \"prescale1\";\n\n        while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n          let newWidth = paintWidth,\n              newHeight = paintHeight;\n\n          if (widthScale > 2 && paintWidth > 1) {\n            newWidth = Math.ceil(paintWidth / 2);\n            widthScale /= paintWidth / newWidth;\n          }\n\n          if (heightScale > 2 && paintHeight > 1) {\n            newHeight = Math.ceil(paintHeight / 2);\n            heightScale /= paintHeight / newHeight;\n          }\n\n          tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n          tmpCtx = tmpCanvas.context;\n          tmpCtx.clearRect(0, 0, newWidth, newHeight);\n          tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n          imgToPaint = tmpCanvas.canvas;\n          paintWidth = newWidth;\n          paintHeight = newHeight;\n          tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n        }\n\n        ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);\n\n        if (this.imageLayer) {\n          const position = this.getCanvasPosition(0, -height);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: width / currentTransform[0],\n            height: height / currentTransform[3]\n          });\n        }\n\n        this.restore();\n      },\n      paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const ctx = this.ctx;\n        const w = imgData.width;\n        const h = imgData.height;\n        const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n        const tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n        for (let i = 0, ii = map.length; i < ii; i++) {\n          const entry = map[i];\n          ctx.save();\n          ctx.transform.apply(ctx, entry.transform);\n          ctx.scale(1, -1);\n          ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n\n          if (this.imageLayer) {\n            const position = this.getCanvasPosition(entry.x, entry.y);\n            this.imageLayer.appendImage({\n              imgData,\n              left: position[0],\n              top: position[1],\n              width: w,\n              height: h\n            });\n          }\n\n          ctx.restore();\n        }\n      },\n      paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        this.ctx.fillRect(0, 0, 1, 1);\n      },\n      markPoint: function CanvasGraphics_markPoint(tag) {},\n      markPointProps: function CanvasGraphics_markPointProps(tag, properties) {},\n      beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n        this.markedContentStack.push({\n          visible: true\n        });\n      },\n      beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {\n        if (tag === \"OC\") {\n          this.markedContentStack.push({\n            visible: this.optionalContentConfig.isVisible(properties)\n          });\n        } else {\n          this.markedContentStack.push({\n            visible: true\n          });\n        }\n\n        this.contentVisible = this.isContentVisible();\n      },\n      endMarkedContent: function CanvasGraphics_endMarkedContent() {\n        this.markedContentStack.pop();\n        this.contentVisible = this.isContentVisible();\n      },\n      beginCompat: function CanvasGraphics_beginCompat() {},\n      endCompat: function CanvasGraphics_endCompat() {},\n      consumePath: function CanvasGraphics_consumePath() {\n        const ctx = this.ctx;\n\n        if (this.pendingClip) {\n          if (this.pendingClip === EO_CLIP) {\n            ctx.clip(\"evenodd\");\n          } else {\n            ctx.clip();\n          }\n\n          this.pendingClip = null;\n        }\n\n        ctx.beginPath();\n      },\n\n      getSinglePixelWidth() {\n        if (this._cachedGetSinglePixelWidth === null) {\n          const m = this.ctx.mozCurrentTransform;\n          const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n          const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n          const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n          const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n\n          if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n            this._cachedGetSinglePixelWidth = -(this._combinedScaleFactor * pixelHeight);\n          } else if (absDet > Number.EPSILON) {\n            this._cachedGetSinglePixelWidth = pixelHeight * 1.0000001;\n          } else {\n            this._cachedGetSinglePixelWidth = 1;\n          }\n        }\n\n        return this._cachedGetSinglePixelWidth;\n      },\n\n      getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n        const transform = this.ctx.mozCurrentTransform;\n        return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n      },\n      isContentVisible: function CanvasGraphics_isContentVisible() {\n        for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n          if (!this.markedContentStack[i].visible) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    };\n\n    for (const op in _util.OPS) {\n      CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n    }\n\n    return CanvasGraphics;\n  }();\n\n  exports.CanvasGraphics = CanvasGraphics;\n\n  /***/ }),\n  /* 11 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.getShadingPatternFromIR = getShadingPatternFromIR;\n  exports.TilingPattern = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  const ShadingIRs = {};\n\n  function applyBoundingBox(ctx, bbox) {\n    if (!bbox || typeof Path2D === \"undefined\") {\n      return;\n    }\n\n    const width = bbox[2] - bbox[0];\n    const height = bbox[3] - bbox[1];\n    const region = new Path2D();\n    region.rect(bbox[0], bbox[1], width, height);\n    ctx.clip(region);\n  }\n\n  ShadingIRs.RadialAxial = {\n    fromIR: function RadialAxial_fromIR(raw) {\n      const type = raw[1];\n      const bbox = raw[2];\n      const colorStops = raw[3];\n      const p0 = raw[4];\n      const p1 = raw[5];\n      const r0 = raw[6];\n      const r1 = raw[7];\n      return {\n        getPattern: function RadialAxial_getPattern(ctx) {\n          applyBoundingBox(ctx, bbox);\n          let grad;\n\n          if (type === \"axial\") {\n            grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n          } else if (type === \"radial\") {\n            grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n          }\n\n          for (let i = 0, ii = colorStops.length; i < ii; ++i) {\n            const c = colorStops[i];\n            grad.addColorStop(c[0], c[1]);\n          }\n\n          return grad;\n        }\n      };\n    }\n  };\n\n  const createMeshCanvas = function createMeshCanvasClosure() {\n    function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n      const coords = context.coords,\n            colors = context.colors;\n      const bytes = data.data,\n            rowSize = data.width * 4;\n      let tmp;\n\n      if (coords[p1 + 1] > coords[p2 + 1]) {\n        tmp = p1;\n        p1 = p2;\n        p2 = tmp;\n        tmp = c1;\n        c1 = c2;\n        c2 = tmp;\n      }\n\n      if (coords[p2 + 1] > coords[p3 + 1]) {\n        tmp = p2;\n        p2 = p3;\n        p3 = tmp;\n        tmp = c2;\n        c2 = c3;\n        c3 = tmp;\n      }\n\n      if (coords[p1 + 1] > coords[p2 + 1]) {\n        tmp = p1;\n        p1 = p2;\n        p2 = tmp;\n        tmp = c1;\n        c1 = c2;\n        c2 = tmp;\n      }\n\n      const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n      const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n      const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n      const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n      const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n      const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n\n      if (y1 >= y3) {\n        return;\n      }\n\n      const c1r = colors[c1],\n            c1g = colors[c1 + 1],\n            c1b = colors[c1 + 2];\n      const c2r = colors[c2],\n            c2g = colors[c2 + 1],\n            c2b = colors[c2 + 2];\n      const c3r = colors[c3],\n            c3g = colors[c3 + 1],\n            c3b = colors[c3 + 2];\n      const minY = Math.round(y1),\n            maxY = Math.round(y3);\n      let xa, car, cag, cab;\n      let xb, cbr, cbg, cbb;\n\n      for (let y = minY; y <= maxY; y++) {\n        if (y < y2) {\n          let k;\n\n          if (y < y1) {\n            k = 0;\n          } else if (y1 === y2) {\n            k = 1;\n          } else {\n            k = (y1 - y) / (y1 - y2);\n          }\n\n          xa = x1 - (x1 - x2) * k;\n          car = c1r - (c1r - c2r) * k;\n          cag = c1g - (c1g - c2g) * k;\n          cab = c1b - (c1b - c2b) * k;\n        } else {\n          let k;\n\n          if (y > y3) {\n            k = 1;\n          } else if (y2 === y3) {\n            k = 0;\n          } else {\n            k = (y2 - y) / (y2 - y3);\n          }\n\n          xa = x2 - (x2 - x3) * k;\n          car = c2r - (c2r - c3r) * k;\n          cag = c2g - (c2g - c3g) * k;\n          cab = c2b - (c2b - c3b) * k;\n        }\n\n        let k;\n\n        if (y < y1) {\n          k = 0;\n        } else if (y > y3) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y3);\n        }\n\n        xb = x1 - (x1 - x3) * k;\n        cbr = c1r - (c1r - c3r) * k;\n        cbg = c1g - (c1g - c3g) * k;\n        cbb = c1b - (c1b - c3b) * k;\n        const x1_ = Math.round(Math.min(xa, xb));\n        const x2_ = Math.round(Math.max(xa, xb));\n        let j = rowSize * y + x1_ * 4;\n\n        for (let x = x1_; x <= x2_; x++) {\n          k = (xa - x) / (xa - xb);\n\n          if (k < 0) {\n            k = 0;\n          } else if (k > 1) {\n            k = 1;\n          }\n\n          bytes[j++] = car - (car - cbr) * k | 0;\n          bytes[j++] = cag - (cag - cbg) * k | 0;\n          bytes[j++] = cab - (cab - cbb) * k | 0;\n          bytes[j++] = 255;\n        }\n      }\n    }\n\n    function drawFigure(data, figure, context) {\n      const ps = figure.coords;\n      const cs = figure.colors;\n      let i, ii;\n\n      switch (figure.type) {\n        case \"lattice\":\n          const verticesPerRow = figure.verticesPerRow;\n          const rows = Math.floor(ps.length / verticesPerRow) - 1;\n          const cols = verticesPerRow - 1;\n\n          for (i = 0; i < rows; i++) {\n            let q = i * verticesPerRow;\n\n            for (let j = 0; j < cols; j++, q++) {\n              drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n              drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n            }\n          }\n\n          break;\n\n        case \"triangles\":\n          for (i = 0, ii = ps.length; i < ii; i += 3) {\n            drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n          }\n\n          break;\n\n        default:\n          throw new Error(\"illegal figure\");\n      }\n    }\n\n    function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases, webGLContext) {\n      const EXPECTED_SCALE = 1.1;\n      const MAX_PATTERN_SIZE = 3000;\n      const BORDER_SIZE = 2;\n      const offsetX = Math.floor(bounds[0]);\n      const offsetY = Math.floor(bounds[1]);\n      const boundsWidth = Math.ceil(bounds[2]) - offsetX;\n      const boundsHeight = Math.ceil(bounds[3]) - offsetY;\n      const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n      const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n      const scaleX = boundsWidth / width;\n      const scaleY = boundsHeight / height;\n      const context = {\n        coords,\n        colors,\n        offsetX: -offsetX,\n        offsetY: -offsetY,\n        scaleX: 1 / scaleX,\n        scaleY: 1 / scaleY\n      };\n      const paddedWidth = width + BORDER_SIZE * 2;\n      const paddedHeight = height + BORDER_SIZE * 2;\n      let canvas, tmpCanvas, i, ii;\n\n      if (webGLContext.isEnabled) {\n        canvas = webGLContext.drawFigures({\n          width,\n          height,\n          backgroundColor,\n          figures,\n          context\n        });\n        tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n        tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n        canvas = tmpCanvas.canvas;\n      } else {\n        tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n        const tmpCtx = tmpCanvas.context;\n        const data = tmpCtx.createImageData(width, height);\n\n        if (backgroundColor) {\n          const bytes = data.data;\n\n          for (i = 0, ii = bytes.length; i < ii; i += 4) {\n            bytes[i] = backgroundColor[0];\n            bytes[i + 1] = backgroundColor[1];\n            bytes[i + 2] = backgroundColor[2];\n            bytes[i + 3] = 255;\n          }\n        }\n\n        for (i = 0; i < figures.length; i++) {\n          drawFigure(data, figures[i], context);\n        }\n\n        tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n        canvas = tmpCanvas.canvas;\n      }\n\n      return {\n        canvas,\n        offsetX: offsetX - BORDER_SIZE * scaleX,\n        offsetY: offsetY - BORDER_SIZE * scaleY,\n        scaleX,\n        scaleY\n      };\n    }\n\n    return createMeshCanvas;\n  }();\n\n  ShadingIRs.Mesh = {\n    fromIR: function Mesh_fromIR(raw) {\n      const coords = raw[2];\n      const colors = raw[3];\n      const figures = raw[4];\n      const bounds = raw[5];\n      const matrix = raw[6];\n      const bbox = raw[7];\n      const background = raw[8];\n      return {\n        getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n          applyBoundingBox(ctx, bbox);\n          let scale;\n\n          if (shadingFill) {\n            scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n          } else {\n            scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n\n            if (matrix) {\n              const matrixScale = _util.Util.singularValueDecompose2dScale(matrix);\n\n              scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n            }\n          }\n\n          const temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases, owner.webGLContext);\n\n          if (!shadingFill) {\n            ctx.setTransform.apply(ctx, owner.baseTransform);\n\n            if (matrix) {\n              ctx.transform.apply(ctx, matrix);\n            }\n          }\n\n          ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n          ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n          return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n        }\n      };\n    }\n  };\n  ShadingIRs.Dummy = {\n    fromIR: function Dummy_fromIR() {\n      return {\n        getPattern: function Dummy_fromIR_getPattern() {\n          return \"hotpink\";\n        }\n      };\n    }\n  };\n\n  function getShadingPatternFromIR(raw) {\n    const shadingIR = ShadingIRs[raw[0]];\n\n    if (!shadingIR) {\n      throw new Error(`Unknown IR type: ${raw[0]}`);\n    }\n\n    return shadingIR.fromIR(raw);\n  }\n\n  const TilingPattern = function TilingPatternClosure() {\n    const PaintType = {\n      COLORED: 1,\n      UNCOLORED: 2\n    };\n    const MAX_PATTERN_SIZE = 3000;\n\n    function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n      this.operatorList = IR[2];\n      this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n      this.bbox = IR[4];\n      this.xstep = IR[5];\n      this.ystep = IR[6];\n      this.paintType = IR[7];\n      this.tilingType = IR[8];\n      this.color = color;\n      this.canvasGraphicsFactory = canvasGraphicsFactory;\n      this.baseTransform = baseTransform;\n      this.ctx = ctx;\n    }\n\n    TilingPattern.prototype = {\n      createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n        const operatorList = this.operatorList;\n        const bbox = this.bbox;\n        const xstep = this.xstep;\n        const ystep = this.ystep;\n        const paintType = this.paintType;\n        const tilingType = this.tilingType;\n        const color = this.color;\n        const canvasGraphicsFactory = this.canvasGraphicsFactory;\n        (0, _util.info)(\"TilingType: \" + tilingType);\n        const x0 = bbox[0],\n              y0 = bbox[1],\n              x1 = bbox[2],\n              y1 = bbox[3];\n\n        const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n        const curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n\n        const combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n        const dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n        const dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n        const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n        const tmpCtx = tmpCanvas.context;\n        const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n        graphics.groupLevel = owner.groupLevel;\n        this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n        graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n        graphics.transform(1, 0, 0, 1, -x0, -y0);\n        this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n        graphics.executeOperatorList(operatorList);\n        this.ctx.transform(1, 0, 0, 1, x0, y0);\n        this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n        return tmpCanvas.canvas;\n      },\n      getSizeAndScale: function TilingPattern_getSizeAndScale(step, realOutputSize, scale) {\n        step = Math.abs(step);\n        const maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n        let size = Math.ceil(step * scale);\n\n        if (size >= maxSize) {\n          size = maxSize;\n        } else {\n          scale = size / step;\n        }\n\n        return {\n          scale,\n          size\n        };\n      },\n      clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n        if (Array.isArray(bbox) && bbox.length === 4) {\n          const bboxWidth = x1 - x0;\n          const bboxHeight = y1 - y0;\n          graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n          graphics.clip();\n          graphics.endPath();\n        }\n      },\n      setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\n        const context = graphics.ctx,\n              current = graphics.current;\n\n        switch (paintType) {\n          case PaintType.COLORED:\n            const ctx = this.ctx;\n            context.fillStyle = ctx.fillStyle;\n            context.strokeStyle = ctx.strokeStyle;\n            current.fillColor = ctx.fillStyle;\n            current.strokeColor = ctx.strokeStyle;\n            break;\n\n          case PaintType.UNCOLORED:\n            const cssColor = _util.Util.makeHexColor(color[0], color[1], color[2]);\n\n            context.fillStyle = cssColor;\n            context.strokeStyle = cssColor;\n            current.fillColor = cssColor;\n            current.strokeColor = cssColor;\n            break;\n\n          default:\n            throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n        }\n      },\n      getPattern: function TilingPattern_getPattern(ctx, owner) {\n        ctx = this.ctx;\n        ctx.setTransform.apply(ctx, this.baseTransform);\n        ctx.transform.apply(ctx, this.matrix);\n        const temporaryPatternCanvas = this.createPatternCanvas(owner);\n        return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n      }\n    };\n    return TilingPattern;\n  }();\n\n  exports.TilingPattern = TilingPattern;\n\n  /***/ }),\n  /* 12 */\n  /***/ ((__unused_webpack_module, exports) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.GlobalWorkerOptions = void 0;\n  const GlobalWorkerOptions = Object.create(null);\n  exports.GlobalWorkerOptions = GlobalWorkerOptions;\n  GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n  GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n\n  /***/ }),\n  /* 13 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.MessageHandler = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  const CallbackKind = {\n    UNKNOWN: 0,\n    DATA: 1,\n    ERROR: 2\n  };\n  const StreamKind = {\n    UNKNOWN: 0,\n    CANCEL: 1,\n    CANCEL_COMPLETE: 2,\n    CLOSE: 3,\n    ENQUEUE: 4,\n    ERROR: 5,\n    PULL: 6,\n    PULL_COMPLETE: 7,\n    START_COMPLETE: 8\n  };\n\n  function wrapReason(reason) {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n\n    switch (reason.name) {\n      case \"AbortException\":\n        return new _util.AbortException(reason.message);\n\n      case \"MissingPDFException\":\n        return new _util.MissingPDFException(reason.message);\n\n      case \"UnexpectedResponseException\":\n        return new _util.UnexpectedResponseException(reason.message, reason.status);\n\n      case \"UnknownErrorException\":\n        return new _util.UnknownErrorException(reason.message, reason.details);\n\n      default:\n        return new _util.UnknownErrorException(reason.message, reason.toString());\n    }\n  }\n\n  class MessageHandler {\n    constructor(sourceName, targetName, comObj) {\n      this.sourceName = sourceName;\n      this.targetName = targetName;\n      this.comObj = comObj;\n      this.callbackId = 1;\n      this.streamId = 1;\n      this.postMessageTransfers = true;\n      this.streamSinks = Object.create(null);\n      this.streamControllers = Object.create(null);\n      this.callbackCapabilities = Object.create(null);\n      this.actionHandler = Object.create(null);\n\n      this._onComObjOnMessage = event => {\n        const data = event.data;\n\n        if (data.targetName !== this.sourceName) {\n          return;\n        }\n\n        if (data.stream) {\n          this._processStreamMessage(data);\n\n          return;\n        }\n\n        if (data.callback) {\n          const callbackId = data.callbackId;\n          const capability = this.callbackCapabilities[callbackId];\n\n          if (!capability) {\n            throw new Error(`Cannot resolve callback ${callbackId}`);\n          }\n\n          delete this.callbackCapabilities[callbackId];\n\n          if (data.callback === CallbackKind.DATA) {\n            capability.resolve(data.data);\n          } else if (data.callback === CallbackKind.ERROR) {\n            capability.reject(wrapReason(data.reason));\n          } else {\n            throw new Error(\"Unexpected callback case\");\n          }\n\n          return;\n        }\n\n        const action = this.actionHandler[data.action];\n\n        if (!action) {\n          throw new Error(`Unknown action from worker: ${data.action}`);\n        }\n\n        if (data.callbackId) {\n          const cbSourceName = this.sourceName;\n          const cbTargetName = data.sourceName;\n          new Promise(function (resolve) {\n            resolve(action(data.data));\n          }).then(function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result\n            });\n          }, function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason)\n            });\n          });\n          return;\n        }\n\n        if (data.streamId) {\n          this._createStreamSink(data);\n\n          return;\n        }\n\n        action(data.data);\n      };\n\n      comObj.addEventListener(\"message\", this._onComObjOnMessage);\n    }\n\n    on(actionName, handler) {\n      const ah = this.actionHandler;\n\n      if (ah[actionName]) {\n        throw new Error(`There is already an actionName called \"${actionName}\"`);\n      }\n\n      ah[actionName] = handler;\n    }\n\n    send(actionName, data, transfers) {\n      this._postMessage({\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data\n      }, transfers);\n    }\n\n    sendWithPromise(actionName, data, transfers) {\n      const callbackId = this.callbackId++;\n      const capability = (0, _util.createPromiseCapability)();\n      this.callbackCapabilities[callbackId] = capability;\n\n      try {\n        this._postMessage({\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data\n        }, transfers);\n      } catch (ex) {\n        capability.reject(ex);\n      }\n\n      return capability.promise;\n    }\n\n    sendWithStream(actionName, data, queueingStrategy, transfers) {\n      const streamId = this.streamId++;\n      const sourceName = this.sourceName;\n      const targetName = this.targetName;\n      const comObj = this.comObj;\n      return new ReadableStream({\n        start: controller => {\n          const startCapability = (0, _util.createPromiseCapability)();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false\n          };\n\n          this._postMessage({\n            sourceName,\n            targetName,\n            action: actionName,\n            streamId,\n            data,\n            desiredSize: controller.desiredSize\n          }, transfers);\n\n          return startCapability.promise;\n        },\n        pull: controller => {\n          const pullCapability = (0, _util.createPromiseCapability)();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize\n          });\n          return pullCapability.promise;\n        },\n        cancel: reason => {\n          (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = (0, _util.createPromiseCapability)();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason)\n          });\n          return cancelCapability.promise;\n        }\n      }, queueingStrategy);\n    }\n\n    _createStreamSink(data) {\n      const self = this;\n      const action = this.actionHandler[data.action];\n      const streamId = data.streamId;\n      const sourceName = this.sourceName;\n      const targetName = data.sourceName;\n      const comObj = this.comObj;\n      const streamSink = {\n        enqueue(chunk, size = 1, transfers) {\n          if (this.isCancelled) {\n            return;\n          }\n\n          const lastDesiredSize = this.desiredSize;\n          this.desiredSize -= size;\n\n          if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n            this.sinkCapability = (0, _util.createPromiseCapability)();\n            this.ready = this.sinkCapability.promise;\n          }\n\n          self._postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk\n          }, transfers);\n        },\n\n        close() {\n          if (this.isCancelled) {\n            return;\n          }\n\n          this.isCancelled = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CLOSE,\n            streamId\n          });\n          delete self.streamSinks[streamId];\n        },\n\n        error(reason) {\n          (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n\n          if (this.isCancelled) {\n            return;\n          }\n\n          this.isCancelled = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.ERROR,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        },\n\n        sinkCapability: (0, _util.createPromiseCapability)(),\n        onPull: null,\n        onCancel: null,\n        isCancelled: false,\n        desiredSize: data.desiredSize,\n        ready: null\n      };\n      streamSink.sinkCapability.resolve();\n      streamSink.ready = streamSink.sinkCapability.promise;\n      this.streamSinks[streamId] = streamSink;\n      new Promise(function (resolve) {\n        resolve(action(data.data, streamSink));\n      }).then(function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true\n        });\n      }, function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason)\n        });\n      });\n    }\n\n    _processStreamMessage(data) {\n      const streamId = data.streamId;\n      const sourceName = this.sourceName;\n      const targetName = data.sourceName;\n      const comObj = this.comObj;\n\n      switch (data.stream) {\n        case StreamKind.START_COMPLETE:\n          if (data.success) {\n            this.streamControllers[streamId].startCall.resolve();\n          } else {\n            this.streamControllers[streamId].startCall.reject(wrapReason(data.reason));\n          }\n\n          break;\n\n        case StreamKind.PULL_COMPLETE:\n          if (data.success) {\n            this.streamControllers[streamId].pullCall.resolve();\n          } else {\n            this.streamControllers[streamId].pullCall.reject(wrapReason(data.reason));\n          }\n\n          break;\n\n        case StreamKind.PULL:\n          if (!this.streamSinks[streamId]) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true\n            });\n            break;\n          }\n\n          if (this.streamSinks[streamId].desiredSize <= 0 && data.desiredSize > 0) {\n            this.streamSinks[streamId].sinkCapability.resolve();\n          }\n\n          this.streamSinks[streamId].desiredSize = data.desiredSize;\n          const {\n            onPull\n          } = this.streamSinks[data.streamId];\n          new Promise(function (resolve) {\n            resolve(onPull && onPull());\n          }).then(function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true\n            });\n          }, function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason)\n            });\n          });\n          break;\n\n        case StreamKind.ENQUEUE:\n          (0, _util.assert)(this.streamControllers[streamId], \"enqueue should have stream controller\");\n\n          if (this.streamControllers[streamId].isClosed) {\n            break;\n          }\n\n          this.streamControllers[streamId].controller.enqueue(data.chunk);\n          break;\n\n        case StreamKind.CLOSE:\n          (0, _util.assert)(this.streamControllers[streamId], \"close should have stream controller\");\n\n          if (this.streamControllers[streamId].isClosed) {\n            break;\n          }\n\n          this.streamControllers[streamId].isClosed = true;\n          this.streamControllers[streamId].controller.close();\n\n          this._deleteStreamController(streamId);\n\n          break;\n\n        case StreamKind.ERROR:\n          (0, _util.assert)(this.streamControllers[streamId], \"error should have stream controller\");\n          this.streamControllers[streamId].controller.error(wrapReason(data.reason));\n\n          this._deleteStreamController(streamId);\n\n          break;\n\n        case StreamKind.CANCEL_COMPLETE:\n          if (data.success) {\n            this.streamControllers[streamId].cancelCall.resolve();\n          } else {\n            this.streamControllers[streamId].cancelCall.reject(wrapReason(data.reason));\n          }\n\n          this._deleteStreamController(streamId);\n\n          break;\n\n        case StreamKind.CANCEL:\n          if (!this.streamSinks[streamId]) {\n            break;\n          }\n\n          const {\n            onCancel\n          } = this.streamSinks[data.streamId];\n          new Promise(function (resolve) {\n            resolve(onCancel && onCancel(wrapReason(data.reason)));\n          }).then(function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true\n            });\n          }, function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason)\n            });\n          });\n          this.streamSinks[streamId].sinkCapability.reject(wrapReason(data.reason));\n          this.streamSinks[streamId].isCancelled = true;\n          delete this.streamSinks[streamId];\n          break;\n\n        default:\n          throw new Error(\"Unexpected stream case\");\n      }\n    }\n\n    async _deleteStreamController(streamId) {\n      await Promise.allSettled([this.streamControllers[streamId].startCall, this.streamControllers[streamId].pullCall, this.streamControllers[streamId].cancelCall].map(function (capability) {\n        return capability && capability.promise;\n      }));\n      delete this.streamControllers[streamId];\n    }\n\n    _postMessage(message, transfers) {\n      if (transfers && this.postMessageTransfers) {\n        this.comObj.postMessage(message, transfers);\n      } else {\n        this.comObj.postMessage(message);\n      }\n    }\n\n    destroy() {\n      this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n    }\n\n  }\n\n  exports.MessageHandler = MessageHandler;\n\n  /***/ }),\n  /* 14 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.Metadata = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _xml_parser = __w_pdfjs_require__(15);\n\n  class Metadata {\n    constructor(data) {\n      (0, _util.assert)(typeof data === \"string\", \"Metadata: input is not a string\");\n      data = this._repair(data);\n      const parser = new _xml_parser.SimpleXMLParser({\n        lowerCaseName: true\n      });\n      const xmlDocument = parser.parseFromString(data);\n      this._metadataMap = new Map();\n\n      if (xmlDocument) {\n        this._parse(xmlDocument);\n      }\n\n      this._data = data;\n    }\n\n    _repair(data) {\n      return data.replace(/^[^<]+/, \"\").replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n        const bytes = codes.replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n          return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n        }).replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n          switch (name) {\n            case \"amp\":\n              return \"&\";\n\n            case \"apos\":\n              return \"'\";\n\n            case \"gt\":\n              return \">\";\n\n            case \"lt\":\n              return \"<\";\n\n            case \"quot\":\n              return '\"';\n          }\n\n          throw new Error(`_repair: ${name} isn't defined.`);\n        });\n        let chars = \"\";\n\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n\n          if (code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n    }\n\n    _getSequence(entry) {\n      const name = entry.nodeName;\n\n      if (name !== \"rdf:bag\" && name !== \"rdf:seq\" && name !== \"rdf:alt\") {\n        return null;\n      }\n\n      return entry.childNodes.filter(node => node.nodeName === \"rdf:li\");\n    }\n\n    _getCreators(entry) {\n      if (entry.nodeName !== \"dc:creator\") {\n        return false;\n      }\n\n      if (!entry.hasChildNodes()) {\n        return true;\n      }\n\n      const seqNode = entry.childNodes[0];\n      const authors = this._getSequence(seqNode) || [];\n\n      this._metadataMap.set(entry.nodeName, authors.map(node => node.textContent.trim()));\n\n      return true;\n    }\n\n    _parse(xmlDocument) {\n      let rdf = xmlDocument.documentElement;\n\n      if (rdf.nodeName !== \"rdf:rdf\") {\n        rdf = rdf.firstChild;\n\n        while (rdf && rdf.nodeName !== \"rdf:rdf\") {\n          rdf = rdf.nextSibling;\n        }\n      }\n\n      if (!rdf || rdf.nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n        return;\n      }\n\n      for (const desc of rdf.childNodes) {\n        if (desc.nodeName !== \"rdf:description\") {\n          continue;\n        }\n\n        for (const entry of desc.childNodes) {\n          const name = entry.nodeName;\n\n          if (name === \"#text\") {\n            continue;\n          }\n\n          if (this._getCreators(entry)) {\n            continue;\n          }\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n\n    getRaw() {\n      return this._data;\n    }\n\n    get(name) {\n      return this._metadataMap.get(name) || null; //lwf\n    }\n\n    getAll() {\n      return (0, _util.objectFromEntries)(this._metadataMap);\n    }\n\n    has(name) {\n      return this._metadataMap.has(name);\n    }\n\n  }\n\n  exports.Metadata = Metadata;\n\n  /***/ }),\n  /* 15 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.SimpleXMLParser = exports.SimpleDOMNode = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  const XMLParserErrorCode = {\n    NoError: 0,\n    EndOfDocument: -1,\n    UnterminatedCdat: -2,\n    UnterminatedXmlDeclaration: -3,\n    UnterminatedDoctypeDeclaration: -4,\n    UnterminatedComment: -5,\n    MalformedElement: -6,\n    OutOfMemory: -7,\n    UnterminatedAttributeValue: -8,\n    UnterminatedElement: -9,\n    ElementNeverBegun: -10\n  };\n\n  function isWhitespace(s, index) {\n    const ch = s[index];\n    return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n  }\n\n  function isWhitespaceString(s) {\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (!isWhitespace(s, i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  class XMLParserBase {\n    _resolveEntities(s) {\n      return s.replace(/&([^;]+);/g, (all, entity) => {\n        if (entity.substring(0, 2) === \"#x\") {\n          return String.fromCodePoint(parseInt(entity.substring(2), 16));\n        } else if (entity.substring(0, 1) === \"#\") {\n          return String.fromCodePoint(parseInt(entity.substring(1), 10));\n        }\n\n        switch (entity) {\n          case \"lt\":\n            return \"<\";\n\n          case \"gt\":\n            return \">\";\n\n          case \"amp\":\n            return \"&\";\n\n          case \"quot\":\n            return '\"';\n        }\n\n        return this.onResolveEntity(entity);\n      });\n    }\n\n    _parseContent(s, start) {\n      const attributes = [];\n      let pos = start;\n\n      function skipWs() {\n        while (pos < s.length && isWhitespace(s, pos)) {\n          ++pos;\n        }\n      }\n\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n        ++pos;\n      }\n\n      const name = s.substring(start, pos);\n      skipWs();\n\n      while (pos < s.length && s[pos] !== \">\" && s[pos] !== \"/\" && s[pos] !== \"?\") {\n        skipWs();\n        let attrName = \"\",\n            attrValue = \"\";\n\n        while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n          attrName += s[pos];\n          ++pos;\n        }\n\n        skipWs();\n\n        if (s[pos] !== \"=\") {\n          return null;\n        }\n\n        ++pos;\n        skipWs();\n        const attrEndChar = s[pos];\n\n        if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n          return null;\n        }\n\n        const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n\n        if (attrEndIndex < 0) {\n          return null;\n        }\n\n        attrValue = s.substring(pos, attrEndIndex);\n        attributes.push({\n          name: attrName,\n          value: this._resolveEntities(attrValue)\n        });\n        pos = attrEndIndex + 1;\n        skipWs();\n      }\n\n      return {\n        name,\n        attributes,\n        parsed: pos - start\n      };\n    }\n\n    _parseProcessingInstruction(s, start) {\n      let pos = start;\n\n      function skipWs() {\n        while (pos < s.length && isWhitespace(s, pos)) {\n          ++pos;\n        }\n      }\n\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n        ++pos;\n      }\n\n      const name = s.substring(start, pos);\n      skipWs();\n      const attrStart = pos;\n\n      while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n        ++pos;\n      }\n\n      const value = s.substring(attrStart, pos);\n      return {\n        name,\n        value,\n        parsed: pos - start\n      };\n    }\n\n    parseXml(s) {\n      let i = 0;\n\n      while (i < s.length) {\n        const ch = s[i];\n        let j = i;\n\n        if (ch === \"<\") {\n          ++j;\n          const ch2 = s[j];\n          let q;\n\n          switch (ch2) {\n            case \"/\":\n              ++j;\n              q = s.indexOf(\">\", j);\n\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedElement);\n                return;\n              }\n\n              this.onEndElement(s.substring(j, q));\n              j = q + 1;\n              break;\n\n            case \"?\":\n              ++j;\n\n              const pi = this._parseProcessingInstruction(s, j);\n\n              if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n                this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n                return;\n              }\n\n              this.onPi(pi.name, pi.value);\n              j += pi.parsed + 2;\n              break;\n\n            case \"!\":\n              if (s.substring(j + 1, j + 3) === \"--\") {\n                q = s.indexOf(\"-->\", j + 3);\n\n                if (q < 0) {\n                  this.onError(XMLParserErrorCode.UnterminatedComment);\n                  return;\n                }\n\n                this.onComment(s.substring(j + 3, q));\n                j = q + 3;\n              } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n                q = s.indexOf(\"]]>\", j + 8);\n\n                if (q < 0) {\n                  this.onError(XMLParserErrorCode.UnterminatedCdat);\n                  return;\n                }\n\n                this.onCdata(s.substring(j + 8, q));\n                j = q + 3;\n              } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n                const q2 = s.indexOf(\"[\", j + 8);\n                let complexDoctype = false;\n                q = s.indexOf(\">\", j + 8);\n\n                if (q < 0) {\n                  this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                  return;\n                }\n\n                if (q2 > 0 && q > q2) {\n                  q = s.indexOf(\"]>\", j + 8);\n\n                  if (q < 0) {\n                    this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                    return;\n                  }\n\n                  complexDoctype = true;\n                }\n\n                const doctypeContent = s.substring(j + 8, q + (complexDoctype ? 1 : 0));\n                this.onDoctype(doctypeContent);\n                j = q + (complexDoctype ? 2 : 1);\n              } else {\n                this.onError(XMLParserErrorCode.MalformedElement);\n                return;\n              }\n\n              break;\n\n            default:\n              const content = this._parseContent(s, j);\n\n              if (content === null) {\n                this.onError(XMLParserErrorCode.MalformedElement);\n                return;\n              }\n\n              let isClosed = false;\n\n              if (s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\") {\n                isClosed = true;\n              } else if (s.substring(j + content.parsed, j + content.parsed + 1) !== \">\") {\n                this.onError(XMLParserErrorCode.UnterminatedElement);\n                return;\n              }\n\n              this.onBeginElement(content.name, content.attributes, isClosed);\n              j += content.parsed + (isClosed ? 2 : 1);\n              break;\n          }\n        } else {\n          while (j < s.length && s[j] !== \"<\") {\n            j++;\n          }\n\n          const text = s.substring(i, j);\n          this.onText(this._resolveEntities(text));\n        }\n\n        i = j;\n      }\n    }\n\n    onResolveEntity(name) {\n      return `&${name};`;\n    }\n\n    onPi(name, value) {}\n\n    onComment(text) {}\n\n    onCdata(text) {}\n\n    onDoctype(doctypeContent) {}\n\n    onText(text) {}\n\n    onBeginElement(name, attributes, isEmpty) {}\n\n    onEndElement(name) {}\n\n    onError(code) {}\n\n  }\n\n  class SimpleDOMNode {\n    constructor(nodeName, nodeValue) {\n      this.nodeName = nodeName;\n      this.nodeValue = nodeValue;\n      Object.defineProperty(this, \"parentNode\", {\n        value: null,\n        writable: true\n      });\n    }\n\n    get firstChild() {\n      return this.childNodes && this.childNodes[0];\n    }\n\n    get nextSibling() {\n      const childNodes = this.parentNode.childNodes;\n\n      if (!childNodes) {\n        return undefined;\n      }\n\n      const index = childNodes.indexOf(this);\n\n      if (index === -1) {\n        return undefined;\n      }\n\n      return childNodes[index + 1];\n    }\n\n    get textContent() {\n      if (!this.childNodes) {\n        return this.nodeValue || \"\";\n      }\n\n      return this.childNodes.map(function (child) {\n        return child.textContent;\n      }).join(\"\");\n    }\n\n    hasChildNodes() {\n      return this.childNodes && this.childNodes.length > 0;\n    }\n\n    searchNode(paths, pos) {\n      if (pos >= paths.length) {\n        return this;\n      }\n\n      const component = paths[pos];\n      const stack = [];\n      let node = this;\n\n      while (true) {\n        if (component.name === node.nodeName) {\n          if (component.pos === 0) {\n            const res = node.searchNode(paths, pos + 1);\n\n            if (res !== null) {\n              return res;\n            }\n          } else if (stack.length === 0) {\n            return null;\n          } else {\n            const [parent] = stack.pop();\n            let siblingPos = 0;\n\n            for (const child of parent.childNodes) {\n              if (component.name === child.nodeName) {\n                if (siblingPos === component.pos) {\n                  return child.searchNode(paths, pos + 1);\n                }\n\n                siblingPos++;\n              }\n            }\n\n            return node.searchNode(paths, pos + 1);\n          }\n        }\n\n        if (node.childNodes && node.childNodes.length !== 0) {\n          stack.push([node, 0]);\n          node = node.childNodes[0];\n        } else if (stack.length === 0) {\n          return null;\n        } else {\n          while (stack.length !== 0) {\n            const [parent, currentPos] = stack.pop();\n            const newPos = currentPos + 1;\n\n            if (newPos < parent.childNodes.length) {\n              stack.push([parent, newPos]);\n              node = parent.childNodes[newPos];\n              break;\n            }\n          }\n\n          if (stack.length === 0) {\n            return null;\n          }\n        }\n      }\n    }\n\n    dump(buffer) {\n      if (this.nodeName === \"#text\") {\n        buffer.push((0, _util.encodeToXmlString)(this.nodeValue));\n        return;\n      }\n\n      buffer.push(`<${this.nodeName}`);\n\n      if (this.attributes) {\n        for (const attribute of this.attributes) {\n          buffer.push(` ${attribute.name}=\"${(0, _util.encodeToXmlString)(attribute.value)}\"`);\n        }\n      }\n\n      if (this.hasChildNodes()) {\n        buffer.push(\">\");\n\n        for (const child of this.childNodes) {\n          child.dump(buffer);\n        }\n\n        buffer.push(`</${this.nodeName}>`);\n      } else if (this.nodeValue) {\n        buffer.push(`>${(0, _util.encodeToXmlString)(this.nodeValue)}</${this.nodeName}>`);\n      } else {\n        buffer.push(\"/>\");\n      }\n    }\n\n  }\n\n  exports.SimpleDOMNode = SimpleDOMNode;\n\n  class SimpleXMLParser extends XMLParserBase {\n    constructor({\n      hasAttributes = false,\n      lowerCaseName = false\n    }) {\n      super();\n      this._currentFragment = null;\n      this._stack = null;\n      this._errorCode = XMLParserErrorCode.NoError;\n      this._hasAttributes = hasAttributes;\n      this._lowerCaseName = lowerCaseName;\n    }\n\n    parseFromString(data) {\n      this._currentFragment = [];\n      this._stack = [];\n      this._errorCode = XMLParserErrorCode.NoError;\n      this.parseXml(data);\n\n      if (this._errorCode !== XMLParserErrorCode.NoError) {\n        return undefined;\n      }\n\n      const [documentElement] = this._currentFragment;\n\n      if (!documentElement) {\n        return undefined;\n      }\n\n      return {\n        documentElement\n      };\n    }\n\n    onResolveEntity(name) {\n      switch (name) {\n        case \"apos\":\n          return \"'\";\n      }\n\n      return super.onResolveEntity(name);\n    }\n\n    onText(text) {\n      if (isWhitespaceString(text)) {\n        return;\n      }\n\n      const node = new SimpleDOMNode(\"#text\", text);\n\n      this._currentFragment.push(node);\n    }\n\n    onCdata(text) {\n      const node = new SimpleDOMNode(\"#text\", text);\n\n      this._currentFragment.push(node);\n    }\n\n    onBeginElement(name, attributes, isEmpty) {\n      if (this._lowerCaseName) {\n        name = name.toLowerCase();\n      }\n\n      const node = new SimpleDOMNode(name);\n      node.childNodes = [];\n\n      if (this._hasAttributes) {\n        node.attributes = attributes;\n      }\n\n      this._currentFragment.push(node);\n\n      if (isEmpty) {\n        return;\n      }\n\n      this._stack.push(this._currentFragment);\n\n      this._currentFragment = node.childNodes;\n    }\n\n    onEndElement(name) {\n      this._currentFragment = this._stack.pop() || [];\n      const lastElement = this._currentFragment[this._currentFragment.length - 1];\n\n      if (!lastElement) {\n        return;\n      }\n\n      for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n        lastElement.childNodes[i].parentNode = lastElement;\n      }\n    }\n\n    onError(code) {\n      this._errorCode = code;\n    }\n\n  }\n\n  exports.SimpleXMLParser = SimpleXMLParser;\n\n  /***/ }),\n  /* 16 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.OptionalContentConfig = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  class OptionalContentGroup {\n    constructor(name, intent) {\n      this.visible = true;\n      this.name = name;\n      this.intent = intent;\n    }\n\n  }\n\n  class OptionalContentConfig {\n    constructor(data) {\n      this.name = null;\n      this.creator = null;\n      this._order = null;\n      this._groups = new Map();\n\n      if (data === null) {\n        return;\n      }\n\n      this.name = data.name;\n      this.creator = data.creator;\n      this._order = data.order;\n\n      for (const group of data.groups) {\n        this._groups.set(group.id, new OptionalContentGroup(group.name, group.intent));\n      }\n\n      if (data.baseState === \"OFF\") {\n        for (const group of this._groups) {\n          group.visible = false;\n        }\n      }\n\n      for (const on of data.on) {\n        this._groups.get(on).visible = true;\n      }\n\n      for (const off of data.off) {\n        this._groups.get(off).visible = false;\n      }\n    }\n\n    isVisible(group) {\n      if (group.type === \"OCG\") {\n        if (!this._groups.has(group.id)) {\n          (0, _util.warn)(`Optional content group not found: ${group.id}`);\n          return true;\n        }\n\n        return this._groups.get(group.id).visible;\n      } else if (group.type === \"OCMD\") {\n        if (group.expression) {\n          (0, _util.warn)(\"Visibility expression not supported yet.\");\n        }\n\n        if (!group.policy || group.policy === \"AnyOn\") {\n          for (const id of group.ids) {\n            if (!this._groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return true;\n            }\n\n            if (this._groups.get(id).visible) {\n              return true;\n            }\n          }\n\n          return false;\n        } else if (group.policy === \"AllOn\") {\n          for (const id of group.ids) {\n            if (!this._groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return true;\n            }\n\n            if (!this._groups.get(id).visible) {\n              return false;\n            }\n          }\n\n          return true;\n        } else if (group.policy === \"AnyOff\") {\n          for (const id of group.ids) {\n            if (!this._groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return true;\n            }\n\n            if (!this._groups.get(id).visible) {\n              return true;\n            }\n          }\n\n          return false;\n        } else if (group.policy === \"AllOff\") {\n          for (const id of group.ids) {\n            if (!this._groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return true;\n            }\n\n            if (this._groups.get(id).visible) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        (0, _util.warn)(`Unknown optional content policy ${group.policy}.`);\n        return true;\n      }\n\n      (0, _util.warn)(`Unknown group type ${group.type}.`);\n      return true;\n    }\n\n    setVisibility(id, visible = true) {\n      if (!this._groups.has(id)) {\n        (0, _util.warn)(`Optional content group not found: ${id}`);\n        return;\n      }\n\n      this._groups.get(id).visible = !!visible;\n    }\n\n    getOrder() {\n      if (!this._groups.size) {\n        return null;\n      }\n\n      if (this._order) {\n        return this._order.slice();\n      }\n\n      return Array.from(this._groups.keys());\n    }\n\n    getGroups() {\n      if (!this._groups.size) {\n        return null;\n      }\n\n      return (0, _util.objectFromEntries)(this._groups);\n    }\n\n    getGroup(id) {\n      return this._groups.get(id) || null;\n    }\n\n  }\n\n  exports.OptionalContentConfig = OptionalContentConfig;\n\n  /***/ }),\n  /* 17 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.PDFDataTransportStream = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  class PDFDataTransportStream {\n    constructor(params, pdfDataRangeTransport) {\n      (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n      this._queuedChunks = [];\n      this._progressiveDone = params.progressiveDone || false;\n      const initialData = params.initialData;\n\n      if (initialData && initialData.length > 0) { // lwf\n        const buffer = new Uint8Array(initialData).buffer;\n\n        this._queuedChunks.push(buffer);\n      }\n\n      this._pdfDataRangeTransport = pdfDataRangeTransport;\n      this._isStreamingSupported = !params.disableStream;\n      this._isRangeSupported = !params.disableRange;\n      this._contentLength = params.length;\n      this._fullRequestReader = null;\n      this._rangeReaders = [];\n\n      this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n        this._onReceiveData({\n          begin,\n          chunk\n        });\n      });\n\n      this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n        this._onProgress({\n          loaded,\n          total\n        });\n      });\n\n      this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n        this._onReceiveData({\n          chunk\n        });\n      });\n\n      this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n        this._onProgressiveDone();\n      });\n\n      this._pdfDataRangeTransport.transportReady();\n    }\n\n    _onReceiveData(args) {\n      const buffer = new Uint8Array(args.chunk).buffer;\n\n      if (args.begin === undefined) {\n        if (this._fullRequestReader) {\n          this._fullRequestReader._enqueue(buffer);\n        } else {\n          this._queuedChunks.push(buffer);\n        }\n      } else {\n        const found = this._rangeReaders.some(function (rangeReader) {\n          if (rangeReader._begin !== args.begin) {\n            return false;\n          }\n\n          rangeReader._enqueue(buffer);\n\n          return true;\n        });\n\n        (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n      }\n    }\n\n    get _progressiveDataLength() {\n      return this._fullRequestReader && this._fullRequestReader._loaded || 0; // lwf\n    }\n\n    _onProgress(evt) {\n      if (evt.total === undefined) {\n        const firstReader = this._rangeReaders[0];\n\n        if (firstReader && firstReader.onProgress) { // lwf\n          firstReader.onProgress({\n            loaded: evt.loaded\n          });\n        }\n      } else {\n        const fullReader = this._fullRequestReader;\n\n        if (fullReader && fullReader.onProgress) { // lwf\n          fullReader.onProgress({\n            loaded: evt.loaded,\n            total: evt.total\n          });\n        }\n      }\n    }\n\n    _onProgressiveDone() {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.progressiveDone();\n      }\n\n      this._progressiveDone = true;\n    }\n\n    _removeRangeReader(reader) {\n      const i = this._rangeReaders.indexOf(reader);\n\n      if (i >= 0) {\n        this._rangeReaders.splice(i, 1);\n      }\n    }\n\n    getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n      const queuedChunks = this._queuedChunks;\n      this._queuedChunks = null;\n      return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone);\n    }\n\n    getRangeReader(begin, end) {\n      if (end <= this._progressiveDataLength) {\n        return null;\n      }\n\n      const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n\n      this._pdfDataRangeTransport.requestDataRange(begin, end);\n\n      this._rangeReaders.push(reader);\n\n      return reader;\n    }\n\n    cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n\n      const readers = this._rangeReaders.slice(0);\n\n      readers.forEach(function (rangeReader) {\n        rangeReader.cancel(reason);\n      });\n\n      this._pdfDataRangeTransport.abort();\n    }\n\n  }\n\n  exports.PDFDataTransportStream = PDFDataTransportStream;\n\n  class PDFDataTransportStreamReader {\n    constructor(stream, queuedChunks, progressiveDone = false) {\n      this._stream = stream;\n      this._done = progressiveDone || false;\n      this._filename = null;\n      this._queuedChunks = queuedChunks || [];\n      this._loaded = 0;\n\n      for (const chunk of this._queuedChunks) {\n        this._loaded += chunk.byteLength;\n      }\n\n      this._requests = [];\n      this._headersReady = Promise.resolve();\n      stream._fullRequestReader = this;\n      this.onProgress = null;\n    }\n\n    _enqueue(chunk) {\n      if (this._done) {\n        return;\n      }\n\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n\n        requestCapability.resolve({\n          value: chunk,\n          done: false\n        });\n      } else {\n        this._queuedChunks.push(chunk);\n      }\n\n      this._loaded += chunk.byteLength;\n    }\n\n    get headersReady() {\n      return this._headersReady;\n    }\n\n    get filename() {\n      return this._filename;\n    }\n\n    get isRangeSupported() {\n      return this._stream._isRangeSupported;\n    }\n\n    get isStreamingSupported() {\n      return this._stream._isStreamingSupported;\n    }\n\n    get contentLength() {\n      return this._stream._contentLength;\n    }\n\n    async read() {\n      if (this._queuedChunks.length > 0) {\n        const chunk = this._queuedChunks.shift();\n\n        return {\n          value: chunk,\n          done: false\n        };\n      }\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      const requestCapability = (0, _util.createPromiseCapability)();\n\n      this._requests.push(requestCapability);\n\n      return requestCapability.promise;\n    }\n\n    cancel(reason) {\n      this._done = true;\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n    }\n\n    progressiveDone() {\n      if (this._done) {\n        return;\n      }\n\n      this._done = true;\n    }\n\n  }\n\n  class PDFDataTransportStreamRangeReader {\n    constructor(stream, begin, end) {\n      this._stream = stream;\n      this._begin = begin;\n      this._end = end;\n      this._queuedChunk = null;\n      this._requests = [];\n      this._done = false;\n      this.onProgress = null;\n    }\n\n    _enqueue(chunk) {\n      if (this._done) {\n        return;\n      }\n\n      if (this._requests.length === 0) {\n        this._queuedChunk = chunk;\n      } else {\n        const requestsCapability = this._requests.shift();\n\n        requestsCapability.resolve({\n          value: chunk,\n          done: false\n        });\n\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.resolve({\n            value: undefined,\n            done: true\n          });\n        });\n\n        this._requests = [];\n      }\n\n      this._done = true;\n\n      this._stream._removeRangeReader(this);\n    }\n\n    get isStreamingSupported() {\n      return false;\n    }\n\n    async read() {\n      if (this._queuedChunk) {\n        const chunk = this._queuedChunk;\n        this._queuedChunk = null;\n        return {\n          value: chunk,\n          done: false\n        };\n      }\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      const requestCapability = (0, _util.createPromiseCapability)();\n\n      this._requests.push(requestCapability);\n\n      return requestCapability.promise;\n    }\n\n    cancel(reason) {\n      this._done = true;\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n\n      this._stream._removeRangeReader(this);\n    }\n\n  }\n\n  /***/ }),\n  /* 18 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.WebGLContext = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  class WebGLContext {\n    constructor({\n      enable = false\n    }) {\n      this._enabled = enable === true;\n    }\n\n    get isEnabled() {\n      let enabled = this._enabled;\n\n      if (enabled) {\n        enabled = WebGLUtils.tryInitGL();\n      }\n\n      return (0, _util.shadow)(this, \"isEnabled\", enabled);\n    }\n\n    composeSMask({\n      layer,\n      mask,\n      properties\n    }) {\n      return WebGLUtils.composeSMask(layer, mask, properties);\n    }\n\n    drawFigures({\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    }) {\n      return WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);\n    }\n\n    clear() {\n      WebGLUtils.cleanup();\n    }\n\n  }\n\n  exports.WebGLContext = WebGLContext;\n\n  const WebGLUtils = function WebGLUtilsClosure() {\n    function loadShader(gl, code, shaderType) {\n      const shader = gl.createShader(shaderType);\n      gl.shaderSource(shader, code);\n      gl.compileShader(shader);\n      const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n      if (!compiled) {\n        const errorMsg = gl.getShaderInfoLog(shader);\n        throw new Error(\"Error during shader compilation: \" + errorMsg);\n      }\n\n      return shader;\n    }\n\n    function createVertexShader(gl, code) {\n      return loadShader(gl, code, gl.VERTEX_SHADER);\n    }\n\n    function createFragmentShader(gl, code) {\n      return loadShader(gl, code, gl.FRAGMENT_SHADER);\n    }\n\n    function createProgram(gl, shaders) {\n      const program = gl.createProgram();\n\n      for (let i = 0, ii = shaders.length; i < ii; ++i) {\n        gl.attachShader(program, shaders[i]);\n      }\n\n      gl.linkProgram(program);\n      const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n      if (!linked) {\n        const errorMsg = gl.getProgramInfoLog(program);\n        throw new Error(\"Error during program linking: \" + errorMsg);\n      }\n\n      return program;\n    }\n\n    function createTexture(gl, image, textureId) {\n      gl.activeTexture(textureId);\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n      return texture;\n    }\n\n    let currentGL, currentCanvas;\n\n    function generateGL() {\n      if (currentGL) {\n        return;\n      }\n\n      currentCanvas = document.createElement(\"canvas\");\n      currentGL = currentCanvas.getContext(\"webgl\", {\n        premultipliedalpha: false\n      });\n    }\n\n    const smaskVertexShaderCode = \"\\\n    attribute vec2 a_position;                                    \\\n    attribute vec2 a_texCoord;                                    \\\n                                                                  \\\n    uniform vec2 u_resolution;                                    \\\n                                                                  \\\n    varying vec2 v_texCoord;                                      \\\n                                                                  \\\n    void main() {                                                 \\\n      vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n      gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                  \\\n      v_texCoord = a_texCoord;                                    \\\n    }                                                             \";\n    const smaskFragmentShaderCode = \"\\\n    precision mediump float;                                      \\\n                                                                  \\\n    uniform vec4 u_backdrop;                                      \\\n    uniform int u_subtype;                                        \\\n    uniform sampler2D u_image;                                    \\\n    uniform sampler2D u_mask;                                     \\\n                                                                  \\\n    varying vec2 v_texCoord;                                      \\\n                                                                  \\\n    void main() {                                                 \\\n      vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n      vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n      if (u_backdrop.a > 0.0) {                                   \\\n        maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                        u_backdrop.rgb * (1.0 - maskColor.a);     \\\n      }                                                           \\\n      float lum;                                                  \\\n      if (u_subtype == 0) {                                       \\\n        lum = maskColor.a;                                        \\\n      } else {                                                    \\\n        lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n              maskColor.b * 0.11;                                 \\\n      }                                                           \\\n      imageColor.a *= lum;                                        \\\n      imageColor.rgb *= imageColor.a;                             \\\n      gl_FragColor = imageColor;                                  \\\n    }                                                             \";\n    let smaskCache = null;\n\n    function initSmaskGL() {\n      generateGL();\n      const canvas = currentCanvas;\n      currentCanvas = null;\n      const gl = currentGL;\n      currentGL = null;\n      const vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n      const fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n      const program = createProgram(gl, [vertexShader, fragmentShader]);\n      gl.useProgram(program);\n      const cache = {};\n      cache.gl = gl;\n      cache.canvas = canvas;\n      cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n      cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n      cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n      cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n      const texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n      const texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n      const texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n      const texCoordBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(texCoordLocation);\n      gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n      gl.uniform1i(texLayerLocation, 0);\n      gl.uniform1i(texMaskLocation, 1);\n      smaskCache = cache;\n    }\n\n    function composeSMask(layer, mask, properties) {\n      const width = layer.width,\n            height = layer.height;\n\n      if (!smaskCache) {\n        initSmaskGL();\n      }\n\n      const cache = smaskCache,\n            canvas = cache.canvas,\n            gl = cache.gl;\n      canvas.width = width;\n      canvas.height = height;\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n      gl.uniform2f(cache.resolutionLocation, width, height);\n\n      if (properties.backdrop) {\n        gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);\n      } else {\n        gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n      }\n\n      gl.uniform1i(cache.subtypeLocation, properties.subtype === \"Luminosity\" ? 1 : 0);\n      const texture = createTexture(gl, layer, gl.TEXTURE0);\n      const maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n      const buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, width, 0, 0, height, 0, height, width, 0, width, height]), gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(cache.positionLocation);\n      gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n      gl.clearColor(0, 0, 0, 0);\n      gl.enable(gl.BLEND);\n      gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n      gl.flush();\n      gl.deleteTexture(texture);\n      gl.deleteTexture(maskTexture);\n      gl.deleteBuffer(buffer);\n      return canvas;\n    }\n\n    const figuresVertexShaderCode = \"\\\n    attribute vec2 a_position;                                    \\\n    attribute vec3 a_color;                                       \\\n                                                                  \\\n    uniform vec2 u_resolution;                                    \\\n    uniform vec2 u_scale;                                         \\\n    uniform vec2 u_offset;                                        \\\n                                                                  \\\n    varying vec4 v_color;                                         \\\n                                                                  \\\n    void main() {                                                 \\\n      vec2 position = (a_position + u_offset) * u_scale;          \\\n      vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n      gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                  \\\n      v_color = vec4(a_color / 255.0, 1.0);                       \\\n    }                                                             \";\n    const figuresFragmentShaderCode = \"\\\n    precision mediump float;                                      \\\n                                                                  \\\n    varying vec4 v_color;                                         \\\n                                                                  \\\n    void main() {                                                 \\\n      gl_FragColor = v_color;                                     \\\n    }                                                             \";\n    let figuresCache = null;\n\n    function initFiguresGL() {\n      generateGL();\n      const canvas = currentCanvas;\n      currentCanvas = null;\n      const gl = currentGL;\n      currentGL = null;\n      const vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n      const fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n      const program = createProgram(gl, [vertexShader, fragmentShader]);\n      gl.useProgram(program);\n      const cache = {};\n      cache.gl = gl;\n      cache.canvas = canvas;\n      cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n      cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n      cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n      cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n      cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n      figuresCache = cache;\n    }\n\n    function drawFigures(width, height, backgroundColor, figures, context) {\n      if (!figuresCache) {\n        initFiguresGL();\n      }\n\n      const cache = figuresCache,\n            canvas = cache.canvas,\n            gl = cache.gl;\n      canvas.width = width;\n      canvas.height = height;\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n      gl.uniform2f(cache.resolutionLocation, width, height);\n      let count = 0;\n\n      for (let i = 0, ii = figures.length; i < ii; i++) {\n        switch (figures[i].type) {\n          case \"lattice\":\n            const rows = figures[i].coords.length / figures[i].verticesPerRow | 0;\n            count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n            break;\n\n          case \"triangles\":\n            count += figures[i].coords.length;\n            break;\n        }\n      }\n\n      const coords = new Float32Array(count * 2);\n      const colors = new Uint8Array(count * 3);\n      const coordsMap = context.coords,\n            colorsMap = context.colors;\n      let pIndex = 0,\n          cIndex = 0;\n\n      for (let i = 0, ii = figures.length; i < ii; i++) {\n        const figure = figures[i],\n              ps = figure.coords,\n              cs = figure.colors;\n\n        switch (figure.type) {\n          case \"lattice\":\n            const cols = figure.verticesPerRow;\n            const rows = ps.length / cols | 0;\n\n            for (let row = 1; row < rows; row++) {\n              let offset = row * cols + 1;\n\n              for (let col = 1; col < cols; col++, offset++) {\n                coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n                coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n                coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n                coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n                coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n                coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n                colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n                colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n                colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n                colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n                colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n                colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n                colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n                colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n                colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n                coords[pIndex + 6] = coords[pIndex + 2];\n                coords[pIndex + 7] = coords[pIndex + 3];\n                coords[pIndex + 8] = coords[pIndex + 4];\n                coords[pIndex + 9] = coords[pIndex + 5];\n                coords[pIndex + 10] = coordsMap[ps[offset]];\n                coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n                colors[cIndex + 9] = colors[cIndex + 3];\n                colors[cIndex + 10] = colors[cIndex + 4];\n                colors[cIndex + 11] = colors[cIndex + 5];\n                colors[cIndex + 12] = colors[cIndex + 6];\n                colors[cIndex + 13] = colors[cIndex + 7];\n                colors[cIndex + 14] = colors[cIndex + 8];\n                colors[cIndex + 15] = colorsMap[cs[offset]];\n                colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n                colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n                pIndex += 12;\n                cIndex += 18;\n              }\n            }\n\n            break;\n\n          case \"triangles\":\n            for (let j = 0, jj = ps.length; j < jj; j++) {\n              coords[pIndex] = coordsMap[ps[j]];\n              coords[pIndex + 1] = coordsMap[ps[j] + 1];\n              colors[cIndex] = colorsMap[cs[j]];\n              colors[cIndex + 1] = colorsMap[cs[j] + 1];\n              colors[cIndex + 2] = colorsMap[cs[j] + 2];\n              pIndex += 2;\n              cIndex += 3;\n            }\n\n            break;\n        }\n      }\n\n      if (backgroundColor) {\n        gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);\n      } else {\n        gl.clearColor(0, 0, 0, 0);\n      }\n\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      const coordsBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(cache.positionLocation);\n      gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n      const colorsBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(cache.colorLocation);\n      gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);\n      gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n      gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n      gl.drawArrays(gl.TRIANGLES, 0, count);\n      gl.flush();\n      gl.deleteBuffer(coordsBuffer);\n      gl.deleteBuffer(colorsBuffer);\n      return canvas;\n    }\n\n    return {\n      tryInitGL() {\n        try {\n          generateGL();\n          return !!currentGL;\n        } catch (ex) {}\n\n        return false;\n      },\n\n      composeSMask,\n      drawFigures,\n\n      cleanup() {\n        if (smaskCache && smaskCache.canvas) { // lwf\n          smaskCache.canvas.width = 0;\n          smaskCache.canvas.height = 0;\n        }\n\n        if (figuresCache && figuresCache.canvas) { // lwf\n          figuresCache.canvas.width = 0;\n          figuresCache.canvas.height = 0;\n        }\n\n        smaskCache = null;\n        figuresCache = null;\n      }\n\n    };\n  }();\n\n  /***/ }),\n  /* 19 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.AnnotationLayer = void 0;\n\n  var _display_utils = __w_pdfjs_require__(1);\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _annotation_storage = __w_pdfjs_require__(8);\n\n  var _scripting_utils = __w_pdfjs_require__(20);\n\n  class AnnotationElementFactory {\n    static create(parameters) {\n      const subtype = parameters.data.annotationType;\n\n      switch (subtype) {\n        case _util.AnnotationType.LINK:\n          return new LinkAnnotationElement(parameters);\n\n        case _util.AnnotationType.TEXT:\n          return new TextAnnotationElement(parameters);\n\n        case _util.AnnotationType.WIDGET:\n          const fieldType = parameters.data.fieldType;\n\n          switch (fieldType) {\n            case \"Tx\":\n              return new TextWidgetAnnotationElement(parameters);\n\n            case \"Btn\":\n              if (parameters.data.radioButton) {\n                return new RadioButtonWidgetAnnotationElement(parameters);\n              } else if (parameters.data.checkBox) {\n                return new CheckboxWidgetAnnotationElement(parameters);\n              }\n\n              return new PushButtonWidgetAnnotationElement(parameters);\n\n            case \"Ch\":\n              return new ChoiceWidgetAnnotationElement(parameters);\n          }\n\n          return new WidgetAnnotationElement(parameters);\n\n        case _util.AnnotationType.POPUP:\n          return new PopupAnnotationElement(parameters);\n\n        case _util.AnnotationType.FREETEXT:\n          return new FreeTextAnnotationElement(parameters);\n\n        case _util.AnnotationType.LINE:\n          return new LineAnnotationElement(parameters);\n\n        case _util.AnnotationType.SQUARE:\n          return new SquareAnnotationElement(parameters);\n\n        case _util.AnnotationType.CIRCLE:\n          return new CircleAnnotationElement(parameters);\n\n        case _util.AnnotationType.POLYLINE:\n          return new PolylineAnnotationElement(parameters);\n\n        case _util.AnnotationType.CARET:\n          return new CaretAnnotationElement(parameters);\n\n        case _util.AnnotationType.INK:\n          return new InkAnnotationElement(parameters);\n\n        case _util.AnnotationType.POLYGON:\n          return new PolygonAnnotationElement(parameters);\n\n        case _util.AnnotationType.HIGHLIGHT:\n          return new HighlightAnnotationElement(parameters);\n\n        case _util.AnnotationType.UNDERLINE:\n          return new UnderlineAnnotationElement(parameters);\n\n        case _util.AnnotationType.SQUIGGLY:\n          return new SquigglyAnnotationElement(parameters);\n\n        case _util.AnnotationType.STRIKEOUT:\n          return new StrikeOutAnnotationElement(parameters);\n\n        case _util.AnnotationType.STAMP:\n          return new StampAnnotationElement(parameters);\n\n        case _util.AnnotationType.FILEATTACHMENT:\n          return new FileAttachmentAnnotationElement(parameters);\n\n        default:\n          return new AnnotationElement(parameters);\n      }\n    }\n\n  }\n\n  class AnnotationElement {\n    constructor(parameters, {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false\n    } = {}) {\n      this.isRenderable = isRenderable;\n      this.data = parameters.data;\n      this.layer = parameters.layer;\n      this.page = parameters.page;\n      this.viewport = parameters.viewport;\n      this.linkService = parameters.linkService;\n      this.downloadManager = parameters.downloadManager;\n      this.imageResourcesPath = parameters.imageResourcesPath;\n      this.renderInteractiveForms = parameters.renderInteractiveForms;\n      this.svgFactory = parameters.svgFactory;\n      this.annotationStorage = parameters.annotationStorage;\n      this.enableScripting = parameters.enableScripting;\n      this.hasJSActions = parameters.hasJSActions;\n      this._mouseState = parameters.mouseState;\n\n      if (isRenderable) {\n        this.container = this._createContainer(ignoreBorder);\n      }\n\n      if (createQuadrilaterals) {\n        this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n      }\n    }\n\n    _createContainer(ignoreBorder = false) {\n      const data = this.data,\n            page = this.page,\n            viewport = this.viewport;\n      const container = document.createElement(\"section\");\n      let width = data.rect[2] - data.rect[0];\n      let height = data.rect[3] - data.rect[1];\n      container.setAttribute(\"data-annotation-id\", data.id);\n\n      const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n      container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n      container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n      if (!ignoreBorder && data.borderStyle.width > 0) {\n        container.style.borderWidth = `${data.borderStyle.width}px`;\n\n        if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n          width = width - 2 * data.borderStyle.width;\n          height = height - 2 * data.borderStyle.width;\n        }\n\n        const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n        const verticalRadius = data.borderStyle.verticalCornerRadius;\n\n        if (horizontalRadius > 0 || verticalRadius > 0) {\n          const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n          container.style.borderRadius = radius;\n        }\n\n        switch (data.borderStyle.style) {\n          case _util.AnnotationBorderStyleType.SOLID:\n            container.style.borderStyle = \"solid\";\n            break;\n\n          case _util.AnnotationBorderStyleType.DASHED:\n            container.style.borderStyle = \"dashed\";\n            break;\n\n          case _util.AnnotationBorderStyleType.BEVELED:\n            (0, _util.warn)(\"Unimplemented border style: beveled\");\n            break;\n\n          case _util.AnnotationBorderStyleType.INSET:\n            (0, _util.warn)(\"Unimplemented border style: inset\");\n            break;\n\n          case _util.AnnotationBorderStyleType.UNDERLINE:\n            container.style.borderBottomStyle = \"solid\";\n            break;\n\n          default:\n            break;\n        }\n\n        if (data.color) {\n          container.style.borderColor = _util.Util.makeHexColor(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n        } else {\n          container.style.borderWidth = 0;\n        }\n      }\n\n      container.style.left = `${rect[0]}px`;\n      container.style.top = `${rect[1]}px`;\n      container.style.width = `${width}px`;\n      container.style.height = `${height}px`;\n      return container;\n    }\n\n    _createQuadrilaterals(ignoreBorder = false) {\n      if (!this.data.quadPoints) {\n        return null;\n      }\n\n      const quadrilaterals = [];\n      const savedRect = this.data.rect;\n\n      for (const quadPoint of this.data.quadPoints) {\n        this.data.rect = [quadPoint[2].x, quadPoint[2].y, quadPoint[1].x, quadPoint[1].y];\n        quadrilaterals.push(this._createContainer(ignoreBorder));\n      }\n\n      this.data.rect = savedRect;\n      return quadrilaterals;\n    }\n\n    _createPopup(trigger, data) {\n      let container = this.container;\n\n      if (this.quadrilaterals) {\n        trigger = trigger || this.quadrilaterals;\n        container = this.quadrilaterals[0];\n      }\n\n      if (!trigger) {\n        trigger = document.createElement(\"div\");\n        trigger.style.height = container.style.height;\n        trigger.style.width = container.style.width;\n        container.appendChild(trigger);\n      }\n\n      const popupElement = new PopupElement({\n        container,\n        trigger,\n        color: data.color,\n        title: data.title,\n        modificationDate: data.modificationDate,\n        contents: data.contents,\n        hideWrapper: true\n      });\n      const popup = popupElement.render();\n      popup.style.left = container.style.width;\n      container.appendChild(popup);\n    }\n\n    _renderQuadrilaterals(className) {\n      this.quadrilaterals.forEach(quadrilateral => {\n        quadrilateral.className = className;\n      });\n      return this.quadrilaterals;\n    }\n\n    render() {\n      (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n    }\n\n  }\n\n  class LinkAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action || parameters.data.isTooltipOnly || parameters.data.actions && (parameters.data.actions.Action || parameters.data.actions[\"Mouse Up\"] || parameters.data.actions[\"Mouse Down\"]));\n      super(parameters, {\n        isRenderable,\n        createQuadrilaterals: true\n      });\n    }\n\n    render() {\n      const {\n        data,\n        linkService\n      } = this;\n      const link = document.createElement(\"a\");\n\n      if (data.url) {\n        (0, _display_utils.addLinkAttributes)(link, {\n          url: data.url,\n          target: data.newWindow ? _display_utils.LinkTarget.BLANK : linkService.externalLinkTarget,\n          rel: linkService.externalLinkRel,\n          enabled: linkService.externalLinkEnabled\n        });\n      } else if (data.action) {\n        this._bindNamedAction(link, data.action);\n      } else if (data.dest) {\n        this._bindLink(link, data.dest);\n      } else if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n        this._bindJSAction(link, data);\n      } else {\n        this._bindLink(link, \"\");\n      }\n\n      if (this.quadrilaterals) {\n        return this._renderQuadrilaterals(\"linkAnnotation\").map((quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        });\n      }\n\n      this.container.className = \"linkAnnotation\";\n      this.container.appendChild(link);\n      return this.container;\n    }\n\n    _bindLink(link, destination) {\n      link.href = this.linkService.getDestinationHash(destination);\n\n      link.onclick = () => {\n        if (destination) {\n          this.linkService.goToDestination(destination);\n        }\n\n        return false;\n      };\n\n      if (destination || destination === \"\") {\n        link.className = \"internalLink\";\n      }\n    }\n\n    _bindNamedAction(link, action) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n\n      link.onclick = () => {\n        this.linkService.executeNamedAction(action);\n        return false;\n      };\n\n      link.className = \"internalLink\";\n    }\n\n    _bindJSAction(link, data) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n      const map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\n\n      for (const name of Object.keys(data.actions)) {\n        const jsName = map.get(name);\n\n        if (!jsName) {\n          continue;\n        }\n\n        link[jsName] = () => {\n          this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n            source: this,\n            detail: {\n              id: data.id,\n              name\n            }\n          });\n          return false;\n        };\n      }\n\n      link.className = \"internalLink\";\n    }\n\n  }\n\n  class TextAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable\n      });\n    }\n\n    render() {\n      this.container.className = \"textAnnotation\";\n      const image = document.createElement(\"img\");\n      image.style.height = this.container.style.height;\n      image.style.width = this.container.style.width;\n      image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n      image.alt = \"[{{type}} Annotation]\";\n      image.dataset.l10nId = \"text_annotation_type\";\n      image.dataset.l10nArgs = JSON.stringify({\n        type: this.data.name\n      });\n\n      if (!this.data.hasPopup) {\n        this._createPopup(image, this.data);\n      }\n\n      this.container.appendChild(image);\n      return this.container;\n    }\n\n  }\n\n  class WidgetAnnotationElement extends AnnotationElement {\n    render() {\n      if (this.data.alternativeText) {\n        this.container.title = this.data.alternativeText;\n      }\n\n      return this.container;\n    }\n\n    _getKeyModifier(event) {\n      return navigator.platform.includes(\"Win\") && event.ctrlKey || navigator.platform.includes(\"Mac\") && event.metaKey;\n    }\n\n    _setEventListener(element, baseName, eventName, valueGetter) {\n      if (baseName.includes(\"mouse\")) {\n        element.addEventListener(baseName, event => {\n          this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n            source: this,\n            detail: {\n              id: this.data.id,\n              name: eventName,\n              value: valueGetter(event),\n              shift: event.shiftKey,\n              modifier: this._getKeyModifier(event)\n            }\n          });\n        });\n      } else {\n        element.addEventListener(baseName, event => {\n          this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n            source: this,\n            detail: {\n              id: this.data.id,\n              name: eventName,\n              value: event.target.checked\n            }\n          });\n        });\n      }\n    }\n\n    _setEventListeners(element, names, getter) {\n      for (const [baseName, eventName] of names) {\n        if (eventName === \"Action\" || this.data.actions && this.data.actions[eventName]) { // lwf\n          this._setEventListener(element, baseName, eventName, getter);\n        }\n      }\n    }\n\n  }\n\n  class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n    constructor(parameters) {\n      const isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n      super(parameters, {\n        isRenderable\n      });\n    }\n\n    render() {\n      const storage = this.annotationStorage;\n      const id = this.data.id;\n      this.container.className = \"textWidgetAnnotation\";\n      let element = null;\n\n      if (this.renderInteractiveForms) {\n        const textContent = storage.getOrCreateValue(id, {\n          value: this.data.fieldValue\n        }).value;\n        const elementData = {\n          userValue: null,\n          formattedValue: null,\n          beforeInputSelectionRange: null,\n          beforeInputValue: null\n        };\n\n        if (this.data.multiLine) {\n          element = document.createElement(\"textarea\");\n          element.textContent = textContent;\n        } else {\n          element = document.createElement(\"input\");\n          element.type = \"text\";\n          element.setAttribute(\"value\", textContent);\n        }\n\n        elementData.userValue = textContent;\n        element.setAttribute(\"id\", id);\n        element.addEventListener(\"input\", function (event) {\n          storage.setValue(id, {\n            value: event.target.value\n          });\n        });\n\n        let blurListener = event => {\n          if (elementData.formattedValue) {\n            event.target.value = elementData.formattedValue;\n          }\n\n          event.target.setSelectionRange(0, 0);\n          elementData.beforeInputSelectionRange = null;\n        };\n\n        if (this.enableScripting && this.hasJSActions) {\n          element.addEventListener(\"focus\", event => {\n            if (elementData.userValue) {\n              event.target.value = elementData.userValue;\n            }\n          });\n          element.addEventListener(\"updatefromsandbox\", function (event) {\n            const {\n              detail\n            } = event;\n            const actions = {\n              value() {\n                elementData.userValue = detail.value || \"\";\n                storage.setValue(id, {\n                  value: elementData.userValue.toString()\n                });\n\n                if (!elementData.formattedValue) {\n                  event.target.value = elementData.userValue;\n                }\n              },\n\n              valueAsString() {\n                elementData.formattedValue = detail.valueAsString || \"\";\n\n                if (event.target !== document.activeElement) {\n                  event.target.value = elementData.formattedValue;\n                }\n\n                storage.setValue(id, {\n                  formattedValue: elementData.formattedValue\n                });\n              },\n\n              focus() {\n                setTimeout(() => event.target.focus({\n                  preventScroll: false\n                }), 0);\n              },\n\n              userName() {\n                event.target.title = detail.userName;\n              },\n\n              hidden() {\n                event.target.style.visibility = detail.hidden ? \"hidden\" : \"visible\";\n                storage.setValue(id, {\n                  hidden: detail.hidden\n                });\n              },\n\n              editable() {\n                event.target.disabled = !detail.editable;\n              },\n\n              selRange() {\n                const [selStart, selEnd] = detail.selRange;\n\n                if (selStart >= 0 && selEnd < event.target.value.length) {\n                  event.target.setSelectionRange(selStart, selEnd);\n                }\n              },\n\n              strokeColor() {\n                const color = detail.strokeColor;\n                event.target.style.color = _scripting_utils.ColorConverters[`${color[0]}_HTML`](color.slice(1));\n              }\n\n            };\n            Object.keys(detail).filter(name => name in actions).forEach(name => actions[name]());\n          });\n\n          if (this.data.actions) {\n            element.addEventListener(\"keydown\", event => {\n              elementData.beforeInputValue = event.target.value;\n              let commitKey = -1;\n\n              if (event.key === \"Escape\") {\n                commitKey = 0;\n              } else if (event.key === \"Enter\") {\n                commitKey = 2;\n              } else if (event.key === \"Tab\") {\n                commitKey = 3;\n              }\n\n              if (commitKey === -1) {\n                return;\n              }\n\n              elementData.userValue = event.target.value;\n              this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n                source: this,\n                detail: {\n                  id,\n                  name: \"Keystroke\",\n                  value: event.target.value,\n                  willCommit: true,\n                  commitKey,\n                  selStart: event.target.selectionStart,\n                  selEnd: event.target.selectionEnd\n                }\n              });\n            });\n            const _blurListener = blurListener;\n            blurListener = null;\n            element.addEventListener(\"blur\", event => {\n              if (this._mouseState.isDown) {\n                elementData.userValue = event.target.value;\n                this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n                  source: this,\n                  detail: {\n                    id,\n                    name: \"Keystroke\",\n                    value: event.target.value,\n                    willCommit: true,\n                    commitKey: 1,\n                    selStart: event.target.selectionStart,\n                    selEnd: event.target.selectionEnd\n                  }\n                });\n              }\n\n              _blurListener(event);\n            });\n            element.addEventListener(\"mousedown\", event => {\n              elementData.beforeInputValue = event.target.value;\n              elementData.beforeInputSelectionRange = null;\n            });\n            element.addEventListener(\"keyup\", event => {\n              if (event.target.selectionStart === event.target.selectionEnd) {\n                elementData.beforeInputSelectionRange = null;\n              }\n            });\n            element.addEventListener(\"select\", event => {\n              elementData.beforeInputSelectionRange = [event.target.selectionStart, event.target.selectionEnd];\n            });\n\n            if (\"Keystroke\" in this.data.actions) {\n              element.addEventListener(\"input\", event => {\n                let selStart = -1;\n                let selEnd = -1;\n\n                if (elementData.beforeInputSelectionRange) {\n                  [selStart, selEnd] = elementData.beforeInputSelectionRange;\n                }\n\n                this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n                  source: this,\n                  detail: {\n                    id,\n                    name: \"Keystroke\",\n                    value: elementData.beforeInputValue,\n                    change: event.data,\n                    willCommit: false,\n                    selStart,\n                    selEnd\n                  }\n                });\n              });\n            }\n\n            this._setEventListeners(element, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.value);\n          }\n        }\n\n        if (blurListener) {\n          element.addEventListener(\"blur\", blurListener);\n        }\n\n        element.disabled = this.data.readOnly;\n        element.name = this.data.fieldName;\n\n        if (this.data.maxLen !== null) {\n          element.maxLength = this.data.maxLen;\n        }\n\n        if (this.data.comb) {\n          const fieldWidth = this.data.rect[2] - this.data.rect[0];\n          const combWidth = fieldWidth / this.data.maxLen;\n          element.classList.add(\"comb\");\n          element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n        }\n      } else {\n        element = document.createElement(\"div\");\n        element.textContent = this.data.fieldValue;\n        element.style.verticalAlign = \"middle\";\n        element.style.display = \"table-cell\";\n      }\n\n      this._setTextStyle(element);\n\n      this.container.appendChild(element);\n      return this.container;\n    }\n\n    _setTextStyle(element) {\n      const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n      const {\n        fontSize,\n        fontColor\n      } = this.data.defaultAppearanceData;\n      const style = element.style;\n\n      if (fontSize) {\n        style.fontSize = `${fontSize}px`;\n      }\n\n      style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n      if (this.data.textAlignment !== null) {\n        style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n      }\n    }\n\n  }\n\n  class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n    constructor(parameters) {\n      super(parameters, {\n        isRenderable: parameters.renderInteractiveForms\n      });\n    }\n\n    render() {\n      const storage = this.annotationStorage;\n      const data = this.data;\n      const id = data.id;\n      const value = storage.getOrCreateValue(id, {\n        value: data.fieldValue && data.fieldValue !== \"Off\"\n      }).value;\n      this.container.className = \"buttonWidgetAnnotation checkBox\";\n      const element = document.createElement(\"input\");\n      element.disabled = data.readOnly;\n      element.type = \"checkbox\";\n      element.name = this.data.fieldName;\n\n      if (value) {\n        element.setAttribute(\"checked\", true);\n      }\n\n      element.setAttribute(\"id\", id);\n      element.addEventListener(\"change\", function (event) {\n        const name = event.target.name;\n\n        for (const checkbox of document.getElementsByName(name)) {\n          if (checkbox !== event.target) {\n            checkbox.checked = false;\n            storage.setValue(checkbox.parentNode.getAttribute(\"data-annotation-id\"), {\n              value: false\n            });\n          }\n        }\n\n        storage.setValue(id, {\n          value: event.target.checked\n        });\n      });\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"updatefromsandbox\", event => {\n          const {\n            detail\n          } = event;\n          const actions = {\n            value() {\n              event.target.checked = detail.value !== \"Off\";\n              storage.setValue(id, {\n                value: event.target.checked\n              });\n            },\n\n            focus() {\n              setTimeout(() => event.target.focus({\n                preventScroll: false\n              }), 0);\n            },\n\n            hidden() {\n              event.target.style.visibility = detail.hidden ? \"hidden\" : \"visible\";\n              storage.setValue(id, {\n                hidden: detail.hidden\n              });\n            },\n\n            editable() {\n              event.target.disabled = !detail.editable;\n            }\n\n          };\n          Object.keys(detail).filter(name => name in actions).forEach(name => actions[name]());\n        });\n\n        this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n      }\n\n      this.container.appendChild(element);\n      return this.container;\n    }\n\n  }\n\n  class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n    constructor(parameters) {\n      super(parameters, {\n        isRenderable: parameters.renderInteractiveForms\n      });\n    }\n\n    render() {\n      this.container.className = \"buttonWidgetAnnotation radioButton\";\n      const storage = this.annotationStorage;\n      const data = this.data;\n      const id = data.id;\n      const value = storage.getOrCreateValue(id, {\n        value: data.fieldValue === data.buttonValue\n      }).value;\n      const element = document.createElement(\"input\");\n      element.disabled = data.readOnly;\n      element.type = \"radio\";\n      element.name = data.fieldName;\n\n      if (value) {\n        element.setAttribute(\"checked\", true);\n      }\n\n      element.setAttribute(\"pdfButtonValue\", data.buttonValue);\n      element.setAttribute(\"id\", id);\n      element.addEventListener(\"change\", function (event) {\n        const {\n          target\n        } = event;\n\n        for (const radio of document.getElementsByName(target.name)) {\n          if (radio !== target) {\n            storage.setValue(radio.getAttribute(\"id\"), {\n              value: false\n            });\n          }\n        }\n\n        storage.setValue(id, {\n          value: target.checked\n        });\n      });\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"updatefromsandbox\", event => {\n          const {\n            detail\n          } = event;\n          const actions = {\n            value() {\n              const fieldValue = detail.value;\n\n              for (const radio of document.getElementsByName(event.target.name)) {\n                const radioId = radio.getAttribute(\"id\");\n\n                if (fieldValue === radio.getAttribute(\"pdfButtonValue\")) {\n                  radio.setAttribute(\"checked\", true);\n                  storage.setValue(radioId, {\n                    value: true\n                  });\n                } else {\n                  storage.setValue(radioId, {\n                    value: false\n                  });\n                }\n              }\n            },\n\n            focus() {\n              setTimeout(() => event.target.focus({\n                preventScroll: false\n              }), 0);\n            },\n\n            hidden() {\n              event.target.style.visibility = detail.hidden ? \"hidden\" : \"visible\";\n              storage.setValue(id, {\n                hidden: detail.hidden\n              });\n            },\n\n            editable() {\n              event.target.disabled = !detail.editable;\n            }\n\n          };\n          Object.keys(detail).filter(name => name in actions).forEach(name => actions[name]());\n        });\n\n        this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n      }\n\n      this.container.appendChild(element);\n      return this.container;\n    }\n\n  }\n\n  class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n    render() {\n      const container = super.render();\n      container.className = \"buttonWidgetAnnotation pushButton\";\n\n      if (this.data.alternativeText) {\n        container.title = this.data.alternativeText;\n      }\n\n      return container;\n    }\n\n  }\n\n  class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n    constructor(parameters) {\n      super(parameters, {\n        isRenderable: parameters.renderInteractiveForms\n      });\n    }\n\n    render() {\n      this.container.className = \"choiceWidgetAnnotation\";\n      const storage = this.annotationStorage;\n      const id = this.data.id;\n      storage.getOrCreateValue(id, {\n        value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined\n      });\n      const selectElement = document.createElement(\"select\");\n      selectElement.disabled = this.data.readOnly;\n      selectElement.name = this.data.fieldName;\n      selectElement.setAttribute(\"id\", id);\n\n      if (!this.data.combo) {\n        selectElement.size = this.data.options.length;\n\n        if (this.data.multiSelect) {\n          selectElement.multiple = true;\n        }\n      }\n\n      for (const option of this.data.options) {\n        const optionElement = document.createElement(\"option\");\n        optionElement.textContent = option.displayValue;\n        optionElement.value = option.exportValue;\n\n        if (this.data.fieldValue.includes(option.exportValue)) {\n          optionElement.setAttribute(\"selected\", true);\n        }\n\n        selectElement.appendChild(optionElement);\n      }\n\n      function getValue(event) {\n        const options = event.target.options;\n        return options[options.selectedIndex].value;\n      }\n\n      if (this.enableScripting && this.hasJSActions) {\n        selectElement.addEventListener(\"updatefromsandbox\", event => {\n          const {\n            detail\n          } = event;\n          const actions = {\n            value() {\n              const options = event.target.options;\n              const value = detail.value;\n              const i = options.indexOf(value);\n\n              if (i !== -1) {\n                options.selectedIndex = i;\n                storage.setValue(id, {\n                  value\n                });\n              }\n            },\n\n            focus() {\n              setTimeout(() => event.target.focus({\n                preventScroll: false\n              }), 0);\n            },\n\n            hidden() {\n              event.target.style.visibility = detail.hidden ? \"hidden\" : \"visible\";\n              storage.setValue(id, {\n                hidden: detail.hidden\n              });\n            },\n\n            editable() {\n              event.target.disabled = !detail.editable;\n            }\n\n          };\n          Object.keys(detail).filter(name => name in actions).forEach(name => actions[name]());\n        });\n        selectElement.addEventListener(\"input\", event => {\n          const value = getValue(event);\n          storage.setValue(id, {\n            value\n          });\n          this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { //lwf\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              changeEx: value,\n              willCommit: true,\n              commitKey: 1,\n              keyDown: false\n            }\n          });\n        });\n\n        this._setEventListeners(selectElement, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n      } else {\n        selectElement.addEventListener(\"input\", function (event) {\n          storage.setValue(id, {\n            value: getValue(event)\n          });\n        });\n      }\n\n      this.container.appendChild(selectElement);\n      return this.container;\n    }\n\n  }\n\n  class PopupAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable\n      });\n    }\n\n    render() {\n      const IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n      this.container.className = \"popupAnnotation\";\n\n      if (IGNORE_TYPES.includes(this.data.parentType)) {\n        return this.container;\n      }\n\n      const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n      const parentElements = this.layer.querySelectorAll(selector);\n\n      if (parentElements.length === 0) {\n        return this.container;\n      }\n\n      const popup = new PopupElement({\n        container: this.container,\n        trigger: Array.from(parentElements),\n        color: this.data.color,\n        title: this.data.title,\n        modificationDate: this.data.modificationDate,\n        contents: this.data.contents\n      });\n      const page = this.page;\n\n      const rect = _util.Util.normalizeRect([this.data.parentRect[0], page.view[3] - this.data.parentRect[1] + page.view[1], this.data.parentRect[2], page.view[3] - this.data.parentRect[3] + page.view[1]]);\n\n      const popupLeft = rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n      const popupTop = rect[1];\n      this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n      this.container.style.left = `${popupLeft}px`;\n      this.container.style.top = `${popupTop}px`;\n      this.container.appendChild(popup.render());\n      return this.container;\n    }\n\n  }\n\n  class PopupElement {\n    constructor(parameters) {\n      this.container = parameters.container;\n      this.trigger = parameters.trigger;\n      this.color = parameters.color;\n      this.title = parameters.title;\n      this.modificationDate = parameters.modificationDate;\n      this.contents = parameters.contents;\n      this.hideWrapper = parameters.hideWrapper || false;\n      this.pinned = false;\n    }\n\n    render() {\n      const BACKGROUND_ENLIGHT = 0.7;\n      const wrapper = document.createElement(\"div\");\n      wrapper.className = \"popupWrapper\";\n      this.hideElement = this.hideWrapper ? wrapper : this.container;\n      this.hideElement.setAttribute(\"hidden\", true);\n      const popup = document.createElement(\"div\");\n      popup.className = \"popup\";\n      const color = this.color;\n\n      if (color) {\n        const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n        const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n        const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n        popup.style.backgroundColor = _util.Util.makeHexColor(r | 0, g | 0, b | 0);\n      }\n\n      const title = document.createElement(\"h1\");\n      title.textContent = this.title;\n      popup.appendChild(title);\n\n      const dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n\n      if (dateObject) {\n        const modificationDate = document.createElement(\"span\");\n        modificationDate.textContent = \"{{date}}, {{time}}\";\n        modificationDate.dataset.l10nId = \"annotation_date_string\";\n        modificationDate.dataset.l10nArgs = JSON.stringify({\n          date: dateObject.toLocaleDateString(),\n          time: dateObject.toLocaleTimeString()\n        });\n        popup.appendChild(modificationDate);\n      }\n\n      const contents = this._formatContents(this.contents);\n\n      popup.appendChild(contents);\n\n      if (!Array.isArray(this.trigger)) {\n        this.trigger = [this.trigger];\n      }\n\n      this.trigger.forEach(element => {\n        element.addEventListener(\"click\", this._toggle.bind(this));\n        element.addEventListener(\"mouseover\", this._show.bind(this, false));\n        element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n      });\n      popup.addEventListener(\"click\", this._hide.bind(this, true));\n      wrapper.appendChild(popup);\n      return wrapper;\n    }\n\n    _formatContents(contents) {\n      const p = document.createElement(\"p\");\n      const lines = contents.split(/(?:\\r\\n?|\\n)/);\n\n      for (let i = 0, ii = lines.length; i < ii; ++i) {\n        const line = lines[i];\n        p.appendChild(document.createTextNode(line));\n\n        if (i < ii - 1) {\n          p.appendChild(document.createElement(\"br\"));\n        }\n      }\n\n      return p;\n    }\n\n    _toggle() {\n      if (this.pinned) {\n        this._hide(true);\n      } else {\n        this._show(true);\n      }\n    }\n\n    _show(pin = false) {\n      if (pin) {\n        this.pinned = true;\n      }\n\n      if (this.hideElement.hasAttribute(\"hidden\")) {\n        this.hideElement.removeAttribute(\"hidden\");\n        this.container.style.zIndex += 1;\n      }\n    }\n\n    _hide(unpin = true) {\n      if (unpin) {\n        this.pinned = false;\n      }\n\n      if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n        this.hideElement.setAttribute(\"hidden\", true);\n        this.container.style.zIndex -= 1;\n      }\n    }\n\n  }\n\n  class FreeTextAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"freeTextAnnotation\";\n\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      return this.container;\n    }\n\n  }\n\n  class LineAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"lineAnnotation\";\n      const data = this.data;\n      const width = data.rect[2] - data.rect[0];\n      const height = data.rect[3] - data.rect[1];\n      const svg = this.svgFactory.create(width, height);\n      const line = this.svgFactory.createElement(\"svg:line\");\n      line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n      line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n      line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n      line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n      line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      line.setAttribute(\"stroke\", \"transparent\");\n      svg.appendChild(line);\n      this.container.append(svg);\n\n      this._createPopup(line, data);\n\n      return this.container;\n    }\n\n  }\n\n  class SquareAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"squareAnnotation\";\n      const data = this.data;\n      const width = data.rect[2] - data.rect[0];\n      const height = data.rect[3] - data.rect[1];\n      const svg = this.svgFactory.create(width, height);\n      const borderWidth = data.borderStyle.width;\n      const square = this.svgFactory.createElement(\"svg:rect\");\n      square.setAttribute(\"x\", borderWidth / 2);\n      square.setAttribute(\"y\", borderWidth / 2);\n      square.setAttribute(\"width\", width - borderWidth);\n      square.setAttribute(\"height\", height - borderWidth);\n      square.setAttribute(\"stroke-width\", borderWidth || 1);\n      square.setAttribute(\"stroke\", \"transparent\");\n      square.setAttribute(\"fill\", \"none\");\n      svg.appendChild(square);\n      this.container.append(svg);\n\n      this._createPopup(square, data);\n\n      return this.container;\n    }\n\n  }\n\n  class CircleAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"circleAnnotation\";\n      const data = this.data;\n      const width = data.rect[2] - data.rect[0];\n      const height = data.rect[3] - data.rect[1];\n      const svg = this.svgFactory.create(width, height);\n      const borderWidth = data.borderStyle.width;\n      const circle = this.svgFactory.createElement(\"svg:ellipse\");\n      circle.setAttribute(\"cx\", width / 2);\n      circle.setAttribute(\"cy\", height / 2);\n      circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n      circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n      circle.setAttribute(\"stroke-width\", borderWidth || 1);\n      circle.setAttribute(\"stroke\", \"transparent\");\n      circle.setAttribute(\"fill\", \"none\");\n      svg.appendChild(circle);\n      this.container.append(svg);\n\n      this._createPopup(circle, data);\n\n      return this.container;\n    }\n\n  }\n\n  class PolylineAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n      this.containerClassName = \"polylineAnnotation\";\n      this.svgElementName = \"svg:polyline\";\n    }\n\n    render() {\n      this.container.className = this.containerClassName;\n      const data = this.data;\n      const width = data.rect[2] - data.rect[0];\n      const height = data.rect[3] - data.rect[1];\n      const svg = this.svgFactory.create(width, height);\n      let points = [];\n\n      for (const coordinate of data.vertices) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(x + \",\" + y);\n      }\n\n      points = points.join(\" \");\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n      svg.appendChild(polyline);\n      this.container.append(svg);\n\n      this._createPopup(polyline, data);\n\n      return this.container;\n    }\n\n  }\n\n  class PolygonAnnotationElement extends PolylineAnnotationElement {\n    constructor(parameters) {\n      super(parameters);\n      this.containerClassName = \"polygonAnnotation\";\n      this.svgElementName = \"svg:polygon\";\n    }\n\n  }\n\n  class CaretAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"caretAnnotation\";\n\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      return this.container;\n    }\n\n  }\n\n  class InkAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n      this.containerClassName = \"inkAnnotation\";\n      this.svgElementName = \"svg:polyline\";\n    }\n\n    render() {\n      this.container.className = this.containerClassName;\n      const data = this.data;\n      const width = data.rect[2] - data.rect[0];\n      const height = data.rect[3] - data.rect[1];\n      const svg = this.svgFactory.create(width, height);\n\n      for (const inkList of data.inkLists) {\n        let points = [];\n\n        for (const coordinate of inkList) {\n          const x = coordinate.x - data.rect[0];\n          const y = data.rect[3] - coordinate.y;\n          points.push(`${x},${y}`);\n        }\n\n        points = points.join(\" \");\n        const polyline = this.svgFactory.createElement(this.svgElementName);\n        polyline.setAttribute(\"points\", points);\n        polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n        polyline.setAttribute(\"stroke\", \"transparent\");\n        polyline.setAttribute(\"fill\", \"none\");\n\n        this._createPopup(polyline, data);\n\n        svg.appendChild(polyline);\n      }\n\n      this.container.append(svg);\n      return this.container;\n    }\n\n  }\n\n  class HighlightAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true,\n        createQuadrilaterals: true\n      });\n    }\n\n    render() {\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      if (this.quadrilaterals) {\n        return this._renderQuadrilaterals(\"highlightAnnotation\");\n      }\n\n      this.container.className = \"highlightAnnotation\";\n      return this.container;\n    }\n\n  }\n\n  class UnderlineAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true,\n        createQuadrilaterals: true\n      });\n    }\n\n    render() {\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      if (this.quadrilaterals) {\n        return this._renderQuadrilaterals(\"underlineAnnotation\");\n      }\n\n      this.container.className = \"underlineAnnotation\";\n      return this.container;\n    }\n\n  }\n\n  class SquigglyAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true,\n        createQuadrilaterals: true\n      });\n    }\n\n    render() {\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      if (this.quadrilaterals) {\n        return this._renderQuadrilaterals(\"squigglyAnnotation\");\n      }\n\n      this.container.className = \"squigglyAnnotation\";\n      return this.container;\n    }\n\n  }\n\n  class StrikeOutAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true,\n        createQuadrilaterals: true\n      });\n    }\n\n    render() {\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      if (this.quadrilaterals) {\n        return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n      }\n\n      this.container.className = \"strikeoutAnnotation\";\n      return this.container;\n    }\n\n  }\n\n  class StampAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"stampAnnotation\";\n\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      return this.container;\n    }\n\n  }\n\n  class FileAttachmentAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      super(parameters, {\n        isRenderable: true\n      });\n      const {\n        filename,\n        content\n      } = this.data.file;\n      this.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n      this.content = content;\n      this.linkService.eventBus && this.linkService.eventBus.dispatch(\"fileattachmentannotation\", { // lwf\n        source: this,\n        id: (0, _util.stringToPDFString)(filename),\n        filename,\n        content\n      });\n    }\n\n    render() {\n      this.container.className = \"fileAttachmentAnnotation\";\n      const trigger = document.createElement(\"div\");\n      trigger.style.height = this.container.style.height;\n      trigger.style.width = this.container.style.width;\n      trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n      if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n        this._createPopup(trigger, this.data);\n      }\n\n      this.container.appendChild(trigger);\n      return this.container;\n    }\n\n    _download() {\n      if (!this.downloadManager) {\n        (0, _util.warn)(\"Download cannot be started due to unavailable download manager\");\n        return;\n      }\n\n      this.downloadManager.downloadData(this.content, this.filename, \"\");\n    }\n\n  }\n\n  class AnnotationLayer {\n    static render(parameters) {\n      const sortedAnnotations = [],\n            popupAnnotations = [];\n\n      for (const data of parameters.annotations) {\n        if (!data) {\n          continue;\n        }\n\n        if (data.annotationType === _util.AnnotationType.POPUP) {\n          popupAnnotations.push(data);\n          continue;\n        }\n\n        sortedAnnotations.push(data);\n      }\n\n      if (popupAnnotations.length) {\n        sortedAnnotations.push(...popupAnnotations);\n      }\n\n      for (const data of sortedAnnotations) {\n        const element = AnnotationElementFactory.create({\n          data,\n          layer: parameters.div,\n          page: parameters.page,\n          viewport: parameters.viewport,\n          linkService: parameters.linkService,\n          downloadManager: parameters.downloadManager,\n          imageResourcesPath: parameters.imageResourcesPath || \"\",\n          renderInteractiveForms: typeof parameters.renderInteractiveForms === \"boolean\" ? parameters.renderInteractiveForms : true,\n          svgFactory: new _display_utils.DOMSVGFactory(),\n          annotationStorage: parameters.annotationStorage || new _annotation_storage.AnnotationStorage(),\n          enableScripting: parameters.enableScripting,\n          hasJSActions: parameters.hasJSActions,\n          mouseState: parameters.mouseState || {\n            isDown: false\n          }\n        });\n\n        if (element.isRenderable) {\n          const rendered = element.render();\n\n          if (data.hidden) {\n            rendered.style.visibility = \"hidden\";\n          }\n\n          if (Array.isArray(rendered)) {\n            for (const renderedElement of rendered) {\n              parameters.div.appendChild(renderedElement);\n            }\n          } else {\n            if (element instanceof PopupAnnotationElement) {\n              parameters.div.prepend(rendered);\n            } else {\n              parameters.div.appendChild(rendered);\n            }\n          }\n        }\n      }\n    }\n\n    static update(parameters) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n\n      for (const data of parameters.annotations) {\n        const elements = parameters.div.querySelectorAll(`[data-annotation-id=\"${data.id}\"]`);\n\n        if (elements) {\n          elements.forEach(element => {\n            element.style.transform = transform;\n          });\n        }\n      }\n\n      parameters.div.removeAttribute(\"hidden\");\n    }\n\n  }\n\n  exports.AnnotationLayer = AnnotationLayer;\n\n  /***/ }),\n  /* 20 */\n  /***/ ((__unused_webpack_module, exports) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.ColorConverters = void 0;\n\n  function makeColorComp(n) {\n    return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n  }\n\n  class ColorConverters {\n    static CMYK_G([c, y, m, k]) {\n      return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n    }\n\n    static G_CMYK([g]) {\n      return [\"CMYK\", 0, 0, 0, 1 - g];\n    }\n\n    static G_RGB([g]) {\n      return [\"RGB\", g, g, g];\n    }\n\n    static G_HTML([g]) {\n      const G = makeColorComp(g);\n      return `#${G}${G}${G}`;\n    }\n\n    static RGB_G([r, g, b]) {\n      return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n    }\n\n    static RGB_HTML([r, g, b]) {\n      const R = makeColorComp(r);\n      const G = makeColorComp(g);\n      const B = makeColorComp(b);\n      return `#${R}${G}${B}`;\n    }\n\n    static T_HTML() {\n      return \"#00000000\";\n    }\n\n    static CMYK_RGB([c, y, m, k]) {\n      return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n    }\n\n    static CMYK_HTML(components) {\n      return this.RGB_HTML(this.CMYK_RGB(components));\n    }\n\n    static RGB_CMYK([r, g, b]) {\n      const c = 1 - r;\n      const m = 1 - g;\n      const y = 1 - b;\n      const k = Math.min(c, m, y);\n      return [\"CMYK\", c, m, y, k];\n    }\n\n  }\n\n  exports.ColorConverters = ColorConverters;\n\n  /***/ }),\n  /* 21 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.renderTextLayer = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  const renderTextLayer = function renderTextLayerClosure() {\n    const MAX_TEXT_DIVS_TO_RENDER = 100000;\n    const NonWhitespaceRegexp = /\\S/;\n\n    function isAllWhitespace(str) {\n      return !NonWhitespaceRegexp.test(str);\n    }\n\n    function appendText(task, geom, styles) {\n      const textDiv = document.createElement(\"span\");\n      const textDivProperties = {\n        angle: 0,\n        canvasWidth: 0,\n        isWhitespace: false,\n        originalTransform: null,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        scale: 1\n      };\n\n      task._textDivs.push(textDiv);\n\n      if (isAllWhitespace(geom.str)) {\n        textDivProperties.isWhitespace = true;\n\n        task._textDivProperties.set(textDiv, textDivProperties);\n\n        return;\n      }\n\n      const tx = _util.Util.transform(task._viewport.transform, geom.transform);\n\n      let angle = Math.atan2(tx[1], tx[0]);\n      const style = styles[geom.fontName];\n\n      if (style.vertical) {\n        angle += Math.PI / 2;\n      }\n\n      const fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n      let fontAscent = fontHeight;\n\n      if (style.ascent) {\n        fontAscent = style.ascent * fontAscent;\n      } else if (style.descent) {\n        fontAscent = (1 + style.descent) * fontAscent;\n      }\n\n      let left, top;\n\n      if (angle === 0) {\n        left = tx[4];\n        top = tx[5] - fontAscent;\n      } else {\n        left = tx[4] + fontAscent * Math.sin(angle);\n        top = tx[5] - fontAscent * Math.cos(angle);\n      }\n\n      textDiv.style.left = `${left}px`;\n      textDiv.style.top = `${top}px`;\n      textDiv.style.fontSize = `${fontHeight}px`;\n      textDiv.style.fontFamily = style.fontFamily;\n      textDiv.textContent = geom.str;\n\n      if (task._fontInspectorEnabled) {\n        textDiv.dataset.fontName = geom.fontName;\n      }\n\n      if (angle !== 0) {\n        textDivProperties.angle = angle * (180 / Math.PI);\n      }\n\n      let shouldScaleText = false;\n\n      if (geom.str.length > 1) {\n        shouldScaleText = true;\n      } else if (geom.transform[0] !== geom.transform[3]) {\n        const absScaleX = Math.abs(geom.transform[0]),\n              absScaleY = Math.abs(geom.transform[3]);\n\n        if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n          shouldScaleText = true;\n        }\n      }\n\n      if (shouldScaleText) {\n        if (style.vertical) {\n          textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n        } else {\n          textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n        }\n      }\n\n      task._textDivProperties.set(textDiv, textDivProperties);\n\n      if (task._textContentStream) {\n        task._layoutText(textDiv);\n      }\n\n      if (task._enhanceTextSelection) {\n        let angleCos = 1,\n            angleSin = 0;\n\n        if (angle !== 0) {\n          angleCos = Math.cos(angle);\n          angleSin = Math.sin(angle);\n        }\n\n        const divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n        const divHeight = fontHeight;\n        let m, b;\n\n        if (angle !== 0) {\n          m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n          b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n        } else {\n          b = [left, top, left + divWidth, top + divHeight];\n        }\n\n        task._bounds.push({\n          left: b[0],\n          top: b[1],\n          right: b[2],\n          bottom: b[3],\n          div: textDiv,\n          size: [divWidth, divHeight],\n          m\n        });\n      }\n    }\n\n    function render(task) {\n      if (task._canceled) {\n        return;\n      }\n\n      const textDivs = task._textDivs;\n      const capability = task._capability;\n      const textDivsLength = textDivs.length;\n\n      if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n        task._renderingDone = true;\n        capability.resolve();\n        return;\n      }\n\n      if (!task._textContentStream) {\n        for (let i = 0; i < textDivsLength; i++) {\n          task._layoutText(textDivs[i]);\n        }\n      }\n\n      task._renderingDone = true;\n      capability.resolve();\n    }\n\n    function findPositiveMin(ts, offset, count) {\n      let result = 0;\n\n      for (let i = 0; i < count; i++) {\n        const t = ts[offset++];\n\n        if (t > 0) {\n          result = result ? Math.min(t, result) : t;\n        }\n      }\n\n      return result;\n    }\n\n    function expand(task) {\n      const bounds = task._bounds;\n      const viewport = task._viewport;\n      const expanded = expandBounds(viewport.width, viewport.height, bounds);\n\n      for (let i = 0; i < expanded.length; i++) {\n        const div = bounds[i].div;\n\n        const divProperties = task._textDivProperties.get(div);\n\n        if (divProperties.angle === 0) {\n          divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n          divProperties.paddingTop = bounds[i].top - expanded[i].top;\n          divProperties.paddingRight = expanded[i].right - bounds[i].right;\n          divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n\n          task._textDivProperties.set(div, divProperties);\n\n          continue;\n        }\n\n        const e = expanded[i],\n              b = bounds[i];\n        const m = b.m,\n              c = m[0],\n              s = m[1];\n        const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n        const ts = new Float64Array(64);\n        points.forEach(function (p, j) {\n          const t = _util.Util.applyTransform(p, m);\n\n          ts[j + 0] = c && (e.left - t[0]) / c;\n          ts[j + 4] = s && (e.top - t[1]) / s;\n          ts[j + 8] = c && (e.right - t[0]) / c;\n          ts[j + 12] = s && (e.bottom - t[1]) / s;\n          ts[j + 16] = s && (e.left - t[0]) / -s;\n          ts[j + 20] = c && (e.top - t[1]) / c;\n          ts[j + 24] = s && (e.right - t[0]) / -s;\n          ts[j + 28] = c && (e.bottom - t[1]) / c;\n          ts[j + 32] = c && (e.left - t[0]) / -c;\n          ts[j + 36] = s && (e.top - t[1]) / -s;\n          ts[j + 40] = c && (e.right - t[0]) / -c;\n          ts[j + 44] = s && (e.bottom - t[1]) / -s;\n          ts[j + 48] = s && (e.left - t[0]) / s;\n          ts[j + 52] = c && (e.top - t[1]) / -c;\n          ts[j + 56] = s && (e.right - t[0]) / s;\n          ts[j + 60] = c && (e.bottom - t[1]) / -c;\n        });\n        const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n        divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n        divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n        divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n        divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n\n        task._textDivProperties.set(div, divProperties);\n      }\n    }\n\n    function expandBounds(width, height, boxes) {\n      const bounds = boxes.map(function (box, i) {\n        return {\n          x1: box.left,\n          y1: box.top,\n          x2: box.right,\n          y2: box.bottom,\n          index: i,\n          x1New: undefined,\n          x2New: undefined\n        };\n      });\n      expandBoundsLTR(width, bounds);\n      const expanded = new Array(boxes.length);\n      bounds.forEach(function (b) {\n        const i = b.index;\n        expanded[i] = {\n          left: b.x1New,\n          top: 0,\n          right: b.x2New,\n          bottom: 0\n        };\n      });\n      boxes.map(function (box, i) {\n        const e = expanded[i],\n              b = bounds[i];\n        b.x1 = box.top;\n        b.y1 = width - e.right;\n        b.x2 = box.bottom;\n        b.y2 = width - e.left;\n        b.index = i;\n        b.x1New = undefined;\n        b.x2New = undefined;\n      });\n      expandBoundsLTR(height, bounds);\n      bounds.forEach(function (b) {\n        const i = b.index;\n        expanded[i].top = b.x1New;\n        expanded[i].bottom = b.x2New;\n      });\n      return expanded;\n    }\n\n    function expandBoundsLTR(width, bounds) {\n      bounds.sort(function (a, b) {\n        return a.x1 - b.x1 || a.index - b.index;\n      });\n      const fakeBoundary = {\n        x1: -Infinity,\n        y1: -Infinity,\n        x2: 0,\n        y2: Infinity,\n        index: -1,\n        x1New: 0,\n        x2New: 0\n      };\n      const horizon = [{\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary\n      }];\n      bounds.forEach(function (boundary) {\n        let i = 0;\n\n        while (i < horizon.length && horizon[i].end <= boundary.y1) {\n          i++;\n        }\n\n        let j = horizon.length - 1;\n\n        while (j >= 0 && horizon[j].start >= boundary.y2) {\n          j--;\n        }\n\n        let horizonPart, affectedBoundary;\n        let q,\n            k,\n            maxXNew = -Infinity;\n\n        for (q = i; q <= j; q++) {\n          horizonPart = horizon[q];\n          affectedBoundary = horizonPart.boundary;\n          let xNew;\n\n          if (affectedBoundary.x2 > boundary.x1) {\n            xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n          } else if (affectedBoundary.x2New === undefined) {\n            xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n          } else {\n            xNew = affectedBoundary.x2New;\n          }\n\n          if (xNew > maxXNew) {\n            maxXNew = xNew;\n          }\n        }\n\n        boundary.x1New = maxXNew;\n\n        for (q = i; q <= j; q++) {\n          horizonPart = horizon[q];\n          affectedBoundary = horizonPart.boundary;\n\n          if (affectedBoundary.x2New === undefined) {\n            if (affectedBoundary.x2 > boundary.x1) {\n              if (affectedBoundary.index > boundary.index) {\n                affectedBoundary.x2New = affectedBoundary.x2;\n              }\n            } else {\n              affectedBoundary.x2New = maxXNew;\n            }\n          } else if (affectedBoundary.x2New > maxXNew) {\n            affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n          }\n        }\n\n        const changedHorizon = [];\n        let lastBoundary = null;\n\n        for (q = i; q <= j; q++) {\n          horizonPart = horizon[q];\n          affectedBoundary = horizonPart.boundary;\n          const useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n\n          if (lastBoundary === useBoundary) {\n            changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n          } else {\n            changedHorizon.push({\n              start: horizonPart.start,\n              end: horizonPart.end,\n              boundary: useBoundary\n            });\n            lastBoundary = useBoundary;\n          }\n        }\n\n        if (horizon[i].start < boundary.y1) {\n          changedHorizon[0].start = boundary.y1;\n          changedHorizon.unshift({\n            start: horizon[i].start,\n            end: boundary.y1,\n            boundary: horizon[i].boundary\n          });\n        }\n\n        if (boundary.y2 < horizon[j].end) {\n          changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n          changedHorizon.push({\n            start: boundary.y2,\n            end: horizon[j].end,\n            boundary: horizon[j].boundary\n          });\n        }\n\n        for (q = i; q <= j; q++) {\n          horizonPart = horizon[q];\n          affectedBoundary = horizonPart.boundary;\n\n          if (affectedBoundary.x2New !== undefined) {\n            continue;\n          }\n\n          let used = false;\n\n          for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n            used = horizon[k].boundary === affectedBoundary;\n          }\n\n          for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n            used = horizon[k].boundary === affectedBoundary;\n          }\n\n          for (k = 0; !used && k < changedHorizon.length; k++) {\n            used = changedHorizon[k].boundary === affectedBoundary;\n          }\n\n          if (!used) {\n            affectedBoundary.x2New = maxXNew;\n          }\n        }\n\n        Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n      });\n      horizon.forEach(function (horizonPart) {\n        const affectedBoundary = horizonPart.boundary;\n\n        if (affectedBoundary.x2New === undefined) {\n          affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n        }\n      });\n    }\n\n    function TextLayerRenderTask({\n      textContent,\n      textContentStream,\n      container,\n      viewport,\n      textDivs,\n      textContentItemsStr,\n      enhanceTextSelection\n    }) {\n      this._textContent = textContent;\n      this._textContentStream = textContentStream;\n      this._container = container;\n      this._document = container.ownerDocument;\n      this._viewport = viewport;\n      this._textDivs = textDivs || [];\n      this._textContentItemsStr = textContentItemsStr || [];\n      this._enhanceTextSelection = !!enhanceTextSelection;\n      this._fontInspectorEnabled = !!(globalThis.FontInspector && globalThis.FontInspector.enabled); // lwf\n      this._reader = null;\n      this._layoutTextLastFontSize = null;\n      this._layoutTextLastFontFamily = null;\n      this._layoutTextCtx = null;\n      this._textDivProperties = new WeakMap();\n      this._renderingDone = false;\n      this._canceled = false;\n      this._capability = (0, _util.createPromiseCapability)();\n      this._renderTimer = null;\n      this._bounds = [];\n\n      this._capability.promise.finally(() => {\n        if (this._layoutTextCtx) {\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      }).catch(() => {});\n    }\n\n    TextLayerRenderTask.prototype = {\n      get promise() {\n        return this._capability.promise;\n      },\n\n      cancel: function TextLayer_cancel() {\n        this._canceled = true;\n\n        if (this._reader) {\n          this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\"));\n\n          this._reader = null;\n        }\n\n        if (this._renderTimer !== null) {\n          clearTimeout(this._renderTimer);\n          this._renderTimer = null;\n        }\n\n        this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n      },\n\n      _processItems(items, styleCache) {\n        for (let i = 0, len = items.length; i < len; i++) {\n          this._textContentItemsStr.push(items[i].str);\n\n          appendText(this, items[i], styleCache);\n        }\n      },\n\n      _layoutText(textDiv) {\n        const textDivProperties = this._textDivProperties.get(textDiv);\n\n        if (textDivProperties.isWhitespace) {\n          return;\n        }\n\n        let transform = \"\";\n\n        if (textDivProperties.canvasWidth !== 0) {\n          const {\n            fontSize,\n            fontFamily\n          } = textDiv.style;\n\n          if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n            this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n            this._layoutTextLastFontSize = fontSize;\n            this._layoutTextLastFontFamily = fontFamily;\n          }\n\n          const {\n            width\n          } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n          if (width > 0) {\n            textDivProperties.scale = textDivProperties.canvasWidth / width;\n            transform = `scaleX(${textDivProperties.scale})`;\n          }\n        }\n\n        if (textDivProperties.angle !== 0) {\n          transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n        }\n\n        if (transform.length > 0) {\n          if (this._enhanceTextSelection) {\n            textDivProperties.originalTransform = transform;\n          }\n\n          textDiv.style.transform = transform;\n        }\n\n        this._textDivProperties.set(textDiv, textDivProperties);\n\n        this._container.appendChild(textDiv);\n      },\n\n      _render: function TextLayer_render(timeout) {\n        const capability = (0, _util.createPromiseCapability)();\n        let styleCache = Object.create(null);\n\n        const canvas = this._document.createElement(\"canvas\");\n\n        canvas.mozOpaque = true;\n        this._layoutTextCtx = canvas.getContext(\"2d\", {\n          alpha: false\n        });\n\n        if (this._textContent) {\n          const textItems = this._textContent.items;\n          const textStyles = this._textContent.styles;\n\n          this._processItems(textItems, textStyles);\n\n          capability.resolve();\n        } else if (this._textContentStream) {\n          const pump = () => {\n            this._reader.read().then(({\n              value,\n              done\n            }) => {\n              if (done) {\n                capability.resolve();\n                return;\n              }\n\n              Object.assign(styleCache, value.styles);\n\n              this._processItems(value.items, styleCache);\n\n              pump();\n            }, capability.reject);\n          };\n\n          this._reader = this._textContentStream.getReader();\n          pump();\n        } else {\n          throw new Error('Neither \"textContent\" nor \"textContentStream\"' + \" parameters specified.\");\n        }\n\n        capability.promise.then(() => {\n          styleCache = null;\n\n          if (!timeout) {\n            render(this);\n          } else {\n            this._renderTimer = setTimeout(() => {\n              render(this);\n              this._renderTimer = null;\n            }, timeout);\n          }\n        }, this._capability.reject);\n      },\n      expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n        if (!this._enhanceTextSelection || !this._renderingDone) {\n          return;\n        }\n\n        if (this._bounds !== null) {\n          expand(this);\n          this._bounds = null;\n        }\n\n        const transformBuf = [],\n              paddingBuf = [];\n\n        for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n          const div = this._textDivs[i];\n\n          const divProps = this._textDivProperties.get(div);\n\n          if (divProps.isWhitespace) {\n            continue;\n          }\n\n          if (expandDivs) {\n            transformBuf.length = 0;\n            paddingBuf.length = 0;\n\n            if (divProps.originalTransform) {\n              transformBuf.push(divProps.originalTransform);\n            }\n\n            if (divProps.paddingTop > 0) {\n              paddingBuf.push(`${divProps.paddingTop}px`);\n              transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n            } else {\n              paddingBuf.push(0);\n            }\n\n            if (divProps.paddingRight > 0) {\n              paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n            } else {\n              paddingBuf.push(0);\n            }\n\n            if (divProps.paddingBottom > 0) {\n              paddingBuf.push(`${divProps.paddingBottom}px`);\n            } else {\n              paddingBuf.push(0);\n            }\n\n            if (divProps.paddingLeft > 0) {\n              paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n              transformBuf.push(`translateX(${-divProps.paddingLeft / divProps.scale}px)`);\n            } else {\n              paddingBuf.push(0);\n            }\n\n            div.style.padding = paddingBuf.join(\" \");\n\n            if (transformBuf.length) {\n              div.style.transform = transformBuf.join(\" \");\n            }\n          } else {\n            div.style.padding = null;\n            div.style.transform = divProps.originalTransform;\n          }\n        }\n      }\n    };\n\n    function renderTextLayer(renderParameters) {\n      const task = new TextLayerRenderTask({\n        textContent: renderParameters.textContent,\n        textContentStream: renderParameters.textContentStream,\n        container: renderParameters.container,\n        viewport: renderParameters.viewport,\n        textDivs: renderParameters.textDivs,\n        textContentItemsStr: renderParameters.textContentItemsStr,\n        enhanceTextSelection: renderParameters.enhanceTextSelection\n      });\n\n      task._render(renderParameters.timeout);\n\n      return task;\n    }\n\n    return renderTextLayer;\n  }();\n\n  exports.renderTextLayer = renderTextLayer;\n\n  /***/ }),\n  /* 22 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.SVGGraphics = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _display_utils = __w_pdfjs_require__(1);\n\n  var _is_node = __w_pdfjs_require__(4);\n\n  let SVGGraphics = function () {\n    throw new Error(\"Not implemented: SVGGraphics\");\n  };\n\n  exports.SVGGraphics = SVGGraphics;\n  {\n    const SVG_DEFAULTS = {\n      fontStyle: \"normal\",\n      fontWeight: \"normal\",\n      fillColor: \"#000000\"\n    };\n    const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n    const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n    const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n    const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n    const convertImgDataToPng = function () {\n      const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n      const CHUNK_WRAPPER_SIZE = 12;\n      const crcTable = new Int32Array(256);\n\n      for (let i = 0; i < 256; i++) {\n        let c = i;\n\n        for (let h = 0; h < 8; h++) {\n          if (c & 1) {\n            c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n          } else {\n            c = c >> 1 & 0x7fffffff;\n          }\n        }\n\n        crcTable[i] = c;\n      }\n\n      function crc32(data, start, end) {\n        let crc = -1;\n\n        for (let i = start; i < end; i++) {\n          const a = (crc ^ data[i]) & 0xff;\n          const b = crcTable[a];\n          crc = crc >>> 8 ^ b;\n        }\n\n        return crc ^ -1;\n      }\n\n      function writePngChunk(type, body, data, offset) {\n        let p = offset;\n        const len = body.length;\n        data[p] = len >> 24 & 0xff;\n        data[p + 1] = len >> 16 & 0xff;\n        data[p + 2] = len >> 8 & 0xff;\n        data[p + 3] = len & 0xff;\n        p += 4;\n        data[p] = type.charCodeAt(0) & 0xff;\n        data[p + 1] = type.charCodeAt(1) & 0xff;\n        data[p + 2] = type.charCodeAt(2) & 0xff;\n        data[p + 3] = type.charCodeAt(3) & 0xff;\n        p += 4;\n        data.set(body, p);\n        p += body.length;\n        const crc = crc32(data, offset + 4, p);\n        data[p] = crc >> 24 & 0xff;\n        data[p + 1] = crc >> 16 & 0xff;\n        data[p + 2] = crc >> 8 & 0xff;\n        data[p + 3] = crc & 0xff;\n      }\n\n      function adler32(data, start, end) {\n        let a = 1;\n        let b = 0;\n\n        for (let i = start; i < end; ++i) {\n          a = (a + (data[i] & 0xff)) % 65521;\n          b = (b + a) % 65521;\n        }\n\n        return b << 16 | a;\n      }\n\n      function deflateSync(literals) {\n        if (!_is_node.isNodeJS) {\n          return deflateSyncUncompressed(literals);\n        }\n\n        try {\n          let input;\n\n          if (parseInt(process.versions.node) >= 8) {\n            input = literals;\n          } else {\n            input = Buffer.from(literals);\n          }\n\n          const output = require(\"zlib\").deflateSync(input, {\n            level: 9\n          });\n\n          return output instanceof Uint8Array ? output : new Uint8Array(output);\n        } catch (e) {\n          (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n        }\n\n        return deflateSyncUncompressed(literals);\n      }\n\n      function deflateSyncUncompressed(literals) {\n        let len = literals.length;\n        const maxBlockLength = 0xffff;\n        const deflateBlocks = Math.ceil(len / maxBlockLength);\n        const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n        let pi = 0;\n        idat[pi++] = 0x78;\n        idat[pi++] = 0x9c;\n        let pos = 0;\n\n        while (len > maxBlockLength) {\n          idat[pi++] = 0x00;\n          idat[pi++] = 0xff;\n          idat[pi++] = 0xff;\n          idat[pi++] = 0x00;\n          idat[pi++] = 0x00;\n          idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n          pi += maxBlockLength;\n          pos += maxBlockLength;\n          len -= maxBlockLength;\n        }\n\n        idat[pi++] = 0x01;\n        idat[pi++] = len & 0xff;\n        idat[pi++] = len >> 8 & 0xff;\n        idat[pi++] = ~len & 0xffff & 0xff;\n        idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n        idat.set(literals.subarray(pos), pi);\n        pi += literals.length - pos;\n        const adler = adler32(literals, 0, literals.length);\n        idat[pi++] = adler >> 24 & 0xff;\n        idat[pi++] = adler >> 16 & 0xff;\n        idat[pi++] = adler >> 8 & 0xff;\n        idat[pi++] = adler & 0xff;\n        return idat;\n      }\n\n      function encode(imgData, kind, forceDataSchema, isMask) {\n        const width = imgData.width;\n        const height = imgData.height;\n        let bitDepth, colorType, lineSize;\n        const bytes = imgData.data;\n\n        switch (kind) {\n          case _util.ImageKind.GRAYSCALE_1BPP:\n            colorType = 0;\n            bitDepth = 1;\n            lineSize = width + 7 >> 3;\n            break;\n\n          case _util.ImageKind.RGB_24BPP:\n            colorType = 2;\n            bitDepth = 8;\n            lineSize = width * 3;\n            break;\n\n          case _util.ImageKind.RGBA_32BPP:\n            colorType = 6;\n            bitDepth = 8;\n            lineSize = width * 4;\n            break;\n\n          default:\n            throw new Error(\"invalid format\");\n        }\n\n        const literals = new Uint8Array((1 + lineSize) * height);\n        let offsetLiterals = 0,\n            offsetBytes = 0;\n\n        for (let y = 0; y < height; ++y) {\n          literals[offsetLiterals++] = 0;\n          literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n          offsetBytes += lineSize;\n          offsetLiterals += lineSize;\n        }\n\n        if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n          offsetLiterals = 0;\n\n          for (let y = 0; y < height; y++) {\n            offsetLiterals++;\n\n            for (let i = 0; i < lineSize; i++) {\n              literals[offsetLiterals++] ^= 0xff;\n            }\n          }\n        }\n\n        const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n        const idat = deflateSync(literals);\n        const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n        const data = new Uint8Array(pngLength);\n        let offset = 0;\n        data.set(PNG_HEADER, offset);\n        offset += PNG_HEADER.length;\n        writePngChunk(\"IHDR\", ihdr, data, offset);\n        offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n        writePngChunk(\"IDATA\", idat, data, offset);\n        offset += CHUNK_WRAPPER_SIZE + idat.length;\n        writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n        return (0, _util.createObjectURL)(data, \"image/png\", forceDataSchema);\n      }\n\n      return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n        const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n        return encode(imgData, kind, forceDataSchema, isMask);\n      };\n    }();\n\n    class SVGExtraState {\n      constructor() {\n        this.fontSizeScale = 1;\n        this.fontWeight = SVG_DEFAULTS.fontWeight;\n        this.fontSize = 0;\n        this.textMatrix = _util.IDENTITY_MATRIX;\n        this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n        this.leading = 0;\n        this.textRenderingMode = _util.TextRenderingMode.FILL;\n        this.textMatrixScale = 1;\n        this.x = 0;\n        this.y = 0;\n        this.lineX = 0;\n        this.lineY = 0;\n        this.charSpacing = 0;\n        this.wordSpacing = 0;\n        this.textHScale = 1;\n        this.textRise = 0;\n        this.fillColor = SVG_DEFAULTS.fillColor;\n        this.strokeColor = \"#000000\";\n        this.fillAlpha = 1;\n        this.strokeAlpha = 1;\n        this.lineWidth = 1;\n        this.lineJoin = \"\";\n        this.lineCap = \"\";\n        this.miterLimit = 0;\n        this.dashArray = [];\n        this.dashPhase = 0;\n        this.dependencies = [];\n        this.activeClipUrl = null;\n        this.clipGroup = null;\n        this.maskId = \"\";\n      }\n\n      clone() {\n        return Object.create(this);\n      }\n\n      setCurrentPoint(x, y) {\n        this.x = x;\n        this.y = y;\n      }\n\n    }\n\n    function opListToTree(opList) {\n      let opTree = [];\n      const tmp = [];\n\n      for (const opListElement of opList) {\n        if (opListElement.fn === \"save\") {\n          opTree.push({\n            fnId: 92,\n            fn: \"group\",\n            items: []\n          });\n          tmp.push(opTree);\n          opTree = opTree[opTree.length - 1].items;\n          continue;\n        }\n\n        if (opListElement.fn === \"restore\") {\n          opTree = tmp.pop();\n        } else {\n          opTree.push(opListElement);\n        }\n      }\n\n      return opTree;\n    }\n\n    function pf(value) {\n      if (Number.isInteger(value)) {\n        return value.toString();\n      }\n\n      const s = value.toFixed(10);\n      let i = s.length - 1;\n\n      if (s[i] !== \"0\") {\n        return s;\n      }\n\n      do {\n        i--;\n      } while (s[i] === \"0\");\n\n      return s.substring(0, s[i] === \".\" ? i : i + 1);\n    }\n\n    function pm(m) {\n      if (m[4] === 0 && m[5] === 0) {\n        if (m[1] === 0 && m[2] === 0) {\n          if (m[0] === 1 && m[3] === 1) {\n            return \"\";\n          }\n\n          return `scale(${pf(m[0])} ${pf(m[3])})`;\n        }\n\n        if (m[0] === m[3] && m[1] === -m[2]) {\n          const a = Math.acos(m[0]) * 180 / Math.PI;\n          return `rotate(${pf(a)})`;\n        }\n      } else {\n        if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n          return `translate(${pf(m[4])} ${pf(m[5])})`;\n        }\n      }\n\n      return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n    }\n\n    let clipCount = 0;\n    let maskCount = 0;\n    let shadingCount = 0;\n    exports.SVGGraphics = SVGGraphics = class SVGGraphics {\n      constructor(commonObjs, objs, forceDataSchema = false) {\n        this.svgFactory = new _display_utils.DOMSVGFactory();\n        this.current = new SVGExtraState();\n        this.transformMatrix = _util.IDENTITY_MATRIX;\n        this.transformStack = [];\n        this.extraStack = [];\n        this.commonObjs = commonObjs;\n        this.objs = objs;\n        this.pendingClip = null;\n        this.pendingEOFill = false;\n        this.embedFonts = false;\n        this.embeddedFonts = Object.create(null);\n        this.cssStyle = null;\n        this.forceDataSchema = !!forceDataSchema;\n        this._operatorIdMapping = [];\n\n        for (const op in _util.OPS) {\n          this._operatorIdMapping[_util.OPS[op]] = op;\n        }\n      }\n\n      save() {\n        this.transformStack.push(this.transformMatrix);\n        const old = this.current;\n        this.extraStack.push(old);\n        this.current = old.clone();\n      }\n\n      restore() {\n        this.transformMatrix = this.transformStack.pop();\n        this.current = this.extraStack.pop();\n        this.pendingClip = null;\n        this.tgrp = null;\n      }\n\n      group(items) {\n        this.save();\n        this.executeOpTree(items);\n        this.restore();\n      }\n\n      loadDependencies(operatorList) {\n        const fnArray = operatorList.fnArray;\n        const argsArray = operatorList.argsArray;\n\n        for (let i = 0, ii = fnArray.length; i < ii; i++) {\n          if (fnArray[i] !== _util.OPS.dependency) {\n            continue;\n          }\n\n          for (const obj of argsArray[i]) {\n            const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n            const promise = new Promise(resolve => {\n              objsPool.get(obj, resolve);\n            });\n            this.current.dependencies.push(promise);\n          }\n        }\n\n        return Promise.all(this.current.dependencies);\n      }\n\n      transform(a, b, c, d, e, f) {\n        const transformMatrix = [a, b, c, d, e, f];\n        this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n        this.tgrp = null;\n      }\n\n      getSVG(operatorList, viewport) {\n        this.viewport = viewport;\n\n        const svgElement = this._initialize(viewport);\n\n        return this.loadDependencies(operatorList).then(() => {\n          this.transformMatrix = _util.IDENTITY_MATRIX;\n          this.executeOpTree(this.convertOpList(operatorList));\n          return svgElement;\n        });\n      }\n\n      convertOpList(operatorList) {\n        const operatorIdMapping = this._operatorIdMapping;\n        const argsArray = operatorList.argsArray;\n        const fnArray = operatorList.fnArray;\n        const opList = [];\n\n        for (let i = 0, ii = fnArray.length; i < ii; i++) {\n          const fnId = fnArray[i];\n          opList.push({\n            fnId,\n            fn: operatorIdMapping[fnId],\n            args: argsArray[i]\n          });\n        }\n\n        return opListToTree(opList);\n      }\n\n      executeOpTree(opTree) {\n        for (const opTreeElement of opTree) {\n          const fn = opTreeElement.fn;\n          const fnId = opTreeElement.fnId;\n          const args = opTreeElement.args;\n\n          switch (fnId | 0) {\n            case _util.OPS.beginText:\n              this.beginText();\n              break;\n\n            case _util.OPS.dependency:\n              break;\n\n            case _util.OPS.setLeading:\n              this.setLeading(args);\n              break;\n\n            case _util.OPS.setLeadingMoveText:\n              this.setLeadingMoveText(args[0], args[1]);\n              break;\n\n            case _util.OPS.setFont:\n              this.setFont(args);\n              break;\n\n            case _util.OPS.showText:\n              this.showText(args[0]);\n              break;\n\n            case _util.OPS.showSpacedText:\n              this.showText(args[0]);\n              break;\n\n            case _util.OPS.endText:\n              this.endText();\n              break;\n\n            case _util.OPS.moveText:\n              this.moveText(args[0], args[1]);\n              break;\n\n            case _util.OPS.setCharSpacing:\n              this.setCharSpacing(args[0]);\n              break;\n\n            case _util.OPS.setWordSpacing:\n              this.setWordSpacing(args[0]);\n              break;\n\n            case _util.OPS.setHScale:\n              this.setHScale(args[0]);\n              break;\n\n            case _util.OPS.setTextMatrix:\n              this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n\n            case _util.OPS.setTextRise:\n              this.setTextRise(args[0]);\n              break;\n\n            case _util.OPS.setTextRenderingMode:\n              this.setTextRenderingMode(args[0]);\n              break;\n\n            case _util.OPS.setLineWidth:\n              this.setLineWidth(args[0]);\n              break;\n\n            case _util.OPS.setLineJoin:\n              this.setLineJoin(args[0]);\n              break;\n\n            case _util.OPS.setLineCap:\n              this.setLineCap(args[0]);\n              break;\n\n            case _util.OPS.setMiterLimit:\n              this.setMiterLimit(args[0]);\n              break;\n\n            case _util.OPS.setFillRGBColor:\n              this.setFillRGBColor(args[0], args[1], args[2]);\n              break;\n\n            case _util.OPS.setStrokeRGBColor:\n              this.setStrokeRGBColor(args[0], args[1], args[2]);\n              break;\n\n            case _util.OPS.setStrokeColorN:\n              this.setStrokeColorN(args);\n              break;\n\n            case _util.OPS.setFillColorN:\n              this.setFillColorN(args);\n              break;\n\n            case _util.OPS.shadingFill:\n              this.shadingFill(args[0]);\n              break;\n\n            case _util.OPS.setDash:\n              this.setDash(args[0], args[1]);\n              break;\n\n            case _util.OPS.setRenderingIntent:\n              this.setRenderingIntent(args[0]);\n              break;\n\n            case _util.OPS.setFlatness:\n              this.setFlatness(args[0]);\n              break;\n\n            case _util.OPS.setGState:\n              this.setGState(args[0]);\n              break;\n\n            case _util.OPS.fill:\n              this.fill();\n              break;\n\n            case _util.OPS.eoFill:\n              this.eoFill();\n              break;\n\n            case _util.OPS.stroke:\n              this.stroke();\n              break;\n\n            case _util.OPS.fillStroke:\n              this.fillStroke();\n              break;\n\n            case _util.OPS.eoFillStroke:\n              this.eoFillStroke();\n              break;\n\n            case _util.OPS.clip:\n              this.clip(\"nonzero\");\n              break;\n\n            case _util.OPS.eoClip:\n              this.clip(\"evenodd\");\n              break;\n\n            case _util.OPS.paintSolidColorImageMask:\n              this.paintSolidColorImageMask();\n              break;\n\n            case _util.OPS.paintImageXObject:\n              this.paintImageXObject(args[0]);\n              break;\n\n            case _util.OPS.paintInlineImageXObject:\n              this.paintInlineImageXObject(args[0]);\n              break;\n\n            case _util.OPS.paintImageMaskXObject:\n              this.paintImageMaskXObject(args[0]);\n              break;\n\n            case _util.OPS.paintFormXObjectBegin:\n              this.paintFormXObjectBegin(args[0], args[1]);\n              break;\n\n            case _util.OPS.paintFormXObjectEnd:\n              this.paintFormXObjectEnd();\n              break;\n\n            case _util.OPS.closePath:\n              this.closePath();\n              break;\n\n            case _util.OPS.closeStroke:\n              this.closeStroke();\n              break;\n\n            case _util.OPS.closeFillStroke:\n              this.closeFillStroke();\n              break;\n\n            case _util.OPS.closeEOFillStroke:\n              this.closeEOFillStroke();\n              break;\n\n            case _util.OPS.nextLine:\n              this.nextLine();\n              break;\n\n            case _util.OPS.transform:\n              this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n\n            case _util.OPS.constructPath:\n              this.constructPath(args[0], args[1]);\n              break;\n\n            case _util.OPS.endPath:\n              this.endPath();\n              break;\n\n            case 92:\n              this.group(opTreeElement.items);\n              break;\n\n            default:\n              (0, _util.warn)(`Unimplemented operator ${fn}`);\n              break;\n          }\n        }\n      }\n\n      setWordSpacing(wordSpacing) {\n        this.current.wordSpacing = wordSpacing;\n      }\n\n      setCharSpacing(charSpacing) {\n        this.current.charSpacing = charSpacing;\n      }\n\n      nextLine() {\n        this.moveText(0, this.current.leading);\n      }\n\n      setTextMatrix(a, b, c, d, e, f) {\n        const current = this.current;\n        current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n        current.textMatrixScale = Math.sqrt(a * a + b * b);\n        current.x = current.lineX = 0;\n        current.y = current.lineY = 0;\n        current.xcoords = [];\n        current.ycoords = [];\n        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n        current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n        current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n        current.txtElement = this.svgFactory.createElement(\"svg:text\");\n        current.txtElement.appendChild(current.tspan);\n      }\n\n      beginText() {\n        const current = this.current;\n        current.x = current.lineX = 0;\n        current.y = current.lineY = 0;\n        current.textMatrix = _util.IDENTITY_MATRIX;\n        current.lineMatrix = _util.IDENTITY_MATRIX;\n        current.textMatrixScale = 1;\n        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n        current.txtElement = this.svgFactory.createElement(\"svg:text\");\n        current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n        current.xcoords = [];\n        current.ycoords = [];\n      }\n\n      moveText(x, y) {\n        const current = this.current;\n        current.x = current.lineX += x;\n        current.y = current.lineY += y;\n        current.xcoords = [];\n        current.ycoords = [];\n        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n        current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n        current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      showText(glyphs) {\n        const current = this.current;\n        const font = current.font;\n        const fontSize = current.fontSize;\n\n        if (fontSize === 0) {\n          return;\n        }\n\n        const fontSizeScale = current.fontSizeScale;\n        const charSpacing = current.charSpacing;\n        const wordSpacing = current.wordSpacing;\n        const fontDirection = current.fontDirection;\n        const textHScale = current.textHScale * fontDirection;\n        const vertical = font.vertical;\n        const spacingDir = vertical ? 1 : -1;\n        const defaultVMetrics = font.defaultVMetrics;\n        const widthAdvanceScale = fontSize * current.fontMatrix[0];\n        let x = 0;\n\n        for (const glyph of glyphs) {\n          if (glyph === null) {\n            x += fontDirection * wordSpacing;\n            continue;\n          } else if ((0, _util.isNum)(glyph)) {\n            x += spacingDir * glyph * fontSize / 1000;\n            continue;\n          }\n\n          const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n          const character = glyph.fontChar;\n          let scaledX, scaledY;\n          let width = glyph.width;\n\n          if (vertical) {\n            let vx;\n            const vmetric = glyph.vmetric || defaultVMetrics;\n            vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n            vx = -vx * widthAdvanceScale;\n            const vy = vmetric[2] * widthAdvanceScale;\n            width = vmetric ? -vmetric[0] : width;\n            scaledX = vx / fontSizeScale;\n            scaledY = (x + vy) / fontSizeScale;\n          } else {\n            scaledX = x / fontSizeScale;\n            scaledY = 0;\n          }\n\n          if (glyph.isInFont || font.missingFile) {\n            current.xcoords.push(current.x + scaledX);\n\n            if (vertical) {\n              current.ycoords.push(-current.y + scaledY);\n            }\n\n            current.tspan.textContent += character;\n          } else {}\n\n          let charWidth;\n\n          if (vertical) {\n            charWidth = width * widthAdvanceScale - spacing * fontDirection;\n          } else {\n            charWidth = width * widthAdvanceScale + spacing * fontDirection;\n          }\n\n          x += charWidth;\n        }\n\n        current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n\n        if (vertical) {\n          current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n        } else {\n          current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n        }\n\n        if (vertical) {\n          current.y -= x;\n        } else {\n          current.x += x * textHScale;\n        }\n\n        current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n        current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n\n        if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n          current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n        }\n\n        if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n          current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n        }\n\n        const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n        if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n            current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n          }\n\n          if (current.fillAlpha < 1) {\n            current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n          }\n        } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n          current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n        } else {\n          current.tspan.setAttributeNS(null, \"fill\", \"none\");\n        }\n\n        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          const lineWidthScale = 1 / (current.textMatrixScale || 1);\n\n          this._setStrokeAttributes(current.tspan, lineWidthScale);\n        }\n\n        let textMatrix = current.textMatrix;\n\n        if (current.textRise !== 0) {\n          textMatrix = textMatrix.slice();\n          textMatrix[5] += current.textRise;\n        }\n\n        current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n        current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n        current.txtElement.appendChild(current.tspan);\n        current.txtgrp.appendChild(current.txtElement);\n\n        this._ensureTransformGroup().appendChild(current.txtElement);\n      }\n\n      setLeadingMoveText(x, y) {\n        this.setLeading(-y);\n        this.moveText(x, y);\n      }\n\n      addFontStyle(fontObj) {\n        if (!fontObj.data) {\n          throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n        }\n\n        if (!this.cssStyle) {\n          this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n          this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n          this.defs.appendChild(this.cssStyle);\n        }\n\n        const url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n        this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n      }\n\n      setFont(details) {\n        const current = this.current;\n        const fontObj = this.commonObjs.get(details[0]);\n        let size = details[1];\n        current.font = fontObj;\n\n        if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n          this.addFontStyle(fontObj);\n          this.embeddedFonts[fontObj.loadedName] = fontObj;\n        }\n\n        current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        let bold = \"normal\";\n\n        if (fontObj.black) {\n          bold = \"900\";\n        } else if (fontObj.bold) {\n          bold = \"bold\";\n        }\n\n        const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n        if (size < 0) {\n          size = -size;\n          current.fontDirection = -1;\n        } else {\n          current.fontDirection = 1;\n        }\n\n        current.fontSize = size;\n        current.fontFamily = fontObj.loadedName;\n        current.fontWeight = bold;\n        current.fontStyle = italic;\n        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n        current.xcoords = [];\n        current.ycoords = [];\n      }\n\n      endText() {\n        const current = this.current;\n\n        if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement && current.txtElement.hasChildNodes()) { // lwf\n          current.element = current.txtElement;\n          this.clip(\"nonzero\");\n          this.endPath();\n        }\n      }\n\n      setLineWidth(width) {\n        if (width > 0) {\n          this.current.lineWidth = width;\n        }\n      }\n\n      setLineCap(style) {\n        this.current.lineCap = LINE_CAP_STYLES[style];\n      }\n\n      setLineJoin(style) {\n        this.current.lineJoin = LINE_JOIN_STYLES[style];\n      }\n\n      setMiterLimit(limit) {\n        this.current.miterLimit = limit;\n      }\n\n      setStrokeAlpha(strokeAlpha) {\n        this.current.strokeAlpha = strokeAlpha;\n      }\n\n      setStrokeRGBColor(r, g, b) {\n        this.current.strokeColor = _util.Util.makeHexColor(r, g, b);\n      }\n\n      setFillAlpha(fillAlpha) {\n        this.current.fillAlpha = fillAlpha;\n      }\n\n      setFillRGBColor(r, g, b) {\n        this.current.fillColor = _util.Util.makeHexColor(r, g, b);\n        this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n        this.current.xcoords = [];\n        this.current.ycoords = [];\n      }\n\n      setStrokeColorN(args) {\n        this.current.strokeColor = this._makeColorN_Pattern(args);\n      }\n\n      setFillColorN(args) {\n        this.current.fillColor = this._makeColorN_Pattern(args);\n      }\n\n      shadingFill(args) {\n        const width = this.viewport.width;\n        const height = this.viewport.height;\n\n        const inv = _util.Util.inverseTransform(this.transformMatrix);\n\n        const bl = _util.Util.applyTransform([0, 0], inv);\n\n        const br = _util.Util.applyTransform([0, height], inv);\n\n        const ul = _util.Util.applyTransform([width, 0], inv);\n\n        const ur = _util.Util.applyTransform([width, height], inv);\n\n        const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n        const rect = this.svgFactory.createElement(\"svg:rect\");\n        rect.setAttributeNS(null, \"x\", x0);\n        rect.setAttributeNS(null, \"y\", y0);\n        rect.setAttributeNS(null, \"width\", x1 - x0);\n        rect.setAttributeNS(null, \"height\", y1 - y0);\n        rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n\n        if (this.current.fillAlpha < 1) {\n          rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n        }\n\n        this._ensureTransformGroup().appendChild(rect);\n      }\n\n      _makeColorN_Pattern(args) {\n        if (args[0] === \"TilingPattern\") {\n          return this._makeTilingPattern(args);\n        }\n\n        return this._makeShadingPattern(args);\n      }\n\n      _makeTilingPattern(args) {\n        const color = args[1];\n        const operatorList = args[2];\n        const matrix = args[3] || _util.IDENTITY_MATRIX;\n        const [x0, y0, x1, y1] = args[4];\n        const xstep = args[5];\n        const ystep = args[6];\n        const paintType = args[7];\n        const tilingId = `shading${shadingCount++}`;\n\n        const [tx0, ty0] = _util.Util.applyTransform([x0, y0], matrix);\n\n        const [tx1, ty1] = _util.Util.applyTransform([x1, y1], matrix);\n\n        const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n\n        const txstep = xstep * xscale;\n        const tystep = ystep * yscale;\n        const tiling = this.svgFactory.createElement(\"svg:pattern\");\n        tiling.setAttributeNS(null, \"id\", tilingId);\n        tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n        tiling.setAttributeNS(null, \"width\", txstep);\n        tiling.setAttributeNS(null, \"height\", tystep);\n        tiling.setAttributeNS(null, \"x\", `${tx0}`);\n        tiling.setAttributeNS(null, \"y\", `${ty0}`);\n        const svg = this.svg;\n        const transformMatrix = this.transformMatrix;\n        const fillColor = this.current.fillColor;\n        const strokeColor = this.current.strokeColor;\n        const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n        this.svg = bbox;\n        this.transformMatrix = matrix;\n\n        if (paintType === 2) {\n          const cssColor = _util.Util.makeHexColor(...color);\n\n          this.current.fillColor = cssColor;\n          this.current.strokeColor = cssColor;\n        }\n\n        this.executeOpTree(this.convertOpList(operatorList));\n        this.svg = svg;\n        this.transformMatrix = transformMatrix;\n        this.current.fillColor = fillColor;\n        this.current.strokeColor = strokeColor;\n        tiling.appendChild(bbox.childNodes[0]);\n        this.defs.appendChild(tiling);\n        return `url(#${tilingId})`;\n      }\n\n      _makeShadingPattern(args) {\n        switch (args[0]) {\n          case \"RadialAxial\":\n            const shadingId = `shading${shadingCount++}`;\n            const colorStops = args[3];\n            let gradient;\n\n            switch (args[1]) {\n              case \"axial\":\n                const point0 = args[4];\n                const point1 = args[5];\n                gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                gradient.setAttributeNS(null, \"id\", shadingId);\n                gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                gradient.setAttributeNS(null, \"x1\", point0[0]);\n                gradient.setAttributeNS(null, \"y1\", point0[1]);\n                gradient.setAttributeNS(null, \"x2\", point1[0]);\n                gradient.setAttributeNS(null, \"y2\", point1[1]);\n                break;\n\n              case \"radial\":\n                const focalPoint = args[4];\n                const circlePoint = args[5];\n                const focalRadius = args[6];\n                const circleRadius = args[7];\n                gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                gradient.setAttributeNS(null, \"id\", shadingId);\n                gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                gradient.setAttributeNS(null, \"r\", circleRadius);\n                gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                gradient.setAttributeNS(null, \"fr\", focalRadius);\n                break;\n\n              default:\n                throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n            }\n\n            for (const colorStop of colorStops) {\n              const stop = this.svgFactory.createElement(\"svg:stop\");\n              stop.setAttributeNS(null, \"offset\", colorStop[0]);\n              stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n              gradient.appendChild(stop);\n            }\n\n            this.defs.appendChild(gradient);\n            return `url(#${shadingId})`;\n\n          case \"Mesh\":\n            (0, _util.warn)(\"Unimplemented pattern Mesh\");\n            return null;\n\n          case \"Dummy\":\n            return \"hotpink\";\n\n          default:\n            throw new Error(`Unknown IR type: ${args[0]}`);\n        }\n      }\n\n      setDash(dashArray, dashPhase) {\n        this.current.dashArray = dashArray;\n        this.current.dashPhase = dashPhase;\n      }\n\n      constructPath(ops, args) {\n        const current = this.current;\n        let x = current.x,\n            y = current.y;\n        let d = [];\n        let j = 0;\n\n        for (const op of ops) {\n          switch (op | 0) {\n            case _util.OPS.rectangle:\n              x = args[j++];\n              y = args[j++];\n              const width = args[j++];\n              const height = args[j++];\n              const xw = x + width;\n              const yh = y + height;\n              d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n              break;\n\n            case _util.OPS.moveTo:\n              x = args[j++];\n              y = args[j++];\n              d.push(\"M\", pf(x), pf(y));\n              break;\n\n            case _util.OPS.lineTo:\n              x = args[j++];\n              y = args[j++];\n              d.push(\"L\", pf(x), pf(y));\n              break;\n\n            case _util.OPS.curveTo:\n              x = args[j + 4];\n              y = args[j + 5];\n              d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n              j += 6;\n              break;\n\n            case _util.OPS.curveTo2:\n              d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n              x = args[j + 2];\n              y = args[j + 3];\n              j += 4;\n              break;\n\n            case _util.OPS.curveTo3:\n              x = args[j + 2];\n              y = args[j + 3];\n              d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n              j += 4;\n              break;\n\n            case _util.OPS.closePath:\n              d.push(\"Z\");\n              break;\n          }\n        }\n\n        d = d.join(\" \");\n\n        if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n          d = current.path.getAttributeNS(null, \"d\") + d;\n        } else {\n          current.path = this.svgFactory.createElement(\"svg:path\");\n\n          this._ensureTransformGroup().appendChild(current.path);\n        }\n\n        current.path.setAttributeNS(null, \"d\", d);\n        current.path.setAttributeNS(null, \"fill\", \"none\");\n        current.element = current.path;\n        current.setCurrentPoint(x, y);\n      }\n\n      endPath() {\n        const current = this.current;\n        current.path = null;\n\n        if (!this.pendingClip) {\n          return;\n        }\n\n        if (!current.element) {\n          this.pendingClip = null;\n          return;\n        }\n\n        const clipId = `clippath${clipCount++}`;\n        const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n        clipPath.setAttributeNS(null, \"id\", clipId);\n        clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        const clipElement = current.element.cloneNode(true);\n\n        if (this.pendingClip === \"evenodd\") {\n          clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n        } else {\n          clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n        }\n\n        this.pendingClip = null;\n        clipPath.appendChild(clipElement);\n        this.defs.appendChild(clipPath);\n\n        if (current.activeClipUrl) {\n          current.clipGroup = null;\n          this.extraStack.forEach(function (prev) {\n            prev.clipGroup = null;\n          });\n          clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n        }\n\n        current.activeClipUrl = `url(#${clipId})`;\n        this.tgrp = null;\n      }\n\n      clip(type) {\n        this.pendingClip = type;\n      }\n\n      closePath() {\n        const current = this.current;\n\n        if (current.path) {\n          const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n          current.path.setAttributeNS(null, \"d\", d);\n        }\n      }\n\n      setLeading(leading) {\n        this.current.leading = -leading;\n      }\n\n      setTextRise(textRise) {\n        this.current.textRise = textRise;\n      }\n\n      setTextRenderingMode(textRenderingMode) {\n        this.current.textRenderingMode = textRenderingMode;\n      }\n\n      setHScale(scale) {\n        this.current.textHScale = scale / 100;\n      }\n\n      setRenderingIntent(intent) {}\n\n      setFlatness(flatness) {}\n\n      setGState(states) {\n        for (const [key, value] of states) {\n          switch (key) {\n            case \"LW\":\n              this.setLineWidth(value);\n              break;\n\n            case \"LC\":\n              this.setLineCap(value);\n              break;\n\n            case \"LJ\":\n              this.setLineJoin(value);\n              break;\n\n            case \"ML\":\n              this.setMiterLimit(value);\n              break;\n\n            case \"D\":\n              this.setDash(value[0], value[1]);\n              break;\n\n            case \"RI\":\n              this.setRenderingIntent(value);\n              break;\n\n            case \"FL\":\n              this.setFlatness(value);\n              break;\n\n            case \"Font\":\n              this.setFont(value);\n              break;\n\n            case \"CA\":\n              this.setStrokeAlpha(value);\n              break;\n\n            case \"ca\":\n              this.setFillAlpha(value);\n              break;\n\n            default:\n              (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n              break;\n          }\n        }\n      }\n\n      fill() {\n        const current = this.current;\n\n        if (current.element) {\n          current.element.setAttributeNS(null, \"fill\", current.fillColor);\n          current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n          this.endPath();\n        }\n      }\n\n      stroke() {\n        const current = this.current;\n\n        if (current.element) {\n          this._setStrokeAttributes(current.element);\n\n          current.element.setAttributeNS(null, \"fill\", \"none\");\n          this.endPath();\n        }\n      }\n\n      _setStrokeAttributes(element, lineWidthScale = 1) {\n        const current = this.current;\n        let dashArray = current.dashArray;\n\n        if (lineWidthScale !== 1 && dashArray.length > 0) {\n          dashArray = dashArray.map(function (value) {\n            return lineWidthScale * value;\n          });\n        }\n\n        element.setAttributeNS(null, \"stroke\", current.strokeColor);\n        element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n        element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n        element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n        element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n        element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n        element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n        element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n      }\n\n      eoFill() {\n        if (this.current.element) {\n          this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n        }\n\n        this.fill();\n      }\n\n      fillStroke() {\n        this.stroke();\n        this.fill();\n      }\n\n      eoFillStroke() {\n        if (this.current.element) {\n          this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n        }\n\n        this.fillStroke();\n      }\n\n      closeStroke() {\n        this.closePath();\n        this.stroke();\n      }\n\n      closeFillStroke() {\n        this.closePath();\n        this.fillStroke();\n      }\n\n      closeEOFillStroke() {\n        this.closePath();\n        this.eoFillStroke();\n      }\n\n      paintSolidColorImageMask() {\n        const rect = this.svgFactory.createElement(\"svg:rect\");\n        rect.setAttributeNS(null, \"x\", \"0\");\n        rect.setAttributeNS(null, \"y\", \"0\");\n        rect.setAttributeNS(null, \"width\", \"1px\");\n        rect.setAttributeNS(null, \"height\", \"1px\");\n        rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n        this._ensureTransformGroup().appendChild(rect);\n      }\n\n      paintImageXObject(objId) {\n        const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n        if (!imgData) {\n          (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n          return;\n        }\n\n        this.paintInlineImageXObject(imgData);\n      }\n\n      paintInlineImageXObject(imgData, mask) {\n        const width = imgData.width;\n        const height = imgData.height;\n        const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", \"0\");\n        cliprect.setAttributeNS(null, \"y\", \"0\");\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        const imgEl = this.svgFactory.createElement(\"svg:image\");\n        imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n        imgEl.setAttributeNS(null, \"x\", \"0\");\n        imgEl.setAttributeNS(null, \"y\", pf(-height));\n        imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n        imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n        imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n\n        if (mask) {\n          mask.appendChild(imgEl);\n        } else {\n          this._ensureTransformGroup().appendChild(imgEl);\n        }\n      }\n\n      paintImageMaskXObject(imgData) {\n        const current = this.current;\n        const width = imgData.width;\n        const height = imgData.height;\n        const fillColor = current.fillColor;\n        current.maskId = `mask${maskCount++}`;\n        const mask = this.svgFactory.createElement(\"svg:mask\");\n        mask.setAttributeNS(null, \"id\", current.maskId);\n        const rect = this.svgFactory.createElement(\"svg:rect\");\n        rect.setAttributeNS(null, \"x\", \"0\");\n        rect.setAttributeNS(null, \"y\", \"0\");\n        rect.setAttributeNS(null, \"width\", pf(width));\n        rect.setAttributeNS(null, \"height\", pf(height));\n        rect.setAttributeNS(null, \"fill\", fillColor);\n        rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n        this.defs.appendChild(mask);\n\n        this._ensureTransformGroup().appendChild(rect);\n\n        this.paintInlineImageXObject(imgData, mask);\n      }\n\n      paintFormXObjectBegin(matrix, bbox) {\n        if (Array.isArray(matrix) && matrix.length === 6) {\n          this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n        }\n\n        if (bbox) {\n          const width = bbox[2] - bbox[0];\n          const height = bbox[3] - bbox[1];\n          const cliprect = this.svgFactory.createElement(\"svg:rect\");\n          cliprect.setAttributeNS(null, \"x\", bbox[0]);\n          cliprect.setAttributeNS(null, \"y\", bbox[1]);\n          cliprect.setAttributeNS(null, \"width\", pf(width));\n          cliprect.setAttributeNS(null, \"height\", pf(height));\n          this.current.element = cliprect;\n          this.clip(\"nonzero\");\n          this.endPath();\n        }\n      }\n\n      paintFormXObjectEnd() {}\n\n      _initialize(viewport) {\n        const svg = this.svgFactory.create(viewport.width, viewport.height);\n        const definitions = this.svgFactory.createElement(\"svg:defs\");\n        svg.appendChild(definitions);\n        this.defs = definitions;\n        const rootGroup = this.svgFactory.createElement(\"svg:g\");\n        rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n        svg.appendChild(rootGroup);\n        this.svg = rootGroup;\n        return svg;\n      }\n\n      _ensureClipGroup() {\n        if (!this.current.clipGroup) {\n          const clipGroup = this.svgFactory.createElement(\"svg:g\");\n          clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n          this.svg.appendChild(clipGroup);\n          this.current.clipGroup = clipGroup;\n        }\n\n        return this.current.clipGroup;\n      }\n\n      _ensureTransformGroup() {\n        if (!this.tgrp) {\n          this.tgrp = this.svgFactory.createElement(\"svg:g\");\n          this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n          if (this.current.activeClipUrl) {\n            this._ensureClipGroup().appendChild(this.tgrp);\n          } else {\n            this.svg.appendChild(this.tgrp);\n          }\n        }\n\n        return this.tgrp;\n      }\n\n    };\n  }\n\n  /***/ }),\n  /* 23 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.PDFNodeStream = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _network_utils = __w_pdfjs_require__(24);\n\n  ;\n\n  const fs = require(\"fs\");\n\n  const http = require(\"http\");\n\n  const https = require(\"https\");\n\n  const url = require(\"url\");\n\n  const fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\n  function parseUrl(sourceUrl) {\n    const parsedUrl = url.parse(sourceUrl);\n\n    if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n      return parsedUrl;\n    }\n\n    if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n      return url.parse(`file:///${sourceUrl}`);\n    }\n\n    if (!parsedUrl.host) {\n      parsedUrl.protocol = \"file:\";\n    }\n\n    return parsedUrl;\n  }\n\n  class PDFNodeStream {\n    constructor(source) {\n      this.source = source;\n      this.url = parseUrl(source.url);\n      this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n      this.isFsUrl = this.url.protocol === \"file:\";\n      this.httpHeaders = this.isHttp && source.httpHeaders || {};\n      this._fullRequestReader = null;\n      this._rangeRequestReaders = [];\n    }\n\n    get _progressiveDataLength() {\n      return this._fullRequestReader && this._fullRequestReader._loaded || 0; // lwf\n    }\n\n    getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n      this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n      return this._fullRequestReader;\n    }\n\n    getRangeReader(start, end) {\n      if (end <= this._progressiveDataLength) {\n        return null;\n      }\n\n      const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n\n      this._rangeRequestReaders.push(rangeReader);\n\n      return rangeReader;\n    }\n\n    cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n\n      const readers = this._rangeRequestReaders.slice(0);\n\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n\n  }\n\n  exports.PDFNodeStream = PDFNodeStream;\n\n  class BaseFullReader {\n    constructor(stream) {\n      this._url = stream.url;\n      this._done = false;\n      this._storedError = null;\n      this.onProgress = null;\n      const source = stream.source;\n      this._contentLength = source.length;\n      this._loaded = 0;\n      this._filename = null;\n      this._disableRange = source.disableRange || false;\n      this._rangeChunkSize = source.rangeChunkSize;\n\n      if (!this._rangeChunkSize && !this._disableRange) {\n        this._disableRange = true;\n      }\n\n      this._isStreamingSupported = !source.disableStream;\n      this._isRangeSupported = !source.disableRange;\n      this._readableStream = null;\n      this._readCapability = (0, _util.createPromiseCapability)();\n      this._headersCapability = (0, _util.createPromiseCapability)();\n    }\n\n    get headersReady() {\n      return this._headersCapability.promise;\n    }\n\n    get filename() {\n      return this._filename;\n    }\n\n    get contentLength() {\n      return this._contentLength;\n    }\n\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    }\n\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    }\n\n    async read() {\n      await this._readCapability.promise;\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      if (this._storedError) {\n        throw this._storedError;\n      }\n\n      const chunk = this._readableStream.read();\n\n      if (chunk === null) {\n        this._readCapability = (0, _util.createPromiseCapability)();\n        return this.read();\n      }\n\n      this._loaded += chunk.length;\n\n      if (this.onProgress) {\n        this.onProgress({\n          loaded: this._loaded,\n          total: this._contentLength\n        });\n      }\n\n      const buffer = new Uint8Array(chunk).buffer;\n      return {\n        value: buffer,\n        done: false\n      };\n    }\n\n    cancel(reason) {\n      if (!this._readableStream) {\n        this._error(reason);\n\n        return;\n      }\n\n      this._readableStream.destroy(reason);\n    }\n\n    _error(reason) {\n      this._storedError = reason;\n\n      this._readCapability.resolve();\n    }\n\n    _setReadableStream(readableStream) {\n      this._readableStream = readableStream;\n      readableStream.on(\"readable\", () => {\n        this._readCapability.resolve();\n      });\n      readableStream.on(\"end\", () => {\n        readableStream.destroy();\n        this._done = true;\n\n        this._readCapability.resolve();\n      });\n      readableStream.on(\"error\", reason => {\n        this._error(reason);\n      });\n\n      if (!this._isStreamingSupported && this._isRangeSupported) {\n        this._error(new _util.AbortException(\"streaming is disabled\"));\n      }\n\n      if (this._storedError) {\n        this._readableStream.destroy(this._storedError);\n      }\n    }\n\n  }\n\n  class BaseRangeReader {\n    constructor(stream) {\n      this._url = stream.url;\n      this._done = false;\n      this._storedError = null;\n      this.onProgress = null;\n      this._loaded = 0;\n      this._readableStream = null;\n      this._readCapability = (0, _util.createPromiseCapability)();\n      const source = stream.source;\n      this._isStreamingSupported = !source.disableStream;\n    }\n\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    }\n\n    async read() {\n      await this._readCapability.promise;\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      if (this._storedError) {\n        throw this._storedError;\n      }\n\n      const chunk = this._readableStream.read();\n\n      if (chunk === null) {\n        this._readCapability = (0, _util.createPromiseCapability)();\n        return this.read();\n      }\n\n      this._loaded += chunk.length;\n\n      if (this.onProgress) {\n        this.onProgress({\n          loaded: this._loaded\n        });\n      }\n\n      const buffer = new Uint8Array(chunk).buffer;\n      return {\n        value: buffer,\n        done: false\n      };\n    }\n\n    cancel(reason) {\n      if (!this._readableStream) {\n        this._error(reason);\n\n        return;\n      }\n\n      this._readableStream.destroy(reason);\n    }\n\n    _error(reason) {\n      this._storedError = reason;\n\n      this._readCapability.resolve();\n    }\n\n    _setReadableStream(readableStream) {\n      this._readableStream = readableStream;\n      readableStream.on(\"readable\", () => {\n        this._readCapability.resolve();\n      });\n      readableStream.on(\"end\", () => {\n        readableStream.destroy();\n        this._done = true;\n\n        this._readCapability.resolve();\n      });\n      readableStream.on(\"error\", reason => {\n        this._error(reason);\n      });\n\n      if (this._storedError) {\n        this._readableStream.destroy(this._storedError);\n      }\n    }\n\n  }\n\n  function createRequestOptions(parsedUrl, headers) {\n    return {\n      protocol: parsedUrl.protocol,\n      auth: parsedUrl.auth,\n      host: parsedUrl.hostname,\n      port: parsedUrl.port,\n      path: parsedUrl.path,\n      method: \"GET\",\n      headers\n    };\n  }\n\n  class PDFNodeStreamFullReader extends BaseFullReader {\n    constructor(stream) {\n      super(stream);\n\n      const handleResponse = response => {\n        if (response.statusCode === 404) {\n          const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n          this._storedError = error;\n\n          this._headersCapability.reject(error);\n\n          return;\n        }\n\n        this._headersCapability.resolve();\n\n        this._setReadableStream(response);\n\n        const getResponseHeader = name => {\n          return this._readableStream.headers[name.toLowerCase()];\n        };\n\n        const {\n          allowRangeRequests,\n          suggestedLength\n        } = (0, _network_utils.validateRangeRequestCapabilities)({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange\n        });\n        this._isRangeSupported = allowRangeRequests;\n        this._contentLength = suggestedLength || this._contentLength;\n        this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n      };\n\n      this._request = null;\n\n      if (this._url.protocol === \"http:\") {\n        this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n      } else {\n        this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n      }\n\n      this._request.on(\"error\", reason => {\n        this._storedError = reason;\n\n        this._headersCapability.reject(reason);\n      });\n\n      this._request.end();\n    }\n\n  }\n\n  class PDFNodeStreamRangeReader extends BaseRangeReader {\n    constructor(stream, start, end) {\n      super(stream);\n      this._httpHeaders = {};\n\n      for (const property in stream.httpHeaders) {\n        const value = stream.httpHeaders[property];\n\n        if (typeof value === \"undefined\") {\n          continue;\n        }\n\n        this._httpHeaders[property] = value;\n      }\n\n      this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n      const handleResponse = response => {\n        if (response.statusCode === 404) {\n          const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n          this._storedError = error;\n          return;\n        }\n\n        this._setReadableStream(response);\n      };\n\n      this._request = null;\n\n      if (this._url.protocol === \"http:\") {\n        this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n      } else {\n        this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n      }\n\n      this._request.on(\"error\", reason => {\n        this._storedError = reason;\n      });\n\n      this._request.end();\n    }\n\n  }\n\n  class PDFNodeStreamFsFullReader extends BaseFullReader {\n    constructor(stream) {\n      super(stream);\n      let path = decodeURIComponent(this._url.path);\n\n      if (fileUriRegex.test(this._url.href)) {\n        path = path.replace(/^\\//, \"\");\n      }\n\n      fs.lstat(path, (error, stat) => {\n        if (error) {\n          if (error.code === \"ENOENT\") {\n            error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n          }\n\n          this._storedError = error;\n\n          this._headersCapability.reject(error);\n\n          return;\n        }\n\n        this._contentLength = stat.size;\n\n        this._setReadableStream(fs.createReadStream(path));\n\n        this._headersCapability.resolve();\n      });\n    }\n\n  }\n\n  class PDFNodeStreamFsRangeReader extends BaseRangeReader {\n    constructor(stream, start, end) {\n      super(stream);\n      let path = decodeURIComponent(this._url.path);\n\n      if (fileUriRegex.test(this._url.href)) {\n        path = path.replace(/^\\//, \"\");\n      }\n\n      this._setReadableStream(fs.createReadStream(path, {\n        start,\n        end: end - 1\n      }));\n    }\n\n  }\n\n  /***/ }),\n  /* 24 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.createResponseStatusError = createResponseStatusError;\n  exports.extractFilenameFromHeader = extractFilenameFromHeader;\n  exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n  exports.validateResponseStatus = validateResponseStatus;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _content_disposition = __w_pdfjs_require__(25);\n\n  function validateRangeRequestCapabilities({\n    getResponseHeader,\n    isHttp,\n    rangeChunkSize,\n    disableRange\n  }) {\n    (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n    const returnValues = {\n      allowRangeRequests: false,\n      suggestedLength: undefined\n    };\n    const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n\n    if (!Number.isInteger(length)) {\n      return returnValues;\n    }\n\n    returnValues.suggestedLength = length;\n\n    if (length <= 2 * rangeChunkSize) {\n      return returnValues;\n    }\n\n    if (disableRange || !isHttp) {\n      return returnValues;\n    }\n\n    if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n      return returnValues;\n    }\n\n    const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n\n    if (contentEncoding !== \"identity\") {\n      return returnValues;\n    }\n\n    returnValues.allowRangeRequests = true;\n    return returnValues;\n  }\n\n  function extractFilenameFromHeader(getResponseHeader) {\n    const contentDisposition = getResponseHeader(\"Content-Disposition\");\n\n    if (contentDisposition) {\n      let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n\n      if (filename.includes(\"%\")) {\n        try {\n          filename = decodeURIComponent(filename);\n        } catch (ex) {}\n      }\n\n      if (/\\.pdf$/i.test(filename)) {\n        return filename;\n      }\n    }\n\n    return null;\n  }\n\n  function createResponseStatusError(status, url) {\n    if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n      return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n    }\n\n    return new _util.UnexpectedResponseException(\"Unexpected server response (\" + status + ') while retrieving PDF \"' + url + '\".', status);\n  }\n\n  function validateResponseStatus(status) {\n    return status === 200 || status === 206;\n  }\n\n  /***/ }),\n  /* 25 */\n  /***/ ((__unused_webpack_module, exports) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n\n  function getFilenameFromContentDispositionHeader(contentDisposition) {\n    let needsEncodingFixup = true;\n    let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n\n    if (tmp) {\n      tmp = tmp[1];\n      let filename = rfc2616unquote(tmp);\n      filename = unescape(filename);\n      filename = rfc5987decode(filename);\n      filename = rfc2047decode(filename);\n      return fixupEncoding(filename);\n    }\n\n    tmp = rfc2231getparam(contentDisposition);\n\n    if (tmp) {\n      const filename = rfc2047decode(tmp);\n      return fixupEncoding(filename);\n    }\n\n    tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n\n    if (tmp) {\n      tmp = tmp[1];\n      let filename = rfc2616unquote(tmp);\n      filename = rfc2047decode(filename);\n      return fixupEncoding(filename);\n    }\n\n    function toParamRegExp(attributePattern, flags) {\n      return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n    }\n\n    function textdecode(encoding, value) {\n      if (encoding) {\n        if (!/^[\\x00-\\xFF]+$/.test(value)) {\n          return value;\n        }\n\n        try {\n          const decoder = new TextDecoder(encoding, {\n            fatal: true\n          });\n          const bytes = Array.from(value, function (ch) {\n            return ch.charCodeAt(0) & 0xff;\n          });\n          value = decoder.decode(new Uint8Array(bytes));\n          needsEncodingFixup = false;\n        } catch (e) {\n          if (/^utf-?8$/i.test(encoding)) {\n            try {\n              value = decodeURIComponent(escape(value));\n              needsEncodingFixup = false;\n            } catch (err) {}\n          }\n        }\n      }\n\n      return value;\n    }\n\n    function fixupEncoding(value) {\n      if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n        value = textdecode(\"utf-8\", value);\n\n        if (needsEncodingFixup) {\n          value = textdecode(\"iso-8859-1\", value);\n        }\n      }\n\n      return value;\n    }\n\n    function rfc2231getparam(contentDispositionStr) {\n      const matches = [];\n      let match;\n      const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n\n      while ((match = iter.exec(contentDispositionStr)) !== null) {\n        let [, n, quot, part] = match;\n        n = parseInt(n, 10);\n\n        if (n in matches) {\n          if (n === 0) {\n            break;\n          }\n\n          continue;\n        }\n\n        matches[n] = [quot, part];\n      }\n\n      const parts = [];\n\n      for (let n = 0; n < matches.length; ++n) {\n        if (!(n in matches)) {\n          break;\n        }\n\n        let [quot, part] = matches[n];\n        part = rfc2616unquote(part);\n\n        if (quot) {\n          part = unescape(part);\n\n          if (n === 0) {\n            part = rfc5987decode(part);\n          }\n        }\n\n        parts.push(part);\n      }\n\n      return parts.join(\"\");\n    }\n\n    function rfc2616unquote(value) {\n      if (value.startsWith('\"')) {\n        const parts = value.slice(1).split('\\\\\"');\n\n        for (let i = 0; i < parts.length; ++i) {\n          const quotindex = parts[i].indexOf('\"');\n\n          if (quotindex !== -1) {\n            parts[i] = parts[i].slice(0, quotindex);\n            parts.length = i + 1;\n          }\n\n          parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n        }\n\n        value = parts.join('\"');\n      }\n\n      return value;\n    }\n\n    function rfc5987decode(extvalue) {\n      const encodingend = extvalue.indexOf(\"'\");\n\n      if (encodingend === -1) {\n        return extvalue;\n      }\n\n      const encoding = extvalue.slice(0, encodingend);\n      const langvalue = extvalue.slice(encodingend + 1);\n      const value = langvalue.replace(/^[^']*'/, \"\");\n      return textdecode(encoding, value);\n    }\n\n    function rfc2047decode(value) {\n      if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n        return value;\n      }\n\n      return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        }\n\n        try {\n          text = atob(text);\n        } catch (e) {}\n\n        return textdecode(charset, text);\n      });\n    }\n\n    return \"\";\n  }\n\n  /***/ }),\n  /* 26 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.PDFNetworkStream = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _network_utils = __w_pdfjs_require__(24);\n\n  ;\n  const OK_RESPONSE = 200;\n  const PARTIAL_CONTENT_RESPONSE = 206;\n\n  function getArrayBuffer(xhr) {\n    const data = xhr.response;\n\n    if (typeof data !== \"string\") {\n      return data;\n    }\n\n    const array = (0, _util.stringToBytes)(data);\n    return array.buffer;\n  }\n\n  class NetworkManager {\n    constructor(url, args) {\n      this.url = url;\n      args = args || {};\n      this.isHttp = /^https?:/i.test(url);\n      this.httpHeaders = this.isHttp && args.httpHeaders || {};\n      this.withCredentials = args.withCredentials || false;\n\n      this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n      this.currXhrId = 0;\n      this.pendingRequests = Object.create(null);\n    }\n\n    requestRange(begin, end, listeners) {\n      const args = {\n        begin,\n        end\n      };\n\n      for (const prop in listeners) {\n        args[prop] = listeners[prop];\n      }\n\n      return this.request(args);\n    }\n\n    requestFull(listeners) {\n      return this.request(listeners);\n    }\n\n    request(args) {\n      const xhr = this.getXhr();\n      const xhrId = this.currXhrId++;\n      const pendingRequest = this.pendingRequests[xhrId] = {\n        xhr\n      };\n      xhr.open(\"GET\", this.url);\n      xhr.withCredentials = this.withCredentials;\n\n      for (const property in this.httpHeaders) {\n        const value = this.httpHeaders[property];\n\n        if (typeof value === \"undefined\") {\n          continue;\n        }\n\n        xhr.setRequestHeader(property, value);\n      }\n\n      if (this.isHttp && \"begin\" in args && \"end\" in args) {\n        xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n        pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n      } else {\n        pendingRequest.expectedStatus = OK_RESPONSE;\n      }\n\n      xhr.responseType = \"arraybuffer\";\n\n      if (args.onError) {\n        xhr.onerror = function (evt) {\n          args.onError(xhr.status);\n        };\n      }\n\n      xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n      xhr.onprogress = this.onProgress.bind(this, xhrId);\n      pendingRequest.onHeadersReceived = args.onHeadersReceived;\n      pendingRequest.onDone = args.onDone;\n      pendingRequest.onError = args.onError;\n      pendingRequest.onProgress = args.onProgress;\n      xhr.send(null);\n      return xhrId;\n    }\n\n    onProgress(xhrId, evt) {\n      const pendingRequest = this.pendingRequests[xhrId];\n\n      if (!pendingRequest) {\n        return;\n      }\n\n      if (pendingRequest.onProgress) {\n        pendingRequest.onProgress(evt);\n      }\n    }\n\n    onStateChange(xhrId, evt) {\n      const pendingRequest = this.pendingRequests[xhrId];\n\n      if (!pendingRequest) {\n        return;\n      }\n\n      const xhr = pendingRequest.xhr;\n\n      if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n        pendingRequest.onHeadersReceived();\n        delete pendingRequest.onHeadersReceived;\n      }\n\n      if (xhr.readyState !== 4) {\n        return;\n      }\n\n      if (!(xhrId in this.pendingRequests)) {\n        return;\n      }\n\n      delete this.pendingRequests[xhrId];\n\n      if (xhr.status === 0 && this.isHttp) {\n        if (pendingRequest.onError) {\n          pendingRequest.onError(xhr.status);\n        }\n\n        return;\n      }\n\n      const xhrStatus = xhr.status || OK_RESPONSE;\n      const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n      if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n        if (pendingRequest.onError) {\n          pendingRequest.onError(xhr.status);\n        }\n\n        return;\n      }\n\n      const chunk = getArrayBuffer(xhr);\n\n      if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n        const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n        const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n        pendingRequest.onDone({\n          begin: parseInt(matches[1], 10),\n          chunk\n        });\n      } else if (chunk) {\n        pendingRequest.onDone({\n          begin: 0,\n          chunk\n        });\n      } else if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n    }\n\n    getRequestXhr(xhrId) {\n      return this.pendingRequests[xhrId].xhr;\n    }\n\n    isPendingRequest(xhrId) {\n      return xhrId in this.pendingRequests;\n    }\n\n    abortRequest(xhrId) {\n      const xhr = this.pendingRequests[xhrId].xhr;\n      delete this.pendingRequests[xhrId];\n      xhr.abort();\n    }\n\n  }\n\n  class PDFNetworkStream {\n    constructor(source) {\n      this._source = source;\n      this._manager = new NetworkManager(source.url, {\n        httpHeaders: source.httpHeaders,\n        withCredentials: source.withCredentials\n      });\n      this._rangeChunkSize = source.rangeChunkSize;\n      this._fullRequestReader = null;\n      this._rangeRequestReaders = [];\n    }\n\n    _onRangeRequestReaderClosed(reader) {\n      const i = this._rangeRequestReaders.indexOf(reader);\n\n      if (i >= 0) {\n        this._rangeRequestReaders.splice(i, 1);\n      }\n    }\n\n    getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n      this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n      return this._fullRequestReader;\n    }\n\n    getRangeReader(begin, end) {\n      const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n      reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n\n      this._rangeRequestReaders.push(reader);\n\n      return reader;\n    }\n\n    cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n\n      const readers = this._rangeRequestReaders.slice(0);\n\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n\n  }\n\n  exports.PDFNetworkStream = PDFNetworkStream;\n\n  class PDFNetworkStreamFullRequestReader {\n    constructor(manager, source) {\n      this._manager = manager;\n      const args = {\n        onHeadersReceived: this._onHeadersReceived.bind(this),\n        onDone: this._onDone.bind(this),\n        onError: this._onError.bind(this),\n        onProgress: this._onProgress.bind(this)\n      };\n      this._url = source.url;\n      this._fullRequestId = manager.requestFull(args);\n      this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n      this._disableRange = source.disableRange || false;\n      this._contentLength = source.length;\n      this._rangeChunkSize = source.rangeChunkSize;\n\n      if (!this._rangeChunkSize && !this._disableRange) {\n        this._disableRange = true;\n      }\n\n      this._isStreamingSupported = false;\n      this._isRangeSupported = false;\n      this._cachedChunks = [];\n      this._requests = [];\n      this._done = false;\n      this._storedError = undefined;\n      this._filename = null;\n      this.onProgress = null;\n    }\n\n    _onHeadersReceived() {\n      const fullRequestXhrId = this._fullRequestId;\n\n      const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n      const getResponseHeader = name => {\n        return fullRequestXhr.getResponseHeader(name);\n      };\n\n      const {\n        allowRangeRequests,\n        suggestedLength\n      } = (0, _network_utils.validateRangeRequestCapabilities)({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange\n      });\n\n      if (allowRangeRequests) {\n        this._isRangeSupported = true;\n      }\n\n      this._contentLength = suggestedLength || this._contentLength;\n      this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n      if (this._isRangeSupported) {\n        this._manager.abortRequest(fullRequestXhrId);\n      }\n\n      this._headersReceivedCapability.resolve();\n    }\n\n    _onDone(args) {\n      if (args) {\n        if (this._requests.length > 0) {\n          const requestCapability = this._requests.shift();\n\n          requestCapability.resolve({\n            value: args.chunk,\n            done: false\n          });\n        } else {\n          this._cachedChunks.push(args.chunk);\n        }\n      }\n\n      this._done = true;\n\n      if (this._cachedChunks.length > 0) {\n        return;\n      }\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n    }\n\n    _onError(status) {\n      const url = this._url;\n      const exception = (0, _network_utils.createResponseStatusError)(status, url);\n      this._storedError = exception;\n\n      this._headersReceivedCapability.reject(exception);\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.reject(exception);\n      });\n\n      this._requests = [];\n      this._cachedChunks = [];\n    }\n\n    _onProgress(data) {\n      if (this.onProgress) {\n        this.onProgress({\n          loaded: data.loaded,\n          total: data.lengthComputable ? data.total : this._contentLength\n        });\n      }\n    }\n\n    get filename() {\n      return this._filename;\n    }\n\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    }\n\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    }\n\n    get contentLength() {\n      return this._contentLength;\n    }\n\n    get headersReady() {\n      return this._headersReceivedCapability.promise;\n    }\n\n    async read() {\n      if (this._storedError) {\n        throw this._storedError;\n      }\n\n      if (this._cachedChunks.length > 0) {\n        const chunk = this._cachedChunks.shift();\n\n        return {\n          value: chunk,\n          done: false\n        };\n      }\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      const requestCapability = (0, _util.createPromiseCapability)();\n\n      this._requests.push(requestCapability);\n\n      return requestCapability.promise;\n    }\n\n    cancel(reason) {\n      this._done = true;\n\n      this._headersReceivedCapability.reject(reason);\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n\n      if (this._manager.isPendingRequest(this._fullRequestId)) {\n        this._manager.abortRequest(this._fullRequestId);\n      }\n\n      this._fullRequestReader = null;\n    }\n\n  }\n\n  class PDFNetworkStreamRangeRequestReader {\n    constructor(manager, begin, end) {\n      this._manager = manager;\n      const args = {\n        onDone: this._onDone.bind(this),\n        onProgress: this._onProgress.bind(this)\n      };\n      this._requestId = manager.requestRange(begin, end, args);\n      this._requests = [];\n      this._queuedChunk = null;\n      this._done = false;\n      this.onProgress = null;\n      this.onClosed = null;\n    }\n\n    _close() {\n      if (this.onClosed) {\n        this.onClosed(this);\n      }\n    }\n\n    _onDone(data) {\n      const chunk = data.chunk;\n\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n\n        requestCapability.resolve({\n          value: chunk,\n          done: false\n        });\n      } else {\n        this._queuedChunk = chunk;\n      }\n\n      this._done = true;\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n\n      this._close();\n    }\n\n    _onProgress(evt) {\n      if (!this.isStreamingSupported && this.onProgress) {\n        this.onProgress({\n          loaded: evt.loaded\n        });\n      }\n    }\n\n    get isStreamingSupported() {\n      return false;\n    }\n\n    async read() {\n      if (this._queuedChunk !== null) {\n        const chunk = this._queuedChunk;\n        this._queuedChunk = null;\n        return {\n          value: chunk,\n          done: false\n        };\n      }\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      const requestCapability = (0, _util.createPromiseCapability)();\n\n      this._requests.push(requestCapability);\n\n      return requestCapability.promise;\n    }\n\n    cancel(reason) {\n      this._done = true;\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n\n      if (this._manager.isPendingRequest(this._requestId)) {\n        this._manager.abortRequest(this._requestId);\n      }\n\n      this._close();\n    }\n\n  }\n\n  /***/ }),\n  /* 27 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.PDFFetchStream = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _network_utils = __w_pdfjs_require__(24);\n\n  ;\n\n  function createFetchOptions(headers, withCredentials, abortController) {\n    return {\n      method: \"GET\",\n      headers,\n      signal: abortController && abortController.signal, // lwf\n      mode: \"cors\",\n      credentials: withCredentials ? \"include\" : \"same-origin\",\n      redirect: \"follow\"\n    };\n  }\n\n  function createHeaders(httpHeaders) {\n    const headers = new Headers();\n\n    for (const property in httpHeaders) {\n      const value = httpHeaders[property];\n\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n\n      headers.append(property, value);\n    }\n\n    return headers;\n  }\n\n  class PDFFetchStream {\n    constructor(source) {\n      this.source = source;\n      this.isHttp = /^https?:/i.test(source.url);\n      this.httpHeaders = this.isHttp && source.httpHeaders || {};\n      this._fullRequestReader = null;\n      this._rangeRequestReaders = [];\n    }\n\n    get _progressiveDataLength() {\n      return this._fullRequestReader && this._fullRequestReader._loaded || 0; // lwf\n    }\n\n    getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n      this._fullRequestReader = new PDFFetchStreamReader(this);\n      return this._fullRequestReader;\n    }\n\n    getRangeReader(begin, end) {\n      if (end <= this._progressiveDataLength) {\n        return null;\n      }\n\n      const reader = new PDFFetchStreamRangeReader(this, begin, end);\n\n      this._rangeRequestReaders.push(reader);\n\n      return reader;\n    }\n\n    cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n\n      const readers = this._rangeRequestReaders.slice(0);\n\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n\n  }\n\n  exports.PDFFetchStream = PDFFetchStream;\n\n  class PDFFetchStreamReader {\n    constructor(stream) {\n      this._stream = stream;\n      this._reader = null;\n      this._loaded = 0;\n      this._filename = null;\n      const source = stream.source;\n      this._withCredentials = source.withCredentials || false;\n      this._contentLength = source.length;\n      this._headersCapability = (0, _util.createPromiseCapability)();\n      this._disableRange = source.disableRange || false;\n      this._rangeChunkSize = source.rangeChunkSize;\n\n      if (!this._rangeChunkSize && !this._disableRange) {\n        this._disableRange = true;\n      }\n\n      if (typeof AbortController !== \"undefined\") {\n        this._abortController = new AbortController();\n      }\n\n      this._isStreamingSupported = !source.disableStream;\n      this._isRangeSupported = !source.disableRange;\n      this._headers = createHeaders(this._stream.httpHeaders);\n      const url = source.url;\n      fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n        if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n          throw (0, _network_utils.createResponseStatusError)(response.status, url);\n        }\n\n        this._reader = response.body.getReader();\n\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n\n        const {\n          allowRangeRequests,\n          suggestedLength\n        } = (0, _network_utils.validateRangeRequestCapabilities)({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange\n        });\n        this._isRangeSupported = allowRangeRequests;\n        this._contentLength = suggestedLength || this._contentLength;\n        this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n        }\n      }).catch(this._headersCapability.reject);\n      this.onProgress = null;\n    }\n\n    get headersReady() {\n      return this._headersCapability.promise;\n    }\n\n    get filename() {\n      return this._filename;\n    }\n\n    get contentLength() {\n      return this._contentLength;\n    }\n\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    }\n\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    }\n\n    async read() {\n      await this._headersCapability.promise;\n      const {\n        value,\n        done\n      } = await this._reader.read();\n\n      if (done) {\n        return {\n          value,\n          done\n        };\n      }\n\n      this._loaded += value.byteLength;\n\n      if (this.onProgress) {\n        this.onProgress({\n          loaded: this._loaded,\n          total: this._contentLength\n        });\n      }\n\n      const buffer = new Uint8Array(value).buffer;\n      return {\n        value: buffer,\n        done: false\n      };\n    }\n\n    cancel(reason) {\n      if (this._reader) {\n        this._reader.cancel(reason);\n      }\n\n      if (this._abortController) {\n        this._abortController.abort();\n      }\n    }\n\n  }\n\n  class PDFFetchStreamRangeReader {\n    constructor(stream, begin, end) {\n      this._stream = stream;\n      this._reader = null;\n      this._loaded = 0;\n      const source = stream.source;\n      this._withCredentials = source.withCredentials || false;\n      this._readCapability = (0, _util.createPromiseCapability)();\n      this._isStreamingSupported = !source.disableStream;\n\n      if (typeof AbortController !== \"undefined\") {\n        this._abortController = new AbortController();\n      }\n\n      this._headers = createHeaders(this._stream.httpHeaders);\n\n      this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n      const url = source.url;\n      fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n        if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n          throw (0, _network_utils.createResponseStatusError)(response.status, url);\n        }\n\n        this._readCapability.resolve();\n\n        this._reader = response.body.getReader();\n      }).catch(reason => {\n        if (reason && reason.name === \"AbortError\") { // lwf\n          return;\n        }\n\n        throw reason;\n      });\n      this.onProgress = null;\n    }\n\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    }\n\n    async read() {\n      await this._readCapability.promise;\n      const {\n        value,\n        done\n      } = await this._reader.read();\n\n      if (done) {\n        return {\n          value,\n          done\n        };\n      }\n\n      this._loaded += value.byteLength;\n\n      if (this.onProgress) {\n        this.onProgress({\n          loaded: this._loaded\n        });\n      }\n\n      const buffer = new Uint8Array(value).buffer;\n      return {\n        value: buffer,\n        done: false\n      };\n    }\n\n    cancel(reason) {\n      if (this._reader) {\n        this._reader.cancel(reason);\n      }\n\n      if (this._abortController) {\n        this._abortController.abort();\n      }\n    }\n\n  }\n/***/ })\n/******/  ]);\n/************************************************************************/\n/******/  // The module cache\n/******/  var __webpack_module_cache__ = {};\n/******/  \n/******/  // The require function\n/******/  function __w_pdfjs_require__(moduleId) {\n/******/    // Check if module is in cache\n/******/    if(__webpack_module_cache__[moduleId]) {\n/******/      return __webpack_module_cache__[moduleId].exports;\n/******/    }\n/******/    // Create a new module (and put it into the cache)\n/******/    var module = __webpack_module_cache__[moduleId] = {\n/******/      // no module.id needed\n/******/      // no module.loaded needed\n/******/      exports: {}\n/******/    };\n/******/  \n/******/    // Execute the module function\n/******/    __webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n/******/  \n/******/    // Return the exports of the module\n/******/    return module.exports;\n/******/  }\n/******/  \n/************************************************************************/\n/******/  // module exports must be returned from runtime so entry inlining is disabled\n/******/  // startup\n/******/  // Load entry module and return exports\n/******/  return __w_pdfjs_require__(0);\n/******/ })()\n;\n});\n\ndefine('skylark-pdfjs-display/main',[\r\n\t\"./display\"\r\n],function(display) {\r\n\treturn display;\r\n});\ndefine('skylark-pdfjs-display', ['skylark-pdfjs-display/main'], function (main) { return main; });\n\ndefine('skylark-pdfjs-viewer/ui_utils',[\n  \"./pdfjs_dev\"\n],function(PDFJSDev){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const CSS_UNITS = 96.0 / 72.0;\n  const DEFAULT_SCALE_VALUE = \"auto\";\n  const DEFAULT_SCALE = 1.0;\n  const MIN_SCALE = 0.1;\n  const MAX_SCALE = 10.0;\n  const UNKNOWN_SCALE = 0;\n  const MAX_AUTO_SCALE = 1.25;\n  const SCROLLBAR_PADDING = 40;\n  const VERTICAL_PADDING = 5;\n\n  const LOADINGBAR_END_OFFSET_VAR = \"--loadingBar-end-offset\";\n\n  const PresentationModeState = {\n    UNKNOWN: 0,\n    NORMAL: 1,\n    CHANGING: 2,\n    FULLSCREEN: 3,\n  };\n\n  const SidebarView = {\n    UNKNOWN: -1,\n    NONE: 0,\n    THUMBS: 1, // Default value.\n    OUTLINE: 2,\n    ATTACHMENTS: 3,\n    LAYERS: 4,\n  };\n\n  const RendererType = {\n    CANVAS: \"canvas\",\n    SVG: \"svg\",\n  };\n\n  const TextLayerMode = {\n    DISABLE: 0,\n    ENABLE: 1,\n    ENABLE_ENHANCE: 2,\n  };\n\n  const ScrollMode = {\n    UNKNOWN: -1,\n    VERTICAL: 0, // Default value.\n    HORIZONTAL: 1,\n    WRAPPED: 2,\n  };\n\n  const SpreadMode = {\n    UNKNOWN: -1,\n    NONE: 0, // Default value.\n    ODD: 1,\n    EVEN: 2,\n  };\n\n  // Used by `PDFViewerApplication`, and by the API unit-tests.\n  const AutoPrintRegExp = /\\bprint\\s*\\(/;\n\n  // Replaces {{arguments}} with their values.\n  function formatL10nValue(text, args) {\n    if (!args) {\n      return text;\n    }\n    return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n      return name in args ? args[name] : \"{{\" + name + \"}}\";\n    });\n  }\n\n  /**\n   * No-op implementation of the localization service.\n   * @implements {IL10n}\n   */\n  const NullL10n = {\n    async getLanguage() {\n      return \"en-us\";\n    },\n\n    async getDirection() {\n      return \"ltr\";\n    },\n\n    async get(property, args, fallback) {\n      return formatL10nValue(fallback, args);\n    },\n\n    async translate(element) {},\n  };\n\n  /**\n   * Returns scale factor for the canvas. It makes sense for the HiDPI displays.\n   * @returns {Object} The object with horizontal (sx) and vertical (sy)\n   *                   scales. The scaled property is set to false if scaling is\n   *                   not required, true otherwise.\n   */\n  function getOutputScale(ctx) {\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const backingStoreRatio =\n      ctx.webkitBackingStorePixelRatio ||\n      ctx.mozBackingStorePixelRatio ||\n      ctx.backingStorePixelRatio ||\n      1;\n    const pixelRatio = devicePixelRatio / backingStoreRatio;\n    return {\n      sx: pixelRatio,\n      sy: pixelRatio,\n      scaled: pixelRatio !== 1,\n    };\n  }\n\n  /**\n   * Scrolls specified element into view of its parent.\n   * @param {Object} element - The element to be visible.\n   * @param {Object} spot - An object with optional top and left properties,\n   *   specifying the offset from the top left edge.\n   * @param {boolean} skipOverflowHiddenElements - Ignore elements that have\n   *   the CSS rule `overflow: hidden;` set. The default is false.\n   */\n  function scrollIntoView(element, spot, skipOverflowHiddenElements = false) {\n    // Assuming offsetParent is available (it's not available when viewer is in\n    // hidden iframe or object). We have to scroll: if the offsetParent is not set\n    // producing the error. See also animationStarted.\n    let parent = element.offsetParent;\n    if (!parent) {\n      console.error(\"offsetParent is not set -- cannot scroll\");\n      return;\n    }\n    let offsetY = element.offsetTop + element.clientTop;\n    let offsetX = element.offsetLeft + element.clientLeft;\n    while (\n      (parent.clientHeight === parent.scrollHeight &&\n        parent.clientWidth === parent.scrollWidth) ||\n      (skipOverflowHiddenElements &&\n        getComputedStyle(parent).overflow === \"hidden\")\n    ) {\n      if (parent.dataset._scaleY) {\n        offsetY /= parent.dataset._scaleY;\n        offsetX /= parent.dataset._scaleX;\n      }\n      offsetY += parent.offsetTop;\n      offsetX += parent.offsetLeft;\n      parent = parent.offsetParent;\n      if (!parent) {\n        return; // no need to scroll\n      }\n    }\n    if (spot) {\n      if (spot.top !== undefined) {\n        offsetY += spot.top;\n      }\n      if (spot.left !== undefined) {\n        offsetX += spot.left;\n        parent.scrollLeft = offsetX;\n      }\n    }\n    parent.scrollTop = offsetY;\n  }\n\n  /**\n   * Helper function to start monitoring the scroll event and converting them into\n   * PDF.js friendly one: with scroll debounce and scroll direction.\n   */\n  function watchScroll(viewAreaElement, callback) {\n    const debounceScroll = function (evt) {\n      if (rAF) {\n        return;\n      }\n      // schedule an invocation of scroll for next animation frame.\n      rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n        rAF = null;\n\n        const currentX = viewAreaElement.scrollLeft;\n        const lastX = state.lastX;\n        if (currentX !== lastX) {\n          state.right = currentX > lastX;\n        }\n        state.lastX = currentX;\n        const currentY = viewAreaElement.scrollTop;\n        const lastY = state.lastY;\n        if (currentY !== lastY) {\n          state.down = currentY > lastY;\n        }\n        state.lastY = currentY;\n        callback(state);\n      });\n    };\n\n    const state = {\n      right: true,\n      down: true,\n      lastX: viewAreaElement.scrollLeft,\n      lastY: viewAreaElement.scrollTop,\n      _eventHandler: debounceScroll,\n    };\n\n    let rAF = null;\n    viewAreaElement.addEventListener(\"scroll\", debounceScroll, true);\n    return state;\n  }\n\n  /**\n   * Helper function to parse query string (e.g. ?param1=value&parm2=...).\n   */\n  function parseQueryString(query) {\n    const parts = query.split(\"&\");\n    const params = Object.create(null);\n    for (let i = 0, ii = parts.length; i < ii; ++i) {\n      const param = parts[i].split(\"=\");\n      const key = param[0].toLowerCase();\n      const value = param.length > 1 ? param[1] : null;\n      params[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n    return params;\n  }\n\n  /**\n   * Use binary search to find the index of the first item in a given array which\n   * passes a given condition. The items are expected to be sorted in the sense\n   * that if the condition is true for one item in the array, then it is also true\n   * for all following items.\n   *\n   * @returns {number} Index of the first array element to pass the test,\n   *                   or |items.length| if no such element exists.\n   */\n  function binarySearchFirstItem(items, condition) {\n    let minIndex = 0;\n    let maxIndex = items.length - 1;\n\n    if (maxIndex < 0 || !condition(items[maxIndex])) {\n      return items.length;\n    }\n    if (condition(items[minIndex])) {\n      return minIndex;\n    }\n\n    while (minIndex < maxIndex) {\n      const currentIndex = (minIndex + maxIndex) >> 1;\n      const currentItem = items[currentIndex];\n      if (condition(currentItem)) {\n        maxIndex = currentIndex;\n      } else {\n        minIndex = currentIndex + 1;\n      }\n    }\n    return minIndex; /* === maxIndex */\n  }\n\n  /**\n   *  Approximates float number as a fraction using Farey sequence (max order\n   *  of 8).\n   *  @param {number} x - Positive float number.\n   *  @returns {Array} Estimated fraction: the first array item is a numerator,\n   *                   the second one is a denominator.\n   */\n  function approximateFraction(x) {\n    // Fast paths for int numbers or their inversions.\n    if (Math.floor(x) === x) {\n      return [x, 1];\n    }\n    const xinv = 1 / x;\n    const limit = 8;\n    if (xinv > limit) {\n      return [1, limit];\n    } else if (Math.floor(xinv) === xinv) {\n      return [1, xinv];\n    }\n\n    const x_ = x > 1 ? xinv : x;\n    // a/b and c/d are neighbours in Farey sequence.\n    let a = 0,\n      b = 1,\n      c = 1,\n      d = 1;\n    // Limiting search to order 8.\n    while (true) {\n      // Generating next term in sequence (order of q).\n      const p = a + c,\n        q = b + d;\n      if (q > limit) {\n        break;\n      }\n      if (x_ <= p / q) {\n        c = p;\n        d = q;\n      } else {\n        a = p;\n        b = q;\n      }\n    }\n    let result;\n    // Select closest of the neighbours to x.\n    if (x_ - a / b < c / d - x_) {\n      result = x_ === x ? [a, b] : [b, a];\n    } else {\n      result = x_ === x ? [c, d] : [d, c];\n    }\n    return result;\n  }\n\n  function roundToDivide(x, div) {\n    const r = x % div;\n    return r === 0 ? x : Math.round(x - r + div);\n  }\n\n  /**\n   * Gets the size of the specified page, converted from PDF units to inches.\n   * @param {Object} An Object containing the properties: {Array} `view`,\n   *   {number} `userUnit`, and {number} `rotate`.\n   * @returns {Object} An Object containing the properties: {number} `width`\n   *   and {number} `height`, given in inches.\n   */\n  function getPageSizeInches({ view, userUnit, rotate }) {\n    const [x1, y1, x2, y2] = view;\n    // We need to take the page rotation into account as well.\n    const changeOrientation = rotate % 180 !== 0;\n\n    const width = ((x2 - x1) / 72) * userUnit;\n    const height = ((y2 - y1) / 72) * userUnit;\n\n    return {\n      width: changeOrientation ? height : width,\n      height: changeOrientation ? width : height,\n    };\n  }\n\n  /**\n   * Helper function for getVisibleElements.\n   *\n   * @param {number} index - initial guess at the first visible element\n   * @param {Array} views - array of pages, into which `index` is an index\n   * @param {number} top - the top of the scroll pane\n   * @returns {number} less than or equal to `index` that is definitely at or\n   *   before the first visible element in `views`, but not by too much. (Usually,\n   *   this will be the first element in the first partially visible row in\n   *   `views`, although sometimes it goes back one row further.)\n   */\n  function backtrackBeforeAllVisibleElements(index, views, top) {\n    // binarySearchFirstItem's assumption is that the input is ordered, with only\n    // one index where the conditions flips from false to true: [false ...,\n    // true...]. With vertical scrolling and spreads, it is possible to have\n    // [false ..., true, false, true ...]. With wrapped scrolling we can have a\n    // similar sequence, with many more mixed true and false in the middle.\n    //\n    // So there is no guarantee that the binary search yields the index of the\n    // first visible element. It could have been any of the other visible elements\n    // that were preceded by a hidden element.\n\n    // Of course, if either this element or the previous (hidden) element is also\n    // the first element, there's nothing to worry about.\n    if (index < 2) {\n      return index;\n    }\n\n    // That aside, the possible cases are represented below.\n    //\n    //     ****  = fully hidden\n    //     A*B*  = mix of partially visible and/or hidden pages\n    //     CDEF  = fully visible\n    //\n    // (1) Binary search could have returned A, in which case we can stop.\n    // (2) Binary search could also have returned B, in which case we need to\n    // check the whole row.\n    // (3) Binary search could also have returned C, in which case we need to\n    // check the whole previous row.\n    //\n    // There's one other possibility:\n    //\n    //     ****  = fully hidden\n    //     ABCD  = mix of fully and/or partially visible pages\n    //\n    // (4) Binary search could only have returned A.\n\n    // Initially assume that we need to find the beginning of the current row\n    // (case 1, 2, or 4), which means finding a page that is above the current\n    // page's top. If the found page is partially visible, we're definitely not in\n    // case 3, and this assumption is correct.\n    let elt = views[index].div;\n    let pageTop = elt.offsetTop + elt.clientTop;\n\n    if (pageTop >= top) {\n      // The found page is fully visible, so we're actually either in case 3 or 4,\n      // and unfortunately we can't tell the difference between them without\n      // scanning the entire previous row, so we just conservatively assume that\n      // we do need to backtrack to that row. In both cases, the previous page is\n      // in the previous row, so use its top instead.\n      elt = views[index - 1].div;\n      pageTop = elt.offsetTop + elt.clientTop;\n    }\n\n    // Now we backtrack to the first page that still has its bottom below\n    // `pageTop`, which is the top of a page in the first visible row (unless\n    // we're in case 4, in which case it's the row before that).\n    // `index` is found by binary search, so the page at `index - 1` is\n    // invisible and we can start looking for potentially visible pages from\n    // `index - 2`. (However, if this loop terminates on its first iteration,\n    // which is the case when pages are stacked vertically, `index` should remain\n    // unchanged, so we use a distinct loop variable.)\n    for (let i = index - 2; i >= 0; --i) {\n      elt = views[i].div;\n      if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\n        // We have reached the previous row, so stop now.\n        // This loop is expected to terminate relatively quickly because the\n        // number of pages per row is expected to be small.\n        break;\n      }\n      index = i;\n    }\n    return index;\n  }\n\n  /**\n   * @typedef {Object} GetVisibleElementsParameters\n   * @property {HTMLElement} scrollEl - A container that can possibly scroll.\n   * @property {Array} views - Objects with a `div` property that contains an\n   *   HTMLElement, which should all be descendants of `scrollEl` satisfying the\n   *   relevant layout assumptions.\n   * @property {boolean} sortByVisibility - If `true`, the returned elements are\n   *   sorted in descending order of the percent of their padding box that is\n   *   visible. The default value is `false`.\n   * @property {boolean} horizontal - If `true`, the elements are assumed to be\n   *   laid out horizontally instead of vertically. The default value is `false`.\n   * @property {boolean} rtl - If `true`, the `scrollEl` container is assumed to\n   *   be in right-to-left mode. The default value is `false`.\n   */\n\n  /**\n   * Generic helper to find out what elements are visible within a scroll pane.\n   *\n   * Well, pretty generic. There are some assumptions placed on the elements\n   * referenced by `views`:\n   *   - If `horizontal`, no left of any earlier element is to the right of the\n   *     left of any later element.\n   *   - Otherwise, `views` can be split into contiguous rows where, within a row,\n   *     no top of any element is below the bottom of any other element, and\n   *     between rows, no bottom of any element in an earlier row is below the\n   *     top of any element in a later row.\n   *\n   * (Here, top, left, etc. all refer to the padding edge of the element in\n   * question. For pages, that ends up being equivalent to the bounding box of the\n   * rendering canvas. Earlier and later refer to index in `views`, not page\n   * layout.)\n   *\n   * @param {GetVisibleElementsParameters}\n   * @returns {Object} `{ first, last, views: [{ id, x, y, view, percent }] }`\n   */\n  function getVisibleElements({\n    scrollEl,\n    views,\n    sortByVisibility = false,\n    horizontal = false,\n    rtl = false,\n  }) {\n    const top = scrollEl.scrollTop,\n      bottom = top + scrollEl.clientHeight;\n    const left = scrollEl.scrollLeft,\n      right = left + scrollEl.clientWidth;\n\n    // Throughout this \"generic\" function, comments will assume we're working with\n    // PDF document pages, which is the most important and complex case. In this\n    // case, the visible elements we're actually interested is the page canvas,\n    // which is contained in a wrapper which adds no padding/border/margin, which\n    // is itself contained in `view.div` which adds no padding (but does add a\n    // border). So, as specified in this function's doc comment, this function\n    // does all of its work on the padding edge of the provided views, starting at\n    // offsetLeft/Top (which includes margin) and adding clientLeft/Top (which is\n    // the border). Adding clientWidth/Height gets us the bottom-right corner of\n    // the padding edge.\n    function isElementBottomAfterViewTop(view) {\n      const element = view.div;\n      const elementBottom =\n        element.offsetTop + element.clientTop + element.clientHeight;\n      return elementBottom > top;\n    }\n    function isElementNextAfterViewHorizontally(view) {\n      const element = view.div;\n      const elementLeft = element.offsetLeft + element.clientLeft;\n      const elementRight = elementLeft + element.clientWidth;\n      return rtl ? elementLeft < right : elementRight > left;\n    }\n\n    const visible = [],\n      numViews = views.length;\n    let firstVisibleElementInd = binarySearchFirstItem(\n      views,\n      horizontal\n        ? isElementNextAfterViewHorizontally\n        : isElementBottomAfterViewTop\n    );\n\n    // Please note the return value of the `binarySearchFirstItem` function when\n    // no valid element is found (hence the `firstVisibleElementInd` check below).\n    if (\n      firstVisibleElementInd > 0 &&\n      firstVisibleElementInd < numViews &&\n      !horizontal\n    ) {\n      // In wrapped scrolling (or vertical scrolling with spreads), with some page\n      // sizes, isElementBottomAfterViewTop doesn't satisfy the binary search\n      // condition: there can be pages with bottoms above the view top between\n      // pages with bottoms below. This function detects and corrects that error;\n      // see it for more comments.\n      firstVisibleElementInd = backtrackBeforeAllVisibleElements(\n        firstVisibleElementInd,\n        views,\n        top\n      );\n    }\n\n    // lastEdge acts as a cutoff for us to stop looping, because we know all\n    // subsequent pages will be hidden.\n    //\n    // When using wrapped scrolling or vertical scrolling with spreads, we can't\n    // simply stop the first time we reach a page below the bottom of the view;\n    // the tops of subsequent pages on the same row could still be visible. In\n    // horizontal scrolling, we don't have that issue, so we can stop as soon as\n    // we pass `right`, without needing the code below that handles the -1 case.\n    let lastEdge = horizontal ? right : -1;\n\n    for (let i = firstVisibleElementInd; i < numViews; i++) {\n      const view = views[i],\n        element = view.div;\n      const currentWidth = element.offsetLeft + element.clientLeft;\n      const currentHeight = element.offsetTop + element.clientTop;\n      const viewWidth = element.clientWidth,\n        viewHeight = element.clientHeight;\n      const viewRight = currentWidth + viewWidth;\n      const viewBottom = currentHeight + viewHeight;\n\n      if (lastEdge === -1) {\n        // As commented above, this is only needed in non-horizontal cases.\n        // Setting lastEdge to the bottom of the first page that is partially\n        // visible ensures that the next page fully below lastEdge is on the\n        // next row, which has to be fully hidden along with all subsequent rows.\n        if (viewBottom >= bottom) {\n          lastEdge = viewBottom;\n        }\n      } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\n        break;\n      }\n\n      if (\n        viewBottom <= top ||\n        currentHeight >= bottom ||\n        viewRight <= left ||\n        currentWidth >= right\n      ) {\n        continue;\n      }\n\n      const hiddenHeight =\n        Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\n      const hiddenWidth =\n        Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\n\n      const fractionHeight = (viewHeight - hiddenHeight) / viewHeight,\n        fractionWidth = (viewWidth - hiddenWidth) / viewWidth;\n      const percent = (fractionHeight * fractionWidth * 100) | 0;\n\n      visible.push({\n        id: view.id,\n        x: currentWidth,\n        y: currentHeight,\n        view,\n        percent,\n        widthPercent: (fractionWidth * 100) | 0,\n      });\n    }\n\n    const first = visible[0],\n      last = visible[visible.length - 1];\n\n    if (sortByVisibility) {\n      visible.sort(function (a, b) {\n        const pc = a.percent - b.percent;\n        if (Math.abs(pc) > 0.001) {\n          return -pc;\n        }\n        return a.id - b.id; // ensure stability\n      });\n    }\n    return { first, last, views: visible };\n  }\n\n  /**\n   * Event handler to suppress context menu.\n   */\n  function noContextMenuHandler(evt) {\n    evt.preventDefault();\n  }\n\n  function isDataSchema(url) {\n    let i = 0;\n    const ii = url.length;\n    while (i < ii && url[i].trim() === \"\") {\n      i++;\n    }\n    return url.substring(i, i + 5).toLowerCase() === \"data:\";\n  }\n\n  /**\n   * Returns the filename or guessed filename from the url (see issue 3455).\n   * @param {string} url - The original PDF location.\n   * @param {string} defaultFilename - The value returned if the filename is\n   *   unknown, or the protocol is unsupported.\n   * @returns {string} Guessed PDF filename.\n   */\n  function getPDFFileNameFromURL(url, defaultFilename = \"document.pdf\") {\n    if (typeof url !== \"string\") {\n      return defaultFilename;\n    }\n    if (isDataSchema(url)) {\n      console.warn(\n        \"getPDFFileNameFromURL: \" +\n          'ignoring \"data:\" URL for performance reasons.'\n      );\n      return defaultFilename;\n    }\n    const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n    //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n    // Pattern to get last matching NAME.pdf\n    const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n    const splitURI = reURI.exec(url);\n    let suggestedFilename =\n      reFilename.exec(splitURI[1]) ||\n      reFilename.exec(splitURI[2]) ||\n      reFilename.exec(splitURI[3]);\n    if (suggestedFilename) {\n      suggestedFilename = suggestedFilename[0];\n      if (suggestedFilename.includes(\"%\")) {\n        // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n        try {\n          suggestedFilename = reFilename.exec(\n            decodeURIComponent(suggestedFilename)\n          )[0];\n        } catch (ex) {\n          // Possible (extremely rare) errors:\n          // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n          // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n        }\n      }\n    }\n    return suggestedFilename || defaultFilename;\n  }\n\n  function normalizeWheelEventDirection(evt) {\n    let delta = Math.sqrt(evt.deltaX * evt.deltaX + evt.deltaY * evt.deltaY);\n    const angle = Math.atan2(evt.deltaY, evt.deltaX);\n    if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\n      // All that is left-up oriented has to change the sign.\n      delta = -delta;\n    }\n    return delta;\n  }\n\n  function normalizeWheelEventDelta(evt) {\n    let delta = normalizeWheelEventDirection(evt);\n\n    const MOUSE_DOM_DELTA_PIXEL_MODE = 0;\n    const MOUSE_DOM_DELTA_LINE_MODE = 1;\n    const MOUSE_PIXELS_PER_LINE = 30;\n    const MOUSE_LINES_PER_PAGE = 30;\n\n    // Converts delta to per-page units\n    if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) {\n      delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\n    } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) {\n      delta /= MOUSE_LINES_PER_PAGE;\n    }\n    return delta;\n  }\n\n  function isValidRotation(angle) {\n    return Number.isInteger(angle) && angle % 90 === 0;\n  }\n\n  function isValidScrollMode(mode) {\n    return (\n      Number.isInteger(mode) &&\n      Object.values(ScrollMode).includes(mode) &&\n      mode !== ScrollMode.UNKNOWN\n    );\n  }\n\n  function isValidSpreadMode(mode) {\n    return (\n      Number.isInteger(mode) &&\n      Object.values(SpreadMode).includes(mode) &&\n      mode !== SpreadMode.UNKNOWN\n    );\n  }\n\n  function isPortraitOrientation(size) {\n    return size.width <= size.height;\n  }\n\n  const WaitOnType = {\n    EVENT: \"event\",\n    TIMEOUT: \"timeout\",\n  };\n\n  /**\n   * @typedef {Object} WaitOnEventOrTimeoutParameters\n   * @property {Object} target - The event target, can for example be:\n   *   `window`, `document`, a DOM element, or an {EventBus} instance.\n   * @property {string} name - The name of the event.\n   * @property {number} delay - The delay, in milliseconds, after which the\n   *   timeout occurs (if the event wasn't already dispatched).\n   */\n\n  /**\n   * Allows waiting for an event or a timeout, whichever occurs first.\n   * Can be used to ensure that an action always occurs, even when an event\n   * arrives late or not at all.\n   *\n   * @param {WaitOnEventOrTimeoutParameters}\n   * @returns {Promise} A promise that is resolved with a {WaitOnType} value.\n   */\n  function waitOnEventOrTimeout({ target, name, delay = 0 }) {\n    return new Promise(function (resolve, reject) {\n      if (\n        typeof target !== \"object\" ||\n        !(name && typeof name === \"string\") ||\n        !(Number.isInteger(delay) && delay >= 0)\n      ) {\n        throw new Error(\"waitOnEventOrTimeout - invalid parameters.\");\n      }\n\n      function handler(type) {\n        if (target instanceof EventBus) {\n          target._off(name, eventHandler);\n        } else {\n          target.removeEventListener(name, eventHandler);\n        }\n\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n        resolve(type);\n      }\n\n      const eventHandler = handler.bind(null, WaitOnType.EVENT);\n      if (target instanceof EventBus) {\n        target._on(name, eventHandler);\n      } else {\n        target.addEventListener(name, eventHandler);\n      }\n\n      const timeoutHandler = handler.bind(null, WaitOnType.TIMEOUT);\n      const timeout = setTimeout(timeoutHandler, delay);\n    });\n  }\n\n  /**\n   * Promise that is resolved when DOM window becomes visible.\n   */\n  const animationStarted = new Promise(function (resolve) {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"LIB && TESTING\") &&\n      typeof window === \"undefined\"\n    ) {\n      // Prevent \"ReferenceError: window is not defined\" errors when running the\n      // unit-tests in Node.js/Travis.\n      setTimeout(resolve, 20);\n      return;\n    }\n    window.requestAnimationFrame(resolve);\n  });\n\n  /**\n   * NOTE: Only used to support various PDF viewer tests in `mozilla-central`.\n   */\n  function dispatchDOMEvent(eventName, args = null) {\n    if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: dispatchDOMEvent\");\n    }\n    const details = Object.create(null);\n    if (args && args.length > 0) {\n      const obj = args[0];\n      for (const key in obj) {\n        const value = obj[key];\n        if (key === \"source\") {\n          if (value === window || value === document) {\n            return; // No need to re-dispatch (already) global events.\n          }\n          continue; // Ignore the `source` property.\n        }\n        details[key] = value;\n      }\n    }\n    const event = document.createEvent(\"CustomEvent\");\n    event.initCustomEvent(eventName, true, true, details);\n    document.dispatchEvent(event);\n  }\n\n  /**\n   * Simple event bus for an application. Listeners are attached using the `on`\n   * and `off` methods. To raise an event, the `dispatch` method shall be used.\n   */\n  class EventBus {\n    constructor(options) {\n      this._listeners = Object.create(null);\n\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) {\n        ///this._isInAutomation = options?.isInAutomation === true; // lwf\n        this._isInAutomation = options && (options.isInAutomation === true);\n      }\n    }\n\n    /**\n     * @param {string} eventName\n     * @param {function} listener\n     * @param {Object} [options]\n     */\n    on(eventName, listener, options = null) {\n      this._on(eventName, listener, {\n        external: true,\n        ///once: options?.once, // lwf\n        once: options && options.once, \n      });\n    }\n\n    /**\n     * @param {string} eventName\n     * @param {function} listener\n     * @param {Object} [options]\n     */\n    off(eventName, listener, options = null) {\n      this._off(eventName, listener, {\n        external: true,\n        ///once: options?.once, // lwf\n        once: options && options.once, \n      });\n    }\n\n    dispatch(eventName) {\n      const eventListeners = this._listeners[eventName];\n      if (!eventListeners || eventListeners.length === 0) {\n        if (\n          (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) &&\n          this._isInAutomation\n        ) {\n          const args = Array.prototype.slice.call(arguments, 1);\n          dispatchDOMEvent(eventName, args);\n        }\n        return;\n      }\n      // Passing all arguments after the eventName to the listeners.\n      const args = Array.prototype.slice.call(arguments, 1);\n      let externalListeners;\n      // Making copy of the listeners array in case if it will be modified\n      // during dispatch.\n      eventListeners.slice(0).forEach(({ listener, external, once }) => {\n        if (once) {\n          this._off(eventName, listener);\n        }\n        if (external) {\n          ///(externalListeners ||= []).push(listener); // lwf \n          (externalListeners || (externalListeners = [])).push(listener);\n          return;\n        }\n        listener.apply(null, args);\n      });\n      // Dispatch any \"external\" listeners *after* the internal ones, to give the\n      // viewer components time to handle events and update their state first.\n      if (externalListeners) {\n        externalListeners.forEach(listener => {\n          listener.apply(null, args);\n        });\n        externalListeners = null;\n      }\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) &&\n        this._isInAutomation\n      ) {\n        dispatchDOMEvent(eventName, args);\n      }\n    }\n\n    /**\n     * @ignore\n     */\n    _on(eventName, listener, options = null) {\n      ///const eventListeners = (this._listeners[eventName] ||= []); // lwf\n      const eventListeners = (this._listeners[eventName] || (this._listeners[eventName]= []));\n      eventListeners.push({\n        listener,\n        ///external: options?.external === true, // lwf\n        ///once: options?.once === true,         // lwf\n        external: options && options.external === true, \n        once: options && options.once === true,     \n      });\n    }\n\n    /**\n     * @ignore\n     */\n    _off(eventName, listener, options = null) {\n      const eventListeners = this._listeners[eventName];\n      if (!eventListeners) {\n        return;\n      }\n      for (let i = 0, ii = eventListeners.length; i < ii; i++) {\n        if (eventListeners[i].listener === listener) {\n          eventListeners.splice(i, 1);\n          return;\n        }\n      }\n    }\n  }\n\n  function clamp(v, min, max) {\n    return Math.min(Math.max(v, min), max);\n  }\n\n  class ProgressBar {\n    constructor(id, { height, width, units } = {}) {\n      this.visible = true;\n\n      // Fetch the sub-elements for later.\n      this.div = document.querySelector(id + \" .progress\");\n      // Get the loading bar element, so it can be resized to fit the viewer.\n      this.bar = this.div.parentNode;\n\n      // Get options, with sensible defaults.\n      this.height = height || 100;\n      this.width = width || 100;\n      this.units = units || \"%\";\n\n      // Initialize heights.\n      this.div.style.height = this.height + this.units;\n      this.percent = 0;\n    }\n\n    _updateBar() {\n      if (this._indeterminate) {\n        this.div.classList.add(\"indeterminate\");\n        this.div.style.width = this.width + this.units;\n        return;\n      }\n\n      this.div.classList.remove(\"indeterminate\");\n      const progressSize = (this.width * this._percent) / 100;\n      this.div.style.width = progressSize + this.units;\n    }\n\n    get percent() {\n      return this._percent;\n    }\n\n    set percent(val) {\n      this._indeterminate = isNaN(val);\n      this._percent = clamp(val, 0, 100);\n      this._updateBar();\n    }\n\n    setWidth(viewer) {\n      if (!viewer) {\n        return;\n      }\n      const container = viewer.parentNode;\n      const scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n      if (scrollbarWidth > 0) {\n        const doc = document.documentElement;\n        doc.style.setProperty(LOADINGBAR_END_OFFSET_VAR, `${scrollbarWidth}px`);\n      }\n    }\n\n    hide() {\n      if (!this.visible) {\n        return;\n      }\n      this.visible = false;\n      this.bar.classList.add(\"hidden\");\n    }\n\n    show() {\n      if (this.visible) {\n        return;\n      }\n      this.visible = true;\n      this.bar.classList.remove(\"hidden\");\n    }\n  }\n\n  /**\n   * Moves all elements of an array that satisfy condition to the end of the\n   * array, preserving the order of the rest.\n   */\n  function moveToEndOfArray(arr, condition) {\n    const moved = [],\n      len = arr.length;\n    let write = 0;\n    for (let read = 0; read < len; ++read) {\n      if (condition(arr[read])) {\n        moved.push(arr[read]);\n      } else {\n        arr[write] = arr[read];\n        ++write;\n      }\n    }\n    for (let read = 0; write < len; ++read, ++write) {\n      arr[write] = moved[read];\n    }\n  }\n\n  /**\n   * Get the active or focused element in current DOM.\n   *\n   * Recursively search for the truly active or focused element in case there are\n   * shadow DOMs.\n   *\n   * @returns {Element} the truly active or focused element.\n   */\n  function getActiveOrFocusedElement() {\n    let curRoot = document;\n    let curActiveOrFocused =\n      curRoot.activeElement || curRoot.querySelector(\":focus\");\n\n    while (curActiveOrFocused && curActiveOrFocused.shadowRoot) {\n      curRoot = curActiveOrFocused.shadowRoot;\n      curActiveOrFocused =\n        curRoot.activeElement || curRoot.querySelector(\":focus\");\n    }\n\n    return curActiveOrFocused;\n  }\n\n  return {\n    animationStarted,\n    approximateFraction,\n    AutoPrintRegExp,\n    backtrackBeforeAllVisibleElements, // only exported for testing\n    binarySearchFirstItem,\n    CSS_UNITS,\n    DEFAULT_SCALE,\n    DEFAULT_SCALE_VALUE,\n    EventBus,\n    getActiveOrFocusedElement,\n    getOutputScale,\n    getPageSizeInches,\n    getPDFFileNameFromURL,\n    getVisibleElements,\n    isPortraitOrientation,\n    isValidRotation,\n    isValidScrollMode,\n    isValidSpreadMode,\n    MAX_AUTO_SCALE,\n    MAX_SCALE,\n    MIN_SCALE,\n    moveToEndOfArray,\n    noContextMenuHandler,\n    normalizeWheelEventDelta,\n    normalizeWheelEventDirection,\n    NullL10n,\n    parseQueryString,\n    PresentationModeState,\n    ProgressBar,\n    RendererType,\n    roundToDivide,\n    SCROLLBAR_PADDING,\n    scrollIntoView,\n    ScrollMode,\n    SidebarView,\n    SpreadMode,\n    TextLayerMode,\n    UNKNOWN_SCALE,\n    VERTICAL_PADDING,\n    waitOnEventOrTimeout,\n    WaitOnType,\n    watchScroll,\n  };\n});\ndefine('skylark-pdfjs-viewer/grab_to_pan',[],function(){\n  /* Copyright 2013 Rob Wu <rob@robwu.nl>\n   * https://github.com/Rob--W/grab-to-pan.js\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  /**\n   * Construct a GrabToPan instance for a given HTML element.\n   * @param options.element {Element}\n   * @param options.ignoreTarget {function} optional. See `ignoreTarget(node)`\n   * @param options.onActiveChanged {function(boolean)} optional. Called\n   *  when grab-to-pan is (de)activated. The first argument is a boolean that\n   *  shows whether grab-to-pan is activated.\n   */\n  function GrabToPan(options) {\n    this.element = options.element;\n    this.document = options.element.ownerDocument;\n    if (typeof options.ignoreTarget === \"function\") {\n      this.ignoreTarget = options.ignoreTarget;\n    }\n    this.onActiveChanged = options.onActiveChanged;\n\n    // Bind the contexts to ensure that `this` always points to\n    // the GrabToPan instance.\n    this.activate = this.activate.bind(this);\n    this.deactivate = this.deactivate.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this._onmousedown = this._onmousedown.bind(this);\n    this._onmousemove = this._onmousemove.bind(this);\n    this._endPan = this._endPan.bind(this);\n\n    // This overlay will be inserted in the document when the mouse moves during\n    // a grab operation, to ensure that the cursor has the desired appearance.\n    const overlay = (this.overlay = document.createElement(\"div\"));\n    overlay.className = \"grab-to-pan-grabbing\";\n  }\n  GrabToPan.prototype = {\n    /**\n     * Class name of element which can be grabbed\n     */\n    CSS_CLASS_GRAB: \"grab-to-pan-grab\",\n\n    /**\n     * Bind a mousedown event to the element to enable grab-detection.\n     */\n    activate: function GrabToPan_activate() {\n      if (!this.active) {\n        this.active = true;\n        this.element.addEventListener(\"mousedown\", this._onmousedown, true);\n        this.element.classList.add(this.CSS_CLASS_GRAB);\n        if (this.onActiveChanged) {\n          this.onActiveChanged(true);\n        }\n      }\n    },\n\n    /**\n     * Removes all events. Any pending pan session is immediately stopped.\n     */\n    deactivate: function GrabToPan_deactivate() {\n      if (this.active) {\n        this.active = false;\n        this.element.removeEventListener(\"mousedown\", this._onmousedown, true);\n        this._endPan();\n        this.element.classList.remove(this.CSS_CLASS_GRAB);\n        if (this.onActiveChanged) {\n          this.onActiveChanged(false);\n        }\n      }\n    },\n\n    toggle: function GrabToPan_toggle() {\n      if (this.active) {\n        this.deactivate();\n      } else {\n        this.activate();\n      }\n    },\n\n    /**\n     * Whether to not pan if the target element is clicked.\n     * Override this method to change the default behaviour.\n     *\n     * @param node {Element} The target of the event\n     * @returns {boolean} Whether to not react to the click event.\n     */\n    ignoreTarget: function GrabToPan_ignoreTarget(node) {\n      // Use matchesSelector to check whether the clicked element\n      // is (a child of) an input element / link\n      return node[matchesSelector](\n        \"a[href], a[href] *, input, textarea, button, button *, select, option\"\n      );\n    },\n\n    /**\n     * @private\n     */\n    _onmousedown: function GrabToPan__onmousedown(event) {\n      if (event.button !== 0 || this.ignoreTarget(event.target)) {\n        return;\n      }\n      if (event.originalTarget) {\n        try {\n          // eslint-disable-next-line no-unused-expressions\n          event.originalTarget.tagName;\n        } catch (e) {\n          // Mozilla-specific: element is a scrollbar (XUL element)\n          return;\n        }\n      }\n\n      this.scrollLeftStart = this.element.scrollLeft;\n      this.scrollTopStart = this.element.scrollTop;\n      this.clientXStart = event.clientX;\n      this.clientYStart = event.clientY;\n      this.document.addEventListener(\"mousemove\", this._onmousemove, true);\n      this.document.addEventListener(\"mouseup\", this._endPan, true);\n      // When a scroll event occurs before a mousemove, assume that the user\n      // dragged a scrollbar (necessary for Opera Presto, Safari and IE)\n      // (not needed for Chrome/Firefox)\n      this.element.addEventListener(\"scroll\", this._endPan, true);\n      event.preventDefault();\n      event.stopPropagation();\n\n      const focusedElement = document.activeElement;\n      if (focusedElement && !focusedElement.contains(event.target)) {\n        focusedElement.blur();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _onmousemove: function GrabToPan__onmousemove(event) {\n      this.element.removeEventListener(\"scroll\", this._endPan, true);\n      if (isLeftMouseReleased(event)) {\n        this._endPan();\n        return;\n      }\n      const xDiff = event.clientX - this.clientXStart;\n      const yDiff = event.clientY - this.clientYStart;\n      const scrollTop = this.scrollTopStart - yDiff;\n      const scrollLeft = this.scrollLeftStart - xDiff;\n      if (this.element.scrollTo) {\n        this.element.scrollTo({\n          top: scrollTop,\n          left: scrollLeft,\n          behavior: \"instant\",\n        });\n      } else {\n        this.element.scrollTop = scrollTop;\n        this.element.scrollLeft = scrollLeft;\n      }\n      if (!this.overlay.parentNode) {\n        document.body.appendChild(this.overlay);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _endPan: function GrabToPan__endPan() {\n      this.element.removeEventListener(\"scroll\", this._endPan, true);\n      this.document.removeEventListener(\"mousemove\", this._onmousemove, true);\n      this.document.removeEventListener(\"mouseup\", this._endPan, true);\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.overlay.remove();\n    },\n  };\n\n  // Get the correct (vendor-prefixed) name of the matches method.\n  let matchesSelector;\n  [\"webkitM\", \"mozM\", \"m\"].some(function (prefix) {\n    let name = prefix + \"atches\";\n    if (name in document.documentElement) {\n      matchesSelector = name;\n    }\n    name += \"Selector\";\n    if (name in document.documentElement) {\n      matchesSelector = name;\n    }\n    return matchesSelector; // If found, then truthy, and [].some() ends.\n  });\n\n  // Browser sniffing because it's impossible to feature-detect\n  // whether event.which for onmousemove is reliable\n  const isNotIEorIsIE10plus = !document.documentMode || document.documentMode > 9;\n  const chrome = window.chrome;\n  const isChrome15OrOpera15plus = chrome && (chrome.webstore || chrome.app);\n  //                                         ^ Chrome 15+       ^ Opera 15+\n  const isSafari6plus =\n    /Apple/.test(navigator.vendor) &&\n    /Version\\/([6-9]\\d*|[1-5]\\d+)/.test(navigator.userAgent);\n\n  /**\n   * Whether the left mouse is not pressed.\n   * @param event {MouseEvent}\n   * @returns {boolean} True if the left mouse button is not pressed,\n   *                    False if unsure or if the left mouse button is pressed.\n   */\n  function isLeftMouseReleased(event) {\n    if (\"buttons\" in event && isNotIEorIsIE10plus) {\n      // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-buttons\n      // Firefox 15+\n      // Internet Explorer 10+\n      return !(event.buttons & 1);\n    }\n    if (isChrome15OrOpera15plus || isSafari6plus) {\n      // Chrome 14+\n      // Opera 15+\n      // Safari 6.0+\n      return event.which === 0;\n    }\n    return false;\n  }\n\n  return { GrabToPan };\n});\ndefine('skylark-pdfjs-viewer/pdf_cursor_tools',[\n  \"./ui_utils\",\n  \"./grab_to_pan\"\n],function(ui_utils,grab_to_pan){\n  /* Copyright 2017 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { GrabToPan } = grab_to_pan;\n  const { PresentationModeState } = ui_utils;\n\n  const CursorTool = {\n    SELECT: 0, // The default value.\n    HAND: 1,\n    ZOOM: 2,\n  };\n\n  /**\n   * @typedef {Object} PDFCursorToolsOptions\n   * @property {HTMLDivElement} container - The document container.\n   * @property {EventBus} eventBus - The application event bus.\n   * @property {number} [cursorToolOnLoad] - The cursor tool that will be enabled\n   *   on load; the constants from {CursorTool} should be used. The default value\n   *   is `CursorTool.SELECT`.\n   */\n\n  class PDFCursorTools {\n    /**\n     * @param {PDFCursorToolsOptions} options\n     */\n    constructor({ container, eventBus, cursorToolOnLoad = CursorTool.SELECT }) {\n      this.container = container;\n      this.eventBus = eventBus;\n\n      this.active = CursorTool.SELECT;\n      this.activeBeforePresentationMode = null;\n\n      this.handTool = new GrabToPan({\n        element: this.container,\n      });\n\n      this._addEventListeners();\n\n      // Defer the initial `switchTool` call, to give other viewer components\n      // time to initialize *and* register 'cursortoolchanged' event listeners.\n      Promise.resolve().then(() => {\n        this.switchTool(cursorToolOnLoad);\n      });\n    }\n\n    /**\n     * @type {number} One of the values in {CursorTool}.\n     */\n    get activeTool() {\n      return this.active;\n    }\n\n    /**\n     * NOTE: This method is ignored while Presentation Mode is active.\n     * @param {number} tool - The cursor mode that should be switched to,\n     *                        must be one of the values in {CursorTool}.\n     */\n    switchTool(tool) {\n      if (this.activeBeforePresentationMode !== null) {\n        return; // Cursor tools cannot be used in Presentation Mode.\n      }\n      if (tool === this.active) {\n        return; // The requested tool is already active.\n      }\n\n      const disableActiveTool = () => {\n        switch (this.active) {\n          case CursorTool.SELECT:\n            break;\n          case CursorTool.HAND:\n            this.handTool.deactivate();\n            break;\n          case CursorTool.ZOOM:\n          /* falls through */\n        }\n      };\n\n      // Enable the new cursor tool.\n      switch (tool) {\n        case CursorTool.SELECT:\n          disableActiveTool();\n          break;\n        case CursorTool.HAND:\n          disableActiveTool();\n          this.handTool.activate();\n          break;\n        case CursorTool.ZOOM:\n        /* falls through */\n        default:\n          console.error(`switchTool: \"${tool}\" is an unsupported value.`);\n          return;\n      }\n      // Update the active tool *after* it has been validated above,\n      // in order to prevent setting it to an invalid state.\n      this.active = tool;\n\n      this._dispatchEvent();\n    }\n\n    /**\n     * @private\n     */\n    _dispatchEvent() {\n      this.eventBus.dispatch(\"cursortoolchanged\", {\n        source: this,\n        tool: this.active,\n      });\n    }\n\n    /**\n     * @private\n     */\n    _addEventListeners() {\n      this.eventBus._on(\"switchcursortool\", evt => {\n        this.switchTool(evt.tool);\n      });\n\n      this.eventBus._on(\"presentationmodechanged\", evt => {\n        switch (evt.state) {\n          case PresentationModeState.CHANGING:\n            break;\n          case PresentationModeState.FULLSCREEN: {\n            const previouslyActive = this.active;\n\n            this.switchTool(CursorTool.SELECT);\n            this.activeBeforePresentationMode = previouslyActive;\n            break;\n          }\n          case PresentationModeState.NORMAL: {\n            const previouslyActive = this.activeBeforePresentationMode;\n\n            this.activeBeforePresentationMode = null;\n            this.switchTool(previouslyActive);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  return { CursorTool, PDFCursorTools };\n});\ndefine('skylark-pdfjs-viewer/pdf_rendering_queue',[\n  \"skylark-pdfjs-display\"\n],function(pdfjsLib){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { RenderingCancelledException } = pdfjsLib;\n\n  const CLEANUP_TIMEOUT = 30000;\n\n  const RenderingStates = {\n    INITIAL: 0,\n    RUNNING: 1,\n    PAUSED: 2,\n    FINISHED: 3,\n  };\n\n  /**\n   * Controls rendering of the views for pages and thumbnails.\n   */\n  class PDFRenderingQueue {\n    constructor() {\n      this.pdfViewer = null;\n      this.pdfThumbnailViewer = null;\n      this.onIdle = null;\n      this.highestPriorityPage = null;\n      this.idleTimeout = null;\n      this.printing = false;\n      this.isThumbnailViewEnabled = false;\n    }\n\n    /**\n     * @param {PDFViewer} pdfViewer\n     */\n    setViewer(pdfViewer) {\n      this.pdfViewer = pdfViewer;\n    }\n\n    /**\n     * @param {PDFThumbnailViewer} pdfThumbnailViewer\n     */\n    setThumbnailViewer(pdfThumbnailViewer) {\n      this.pdfThumbnailViewer = pdfThumbnailViewer;\n    }\n\n    /**\n     * @param {IRenderableView} view\n     * @returns {boolean}\n     */\n    isHighestPriority(view) {\n      return this.highestPriorityPage === view.renderingId;\n    }\n\n    /**\n     * @param {Object} currentlyVisiblePages\n     */\n    renderHighestPriority(currentlyVisiblePages) {\n      if (this.idleTimeout) {\n        clearTimeout(this.idleTimeout);\n        this.idleTimeout = null;\n      }\n\n      // Pages have a higher priority than thumbnails, so check them first.\n      if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n        return;\n      }\n      // No pages needed rendering, so check thumbnails.\n      if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n        if (this.pdfThumbnailViewer.forceRendering()) {\n          return;\n        }\n      }\n\n      if (this.printing) {\n        // If printing is currently ongoing do not reschedule cleanup.\n        return;\n      }\n\n      if (this.onIdle) {\n        this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\n      }\n    }\n\n    /**\n     * @param {Object} visible\n     * @param {Array} views\n     * @param {boolean} scrolledDown\n     */\n    getHighestPriority(visible, views, scrolledDown) {\n      /**\n       * The state has changed. Figure out which page has the highest priority to\n       * render next (if any).\n       *\n       * Priority:\n       * 1. visible pages\n       * 2. if last scrolled down, the page after the visible pages, or\n       *    if last scrolled up, the page before the visible pages\n       */\n      const visibleViews = visible.views;\n\n      const numVisible = visibleViews.length;\n      if (numVisible === 0) {\n        return null;\n      }\n      for (let i = 0; i < numVisible; ++i) {\n        const view = visibleViews[i].view;\n        if (!this.isViewFinished(view)) {\n          return view;\n        }\n      }\n\n      // All the visible views have rendered; try to render next/previous pages.\n      if (scrolledDown) {\n        const nextPageIndex = visible.last.id;\n        // IDs start at 1, so no need to add 1.\n        if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n          return views[nextPageIndex];\n        }\n      } else {\n        const previousPageIndex = visible.first.id - 2;\n        if (\n          views[previousPageIndex] &&\n          !this.isViewFinished(views[previousPageIndex])\n        ) {\n          return views[previousPageIndex];\n        }\n      }\n      // Everything that needs to be rendered has been.\n      return null;\n    }\n\n    /**\n     * @param {IRenderableView} view\n     * @returns {boolean}\n     */\n    isViewFinished(view) {\n      return view.renderingState === RenderingStates.FINISHED;\n    }\n\n    /**\n     * Render a page or thumbnail view. This calls the appropriate function\n     * based on the views state. If the view is already rendered it will return\n     * `false`.\n     *\n     * @param {IRenderableView} view\n     */\n    renderView(view) {\n      switch (view.renderingState) {\n        case RenderingStates.FINISHED:\n          return false;\n        case RenderingStates.PAUSED:\n          this.highestPriorityPage = view.renderingId;\n          view.resume();\n          break;\n        case RenderingStates.RUNNING:\n          this.highestPriorityPage = view.renderingId;\n          break;\n        case RenderingStates.INITIAL:\n          this.highestPriorityPage = view.renderingId;\n          view\n            .draw()\n            .finally(() => {\n              this.renderHighestPriority();\n            })\n            .catch(reason => {\n              if (reason instanceof RenderingCancelledException) {\n                return;\n              }\n              console.error(`renderView: \"${reason}\"`);\n            });\n          break;\n      }\n      return true;\n    }\n  }\n\n  return { \n    PDFRenderingQueue, \n    RenderingStates \n  };\n});\ndefine('skylark-pdfjs-viewer/overlay_manager',[],function(){\n  /* Copyright 2014 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  class OverlayManager {\n    constructor() {\n      this._overlays = {};\n      this._active = null;\n      this._keyDownBound = this._keyDown.bind(this);\n    }\n\n    get active() {\n      return this._active;\n    }\n\n    /**\n     * @param {string} name - The name of the overlay that is registered.\n     * @param {HTMLDivElement} element - The overlay's DOM element.\n     * @param {function} [callerCloseMethod] - The method that, if present, calls\n     *                   `OverlayManager.close` from the object registering the\n     *                   overlay. Access to this method is necessary in order to\n     *                   run cleanup code when e.g. the overlay is force closed.\n     *                   The default is `null`.\n     * @param {boolean} [canForceClose] - Indicates if opening the overlay closes\n     *                  an active overlay. The default is `false`.\n     * @returns {Promise} A promise that is resolved when the overlay has been\n     *                    registered.\n     */\n    async register(\n      name,\n      element,\n      callerCloseMethod = null,\n      canForceClose = false\n    ) {\n      let container;\n      if (!name || !element || !(container = element.parentNode)) {\n        throw new Error(\"Not enough parameters.\");\n      } else if (this._overlays[name]) {\n        throw new Error(\"The overlay is already registered.\");\n      }\n      this._overlays[name] = {\n        element,\n        container,\n        callerCloseMethod,\n        canForceClose,\n      };\n    }\n\n    /**\n     * @param {string} name - The name of the overlay that is unregistered.\n     * @returns {Promise} A promise that is resolved when the overlay has been\n     *                    unregistered.\n     */\n    async unregister(name) {\n      if (!this._overlays[name]) {\n        throw new Error(\"The overlay does not exist.\");\n      } else if (this._active === name) {\n        throw new Error(\"The overlay cannot be removed while it is active.\");\n      }\n      delete this._overlays[name];\n    }\n\n    /**\n     * @param {string} name - The name of the overlay that should be opened.\n     * @returns {Promise} A promise that is resolved when the overlay has been\n     *                    opened.\n     */\n    async open(name) {\n      if (!this._overlays[name]) {\n        throw new Error(\"The overlay does not exist.\");\n      } else if (this._active) {\n        if (this._overlays[name].canForceClose) {\n          this._closeThroughCaller();\n        } else if (this._active === name) {\n          throw new Error(\"The overlay is already active.\");\n        } else {\n          throw new Error(\"Another overlay is currently active.\");\n        }\n      }\n      this._active = name;\n      this._overlays[this._active].element.classList.remove(\"hidden\");\n      this._overlays[this._active].container.classList.remove(\"hidden\");\n\n      window.addEventListener(\"keydown\", this._keyDownBound);\n    }\n\n    /**\n     * @param {string} name - The name of the overlay that should be closed.\n     * @returns {Promise} A promise that is resolved when the overlay has been\n     *                    closed.\n     */\n    async close(name) {\n      if (!this._overlays[name]) {\n        throw new Error(\"The overlay does not exist.\");\n      } else if (!this._active) {\n        throw new Error(\"The overlay is currently not active.\");\n      } else if (this._active !== name) {\n        throw new Error(\"Another overlay is currently active.\");\n      }\n      this._overlays[this._active].container.classList.add(\"hidden\");\n      this._overlays[this._active].element.classList.add(\"hidden\");\n      this._active = null;\n\n      window.removeEventListener(\"keydown\", this._keyDownBound);\n    }\n\n    /**\n     * @private\n     */\n    _keyDown(evt) {\n      if (this._active && evt.keyCode === /* Esc = */ 27) {\n        this._closeThroughCaller();\n        evt.preventDefault();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _closeThroughCaller() {\n      if (this._overlays[this._active].callerCloseMethod) {\n        this._overlays[this._active].callerCloseMethod();\n      }\n      if (this._active) {\n        this.close(this._active);\n      }\n    }\n  }\n\n  return { OverlayManager };\n});\ndefine('skylark-pdfjs-viewer/password_prompt',[\n  \"skylark-pdfjs-display\",\n  \"./ui_utils\"\n],function(pdfjsLib,ui_utils){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { NullL10n } = ui_utils;\n  const { PasswordResponses } = pdfjsLib;\n\n  /**\n   * @typedef {Object} PasswordPromptOptions\n   * @property {string} overlayName - Name of the overlay for the overlay manager.\n   * @property {HTMLDivElement} container - Div container for the overlay.\n   * @property {HTMLParagraphElement} label - Label containing instructions for\n   *                                          entering the password.\n   * @property {HTMLInputElement} input - Input field for entering the password.\n   * @property {HTMLButtonElement} submitButton - Button for submitting the\n   *                                              password.\n   * @property {HTMLButtonElement} cancelButton - Button for cancelling password\n   *                                              entry.\n   */\n\n  class PasswordPrompt {\n    /**\n     * @param {PasswordPromptOptions} options\n     * @param {OverlayManager} overlayManager - Manager for the viewer overlays.\n     * @param {IL10n} l10n - Localization service.\n     */\n    constructor(options, overlayManager, l10n = NullL10n) {\n      this.overlayName = options.overlayName;\n      this.container = options.container;\n      this.label = options.label;\n      this.input = options.input;\n      this.submitButton = options.submitButton;\n      this.cancelButton = options.cancelButton;\n      this.overlayManager = overlayManager;\n      this.l10n = l10n;\n\n      this.updateCallback = null;\n      this.reason = null;\n\n      // Attach the event listeners.\n      this.submitButton.addEventListener(\"click\", this.verify.bind(this));\n      this.cancelButton.addEventListener(\"click\", this.close.bind(this));\n      this.input.addEventListener(\"keydown\", e => {\n        if (e.keyCode === /* Enter = */ 13) {\n          this.verify();\n        }\n      });\n\n      this.overlayManager.register(\n        this.overlayName,\n        this.container,\n        this.close.bind(this),\n        true\n      );\n    }\n\n    open() {\n      this.overlayManager.open(this.overlayName).then(() => {\n        this.input.focus();\n\n        let promptString;\n        if (this.reason === PasswordResponses.INCORRECT_PASSWORD) {\n          promptString = this.l10n.get(\n            \"password_invalid\",\n            null,\n            \"Invalid password. Please try again.\"\n          );\n        } else {\n          promptString = this.l10n.get(\n            \"password_label\",\n            null,\n            \"Enter the password to open this PDF file.\"\n          );\n        }\n\n        promptString.then(msg => {\n          this.label.textContent = msg;\n        });\n      });\n    }\n\n    close() {\n      this.overlayManager.close(this.overlayName).then(() => {\n        this.input.value = \"\";\n      });\n    }\n\n    verify() {\n      const password = this.input.value;\n      if (password && password.length > 0) {\n        this.close();\n        this.updateCallback(password);\n      }\n    }\n\n    setUpdateCallback(updateCallback, reason) {\n      this.updateCallback = updateCallback;\n      this.reason = reason;\n    }\n  }\n\n  return { PasswordPrompt };\n});\ndefine('skylark-pdfjs-viewer/base_tree_viewer',[\n  \"skylark-pdfjs-display\"\n],function(pdfjsLib){\n\n  /* Copyright 2020 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { removeNullCharacters } = pdfjsLib;\n\n  const TREEITEM_OFFSET_TOP = -100; // px\n  const TREEITEM_SELECTED_CLASS = \"selected\";\n\n  class BaseTreeViewer {\n    constructor(options) {\n      if (this.constructor === BaseTreeViewer) {\n        throw new Error(\"Cannot initialize BaseTreeViewer.\");\n      }\n      this.container = options.container;\n      this.eventBus = options.eventBus;\n\n      this.reset();\n    }\n\n    reset() {\n      this._pdfDocument = null;\n      this._lastToggleIsShow = true;\n      this._currentTreeItem = null;\n\n      // Remove the tree from the DOM.\n      this.container.textContent = \"\";\n      // Ensure that the left (right in RTL locales) margin is always reset,\n      // to prevent incorrect tree alignment if a new document is opened.\n      this.container.classList.remove(\"treeWithDeepNesting\");\n    }\n\n    /**\n     * @private\n     */\n    _dispatchEvent(count) {\n      throw new Error(\"Not implemented: _dispatchEvent\");\n    }\n\n    /**\n     * @private\n     */\n    _bindLink(element, params) {\n      throw new Error(\"Not implemented: _bindLink\");\n    }\n\n    /**\n     * @private\n     */\n    _normalizeTextContent(str) {\n      return removeNullCharacters(str) || /* en dash = */ \"\\u2013\";\n    }\n\n    /**\n     * Prepend a button before a tree item which allows the user to collapse or\n     * expand all tree items at that level; see `_toggleTreeItem`.\n     * @private\n     */\n    _addToggleButton(div, hidden = false) {\n      const toggler = document.createElement(\"div\");\n      toggler.className = \"treeItemToggler\";\n      if (hidden) {\n        toggler.classList.add(\"treeItemsHidden\");\n      }\n      toggler.onclick = evt => {\n        evt.stopPropagation();\n        toggler.classList.toggle(\"treeItemsHidden\");\n\n        if (evt.shiftKey) {\n          const shouldShowAll = !toggler.classList.contains(\"treeItemsHidden\");\n          this._toggleTreeItem(div, shouldShowAll);\n        }\n      };\n      div.insertBefore(toggler, div.firstChild);\n    }\n\n    /**\n     * Collapse or expand the subtree of a tree item.\n     *\n     * @param {Element} root - the root of the item (sub)tree.\n     * @param {boolean} show - whether to show the item (sub)tree. If false,\n     *   the item subtree rooted at `root` will be collapsed.\n     * @private\n     */\n    _toggleTreeItem(root, show = false) {\n      this._lastToggleIsShow = show;\n      for (const toggler of root.querySelectorAll(\".treeItemToggler\")) {\n        toggler.classList.toggle(\"treeItemsHidden\", !show);\n      }\n    }\n\n    /**\n     * Collapse or expand all subtrees of the `container`.\n     * @private\n     */\n    _toggleAllTreeItems() {\n      this._toggleTreeItem(this.container, !this._lastToggleIsShow);\n    }\n\n    /**\n     * @private\n     */\n    _finishRendering(fragment, count, hasAnyNesting = false) {\n      if (hasAnyNesting) {\n        this.container.classList.add(\"treeWithDeepNesting\");\n\n        this._lastToggleIsShow = !fragment.querySelector(\".treeItemsHidden\");\n      }\n      this.container.appendChild(fragment);\n\n      this._dispatchEvent(count);\n    }\n\n    render(params) {\n      throw new Error(\"Not implemented: render\");\n    }\n\n    /**\n     * @private\n     */\n    _updateCurrentTreeItem(treeItem = null) {\n      if (this._currentTreeItem) {\n        // Ensure that the current treeItem-selection is always removed.\n        this._currentTreeItem.classList.remove(TREEITEM_SELECTED_CLASS);\n        this._currentTreeItem = null;\n      }\n      if (treeItem) {\n        treeItem.classList.add(TREEITEM_SELECTED_CLASS);\n        this._currentTreeItem = treeItem;\n      }\n    }\n\n    /**\n     * @private\n     */\n    _scrollToCurrentTreeItem(treeItem) {\n      if (!treeItem) {\n        return;\n      }\n      // Ensure that the treeItem is *fully* expanded, such that it will first of\n      // all be visible and secondly that scrolling it into view works correctly.\n      let currentNode = treeItem.parentNode;\n      while (currentNode && currentNode !== this.container) {\n        if (currentNode.classList.contains(\"treeItem\")) {\n          const toggler = currentNode.firstElementChild;\n          ///toggler?.classList.remove(\"treeItemsHidden\"); // lwf\n          toggler && toggler.classList.remove(\"treeItemsHidden\");\n        }\n        currentNode = currentNode.parentNode;\n      }\n      this._updateCurrentTreeItem(treeItem);\n\n      this.container.scrollTo(\n        treeItem.offsetLeft,\n        treeItem.offsetTop + TREEITEM_OFFSET_TOP\n      );\n    }\n  }\n\n  return { BaseTreeViewer };\n});\ndefine('skylark-pdfjs-viewer/pdf_attachment_viewer',[\n  \"skylark-pdfjs-display\",\n  \"./pdfjs_dev\",\n  \"./base_tree_viewer\",\n  \"./viewer_compatibility\"\n],function(\n  pdfjsLib,\n  PDFJSDev,\n  base_tree_viewer,\n  viewer_compatibility\n){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { createPromiseCapability, getFilenameFromUrl } = pdfjsLib;\n  const { BaseTreeViewer } = base_tree_viewer;\n  const { viewerCompatibilityParams } = viewer_compatibility;\n\n  const PdfFileRegExp = /\\.pdf$/i;\n\n  /**\n   * @typedef {Object} PDFAttachmentViewerOptions\n   * @property {HTMLDivElement} container - The viewer element.\n   * @property {EventBus} eventBus - The application event bus.\n   * @property {DownloadManager} downloadManager - The download manager.\n   */\n\n  /**\n   * @typedef {Object} PDFAttachmentViewerRenderParameters\n   * @property {Object|null} attachments - A lookup table of attachment objects.\n   */\n\n  class PDFAttachmentViewer extends BaseTreeViewer {\n    /**\n     * @param {PDFAttachmentViewerOptions} options\n     */\n    constructor(options) {\n      super(options);\n      this.downloadManager = options.downloadManager;\n\n      this.eventBus._on(\n        \"fileattachmentannotation\",\n        this._appendAttachment.bind(this)\n      );\n    }\n\n    reset(keepRenderedCapability = false) {\n      super.reset();\n      this._attachments = null;\n\n      if (!keepRenderedCapability) {\n        // The only situation in which the `_renderedCapability` should *not* be\n        // replaced is when appending FileAttachment annotations.\n        this._renderedCapability = createPromiseCapability();\n      }\n      if (this._pendingDispatchEvent) {\n        clearTimeout(this._pendingDispatchEvent);\n      }\n      this._pendingDispatchEvent = null;\n    }\n\n    /**\n     * @private\n     */\n    _dispatchEvent(attachmentsCount) {\n      this._renderedCapability.resolve();\n\n      if (this._pendingDispatchEvent) {\n        clearTimeout(this._pendingDispatchEvent);\n        this._pendingDispatchEvent = null;\n      }\n      if (attachmentsCount === 0) {\n        // Delay the event when no \"regular\" attachments exist, to allow time for\n        // parsing of any FileAttachment annotations that may be present on the\n        // *initially* rendered page; this reduces the likelihood of temporarily\n        // disabling the attachmentsView when the `PDFSidebar` handles the event.\n        this._pendingDispatchEvent = setTimeout(() => {\n          this.eventBus.dispatch(\"attachmentsloaded\", {\n            source: this,\n            attachmentsCount: 0,\n          });\n          this._pendingDispatchEvent = null;\n        });\n        return;\n      }\n\n      this.eventBus.dispatch(\"attachmentsloaded\", {\n        source: this,\n        attachmentsCount,\n      });\n    }\n\n    /**\n     * NOTE: Should only be used when `URL.createObjectURL` is natively supported.\n     * @private\n     */\n    _bindPdfLink(element, { content, filename }) {\n      let blobUrl;\n      element.onclick = () => {\n        if (!blobUrl) {\n          blobUrl = URL.createObjectURL(\n            new Blob([content], { type: \"application/pdf\" })\n          );\n        }\n        let viewerUrl;\n        if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n          // The current URL is the viewer, let's use it and append the file.\n          viewerUrl = \"?file=\" + encodeURIComponent(blobUrl + \"#\" + filename);\n        } else if (PDFJSDev.test(\"MOZCENTRAL\")) {\n          // Let Firefox's content handler catch the URL and display the PDF.\n          viewerUrl = blobUrl + \"#filename=\" + encodeURIComponent(filename);\n        } else if (PDFJSDev.test(\"CHROME\")) {\n          // In the Chrome extension, the URL is rewritten using the history API\n          // in viewer.js, so an absolute URL must be generated.\n          viewerUrl =\n            // eslint-disable-next-line no-undef\n            chrome.runtime.getURL(\"/content/web/viewer.html\") +\n            \"?file=\" +\n            encodeURIComponent(blobUrl + \"#\" + filename);\n        }\n        try {\n          window.open(viewerUrl);\n        } catch (ex) {\n          console.error(`_bindPdfLink: ${ex}`);\n          // Release the `blobUrl`, since opening it failed...\n          URL.revokeObjectURL(blobUrl);\n          blobUrl = null;\n          // ... and fallback to downloading the PDF file.\n          this.downloadManager.downloadData(content, filename, \"application/pdf\");\n        }\n        return false;\n      };\n    }\n\n    /**\n     * @private\n     */\n    _bindLink(element, { content, filename }) {\n      element.onclick = () => {\n        const contentType = PdfFileRegExp.test(filename) ? \"application/pdf\" : \"\";\n        this.downloadManager.downloadData(content, filename, contentType);\n        return false;\n      };\n    }\n\n    /**\n     * @param {PDFAttachmentViewerRenderParameters} params\n     */\n    render({ attachments, keepRenderedCapability = false }) {\n      if (this._attachments) {\n        this.reset(keepRenderedCapability);\n      }\n      this._attachments = attachments || null;\n\n      if (!attachments) {\n        this._dispatchEvent(/* attachmentsCount = */ 0);\n        return;\n      }\n      const names = Object.keys(attachments).sort(function (a, b) {\n        return a.toLowerCase().localeCompare(b.toLowerCase());\n      });\n\n      const fragment = document.createDocumentFragment();\n      let attachmentsCount = 0;\n      for (const name of names) {\n        const item = attachments[name];\n        const filename = getFilenameFromUrl(item.filename);\n\n        const div = document.createElement(\"div\");\n        div.className = \"treeItem\";\n\n        const element = document.createElement(\"a\");\n        if (\n          PdfFileRegExp.test(filename) &&\n          !viewerCompatibilityParams.disableCreateObjectURL\n        ) {\n          this._bindPdfLink(element, { content: item.content, filename });\n        } else {\n          this._bindLink(element, { content: item.content, filename });\n        }\n        element.textContent = this._normalizeTextContent(filename);\n\n        div.appendChild(element);\n\n        fragment.appendChild(div);\n        attachmentsCount++;\n      }\n\n      this._finishRendering(fragment, attachmentsCount);\n    }\n\n    /**\n     * Used to append FileAttachment annotations to the sidebar.\n     * @private\n     */\n    _appendAttachment({ id, filename, content }) {\n      const renderedPromise = this._renderedCapability.promise;\n\n      renderedPromise.then(() => {\n        if (renderedPromise !== this._renderedCapability.promise) {\n          return; // The FileAttachment annotation belongs to a previous document.\n        }\n        let attachments = this._attachments;\n\n        if (!attachments) {\n          attachments = Object.create(null);\n        } else {\n          for (const name in attachments) {\n            if (id === name) {\n              return; // Ignore the new attachment if it already exists.\n            }\n          }\n        }\n        attachments[id] = {\n          filename,\n          content,\n        };\n        this.render({\n          attachments,\n          keepRenderedCapability: true,\n        });\n      });\n    }\n  }\n\n  return { PDFAttachmentViewer };\n});\ndefine('skylark-pdfjs-viewer/pdf_document_properties',[\n  \"skylark-pdfjs-display\",\n  \"./ui_utils\"\n],function(pdfjsLib,ui_utils){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { createPromiseCapability, PDFDateString } = pdfjsLib;\n  const {\n    getPageSizeInches,\n    getPDFFileNameFromURL,\n    isPortraitOrientation,\n    NullL10n,\n  } = ui_utils;\n\n  const DEFAULT_FIELD_CONTENT = \"-\";\n\n  // See https://en.wikibooks.org/wiki/Lentis/Conversion_to_the_Metric_Standard_in_the_United_States\n  const NON_METRIC_LOCALES = [\"en-us\", \"en-lr\", \"my\"];\n\n  // Should use the format: `width x height`, in portrait orientation.\n  // See https://en.wikipedia.org/wiki/Paper_size\n  const US_PAGE_NAMES = {\n    \"8.5x11\": \"Letter\",\n    \"8.5x14\": \"Legal\",\n  };\n  const METRIC_PAGE_NAMES = {\n    \"297x420\": \"A3\",\n    \"210x297\": \"A4\",\n  };\n\n  function getPageName(size, isPortrait, pageNames) {\n    const width = isPortrait ? size.width : size.height;\n    const height = isPortrait ? size.height : size.width;\n\n    return pageNames[`${width}x${height}`];\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentPropertiesOptions\n   * @property {string} overlayName - Name/identifier for the overlay.\n   * @property {Object} fields - Names and elements of the overlay's fields.\n   * @property {HTMLDivElement} container - Div container for the overlay.\n   * @property {HTMLButtonElement} closeButton - Button for closing the overlay.\n   */\n\n  class PDFDocumentProperties {\n    /**\n     * @param {PDFDocumentPropertiesOptions} options\n     * @param {OverlayManager} overlayManager - Manager for the viewer overlays.\n     * @param {EventBus} eventBus - The application event bus.\n     * @param {IL10n} l10n - Localization service.\n     */\n    constructor(\n      { overlayName, fields, container, closeButton },\n      overlayManager,\n      eventBus,\n      l10n = NullL10n\n    ) {\n      this.overlayName = overlayName;\n      this.fields = fields;\n      this.container = container;\n      this.overlayManager = overlayManager;\n      this.l10n = l10n;\n\n      this._reset();\n      // Bind the event listener for the Close button.\n      closeButton.addEventListener(\"click\", this.close.bind(this));\n\n      this.overlayManager.register(\n        this.overlayName,\n        this.container,\n        this.close.bind(this)\n      );\n\n      eventBus._on(\"pagechanging\", evt => {\n        this._currentPageNumber = evt.pageNumber;\n      });\n      eventBus._on(\"rotationchanging\", evt => {\n        this._pagesRotation = evt.pagesRotation;\n      });\n\n      this._isNonMetricLocale = true; // The default viewer locale is 'en-us'.\n      l10n.getLanguage().then(locale => {\n        this._isNonMetricLocale = NON_METRIC_LOCALES.includes(locale);\n      });\n    }\n\n    /**\n     * Open the document properties overlay.\n     */\n    async open() {\n      const freezeFieldData = data => {\n        Object.defineProperty(this, \"fieldData\", {\n          value: Object.freeze(data),\n          writable: false,\n          enumerable: true,\n          configurable: true,\n        });\n      };\n\n      await Promise.all([\n        this.overlayManager.open(this.overlayName),\n        this._dataAvailableCapability.promise,\n      ]);\n      const currentPageNumber = this._currentPageNumber;\n      const pagesRotation = this._pagesRotation;\n\n      // If the document properties were previously fetched (for this PDF file),\n      // just update the dialog immediately to avoid redundant lookups.\n      if (\n        this.fieldData &&\n        currentPageNumber === this.fieldData._currentPageNumber &&\n        pagesRotation === this.fieldData._pagesRotation\n      ) {\n        this._updateUI();\n        return;\n      }\n\n      // Get the document properties.\n      const {\n        info,\n        /* metadata, */\n        contentDispositionFilename,\n        contentLength,\n      } = await this.pdfDocument.getMetadata();\n\n      const [\n        fileName,\n        fileSize,\n        creationDate,\n        modificationDate,\n        pageSize,\n        isLinearized,\n      ] = await Promise.all([\n        contentDispositionFilename || getPDFFileNameFromURL(this.url),\n        this._parseFileSize(contentLength),\n        this._parseDate(info.CreationDate),\n        this._parseDate(info.ModDate),\n        this.pdfDocument.getPage(currentPageNumber).then(pdfPage => {\n          return this._parsePageSize(getPageSizeInches(pdfPage), pagesRotation);\n        }),\n        this._parseLinearization(info.IsLinearized),\n      ]);\n\n      freezeFieldData({\n        fileName,\n        fileSize,\n        title: info.Title,\n        author: info.Author,\n        subject: info.Subject,\n        keywords: info.Keywords,\n        creationDate,\n        modificationDate,\n        creator: info.Creator,\n        producer: info.Producer,\n        version: info.PDFFormatVersion,\n        pageCount: this.pdfDocument.numPages,\n        pageSize,\n        linearized: isLinearized,\n        _currentPageNumber: currentPageNumber,\n        _pagesRotation: pagesRotation,\n      });\n      this._updateUI();\n\n      // Get the correct fileSize, since it may not have been available\n      // or could potentially be wrong.\n      const { length } = await this.pdfDocument.getDownloadInfo();\n      if (contentLength === length) {\n        return; // The fileSize has already been correctly set.\n      }\n      const data = Object.assign(Object.create(null), this.fieldData);\n      data.fileSize = await this._parseFileSize(length);\n\n      freezeFieldData(data);\n      this._updateUI();\n    }\n\n    /**\n     * Close the document properties overlay.\n     */\n    close() {\n      this.overlayManager.close(this.overlayName);\n    }\n\n    /**\n     * Set a reference to the PDF document and the URL in order\n     * to populate the overlay fields with the document properties.\n     * Note that the overlay will contain no information if this method\n     * is not called.\n     *\n     * @param {PDFDocumentProxy} pdfDocument - A reference to the PDF document.\n     * @param {string} url - The URL of the document.\n     */\n    setDocument(pdfDocument, url = null) {\n      if (this.pdfDocument) {\n        this._reset();\n        this._updateUI(true);\n      }\n      if (!pdfDocument) {\n        return;\n      }\n      this.pdfDocument = pdfDocument;\n      this.url = url;\n\n      this._dataAvailableCapability.resolve();\n    }\n\n    /**\n     * @private\n     */\n    _reset() {\n      this.pdfDocument = null;\n      this.url = null;\n\n      delete this.fieldData;\n      this._dataAvailableCapability = createPromiseCapability();\n      this._currentPageNumber = 1;\n      this._pagesRotation = 0;\n    }\n\n    /**\n     * Always updates all of the dialog fields, to prevent inconsistent UI state.\n     * NOTE: If the contents of a particular field is neither a non-empty string,\n     *       nor a number, it will fall back to `DEFAULT_FIELD_CONTENT`.\n     * @private\n     */\n    _updateUI(reset = false) {\n      if (reset || !this.fieldData) {\n        for (const id in this.fields) {\n          this.fields[id].textContent = DEFAULT_FIELD_CONTENT;\n        }\n        return;\n      }\n      if (this.overlayManager.active !== this.overlayName) {\n        // Don't bother updating the dialog if has already been closed,\n        // since it will be updated the next time `this.open` is called.\n        return;\n      }\n      for (const id in this.fields) {\n        const content = this.fieldData[id];\n        this.fields[id].textContent =\n          content || content === 0 ? content : DEFAULT_FIELD_CONTENT;\n      }\n    }\n\n    /**\n     * @private\n     */\n    async _parseFileSize(fileSize = 0) {\n      const kb = fileSize / 1024;\n      if (!kb) {\n        return undefined;\n      } else if (kb < 1024) {\n        return this.l10n.get(\n          \"document_properties_kb\",\n          {\n            size_kb: (+kb.toPrecision(3)).toLocaleString(),\n            size_b: fileSize.toLocaleString(),\n          },\n          \"{{size_kb}} KB ({{size_b}} bytes)\"\n        );\n      }\n      return this.l10n.get(\n        \"document_properties_mb\",\n        {\n          size_mb: (+(kb / 1024).toPrecision(3)).toLocaleString(),\n          size_b: fileSize.toLocaleString(),\n        },\n        \"{{size_mb}} MB ({{size_b}} bytes)\"\n      );\n    }\n\n    /**\n     * @private\n     */\n    async _parsePageSize(pageSizeInches, pagesRotation) {\n      if (!pageSizeInches) {\n        return undefined;\n      }\n      // Take the viewer rotation into account as well; compare with Adobe Reader.\n      if (pagesRotation % 180 !== 0) {\n        pageSizeInches = {\n          width: pageSizeInches.height,\n          height: pageSizeInches.width,\n        };\n      }\n      const isPortrait = isPortraitOrientation(pageSizeInches);\n\n      let sizeInches = {\n        width: Math.round(pageSizeInches.width * 100) / 100,\n        height: Math.round(pageSizeInches.height * 100) / 100,\n      };\n      // 1in == 25.4mm; no need to round to 2 decimals for millimeters.\n      let sizeMillimeters = {\n        width: Math.round(pageSizeInches.width * 25.4 * 10) / 10,\n        height: Math.round(pageSizeInches.height * 25.4 * 10) / 10,\n      };\n\n      let pageName = null;\n      let rawName =\n        getPageName(sizeInches, isPortrait, US_PAGE_NAMES) ||\n        getPageName(sizeMillimeters, isPortrait, METRIC_PAGE_NAMES);\n\n      if (\n        !rawName &&\n        !(\n          Number.isInteger(sizeMillimeters.width) &&\n          Number.isInteger(sizeMillimeters.height)\n        )\n      ) {\n        // Attempt to improve the page name detection by falling back to fuzzy\n        // matching of the metric dimensions, to account for e.g. rounding errors\n        // and/or PDF files that define the page sizes in an imprecise manner.\n        const exactMillimeters = {\n          width: pageSizeInches.width * 25.4,\n          height: pageSizeInches.height * 25.4,\n        };\n        const intMillimeters = {\n          width: Math.round(sizeMillimeters.width),\n          height: Math.round(sizeMillimeters.height),\n        };\n\n        // Try to avoid false positives, by only considering \"small\" differences.\n        if (\n          Math.abs(exactMillimeters.width - intMillimeters.width) < 0.1 &&\n          Math.abs(exactMillimeters.height - intMillimeters.height) < 0.1\n        ) {\n          rawName = getPageName(intMillimeters, isPortrait, METRIC_PAGE_NAMES);\n          if (rawName) {\n            // Update *both* sizes, computed above, to ensure that the displayed\n            // dimensions always correspond to the detected page name.\n            sizeInches = {\n              width: Math.round((intMillimeters.width / 25.4) * 100) / 100,\n              height: Math.round((intMillimeters.height / 25.4) * 100) / 100,\n            };\n            sizeMillimeters = intMillimeters;\n          }\n        }\n      }\n      if (rawName) {\n        pageName = this.l10n.get(\n          \"document_properties_page_size_name_\" + rawName.toLowerCase(),\n          null,\n          rawName\n        );\n      }\n\n      return Promise.all([\n        this._isNonMetricLocale ? sizeInches : sizeMillimeters,\n        this.l10n.get(\n          \"document_properties_page_size_unit_\" +\n            (this._isNonMetricLocale ? \"inches\" : \"millimeters\"),\n          null,\n          this._isNonMetricLocale ? \"in\" : \"mm\"\n        ),\n        pageName,\n        this.l10n.get(\n          \"document_properties_page_size_orientation_\" +\n            (isPortrait ? \"portrait\" : \"landscape\"),\n          null,\n          isPortrait ? \"portrait\" : \"landscape\"\n        ),\n      ]).then(([{ width, height }, unit, name, orientation]) => {\n        return this.l10n.get(\n          \"document_properties_page_size_dimension_\" +\n            (name ? \"name_\" : \"\") +\n            \"string\",\n          {\n            width: width.toLocaleString(),\n            height: height.toLocaleString(),\n            unit,\n            name,\n            orientation,\n          },\n          \"{{width}} × {{height}} {{unit}} (\" +\n            (name ? \"{{name}}, \" : \"\") +\n            \"{{orientation}})\"\n        );\n      });\n    }\n\n    /**\n     * @private\n     */\n    async _parseDate(inputDate) {\n      const dateObject = PDFDateString.toDateObject(inputDate);\n      if (!dateObject) {\n        return undefined;\n      }\n      return this.l10n.get(\n        \"document_properties_date_string\",\n        {\n          date: dateObject.toLocaleDateString(),\n          time: dateObject.toLocaleTimeString(),\n        },\n        \"{{date}}, {{time}}\"\n      );\n    }\n\n    /**\n     * @private\n     */\n    _parseLinearization(isLinearized) {\n      return this.l10n.get(\n        \"document_properties_linearized_\" + (isLinearized ? \"yes\" : \"no\"),\n        null,\n        isLinearized ? \"Yes\" : \"No\"\n      );\n    }\n  }\n\n  return { PDFDocumentProperties };\n});\ndefine('skylark-pdfjs-viewer/pdf_find_utils',[],function(){\n  /* Copyright 2018 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const CharacterType = {\n    SPACE: 0,\n    ALPHA_LETTER: 1,\n    PUNCT: 2,\n    HAN_LETTER: 3,\n    KATAKANA_LETTER: 4,\n    HIRAGANA_LETTER: 5,\n    HALFWIDTH_KATAKANA_LETTER: 6,\n    THAI_LETTER: 7,\n  };\n\n  function isAlphabeticalScript(charCode) {\n    return charCode < 0x2e80;\n  }\n\n  function isAscii(charCode) {\n    return (charCode & 0xff80) === 0;\n  }\n\n  function isAsciiAlpha(charCode) {\n    return (\n      (charCode >= /* a = */ 0x61 && charCode <= /* z = */ 0x7a) ||\n      (charCode >= /* A = */ 0x41 && charCode <= /* Z = */ 0x5a)\n    );\n  }\n\n  function isAsciiDigit(charCode) {\n    return charCode >= /* 0 = */ 0x30 && charCode <= /* 9 = */ 0x39;\n  }\n\n  function isAsciiSpace(charCode) {\n    return (\n      charCode === /* SPACE = */ 0x20 ||\n      charCode === /* TAB = */ 0x09 ||\n      charCode === /* CR = */ 0x0d ||\n      charCode === /* LF = */ 0x0a\n    );\n  }\n\n  function isHan(charCode) {\n    return (\n      (charCode >= 0x3400 && charCode <= 0x9fff) ||\n      (charCode >= 0xf900 && charCode <= 0xfaff)\n    );\n  }\n\n  function isKatakana(charCode) {\n    return charCode >= 0x30a0 && charCode <= 0x30ff;\n  }\n\n  function isHiragana(charCode) {\n    return charCode >= 0x3040 && charCode <= 0x309f;\n  }\n\n  function isHalfwidthKatakana(charCode) {\n    return charCode >= 0xff60 && charCode <= 0xff9f;\n  }\n\n  function isThai(charCode) {\n    return (charCode & 0xff80) === 0x0e00;\n  }\n\n  /**\n   * This function is based on the word-break detection implemented in:\n   * https://hg.mozilla.org/mozilla-central/file/tip/intl/lwbrk/WordBreaker.cpp\n   */\n  function getCharacterType(charCode) {\n    if (isAlphabeticalScript(charCode)) {\n      if (isAscii(charCode)) {\n        if (isAsciiSpace(charCode)) {\n          return CharacterType.SPACE;\n        } else if (\n          isAsciiAlpha(charCode) ||\n          isAsciiDigit(charCode) ||\n          charCode === /* UNDERSCORE = */ 0x5f\n        ) {\n          return CharacterType.ALPHA_LETTER;\n        }\n        return CharacterType.PUNCT;\n      } else if (isThai(charCode)) {\n        return CharacterType.THAI_LETTER;\n      } else if (charCode === /* NBSP = */ 0xa0) {\n        return CharacterType.SPACE;\n      }\n      return CharacterType.ALPHA_LETTER;\n    }\n\n    if (isHan(charCode)) {\n      return CharacterType.HAN_LETTER;\n    } else if (isKatakana(charCode)) {\n      return CharacterType.KATAKANA_LETTER;\n    } else if (isHiragana(charCode)) {\n      return CharacterType.HIRAGANA_LETTER;\n    } else if (isHalfwidthKatakana(charCode)) {\n      return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n    }\n    return CharacterType.ALPHA_LETTER;\n  }\n\n  return { CharacterType, getCharacterType };\n});\ndefine('skylark-pdfjs-viewer/pdf_find_controller',[\n  \"skylark-pdfjs-display\",\n  \"./ui_utils\",\n  \"./pdf_find_utils\"\n],function(pdfjsLib,ui_utils,pdf_find_utils){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { createPromiseCapability } = pdfjsLib;\n  const { getCharacterType } = pdf_find_utils;\n  const { scrollIntoView } = ui_utils;\n\n  const FindState = {\n    FOUND: 0,\n    NOT_FOUND: 1,\n    WRAPPED: 2,\n    PENDING: 3,\n  };\n\n  const FIND_TIMEOUT = 250; // ms\n  const MATCH_SCROLL_OFFSET_TOP = -50; // px\n  const MATCH_SCROLL_OFFSET_LEFT = -400; // px\n\n  const CHARACTERS_TO_NORMALIZE = {\n    \"\\u2018\": \"'\", // Left single quotation mark\n    \"\\u2019\": \"'\", // Right single quotation mark\n    \"\\u201A\": \"'\", // Single low-9 quotation mark\n    \"\\u201B\": \"'\", // Single high-reversed-9 quotation mark\n    \"\\u201C\": '\"', // Left double quotation mark\n    \"\\u201D\": '\"', // Right double quotation mark\n    \"\\u201E\": '\"', // Double low-9 quotation mark\n    \"\\u201F\": '\"', // Double high-reversed-9 quotation mark\n    \"\\u00BC\": \"1/4\", // Vulgar fraction one quarter\n    \"\\u00BD\": \"1/2\", // Vulgar fraction one half\n    \"\\u00BE\": \"3/4\", // Vulgar fraction three quarters\n  };\n\n  let normalizationRegex = null;\n  function normalize(text) {\n    if (!normalizationRegex) {\n      // Compile the regular expression for text normalization once.\n      const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join(\"\");\n      normalizationRegex = new RegExp(`[${replace}]`, \"g\");\n    }\n    let diffs = null;\n    const normalizedText = text.replace(normalizationRegex, function (ch, index) {\n      const normalizedCh = CHARACTERS_TO_NORMALIZE[ch],\n        diff = normalizedCh.length - ch.length;\n      if (diff !== 0) {\n        ///(diffs ||= []).push([index, diff]); // lwf\n        (diffs || (diffs = [])).push([index, diff]);\n      }\n      return normalizedCh;\n    });\n\n    return [normalizedText, diffs];\n  }\n\n  // Determine the original, non-normalized, match index such that highlighting of\n  // search results is correct in the `textLayer` for strings containing e.g. \"½\"\n  // characters; essentially \"inverting\" the result of the `normalize` function.\n  function getOriginalIndex(matchIndex, diffs = null) {\n    if (!diffs) {\n      return matchIndex;\n    }\n    let totalDiff = 0;\n    for (const [index, diff] of diffs) {\n      const currentIndex = index + totalDiff;\n\n      if (currentIndex >= matchIndex) {\n        break;\n      }\n      if (currentIndex + diff > matchIndex) {\n        totalDiff += matchIndex - currentIndex;\n        break;\n      }\n      totalDiff += diff;\n    }\n    return matchIndex - totalDiff;\n  }\n\n  /**\n   * @typedef {Object} PDFFindControllerOptions\n   * @property {IPDFLinkService} linkService - The navigation/linking service.\n   * @property {EventBus} eventBus - The application event bus.\n   */\n\n  /**\n   * Provides search functionality to find a given string in a PDF document.\n   */\n  class PDFFindController {\n    /**\n     * @param {PDFFindControllerOptions} options\n     */\n    constructor({ linkService, eventBus }) {\n      this._linkService = linkService;\n      this._eventBus = eventBus;\n\n      this._reset();\n      eventBus._on(\"findbarclose\", this._onFindBarClose.bind(this));\n    }\n\n    get highlightMatches() {\n      return this._highlightMatches;\n    }\n\n    get pageMatches() {\n      return this._pageMatches;\n    }\n\n    get pageMatchesLength() {\n      return this._pageMatchesLength;\n    }\n\n    get selected() {\n      return this._selected;\n    }\n\n    get state() {\n      return this._state;\n    }\n\n    /**\n     * Set a reference to the PDF document in order to search it.\n     * Note that searching is not possible if this method is not called.\n     *\n     * @param {PDFDocumentProxy} pdfDocument - The PDF document to search.\n     */\n    setDocument(pdfDocument) {\n      if (this._pdfDocument) {\n        this._reset();\n      }\n      if (!pdfDocument) {\n        return;\n      }\n      this._pdfDocument = pdfDocument;\n      this._firstPageCapability.resolve();\n    }\n\n    executeCommand(cmd, state) {\n      if (!state) {\n        return;\n      }\n      const pdfDocument = this._pdfDocument;\n\n      if (this._state === null || this._shouldDirtyMatch(cmd, state)) {\n        this._dirtyMatch = true;\n      }\n      this._state = state;\n      if (cmd !== \"findhighlightallchange\") {\n        this._updateUIState(FindState.PENDING);\n      }\n\n      this._firstPageCapability.promise.then(() => {\n        // If the document was closed before searching began, or if the search\n        // operation was relevant for a previously opened document, do nothing.\n        if (\n          !this._pdfDocument ||\n          (pdfDocument && this._pdfDocument !== pdfDocument)\n        ) {\n          return;\n        }\n        this._extractText();\n\n        const findbarClosed = !this._highlightMatches;\n        const pendingTimeout = !!this._findTimeout;\n\n        if (this._findTimeout) {\n          clearTimeout(this._findTimeout);\n          this._findTimeout = null;\n        }\n        if (cmd === \"find\") {\n          // Trigger the find action with a small delay to avoid starting the\n          // search when the user is still typing (saving resources).\n          this._findTimeout = setTimeout(() => {\n            this._nextMatch();\n            this._findTimeout = null;\n          }, FIND_TIMEOUT);\n        } else if (this._dirtyMatch) {\n          // Immediately trigger searching for non-'find' operations, when the\n          // current state needs to be reset and matches re-calculated.\n          this._nextMatch();\n        } else if (cmd === \"findagain\") {\n          this._nextMatch();\n\n          // When the findbar was previously closed, and `highlightAll` is set,\n          // ensure that the matches on all active pages are highlighted again.\n          if (findbarClosed && this._state.highlightAll) {\n            this._updateAllPages();\n          }\n        } else if (cmd === \"findhighlightallchange\") {\n          // If there was a pending search operation, synchronously trigger a new\n          // search *first* to ensure that the correct matches are highlighted.\n          if (pendingTimeout) {\n            this._nextMatch();\n          } else {\n            this._highlightMatches = true;\n          }\n          this._updateAllPages(); // Update the highlighting on all active pages.\n        } else {\n          this._nextMatch();\n        }\n      });\n    }\n\n    scrollMatchIntoView({ element = null, pageIndex = -1, matchIndex = -1 }) {\n      if (!this._scrollMatches || !element) {\n        return;\n      } else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) {\n        return;\n      } else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) {\n        return;\n      }\n      this._scrollMatches = false; // Ensure that scrolling only happens once.\n\n      const spot = {\n        top: MATCH_SCROLL_OFFSET_TOP,\n        left: MATCH_SCROLL_OFFSET_LEFT,\n      };\n      scrollIntoView(element, spot, /* skipOverflowHiddenElements = */ true);\n    }\n\n    _reset() {\n      this._highlightMatches = false;\n      this._scrollMatches = false;\n      this._pdfDocument = null;\n      this._pageMatches = [];\n      this._pageMatchesLength = [];\n      this._state = null;\n      // Currently selected match.\n      this._selected = {\n        pageIdx: -1,\n        matchIdx: -1,\n      };\n      // Where the find algorithm currently is in the document.\n      this._offset = {\n        pageIdx: null,\n        matchIdx: null,\n        wrapped: false,\n      };\n      this._extractTextPromises = [];\n      this._pageContents = []; // Stores the normalized text for each page.\n      this._pageDiffs = [];\n      this._matchesCountTotal = 0;\n      this._pagesToSearch = null;\n      this._pendingFindMatches = Object.create(null);\n      this._resumePageIdx = null;\n      this._dirtyMatch = false;\n      clearTimeout(this._findTimeout);\n      this._findTimeout = null;\n\n      this._firstPageCapability = createPromiseCapability();\n    }\n\n    /**\n     * @type {string} The (current) normalized search query.\n     */\n    get _query() {\n      if (this._state.query !== this._rawQuery) {\n        this._rawQuery = this._state.query;\n        [this._normalizedQuery] = normalize(this._state.query);\n      }\n      return this._normalizedQuery;\n    }\n\n    _shouldDirtyMatch(cmd, state) {\n      // When the search query changes, regardless of the actual search command\n      // used, always re-calculate matches to avoid errors (fixes bug 1030622).\n      if (state.query !== this._state.query) {\n        return true;\n      }\n      switch (cmd) {\n        case \"findagain\":\n          const pageNumber = this._selected.pageIdx + 1;\n          const linkService = this._linkService;\n          // Only treat a 'findagain' event as a new search operation when it's\n          // *absolutely* certain that the currently selected match is no longer\n          // visible, e.g. as a result of the user scrolling in the document.\n          //\n          // NOTE: If only a simple `this._linkService.page` check was used here,\n          // there's a risk that consecutive 'findagain' operations could \"skip\"\n          // over matches at the top/bottom of pages thus making them completely\n          // inaccessible when there's multiple pages visible in the viewer.\n          if (\n            pageNumber >= 1 &&\n            pageNumber <= linkService.pagesCount &&\n            pageNumber !== linkService.page &&\n            !linkService.isPageVisible(pageNumber)\n          ) {\n            return true;\n          }\n          return false;\n        case \"findhighlightallchange\":\n          return false;\n      }\n      return true;\n    }\n\n    /**\n     * Helper for multi-term search that fills the `matchesWithLength` array\n     * and handles cases where one search term includes another search term (for\n     * example, \"tamed tame\" or \"this is\"). It looks for intersecting terms in\n     * the `matches` and keeps elements with a longer match length.\n     */\n    _prepareMatches(matchesWithLength, matches, matchesLength) {\n      function isSubTerm(currentIndex) {\n        const currentElem = matchesWithLength[currentIndex];\n        const nextElem = matchesWithLength[currentIndex + 1];\n\n        // Check for cases like \"TAMEd TAME\".\n        if (\n          currentIndex < matchesWithLength.length - 1 &&\n          currentElem.match === nextElem.match\n        ) {\n          currentElem.skipped = true;\n          return true;\n        }\n\n        // Check for cases like \"thIS IS\".\n        for (let i = currentIndex - 1; i >= 0; i--) {\n          const prevElem = matchesWithLength[i];\n          if (prevElem.skipped) {\n            continue;\n          }\n          if (prevElem.match + prevElem.matchLength < currentElem.match) {\n            break;\n          }\n          if (\n            prevElem.match + prevElem.matchLength >=\n            currentElem.match + currentElem.matchLength\n          ) {\n            currentElem.skipped = true;\n            return true;\n          }\n        }\n        return false;\n      }\n\n      // Sort the array of `{ match: <match>, matchLength: <matchLength> }`\n      // objects on increasing index first and on the length otherwise.\n      matchesWithLength.sort(function (a, b) {\n        return a.match === b.match\n          ? a.matchLength - b.matchLength\n          : a.match - b.match;\n      });\n      for (let i = 0, len = matchesWithLength.length; i < len; i++) {\n        if (isSubTerm(i)) {\n          continue;\n        }\n        matches.push(matchesWithLength[i].match);\n        matchesLength.push(matchesWithLength[i].matchLength);\n      }\n    }\n\n    /**\n     * Determine if the search query constitutes a \"whole word\", by comparing the\n     * first/last character type with the preceding/following character type.\n     */\n    _isEntireWord(content, startIdx, length) {\n      if (startIdx > 0) {\n        const first = content.charCodeAt(startIdx);\n        const limit = content.charCodeAt(startIdx - 1);\n        if (getCharacterType(first) === getCharacterType(limit)) {\n          return false;\n        }\n      }\n      const endIdx = startIdx + length - 1;\n      if (endIdx < content.length - 1) {\n        const last = content.charCodeAt(endIdx);\n        const limit = content.charCodeAt(endIdx + 1);\n        if (getCharacterType(last) === getCharacterType(limit)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    _calculatePhraseMatch(query, pageIndex, pageContent, pageDiffs, entireWord) {\n      const matches = [],\n        matchesLength = [];\n      const queryLen = query.length;\n\n      let matchIdx = -queryLen;\n      while (true) {\n        matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n        if (matchIdx === -1) {\n          break;\n        }\n        if (entireWord && !this._isEntireWord(pageContent, matchIdx, queryLen)) {\n          continue;\n        }\n        const originalMatchIdx = getOriginalIndex(matchIdx, pageDiffs),\n          matchEnd = matchIdx + queryLen - 1,\n          originalQueryLen =\n            getOriginalIndex(matchEnd, pageDiffs) - originalMatchIdx + 1;\n\n        matches.push(originalMatchIdx);\n        matchesLength.push(originalQueryLen);\n      }\n      this._pageMatches[pageIndex] = matches;\n      this._pageMatchesLength[pageIndex] = matchesLength;\n    }\n\n    _calculateWordMatch(query, pageIndex, pageContent, pageDiffs, entireWord) {\n      const matchesWithLength = [];\n\n      // Divide the query into pieces and search for text in each piece.\n      const queryArray = query.match(/\\S+/g);\n      for (let i = 0, len = queryArray.length; i < len; i++) {\n        const subquery = queryArray[i];\n        const subqueryLen = subquery.length;\n\n        let matchIdx = -subqueryLen;\n        while (true) {\n          matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n          if (matchIdx === -1) {\n            break;\n          }\n          if (\n            entireWord &&\n            !this._isEntireWord(pageContent, matchIdx, subqueryLen)\n          ) {\n            continue;\n          }\n          const originalMatchIdx = getOriginalIndex(matchIdx, pageDiffs),\n            matchEnd = matchIdx + subqueryLen - 1,\n            originalQueryLen =\n              getOriginalIndex(matchEnd, pageDiffs) - originalMatchIdx + 1;\n\n          // Other searches do not, so we store the length.\n          matchesWithLength.push({\n            match: originalMatchIdx,\n            matchLength: originalQueryLen,\n            skipped: false,\n          });\n        }\n      }\n\n      // Prepare arrays for storing the matches.\n      this._pageMatchesLength[pageIndex] = [];\n      this._pageMatches[pageIndex] = [];\n\n      // Sort `matchesWithLength`, remove intersecting terms and put the result\n      // into the two arrays.\n      this._prepareMatches(\n        matchesWithLength,\n        this._pageMatches[pageIndex],\n        this._pageMatchesLength[pageIndex]\n      );\n    }\n\n    _calculateMatch(pageIndex) {\n      let pageContent = this._pageContents[pageIndex];\n      const pageDiffs = this._pageDiffs[pageIndex];\n      let query = this._query;\n      const { caseSensitive, entireWord, phraseSearch } = this._state;\n\n      if (query.length === 0) {\n        // Do nothing: the matches should be wiped out already.\n        return;\n      }\n\n      if (!caseSensitive) {\n        pageContent = pageContent.toLowerCase();\n        query = query.toLowerCase();\n      }\n\n      if (phraseSearch) {\n        this._calculatePhraseMatch(\n          query,\n          pageIndex,\n          pageContent,\n          pageDiffs,\n          entireWord\n        );\n      } else {\n        this._calculateWordMatch(\n          query,\n          pageIndex,\n          pageContent,\n          pageDiffs,\n          entireWord\n        );\n      }\n\n      // When `highlightAll` is set, ensure that the matches on previously\n      // rendered (and still active) pages are correctly highlighted.\n      if (this._state.highlightAll) {\n        this._updatePage(pageIndex);\n      }\n      if (this._resumePageIdx === pageIndex) {\n        this._resumePageIdx = null;\n        this._nextPageMatch();\n      }\n\n      // Update the match count.\n      const pageMatchesCount = this._pageMatches[pageIndex].length;\n      if (pageMatchesCount > 0) {\n        this._matchesCountTotal += pageMatchesCount;\n        this._updateUIResultsCount();\n      }\n    }\n\n    _extractText() {\n      // Perform text extraction once if this method is called multiple times.\n      if (this._extractTextPromises.length > 0) {\n        return;\n      }\n\n      let promise = Promise.resolve();\n      for (let i = 0, ii = this._linkService.pagesCount; i < ii; i++) {\n        const extractTextCapability = createPromiseCapability();\n        this._extractTextPromises[i] = extractTextCapability.promise;\n\n        promise = promise.then(() => {\n          return this._pdfDocument\n            .getPage(i + 1)\n            .then(pdfPage => {\n              return pdfPage.getTextContent({\n                normalizeWhitespace: true,\n              });\n            })\n            .then(\n              textContent => {\n                const textItems = textContent.items;\n                const strBuf = [];\n\n                for (let j = 0, jj = textItems.length; j < jj; j++) {\n                  strBuf.push(textItems[j].str);\n                }\n\n                // Store the normalized page content (text items) as one string.\n                [this._pageContents[i], this._pageDiffs[i]] = normalize(\n                  strBuf.join(\"\")\n                );\n                extractTextCapability.resolve(i);\n              },\n              reason => {\n                console.error(\n                  `Unable to get text content for page ${i + 1}`,\n                  reason\n                );\n                // Page error -- assuming no text content.\n                this._pageContents[i] = \"\";\n                this._pageDiffs[i] = null;\n                extractTextCapability.resolve(i);\n              }\n            );\n        });\n      }\n    }\n\n    _updatePage(index) {\n      if (this._scrollMatches && this._selected.pageIdx === index) {\n        // If the page is selected, scroll the page into view, which triggers\n        // rendering the page, which adds the text layer. Once the text layer\n        // is built, it will attempt to scroll the selected match into view.\n        this._linkService.page = index + 1;\n      }\n\n      this._eventBus.dispatch(\"updatetextlayermatches\", {\n        source: this,\n        pageIndex: index,\n      });\n    }\n\n    _updateAllPages() {\n      this._eventBus.dispatch(\"updatetextlayermatches\", {\n        source: this,\n        pageIndex: -1,\n      });\n    }\n\n    _nextMatch() {\n      const previous = this._state.findPrevious;\n      const currentPageIndex = this._linkService.page - 1;\n      const numPages = this._linkService.pagesCount;\n\n      this._highlightMatches = true;\n\n      if (this._dirtyMatch) {\n        // Need to recalculate the matches, reset everything.\n        this._dirtyMatch = false;\n        this._selected.pageIdx = this._selected.matchIdx = -1;\n        this._offset.pageIdx = currentPageIndex;\n        this._offset.matchIdx = null;\n        this._offset.wrapped = false;\n        this._resumePageIdx = null;\n        this._pageMatches.length = 0;\n        this._pageMatchesLength.length = 0;\n        this._matchesCountTotal = 0;\n\n        this._updateAllPages(); // Wipe out any previously highlighted matches.\n\n        for (let i = 0; i < numPages; i++) {\n          // Start finding the matches as soon as the text is extracted.\n          if (this._pendingFindMatches[i] === true) {\n            continue;\n          }\n          this._pendingFindMatches[i] = true;\n          this._extractTextPromises[i].then(pageIdx => {\n            delete this._pendingFindMatches[pageIdx];\n            this._calculateMatch(pageIdx);\n          });\n        }\n      }\n\n      // If there's no query there's no point in searching.\n      if (this._query === \"\") {\n        this._updateUIState(FindState.FOUND);\n        return;\n      }\n      // If we're waiting on a page, we return since we can't do anything else.\n      if (this._resumePageIdx) {\n        return;\n      }\n\n      const offset = this._offset;\n      // Keep track of how many pages we should maximally iterate through.\n      this._pagesToSearch = numPages;\n      // If there's already a `matchIdx` that means we are iterating through a\n      // page's matches.\n      if (offset.matchIdx !== null) {\n        const numPageMatches = this._pageMatches[offset.pageIdx].length;\n        if (\n          (!previous && offset.matchIdx + 1 < numPageMatches) ||\n          (previous && offset.matchIdx > 0)\n        ) {\n          // The simple case; we just have advance the matchIdx to select\n          // the next match on the page.\n          offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n          this._updateMatch(/* found = */ true);\n          return;\n        }\n        // We went beyond the current page's matches, so we advance to\n        // the next page.\n        this._advanceOffsetPage(previous);\n      }\n      // Start searching through the page.\n      this._nextPageMatch();\n    }\n\n    _matchesReady(matches) {\n      const offset = this._offset;\n      const numMatches = matches.length;\n      const previous = this._state.findPrevious;\n\n      if (numMatches) {\n        // There were matches for the page, so initialize `matchIdx`.\n        offset.matchIdx = previous ? numMatches - 1 : 0;\n        this._updateMatch(/* found = */ true);\n        return true;\n      }\n      // No matches, so attempt to search the next page.\n      this._advanceOffsetPage(previous);\n      if (offset.wrapped) {\n        offset.matchIdx = null;\n        if (this._pagesToSearch < 0) {\n          // No point in wrapping again, there were no matches.\n          this._updateMatch(/* found = */ false);\n          // While matches were not found, searching for a page\n          // with matches should nevertheless halt.\n          return true;\n        }\n      }\n      // Matches were not found (and searching is not done).\n      return false;\n    }\n\n    _nextPageMatch() {\n      if (this._resumePageIdx !== null) {\n        console.error(\"There can only be one pending page.\");\n      }\n\n      let matches = null;\n      do {\n        const pageIdx = this._offset.pageIdx;\n        matches = this._pageMatches[pageIdx];\n        if (!matches) {\n          // The matches don't exist yet for processing by `_matchesReady`,\n          // so set a resume point for when they do exist.\n          this._resumePageIdx = pageIdx;\n          break;\n        }\n      } while (!this._matchesReady(matches));\n    }\n\n    _advanceOffsetPage(previous) {\n      const offset = this._offset;\n      const numPages = this._linkService.pagesCount;\n      offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n      offset.matchIdx = null;\n\n      this._pagesToSearch--;\n\n      if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n        offset.pageIdx = previous ? numPages - 1 : 0;\n        offset.wrapped = true;\n      }\n    }\n\n    _updateMatch(found = false) {\n      let state = FindState.NOT_FOUND;\n      const wrapped = this._offset.wrapped;\n      this._offset.wrapped = false;\n\n      if (found) {\n        const previousPage = this._selected.pageIdx;\n        this._selected.pageIdx = this._offset.pageIdx;\n        this._selected.matchIdx = this._offset.matchIdx;\n        state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n\n        // Update the currently selected page to wipe out any selected matches.\n        if (previousPage !== -1 && previousPage !== this._selected.pageIdx) {\n          this._updatePage(previousPage);\n        }\n      }\n\n      this._updateUIState(state, this._state.findPrevious);\n      if (this._selected.pageIdx !== -1) {\n        // Ensure that the match will be scrolled into view.\n        this._scrollMatches = true;\n\n        this._updatePage(this._selected.pageIdx);\n      }\n    }\n\n    _onFindBarClose(evt) {\n      const pdfDocument = this._pdfDocument;\n      // Since searching is asynchronous, ensure that the removal of highlighted\n      // matches (from the UI) is async too such that the 'updatetextlayermatches'\n      // events will always be dispatched in the expected order.\n      this._firstPageCapability.promise.then(() => {\n        // Only update the UI if the document is open, and is the current one.\n        if (\n          !this._pdfDocument ||\n          (pdfDocument && this._pdfDocument !== pdfDocument)\n        ) {\n          return;\n        }\n        // Ensure that a pending, not yet started, search operation is aborted.\n        if (this._findTimeout) {\n          clearTimeout(this._findTimeout);\n          this._findTimeout = null;\n        }\n        // Abort any long running searches, to avoid a match being scrolled into\n        // view *after* the findbar has been closed. In this case `this._offset`\n        // will most likely differ from `this._selected`, hence we also ensure\n        // that any new search operation will always start with a clean slate.\n        if (this._resumePageIdx) {\n          this._resumePageIdx = null;\n          this._dirtyMatch = true;\n        }\n        // Avoid the UI being in a pending state when the findbar is re-opened.\n        this._updateUIState(FindState.FOUND);\n\n        this._highlightMatches = false;\n        this._updateAllPages(); // Wipe out any previously highlighted matches.\n      });\n    }\n\n    _requestMatchesCount() {\n      const { pageIdx, matchIdx } = this._selected;\n      let current = 0,\n        total = this._matchesCountTotal;\n      if (matchIdx !== -1) {\n        for (let i = 0; i < pageIdx; i++) {\n          current += (this._pageMatches[i] && this._pageMatches[i].length) || 0;\n        }\n        current += matchIdx + 1;\n      }\n      // When searching starts, this method may be called before the `pageMatches`\n      // have been counted (in `_calculateMatch`). Ensure that the UI won't show\n      // temporarily broken state when the active find result doesn't make sense.\n      if (current < 1 || current > total) {\n        current = total = 0;\n      }\n      return { current, total };\n    }\n\n    _updateUIResultsCount() {\n      this._eventBus.dispatch(\"updatefindmatchescount\", {\n        source: this,\n        matchesCount: this._requestMatchesCount(),\n      });\n    }\n\n    _updateUIState(state, previous) {\n      this._eventBus.dispatch(\"updatefindcontrolstate\", {\n        source: this,\n        state,\n        previous,\n        matchesCount: this._requestMatchesCount(),\n        rawQuery: this._state ? this._state.query : null,\n      });\n    }\n  }\n\n  return { FindState, PDFFindController };\n});\ndefine('skylark-pdfjs-viewer/pdf_find_bar',[\n  \"./pdfjs_dev\",\n  \"./ui_utils\",\n  \"./pdf_find_controller\"\n],function(\n  PDFJSDev,\n  ui_utils,\n  pdf_find_controller\n){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { FindState } = pdf_find_controller;\n  const { NullL10n } = ui_utils;\n\n  const MATCHES_COUNT_LIMIT = 1000;\n\n  /**\n   * Creates a \"search bar\" given a set of DOM elements that act as controls\n   * for searching or for setting search preferences in the UI. This object\n   * also sets up the appropriate events for the controls. Actual searching\n   * is done by PDFFindController.\n   */\n  class PDFFindBar {\n    constructor(options, eventBus, l10n = NullL10n) {\n      this.opened = false;\n\n      this.bar = options.bar || null;\n      this.toggleButton = options.toggleButton || null;\n      this.findField = options.findField || null;\n      this.highlightAll = options.highlightAllCheckbox || null;\n      this.caseSensitive = options.caseSensitiveCheckbox || null;\n      this.entireWord = options.entireWordCheckbox || null;\n      this.findMsg = options.findMsg || null;\n      this.findResultsCount = options.findResultsCount || null;\n      this.findPreviousButton = options.findPreviousButton || null;\n      this.findNextButton = options.findNextButton || null;\n      this.eventBus = eventBus;\n      this.l10n = l10n;\n\n      // Add event listeners to the DOM elements.\n      this.toggleButton.addEventListener(\"click\", () => {\n        this.toggle();\n      });\n\n      this.findField.addEventListener(\"input\", () => {\n        this.dispatchEvent(\"\");\n      });\n\n      this.bar.addEventListener(\"keydown\", e => {\n        switch (e.keyCode) {\n          case 13: // Enter\n            if (e.target === this.findField) {\n              this.dispatchEvent(\"again\", e.shiftKey);\n            }\n            break;\n          case 27: // Escape\n            this.close();\n            break;\n        }\n      });\n\n      this.findPreviousButton.addEventListener(\"click\", () => {\n        this.dispatchEvent(\"again\", true);\n      });\n\n      this.findNextButton.addEventListener(\"click\", () => {\n        this.dispatchEvent(\"again\", false);\n      });\n\n      this.highlightAll.addEventListener(\"click\", () => {\n        this.dispatchEvent(\"highlightallchange\");\n      });\n\n      this.caseSensitive.addEventListener(\"click\", () => {\n        this.dispatchEvent(\"casesensitivitychange\");\n      });\n\n      this.entireWord.addEventListener(\"click\", () => {\n        this.dispatchEvent(\"entirewordchange\");\n      });\n\n      this.eventBus._on(\"resize\", this._adjustWidth.bind(this));\n    }\n\n    reset() {\n      this.updateUIState();\n    }\n\n    dispatchEvent(type, findPrev) {\n      this.eventBus.dispatch(\"find\", {\n        source: this,\n        type,\n        query: this.findField.value,\n        phraseSearch: true,\n        caseSensitive: this.caseSensitive.checked,\n        entireWord: this.entireWord.checked,\n        highlightAll: this.highlightAll.checked,\n        findPrevious: findPrev,\n      });\n    }\n\n    updateUIState(state, previous, matchesCount) {\n      let findMsg = \"\";\n      let status = \"\";\n\n      switch (state) {\n        case FindState.FOUND:\n          break;\n\n        case FindState.PENDING:\n          status = \"pending\";\n          break;\n\n        case FindState.NOT_FOUND:\n          findMsg = this.l10n.get(\"find_not_found\", null, \"Phrase not found\");\n          status = \"notFound\";\n          break;\n\n        case FindState.WRAPPED:\n          if (previous) {\n            findMsg = this.l10n.get(\n              \"find_reached_top\",\n              null,\n              \"Reached top of document, continued from bottom\"\n            );\n          } else {\n            findMsg = this.l10n.get(\n              \"find_reached_bottom\",\n              null,\n              \"Reached end of document, continued from top\"\n            );\n          }\n          break;\n      }\n      this.findField.setAttribute(\"data-status\", status);\n\n      Promise.resolve(findMsg).then(msg => {\n        this.findMsg.textContent = msg;\n        this._adjustWidth();\n      });\n\n      this.updateResultsCount(matchesCount);\n    }\n\n    updateResultsCount({ current = 0, total = 0 } = {}) {\n      if (!this.findResultsCount) {\n        return; // No UI control is provided.\n      }\n      const limit = MATCHES_COUNT_LIMIT;\n      let matchesCountMsg = \"\";\n\n      if (total > 0) {\n        if (total > limit) {\n          if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n            // TODO: Remove this hard-coded `[other]` form once plural support has\n            // been implemented in the mozilla-central specific `l10n.js` file.\n            matchesCountMsg = this.l10n.get(\n              \"find_match_count_limit[other]\",\n              {\n                limit,\n              },\n              \"More than {{limit}} matches\"\n            );\n          } else {\n            matchesCountMsg = this.l10n.get(\n              \"find_match_count_limit\",\n              {\n                limit,\n              },\n              \"More than {{limit}} match\" + (limit !== 1 ? \"es\" : \"\")\n            );\n          }\n        } else {\n          if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n            // TODO: Remove this hard-coded `[other]` form once plural support has\n            // been implemented in the mozilla-central specific `l10n.js` file.\n            matchesCountMsg = this.l10n.get(\n              \"find_match_count[other]\",\n              {\n                current,\n                total,\n              },\n              \"{{current}} of {{total}} matches\"\n            );\n          } else {\n            matchesCountMsg = this.l10n.get(\n              \"find_match_count\",\n              {\n                current,\n                total,\n              },\n              \"{{current}} of {{total}} match\" + (total !== 1 ? \"es\" : \"\")\n            );\n          }\n        }\n      }\n      Promise.resolve(matchesCountMsg).then(msg => {\n        this.findResultsCount.textContent = msg;\n        this.findResultsCount.classList.toggle(\"hidden\", !total);\n        // Since `updateResultsCount` may be called from `PDFFindController`,\n        // ensure that the width of the findbar is always updated correctly.\n        this._adjustWidth();\n      });\n    }\n\n    open() {\n      if (!this.opened) {\n        this.opened = true;\n        this.toggleButton.classList.add(\"toggled\");\n        this.bar.classList.remove(\"hidden\");\n      }\n      this.findField.select();\n      this.findField.focus();\n\n      this._adjustWidth();\n    }\n\n    close() {\n      if (!this.opened) {\n        return;\n      }\n      this.opened = false;\n      this.toggleButton.classList.remove(\"toggled\");\n      this.bar.classList.add(\"hidden\");\n\n      this.eventBus.dispatch(\"findbarclose\", { source: this });\n    }\n\n    toggle() {\n      if (this.opened) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _adjustWidth() {\n      if (!this.opened) {\n        return;\n      }\n\n      // The find bar has an absolute position and thus the browser extends\n      // its width to the maximum possible width once the find bar does not fit\n      // entirely within the window anymore (and its elements are automatically\n      // wrapped). Here we detect and fix that.\n      this.bar.classList.remove(\"wrapContainers\");\n\n      const findbarHeight = this.bar.clientHeight;\n      const inputContainerHeight = this.bar.firstElementChild.clientHeight;\n\n      if (findbarHeight > inputContainerHeight) {\n        // The findbar is taller than the input container, which means that\n        // the browser wrapped some of the elements. For a consistent look,\n        // wrap all of them to adjust the width of the find bar.\n        this.bar.classList.add(\"wrapContainers\");\n      }\n    }\n  }\n\n  return { PDFFindBar };\n});\ndefine('skylark-pdfjs-viewer/pdf_history',[\n  \"./pdfjs_dev\",\n  \"./ui_utils\",\n],function(\n  PDFJSDev,\n  ui_utils\n){\n  /* Copyright 2017 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const {\n    isValidRotation,\n    parseQueryString,\n    PresentationModeState,\n    waitOnEventOrTimeout,\n  } = ui_utils;\n\n  // Heuristic value used when force-resetting `this._blockHashChange`.\n  const HASH_CHANGE_TIMEOUT = 1000; // milliseconds\n  // Heuristic value used when adding the current position to the browser history.\n  const POSITION_UPDATED_THRESHOLD = 50;\n  // Heuristic value used when adding a temporary position to the browser history.\n  const UPDATE_VIEWAREA_TIMEOUT = 1000; // milliseconds\n\n  /**\n   * @typedef {Object} PDFHistoryOptions\n   * @property {IPDFLinkService} linkService - The navigation/linking service.\n   * @property {EventBus} eventBus - The application event bus.\n   */\n\n  /**\n   * @typedef {Object} InitializeParameters\n   * @property {string} fingerprint - The PDF document's unique fingerprint.\n   * @property {boolean} [resetHistory] - Reset the browsing history.\n   * @property {boolean} [updateUrl] - Attempt to update the document URL, with\n   *   the current hash, when pushing/replacing browser history entries.\n   */\n\n  /**\n   * @typedef {Object} PushParameters\n   * @property {string} [namedDest] - The named destination. If absent, a\n   *   stringified version of `explicitDest` is used.\n   * @property {Array} explicitDest - The explicit destination array.\n   * @property {number} pageNumber - The page to which the destination points.\n   */\n\n  function getCurrentHash() {\n    return document.location.hash;\n  }\n\n  class PDFHistory {\n    /**\n     * @param {PDFHistoryOptions} options\n     */\n    constructor({ linkService, eventBus }) {\n      this.linkService = linkService;\n      this.eventBus = eventBus;\n\n      this._initialized = false;\n      this._fingerprint = \"\";\n      this.reset();\n\n      this._boundEvents = null;\n      this._isViewerInPresentationMode = false;\n      // Ensure that we don't miss either a 'presentationmodechanged' or a\n      // 'pagesinit' event, by registering the listeners immediately.\n      this.eventBus._on(\"presentationmodechanged\", evt => {\n        this._isViewerInPresentationMode =\n          evt.state !== PresentationModeState.NORMAL;\n      });\n      this.eventBus._on(\"pagesinit\", () => {\n        this._isPagesLoaded = false;\n\n        this.eventBus._on(\n          \"pagesloaded\",\n          evt => {\n            this._isPagesLoaded = !!evt.pagesCount;\n          },\n          { once: true }\n        );\n      });\n    }\n\n    /**\n     * Initialize the history for the PDF document, using either the current\n     * browser history entry or the document hash, whichever is present.\n     * @param {InitializeParameters} params\n     */\n    initialize({ fingerprint, resetHistory = false, updateUrl = false }) {\n      if (!fingerprint || typeof fingerprint !== \"string\") {\n        console.error(\n          'PDFHistory.initialize: The \"fingerprint\" must be a non-empty string.'\n        );\n        return;\n      }\n      // Ensure that any old state is always reset upon initialization.\n      if (this._initialized) {\n        this.reset();\n      }\n      const reInitialized =\n        this._fingerprint !== \"\" && this._fingerprint !== fingerprint;\n      this._fingerprint = fingerprint;\n      this._updateUrl = updateUrl === true;\n\n      this._initialized = true;\n      this._bindEvents();\n      const state = window.history.state;\n\n      this._popStateInProgress = false;\n      this._blockHashChange = 0;\n      this._currentHash = getCurrentHash();\n      this._numPositionUpdates = 0;\n\n      this._uid = this._maxUid = 0;\n      this._destination = null;\n      this._position = null;\n\n      if (!this._isValidState(state, /* checkReload = */ true) || resetHistory) {\n        const { hash, page, rotation } = this._parseCurrentHash(\n          /* checkNameddest = */ true\n        );\n\n        if (!hash || reInitialized || resetHistory) {\n          // Ensure that the browser history is reset on PDF document load.\n          this._pushOrReplaceState(null, /* forceReplace = */ true);\n          return;\n        }\n        // Ensure that the browser history is initialized correctly when\n        // the document hash is present on PDF document load.\n        this._pushOrReplaceState(\n          { hash, page, rotation },\n          /* forceReplace = */ true\n        );\n        return;\n      }\n\n      // The browser history contains a valid entry, ensure that the history is\n      // initialized correctly on PDF document load.\n      const destination = state.destination;\n      this._updateInternalState(\n        destination,\n        state.uid,\n        /* removeTemporary = */ true\n      );\n\n      if (destination.rotation !== undefined) {\n        this._initialRotation = destination.rotation;\n      }\n      if (destination.dest) {\n        this._initialBookmark = JSON.stringify(destination.dest);\n\n        // If the history is updated, e.g. through the user changing the hash,\n        // before the initial destination has become visible, then we do *not*\n        // want to potentially add `this._position` to the browser history.\n        this._destination.page = null;\n      } else if (destination.hash) {\n        this._initialBookmark = destination.hash;\n      } else if (destination.page) {\n        // Fallback case; shouldn't be necessary, but better safe than sorry.\n        this._initialBookmark = `page=${destination.page}`;\n      }\n    }\n\n    /**\n     * Reset the current `PDFHistory` instance, and consequently prevent any\n     * further updates and/or navigation of the browser history.\n     */\n    reset() {\n      if (this._initialized) {\n        this._pageHide(); // Simulate a 'pagehide' event when resetting.\n\n        this._initialized = false;\n        this._unbindEvents();\n      }\n      if (this._updateViewareaTimeout) {\n        clearTimeout(this._updateViewareaTimeout);\n        this._updateViewareaTimeout = null;\n      }\n      this._initialBookmark = null;\n      this._initialRotation = null;\n    }\n\n    /**\n     * Push an internal destination to the browser history.\n     * @param {PushParameters}\n     */\n    push({ namedDest = null, explicitDest, pageNumber }) {\n      if (!this._initialized) {\n        return;\n      }\n      if (namedDest && typeof namedDest !== \"string\") {\n        console.error(\n          \"PDFHistory.push: \" +\n            `\"${namedDest}\" is not a valid namedDest parameter.`\n        );\n        return;\n      } else if (!Array.isArray(explicitDest)) {\n        console.error(\n          \"PDFHistory.push: \" +\n            `\"${explicitDest}\" is not a valid explicitDest parameter.`\n        );\n        return;\n      } else if (\n        !(\n          Number.isInteger(pageNumber) &&\n          pageNumber > 0 &&\n          pageNumber <= this.linkService.pagesCount\n        )\n      ) {\n        // Allow an unset `pageNumber` if and only if the history is still empty;\n        // please refer to the `this._destination.page = null;` comment above.\n        if (pageNumber !== null || this._destination) {\n          console.error(\n            \"PDFHistory.push: \" +\n              `\"${pageNumber}\" is not a valid pageNumber parameter.`\n          );\n          return;\n        }\n      }\n\n      const hash = namedDest || JSON.stringify(explicitDest);\n      if (!hash) {\n        // The hash *should* never be undefined, but if that were to occur,\n        // avoid any possible issues by not updating the browser history.\n        return;\n      }\n\n      let forceReplace = false;\n      if (\n        this._destination &&\n        (isDestHashesEqual(this._destination.hash, hash) ||\n          isDestArraysEqual(this._destination.dest, explicitDest))\n      ) {\n        // When the new destination is identical to `this._destination`, and\n        // its `page` is undefined, replace the current browser history entry.\n        // NOTE: This can only occur if `this._destination` was set either:\n        //  - through the document hash being specified on load.\n        //  - through the user changing the hash of the document.\n        if (this._destination.page) {\n          return;\n        }\n        forceReplace = true;\n      }\n      if (this._popStateInProgress && !forceReplace) {\n        return;\n      }\n\n      this._pushOrReplaceState(\n        {\n          dest: explicitDest,\n          hash,\n          page: pageNumber,\n          rotation: this.linkService.rotation,\n        },\n        forceReplace\n      );\n\n      if (!this._popStateInProgress) {\n        // Prevent the browser history from updating while the new destination is\n        // being scrolled into view, to avoid potentially inconsistent state.\n        this._popStateInProgress = true;\n        // We defer the resetting of `this._popStateInProgress`, to account for\n        // e.g. zooming occuring when the new destination is being navigated to.\n        Promise.resolve().then(() => {\n          this._popStateInProgress = false;\n        });\n      }\n    }\n\n    /**\n     * Push a page to the browser history; generally the `push` method should be\n     * used instead.\n     * @param {number} pageNumber\n     */\n    pushPage(pageNumber) {\n      if (!this._initialized) {\n        return;\n      }\n      if (\n        !(\n          Number.isInteger(pageNumber) &&\n          pageNumber > 0 &&\n          pageNumber <= this.linkService.pagesCount\n        )\n      ) {\n        console.error(\n          `PDFHistory.pushPage: \"${pageNumber}\" is not a valid page number.`\n        );\n        return;\n      }\n\n      ///if (this._destination?.page === pageNumber) { // lwf\n      if (this._destination && this._destination.page === pageNumber) {\n        // When the new page is identical to the one in `this._destination`, we\n        // don't want to add a potential duplicate entry in the browser history.\n        return;\n      }\n      if (this._popStateInProgress) {\n        return;\n      }\n\n      this._pushOrReplaceState({\n        hash: `page=${pageNumber}`,\n        page: pageNumber,\n        rotation: this.linkService.rotation,\n      });\n\n      if (!this._popStateInProgress) {\n        // Prevent the browser history from updating while the new page is\n        // being scrolled into view, to avoid potentially inconsistent state.\n        this._popStateInProgress = true;\n        // We defer the resetting of `this._popStateInProgress`, to account for\n        // e.g. zooming occuring when the new page is being navigated to.\n        Promise.resolve().then(() => {\n          this._popStateInProgress = false;\n        });\n      }\n    }\n\n    /**\n     * Push the current position to the browser history.\n     */\n    pushCurrentPosition() {\n      if (!this._initialized || this._popStateInProgress) {\n        return;\n      }\n      this._tryPushCurrentPosition();\n    }\n\n    /**\n     * Go back one step in the browser history.\n     * NOTE: Avoids navigating away from the document, useful for \"named actions\".\n     */\n    back() {\n      if (!this._initialized || this._popStateInProgress) {\n        return;\n      }\n      const state = window.history.state;\n      if (this._isValidState(state) && state.uid > 0) {\n        window.history.back();\n      }\n    }\n\n    /**\n     * Go forward one step in the browser history.\n     * NOTE: Avoids navigating away from the document, useful for \"named actions\".\n     */\n    forward() {\n      if (!this._initialized || this._popStateInProgress) {\n        return;\n      }\n      const state = window.history.state;\n      if (this._isValidState(state) && state.uid < this._maxUid) {\n        window.history.forward();\n      }\n    }\n\n    /**\n     * @type {boolean} Indicating if the user is currently moving through the\n     *   browser history, useful e.g. for skipping the next 'hashchange' event.\n     */\n    get popStateInProgress() {\n      return (\n        this._initialized &&\n        (this._popStateInProgress || this._blockHashChange > 0)\n      );\n    }\n\n    get initialBookmark() {\n      return this._initialized ? this._initialBookmark : null;\n    }\n\n    get initialRotation() {\n      return this._initialized ? this._initialRotation : null;\n    }\n\n    /**\n     * @private\n     */\n    _pushOrReplaceState(destination, forceReplace = false) {\n      const shouldReplace = forceReplace || !this._destination;\n      const newState = {\n        fingerprint: this._fingerprint,\n        uid: shouldReplace ? this._uid : this._uid + 1,\n        destination,\n      };\n\n      if (\n        typeof PDFJSDev !== \"undefined\" &&\n        PDFJSDev.test(\"CHROME\") &&\n        ///window.history.state?.chromecomState // lwf\n        (window.history.state && window.history.state.chromecomState)\n      ) {\n        // history.state.chromecomState is managed by chromecom.js.\n        newState.chromecomState = window.history.state.chromecomState;\n      }\n      this._updateInternalState(destination, newState.uid);\n\n      let newUrl;\n      ///if (this._updateUrl && destination?.hash) { // lwf\n      if (this._updateUrl && destination && destination.hash) {\n        const baseUrl = document.location.href.split(\"#\")[0];\n        // Prevent errors in Firefox.\n        if (!baseUrl.startsWith(\"file://\")) {\n          newUrl = `${baseUrl}#${destination.hash}`;\n        }\n      }\n      if (shouldReplace) {\n        window.history.replaceState(newState, \"\", newUrl);\n      } else {\n        window.history.pushState(newState, \"\", newUrl);\n      }\n\n      if (\n        typeof PDFJSDev !== \"undefined\" &&\n        PDFJSDev.test(\"CHROME\") &&\n        top === window\n      ) {\n        // eslint-disable-next-line no-undef\n        chrome.runtime.sendMessage(\"showPageAction\");\n      }\n    }\n\n    /**\n     * @private\n     */\n    _tryPushCurrentPosition(temporary = false) {\n      if (!this._position) {\n        return;\n      }\n      let position = this._position;\n      if (temporary) {\n        position = Object.assign(Object.create(null), this._position);\n        position.temporary = true;\n      }\n\n      if (!this._destination) {\n        this._pushOrReplaceState(position);\n        return;\n      }\n      if (this._destination.temporary) {\n        // Always replace a previous *temporary* position.\n        this._pushOrReplaceState(position, /* forceReplace = */ true);\n        return;\n      }\n      if (this._destination.hash === position.hash) {\n        return; // The current document position has not changed.\n      }\n      if (\n        !this._destination.page &&\n        (POSITION_UPDATED_THRESHOLD <= 0 ||\n          this._numPositionUpdates <= POSITION_UPDATED_THRESHOLD)\n      ) {\n        // `this._destination` was set through the user changing the hash of\n        // the document. Do not add `this._position` to the browser history,\n        // to avoid \"flooding\" it with lots of (nearly) identical entries,\n        // since we cannot ensure that the document position has changed.\n        return;\n      }\n\n      let forceReplace = false;\n      if (\n        this._destination.page >= position.first &&\n        this._destination.page <= position.page\n      ) {\n        // When the `page` of `this._destination` is still visible, do not\n        // update the browsing history when `this._destination` either:\n        //  - contains an internal destination, since in this case we\n        //    cannot ensure that the document position has actually changed.\n        //  - was set through the user changing the hash of the document.\n        if (this._destination.dest || !this._destination.first) {\n          return;\n        }\n        // To avoid \"flooding\" the browser history, replace the current entry.\n        forceReplace = true;\n      }\n      this._pushOrReplaceState(position, forceReplace);\n    }\n\n    /**\n     * @private\n     */\n    _isValidState(state, checkReload = false) {\n      if (!state) {\n        return false;\n      }\n      if (state.fingerprint !== this._fingerprint) {\n        if (checkReload) {\n          // Potentially accept the history entry, even if the fingerprints don't\n          // match, when the viewer was reloaded (see issue 6847).\n          if (\n            typeof state.fingerprint !== \"string\" ||\n            state.fingerprint.length !== this._fingerprint.length\n          ) {\n            return false;\n          }\n          const [perfEntry] = performance.getEntriesByType(\"navigation\");\n          ///if (perfEntry?.type !== \"reload\") { // lwf\n          if (perfEntry && perfEntry.type !== \"reload\") {\n            return false;\n          }\n        } else {\n          // This should only occur in viewers with support for opening more than\n          // one PDF document, e.g. the GENERIC viewer.\n          return false;\n        }\n      }\n      if (!Number.isInteger(state.uid) || state.uid < 0) {\n        return false;\n      }\n      if (state.destination === null || typeof state.destination !== \"object\") {\n        return false;\n      }\n      return true;\n    }\n\n    /**\n     * @private\n     */\n    _updateInternalState(destination, uid, removeTemporary = false) {\n      if (this._updateViewareaTimeout) {\n        // When updating `this._destination`, make sure that we always wait for\n        // the next 'updateviewarea' event before (potentially) attempting to\n        // push the current position to the browser history.\n        clearTimeout(this._updateViewareaTimeout);\n        this._updateViewareaTimeout = null;\n      }\n      ///if (removeTemporary && destination?.temporary) { // lwf\n      if (removeTemporary && destination && destination.temporary) {\n        // When the `destination` comes from the browser history,\n        // we no longer treat it as a *temporary* position.\n        delete destination.temporary;\n      }\n      this._destination = destination;\n      this._uid = uid;\n      this._maxUid = Math.max(this._maxUid, uid);\n      // This should always be reset when `this._destination` is updated.\n      this._numPositionUpdates = 0;\n    }\n\n    /**\n     * @private\n     */\n    _parseCurrentHash(checkNameddest = false) {\n      const hash = unescape(getCurrentHash()).substring(1);\n      const params = parseQueryString(hash);\n\n      const nameddest = params.nameddest || \"\";\n      let page = params.page | 0;\n\n      if (\n        !(\n          Number.isInteger(page) &&\n          page > 0 &&\n          page <= this.linkService.pagesCount\n        ) ||\n        (checkNameddest && nameddest.length > 0)\n      ) {\n        page = null;\n      }\n      return { hash, page, rotation: this.linkService.rotation };\n    }\n\n    /**\n     * @private\n     */\n    _updateViewarea({ location }) {\n      if (this._updateViewareaTimeout) {\n        clearTimeout(this._updateViewareaTimeout);\n        this._updateViewareaTimeout = null;\n      }\n\n      this._position = {\n        hash: this._isViewerInPresentationMode\n          ? `page=${location.pageNumber}`\n          : location.pdfOpenParams.substring(1),\n        page: this.linkService.page,\n        first: location.pageNumber,\n        rotation: location.rotation,\n      };\n\n      if (this._popStateInProgress) {\n        return;\n      }\n\n      if (\n        POSITION_UPDATED_THRESHOLD > 0 &&\n        this._isPagesLoaded &&\n        this._destination &&\n        !this._destination.page\n      ) {\n        // If the current destination was set through the user changing the hash\n        // of the document, we will usually not try to push the current position\n        // to the browser history; see `this._tryPushCurrentPosition()`.\n        //\n        // To prevent `this._tryPushCurrentPosition()` from effectively being\n        // reduced to a no-op in this case, we will assume that the position\n        // *did* in fact change if the 'updateviewarea' event was dispatched\n        // more than `POSITION_UPDATED_THRESHOLD` times.\n        this._numPositionUpdates++;\n      }\n\n      if (UPDATE_VIEWAREA_TIMEOUT > 0) {\n        // When closing the browser, a 'pagehide' event will be dispatched which\n        // *should* allow us to push the current position to the browser history.\n        // In practice, it seems that the event is arriving too late in order for\n        // the session history to be successfully updated.\n        // (For additional details, please refer to the discussion in\n        //  https://bugzilla.mozilla.org/show_bug.cgi?id=1153393.)\n        //\n        // To workaround this we attempt to *temporarily* add the current position\n        // to the browser history only when the viewer is *idle*,\n        // i.e. when scrolling and/or zooming does not occur.\n        //\n        // PLEASE NOTE: It's absolutely imperative that the browser history is\n        // *not* updated too often, since that would render the viewer more or\n        // less unusable. Hence the use of a timeout to delay the update until\n        // the viewer has been idle for `UPDATE_VIEWAREA_TIMEOUT` milliseconds.\n        this._updateViewareaTimeout = setTimeout(() => {\n          if (!this._popStateInProgress) {\n            this._tryPushCurrentPosition(/* temporary = */ true);\n          }\n          this._updateViewareaTimeout = null;\n        }, UPDATE_VIEWAREA_TIMEOUT);\n      }\n    }\n\n    /**\n     * @private\n     */\n    _popState({ state }) {\n      const newHash = getCurrentHash(),\n        hashChanged = this._currentHash !== newHash;\n      this._currentHash = newHash;\n\n      if (\n        (typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"CHROME\") &&\n          ///state?.chromecomState && // lwf\n          state && state.chromecomState &&\n          !this._isValidState(state)) ||\n        !state\n      ) {\n        // This case corresponds to the user changing the hash of the document.\n        this._uid++;\n\n        const { hash, page, rotation } = this._parseCurrentHash();\n        this._pushOrReplaceState(\n          { hash, page, rotation },\n          /* forceReplace = */ true\n        );\n        return;\n      }\n      if (!this._isValidState(state)) {\n        // This should only occur in viewers with support for opening more than\n        // one PDF document, e.g. the GENERIC viewer.\n        return;\n      }\n\n      // Prevent the browser history from updating until the new destination,\n      // as stored in the browser history, has been scrolled into view.\n      this._popStateInProgress = true;\n\n      if (hashChanged) {\n        // When the hash changed, implying that the 'popstate' event will be\n        // followed by a 'hashchange' event, then we do *not* want to update the\n        // browser history when handling the 'hashchange' event (in web/app.js)\n        // since that would *overwrite* the new destination navigated to below.\n        //\n        // To avoid accidentally disabling all future user-initiated hash changes,\n        // if there's e.g. another 'hashchange' listener that stops the event\n        // propagation, we make sure to always force-reset `this._blockHashChange`\n        // after `HASH_CHANGE_TIMEOUT` milliseconds have passed.\n        this._blockHashChange++;\n        waitOnEventOrTimeout({\n          target: window,\n          name: \"hashchange\",\n          delay: HASH_CHANGE_TIMEOUT,\n        }).then(() => {\n          this._blockHashChange--;\n        });\n      }\n\n      // Navigate to the new destination.\n      const destination = state.destination;\n      this._updateInternalState(\n        destination,\n        state.uid,\n        /* removeTemporary = */ true\n      );\n\n      if (isValidRotation(destination.rotation)) {\n        this.linkService.rotation = destination.rotation;\n      }\n      if (destination.dest) {\n        this.linkService.goToDestination(destination.dest);\n      } else if (destination.hash) {\n        this.linkService.setHash(destination.hash);\n      } else if (destination.page) {\n        // Fallback case; shouldn't be necessary, but better safe than sorry.\n        this.linkService.page = destination.page;\n      }\n\n      // Since `PDFLinkService.goToDestination` is asynchronous, we thus defer the\n      // resetting of `this._popStateInProgress` slightly.\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n\n    /**\n     * @private\n     */\n    _pageHide() {\n      // Attempt to push the `this._position` into the browser history when\n      // navigating away from the document. This is *only* done if the history\n      // is empty/temporary, since otherwise an existing browser history entry\n      // will end up being overwritten (given that new entries cannot be pushed\n      // into the browser history when the 'unload' event has already fired).\n      if (!this._destination || this._destination.temporary) {\n        this._tryPushCurrentPosition();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _bindEvents() {\n      if (this._boundEvents) {\n        return; // The event listeners were already added.\n      }\n      this._boundEvents = {\n        updateViewarea: this._updateViewarea.bind(this),\n        popState: this._popState.bind(this),\n        pageHide: this._pageHide.bind(this),\n      };\n\n      this.eventBus._on(\"updateviewarea\", this._boundEvents.updateViewarea);\n      window.addEventListener(\"popstate\", this._boundEvents.popState);\n      window.addEventListener(\"pagehide\", this._boundEvents.pageHide);\n    }\n\n    /**\n     * @private\n     */\n    _unbindEvents() {\n      if (!this._boundEvents) {\n        return; // The event listeners were already removed.\n      }\n      this.eventBus._off(\"updateviewarea\", this._boundEvents.updateViewarea);\n      window.removeEventListener(\"popstate\", this._boundEvents.popState);\n      window.removeEventListener(\"pagehide\", this._boundEvents.pageHide);\n\n      this._boundEvents = null;\n    }\n  }\n\n  function isDestHashesEqual(destHash, pushHash) {\n    if (typeof destHash !== \"string\" || typeof pushHash !== \"string\") {\n      return false;\n    }\n    if (destHash === pushHash) {\n      return true;\n    }\n    const { nameddest } = parseQueryString(destHash);\n    if (nameddest === pushHash) {\n      return true;\n    }\n    return false;\n  }\n\n  function isDestArraysEqual(firstDest, secondDest) {\n    function isEntryEqual(first, second) {\n      if (typeof first !== typeof second) {\n        return false;\n      }\n      if (Array.isArray(first) || Array.isArray(second)) {\n        return false;\n      }\n      if (first !== null && typeof first === \"object\" && second !== null) {\n        if (Object.keys(first).length !== Object.keys(second).length) {\n          return false;\n        }\n        for (const key in first) {\n          if (!isEntryEqual(first[key], second[key])) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return first === second || (Number.isNaN(first) && Number.isNaN(second));\n    }\n\n    if (!(Array.isArray(firstDest) && Array.isArray(secondDest))) {\n      return false;\n    }\n    if (firstDest.length !== secondDest.length) {\n      return false;\n    }\n    for (let i = 0, ii = firstDest.length; i < ii; i++) {\n      if (!isEntryEqual(firstDest[i], secondDest[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  return { isDestArraysEqual, isDestHashesEqual, PDFHistory };\n});\ndefine('skylark-pdfjs-viewer/pdf_layer_viewer',[\n  \"./base_tree_viewer\"\n],function(base_tree_viewer){\n  /* Copyright 2020 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { BaseTreeViewer } = base_tree_viewer;\n\n  /**\n   * @typedef {Object} PDFLayerViewerOptions\n   * @property {HTMLDivElement} container - The viewer element.\n   * @property {EventBus} eventBus - The application event bus.\n   * @property {IL10n} l10n - Localization service.\n   */\n\n  /**\n   * @typedef {Object} PDFLayerViewerRenderParameters\n   * @property {OptionalContentConfig|null} optionalContentConfig - An\n   *   {OptionalContentConfig} instance.\n   * @property {PDFDocument} pdfDocument - A {PDFDocument} instance.\n   */\n\n  class PDFLayerViewer extends BaseTreeViewer {\n    constructor(options) {\n      super(options);\n      this.l10n = options.l10n;\n\n      this.eventBus._on(\"resetlayers\", this._resetLayers.bind(this));\n      this.eventBus._on(\"togglelayerstree\", this._toggleAllTreeItems.bind(this));\n    }\n\n    reset() {\n      super.reset();\n      this._optionalContentConfig = null;\n    }\n\n    /**\n     * @private\n     */\n    _dispatchEvent(layersCount) {\n      this.eventBus.dispatch(\"layersloaded\", {\n        source: this,\n        layersCount,\n      });\n    }\n\n    /**\n     * @private\n     */\n    _bindLink(element, { groupId, input }) {\n      const setVisibility = () => {\n        this._optionalContentConfig.setVisibility(groupId, input.checked);\n\n        this.eventBus.dispatch(\"optionalcontentconfig\", {\n          source: this,\n          promise: Promise.resolve(this._optionalContentConfig),\n        });\n      };\n\n      element.onclick = evt => {\n        if (evt.target === input) {\n          setVisibility();\n          return true;\n        } else if (evt.target !== element) {\n          return true; // The target is the \"label\", which is handled above.\n        }\n        input.checked = !input.checked;\n        setVisibility();\n        return false;\n      };\n    }\n\n    /**\n     * @private\n     */\n    async _setNestedName(element, { name = null }) {\n      if (typeof name === \"string\") {\n        element.textContent = this._normalizeTextContent(name);\n        return;\n      }\n      element.textContent = await this.l10n.get(\n        \"additional_layers\",\n        null,\n        \"Additional Layers\"\n      );\n      element.style.fontStyle = \"italic\";\n    }\n\n    /**\n     * @private\n     */\n    _addToggleButton(div, { name = null }) {\n      super._addToggleButton(div, /* hidden = */ name === null);\n    }\n\n    /**\n     * @private\n     */\n    _toggleAllTreeItems() {\n      if (!this._optionalContentConfig) {\n        return;\n      }\n      super._toggleAllTreeItems();\n    }\n\n    /**\n     * @param {PDFLayerViewerRenderParameters} params\n     */\n    render({ optionalContentConfig, pdfDocument }) {\n      if (this._optionalContentConfig) {\n        this.reset();\n      }\n      this._optionalContentConfig = optionalContentConfig || null;\n      this._pdfDocument = pdfDocument || null;\n\n      const groups = optionalContentConfig && optionalContentConfig.getOrder();\n      if (!groups) {\n        this._dispatchEvent(/* layersCount = */ 0);\n        return;\n      }\n\n      const fragment = document.createDocumentFragment(),\n        queue = [{ parent: fragment, groups }];\n      let layersCount = 0,\n        hasAnyNesting = false;\n      while (queue.length > 0) {\n        const levelData = queue.shift();\n        for (const groupId of levelData.groups) {\n          const div = document.createElement(\"div\");\n          div.className = \"treeItem\";\n\n          const element = document.createElement(\"a\");\n          div.appendChild(element);\n\n          if (typeof groupId === \"object\") {\n            hasAnyNesting = true;\n            this._addToggleButton(div, groupId);\n            this._setNestedName(element, groupId);\n\n            const itemsDiv = document.createElement(\"div\");\n            itemsDiv.className = \"treeItems\";\n            div.appendChild(itemsDiv);\n\n            queue.push({ parent: itemsDiv, groups: groupId.order });\n          } else {\n            const group = optionalContentConfig.getGroup(groupId);\n\n            const input = document.createElement(\"input\");\n            this._bindLink(element, { groupId, input });\n            input.type = \"checkbox\";\n            input.id = groupId;\n            input.checked = group.visible;\n\n            const label = document.createElement(\"label\");\n            label.setAttribute(\"for\", groupId);\n            label.textContent = this._normalizeTextContent(group.name);\n\n            element.appendChild(input);\n            element.appendChild(label);\n\n            layersCount++;\n          }\n\n          levelData.parent.appendChild(div);\n        }\n      }\n\n      this._finishRendering(fragment, layersCount, hasAnyNesting);\n    }\n\n    /**\n     * @private\n     */\n    async _resetLayers() {\n      if (!this._optionalContentConfig) {\n        return;\n      }\n      // Fetch the default optional content configuration...\n      const optionalContentConfig = await this._pdfDocument.getOptionalContentConfig();\n\n      this.eventBus.dispatch(\"optionalcontentconfig\", {\n        source: this,\n        promise: Promise.resolve(optionalContentConfig),\n      });\n\n      // ... and reset the sidebarView to the default state.\n      this.render({\n        optionalContentConfig,\n        pdfDocument: this._pdfDocument,\n      });\n    }\n  }\n\n  return { PDFLayerViewer };\n\n});\ndefine('skylark-pdfjs-viewer/pdf_link_service',[\n  \"./ui_utils\",\n],function(ui_utils){\n  /* Copyright 2015 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { parseQueryString } = ui_utils;\n\n  /**\n   * @typedef {Object} PDFLinkServiceOptions\n   * @property {EventBus} eventBus - The application event bus.\n   * @property {number} [externalLinkTarget] - Specifies the `target` attribute\n   *   for external links. Must use one of the values from {LinkTarget}.\n   *   Defaults to using no target.\n   * @property {string} [externalLinkRel] - Specifies the `rel` attribute for\n   *   external links. Defaults to stripping the referrer.\n   * @property {boolean} [ignoreDestinationZoom] - Ignores the zoom argument,\n   *   thus preserving the current zoom level in the viewer, when navigating\n   *   to internal destinations. The default value is `false`.\n   */\n\n  /**\n   * Performs navigation functions inside PDF, such as opening specified page,\n   * or destination.\n   * @implements {IPDFLinkService}\n   */\n  class PDFLinkService {\n    /**\n     * @param {PDFLinkServiceOptions} options\n     */\n    constructor({\n      eventBus,\n      externalLinkTarget = null,\n      externalLinkRel = null,\n      externalLinkEnabled = true,\n      ignoreDestinationZoom = false,\n    } = {}) {\n      this.eventBus = eventBus;\n      this.externalLinkTarget = externalLinkTarget;\n      this.externalLinkRel = externalLinkRel;\n      this.externalLinkEnabled = externalLinkEnabled;\n      this._ignoreDestinationZoom = ignoreDestinationZoom;\n\n      this.baseUrl = null;\n      this.pdfDocument = null;\n      this.pdfViewer = null;\n      this.pdfHistory = null;\n\n      this._pagesRefCache = null;\n    }\n\n    setDocument(pdfDocument, baseUrl = null) {\n      this.baseUrl = baseUrl;\n      this.pdfDocument = pdfDocument;\n      this._pagesRefCache = Object.create(null);\n    }\n\n    setViewer(pdfViewer) {\n      this.pdfViewer = pdfViewer;\n    }\n\n    setHistory(pdfHistory) {\n      this.pdfHistory = pdfHistory;\n    }\n\n    /**\n     * @type {number}\n     */\n    get pagesCount() {\n      return this.pdfDocument ? this.pdfDocument.numPages : 0;\n    }\n\n    /**\n     * @type {number}\n     */\n    get page() {\n      return this.pdfViewer.currentPageNumber;\n    }\n\n    /**\n     * @param {number} value\n     */\n    set page(value) {\n      this.pdfViewer.currentPageNumber = value;\n    }\n\n    /**\n     * @type {number}\n     */\n    get rotation() {\n      return this.pdfViewer.pagesRotation;\n    }\n\n    /**\n     * @param {number} value\n     */\n    set rotation(value) {\n      this.pdfViewer.pagesRotation = value;\n    }\n\n    /**\n     * @deprecated\n     */\n    navigateTo(dest) {\n      console.error(\n        \"Deprecated method: `navigateTo`, use `goToDestination` instead.\"\n      );\n      this.goToDestination(dest);\n    }\n\n    /**\n     * @private\n     */\n    _goToDestinationHelper(rawDest, namedDest = null, explicitDest) {\n      // Dest array looks like that: <page-ref> </XYZ|/FitXXX> <args..>\n      const destRef = explicitDest[0];\n      let pageNumber;\n\n      if (destRef instanceof Object) {\n        pageNumber = this._cachedPageNumber(destRef);\n\n        if (pageNumber === null) {\n          // Fetch the page reference if it's not yet available. This could\n          // only occur during loading, before all pages have been resolved.\n          this.pdfDocument\n            .getPageIndex(destRef)\n            .then(pageIndex => {\n              this.cachePageRef(pageIndex + 1, destRef);\n              this._goToDestinationHelper(rawDest, namedDest, explicitDest);\n            })\n            .catch(() => {\n              console.error(\n                `PDFLinkService._goToDestinationHelper: \"${destRef}\" is not ` +\n                  `a valid page reference, for dest=\"${rawDest}\".`\n              );\n            });\n          return;\n        }\n      } else if (Number.isInteger(destRef)) {\n        pageNumber = destRef + 1;\n      } else {\n        console.error(\n          `PDFLinkService._goToDestinationHelper: \"${destRef}\" is not ` +\n            `a valid destination reference, for dest=\"${rawDest}\".`\n        );\n        return;\n      }\n      if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n        console.error(\n          `PDFLinkService._goToDestinationHelper: \"${pageNumber}\" is not ` +\n            `a valid page number, for dest=\"${rawDest}\".`\n        );\n        return;\n      }\n\n      if (this.pdfHistory) {\n        // Update the browser history before scrolling the new destination into\n        // view, to be able to accurately capture the current document position.\n        this.pdfHistory.pushCurrentPosition();\n        this.pdfHistory.push({ namedDest, explicitDest, pageNumber });\n      }\n\n      this.pdfViewer.scrollPageIntoView({\n        pageNumber,\n        destArray: explicitDest,\n        ignoreDestinationZoom: this._ignoreDestinationZoom,\n      });\n    }\n\n    /**\n     * This method will, when available, also update the browser history.\n     *\n     * @param {string|Array} dest - The named, or explicit, PDF destination.\n     */\n    async goToDestination(dest) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      let namedDest, explicitDest;\n      if (typeof dest === \"string\") {\n        namedDest = dest;\n        explicitDest = await this.pdfDocument.getDestination(dest);\n      } else {\n        namedDest = null;\n        explicitDest = await dest;\n      }\n      if (!Array.isArray(explicitDest)) {\n        console.error(\n          `PDFLinkService.goToDestination: \"${explicitDest}\" is not ` +\n            `a valid destination array, for dest=\"${dest}\".`\n        );\n        return;\n      }\n      this._goToDestinationHelper(dest, namedDest, explicitDest);\n    }\n\n    /**\n     * This method will, when available, also update the browser history.\n     *\n     * @param {number|string} val - The page number, or page label.\n     */\n    goToPage(val) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      const pageNumber =\n        (typeof val === \"string\" && this.pdfViewer.pageLabelToPageNumber(val)) ||\n        val | 0;\n      if (\n        !(\n          Number.isInteger(pageNumber) &&\n          pageNumber > 0 &&\n          pageNumber <= this.pagesCount\n        )\n      ) {\n        console.error(`PDFLinkService.goToPage: \"${val}\" is not a valid page.`);\n        return;\n      }\n\n      if (this.pdfHistory) {\n        // Update the browser history before scrolling the new page into view,\n        // to be able to accurately capture the current document position.\n        this.pdfHistory.pushCurrentPosition();\n        this.pdfHistory.pushPage(pageNumber);\n      }\n\n      this.pdfViewer.scrollPageIntoView({ pageNumber });\n    }\n\n    /**\n     * @param {string|Array} dest - The PDF destination object.\n     * @returns {string} The hyperlink to the PDF object.\n     */\n    getDestinationHash(dest) {\n      if (typeof dest === \"string\") {\n        if (dest.length > 0) {\n          return this.getAnchorUrl(\"#\" + escape(dest));\n        }\n      } else if (Array.isArray(dest)) {\n        const str = JSON.stringify(dest);\n        if (str.length > 0) {\n          return this.getAnchorUrl(\"#\" + escape(str));\n        }\n      }\n      return this.getAnchorUrl(\"\");\n    }\n\n    /**\n     * Prefix the full url on anchor links to make sure that links are resolved\n     * relative to the current URL instead of the one defined in <base href>.\n     * @param {string} anchor - The anchor hash, including the #.\n     * @returns {string} The hyperlink to the PDF object.\n     */\n    getAnchorUrl(anchor) {\n      return (this.baseUrl || \"\") + anchor;\n    }\n\n    /**\n     * @param {string} hash\n     */\n    setHash(hash) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      let pageNumber, dest;\n      if (hash.includes(\"=\")) {\n        const params = parseQueryString(hash);\n        if (\"search\" in params) {\n          this.eventBus.dispatch(\"findfromurlhash\", {\n            source: this,\n            query: params.search.replace(/\"/g, \"\"),\n            phraseSearch: params.phrase === \"true\",\n          });\n        }\n        // borrowing syntax from \"Parameters for Opening PDF Files\"\n        if (\"page\" in params) {\n          pageNumber = params.page | 0 || 1;\n        }\n        if (\"zoom\" in params) {\n          // Build the destination array.\n          const zoomArgs = params.zoom.split(\",\"); // scale,left,top\n          const zoomArg = zoomArgs[0];\n          const zoomArgNumber = parseFloat(zoomArg);\n\n          if (!zoomArg.includes(\"Fit\")) {\n            // If the zoomArg is a number, it has to get divided by 100. If it's\n            // a string, it should stay as it is.\n            dest = [\n              null,\n              { name: \"XYZ\" },\n              zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n              zoomArgs.length > 2 ? zoomArgs[2] | 0 : null,\n              zoomArgNumber ? zoomArgNumber / 100 : zoomArg,\n            ];\n          } else {\n            if (zoomArg === \"Fit\" || zoomArg === \"FitB\") {\n              dest = [null, { name: zoomArg }];\n            } else if (\n              zoomArg === \"FitH\" ||\n              zoomArg === \"FitBH\" ||\n              zoomArg === \"FitV\" ||\n              zoomArg === \"FitBV\"\n            ) {\n              dest = [\n                null,\n                { name: zoomArg },\n                zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n              ];\n            } else if (zoomArg === \"FitR\") {\n              if (zoomArgs.length !== 5) {\n                console.error(\n                  'PDFLinkService.setHash: Not enough parameters for \"FitR\".'\n                );\n              } else {\n                dest = [\n                  null,\n                  { name: zoomArg },\n                  zoomArgs[1] | 0,\n                  zoomArgs[2] | 0,\n                  zoomArgs[3] | 0,\n                  zoomArgs[4] | 0,\n                ];\n              }\n            } else {\n              console.error(\n                `PDFLinkService.setHash: \"${zoomArg}\" is not ` +\n                  \"a valid zoom value.\"\n              );\n            }\n          }\n        }\n        if (dest) {\n          this.pdfViewer.scrollPageIntoView({\n            pageNumber: pageNumber || this.page,\n            destArray: dest,\n            allowNegativeOffset: true,\n          });\n        } else if (pageNumber) {\n          this.page = pageNumber; // simple page\n        }\n        if (\"pagemode\" in params) {\n          this.eventBus.dispatch(\"pagemode\", {\n            source: this,\n            mode: params.pagemode,\n          });\n        }\n        // Ensure that this parameter is *always* handled last, in order to\n        // guarantee that it won't be overridden (e.g. by the \"page\" parameter).\n        if (\"nameddest\" in params) {\n          this.goToDestination(params.nameddest);\n        }\n      } else {\n        // Named (or explicit) destination.\n        dest = unescape(hash);\n        try {\n          dest = JSON.parse(dest);\n\n          if (!Array.isArray(dest)) {\n            // Avoid incorrectly rejecting a valid named destination, such as\n            // e.g. \"4.3\" or \"true\", because `JSON.parse` converted its type.\n            dest = dest.toString();\n          }\n        } catch (ex) {}\n\n        if (typeof dest === \"string\" || isValidExplicitDestination(dest)) {\n          this.goToDestination(dest);\n          return;\n        }\n        console.error(\n          `PDFLinkService.setHash: \"${unescape(hash)}\" is not ` +\n            \"a valid destination.\"\n        );\n      }\n    }\n\n    /**\n     * @param {string} action\n     */\n    executeNamedAction(action) {\n      // See PDF reference, table 8.45 - Named action\n      switch (action) {\n        case \"GoBack\":\n          if (this.pdfHistory) {\n            this.pdfHistory.back();\n          }\n          break;\n\n        case \"GoForward\":\n          if (this.pdfHistory) {\n            this.pdfHistory.forward();\n          }\n          break;\n\n        case \"NextPage\":\n          this.pdfViewer.nextPage();\n          break;\n\n        case \"PrevPage\":\n          this.pdfViewer.previousPage();\n          break;\n\n        case \"LastPage\":\n          this.page = this.pagesCount;\n          break;\n\n        case \"FirstPage\":\n          this.page = 1;\n          break;\n\n        default:\n          break; // No action according to spec\n      }\n\n      this.eventBus.dispatch(\"namedaction\", {\n        source: this,\n        action,\n      });\n    }\n\n    /**\n     * @param {number} pageNum - page number.\n     * @param {Object} pageRef - reference to the page.\n     */\n    cachePageRef(pageNum, pageRef) {\n      if (!pageRef) {\n        return;\n      }\n      const refStr =\n        pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n      this._pagesRefCache[refStr] = pageNum;\n    }\n\n    /**\n     * @private\n     */\n    _cachedPageNumber(pageRef) {\n      const refStr =\n        pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n      return (this._pagesRefCache && this._pagesRefCache[refStr]) || null;\n    }\n\n    /**\n     * @param {number} pageNumber\n     */\n    isPageVisible(pageNumber) {\n      return this.pdfViewer.isPageVisible(pageNumber);\n    }\n\n    /**\n     * @param {number} pageNumber\n     */\n    isPageCached(pageNumber) {\n      return this.pdfViewer.isPageCached(pageNumber);\n    }\n  }\n\n  function isValidExplicitDestination(dest) {\n    if (!Array.isArray(dest)) {\n      return false;\n    }\n    const destLength = dest.length;\n    if (destLength < 2) {\n      return false;\n    }\n    const page = dest[0];\n    if (\n      !(\n        typeof page === \"object\" &&\n        Number.isInteger(page.num) &&\n        Number.isInteger(page.gen)\n      ) &&\n      !(Number.isInteger(page) && page >= 0)\n    ) {\n      return false;\n    }\n    const zoom = dest[1];\n    if (!(typeof zoom === \"object\" && typeof zoom.name === \"string\")) {\n      return false;\n    }\n    let allowNull = true;\n    switch (zoom.name) {\n      case \"XYZ\":\n        if (destLength !== 5) {\n          return false;\n        }\n        break;\n      case \"Fit\":\n      case \"FitB\":\n        return destLength === 2;\n      case \"FitH\":\n      case \"FitBH\":\n      case \"FitV\":\n      case \"FitBV\":\n        if (destLength !== 3) {\n          return false;\n        }\n        break;\n      case \"FitR\":\n        if (destLength !== 6) {\n          return false;\n        }\n        allowNull = false;\n        break;\n      default:\n        return false;\n    }\n    for (let i = 2; i < destLength; i++) {\n      const param = dest[i];\n      if (!(typeof param === \"number\" || (allowNull && param === null))) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @implements {IPDFLinkService}\n   */\n  class SimpleLinkService {\n    constructor() {\n      this.externalLinkTarget = null;\n      this.externalLinkRel = null;\n      this.externalLinkEnabled = true;\n      this._ignoreDestinationZoom = false;\n    }\n\n    /**\n     * @type {number}\n     */\n    get pagesCount() {\n      return 0;\n    }\n\n    /**\n     * @type {number}\n     */\n    get page() {\n      return 0;\n    }\n\n    /**\n     * @param {number} value\n     */\n    set page(value) {}\n\n    /**\n     * @type {number}\n     */\n    get rotation() {\n      return 0;\n    }\n\n    /**\n     * @param {number} value\n     */\n    set rotation(value) {}\n\n    /**\n     * @param {string|Array} dest - The named, or explicit, PDF destination.\n     */\n    async goToDestination(dest) {}\n\n    /**\n     * @param {number|string} val - The page number, or page label.\n     */\n    goToPage(val) {}\n\n    /**\n     * @param dest - The PDF destination object.\n     * @returns {string} The hyperlink to the PDF object.\n     */\n    getDestinationHash(dest) {\n      return \"#\";\n    }\n\n    /**\n     * @param hash - The PDF parameters/hash.\n     * @returns {string} The hyperlink to the PDF object.\n     */\n    getAnchorUrl(hash) {\n      return \"#\";\n    }\n\n    /**\n     * @param {string} hash\n     */\n    setHash(hash) {}\n\n    /**\n     * @param {string} action\n     */\n    executeNamedAction(action) {}\n\n    /**\n     * @param {number} pageNum - page number.\n     * @param {Object} pageRef - reference to the page.\n     */\n    cachePageRef(pageNum, pageRef) {}\n\n    /**\n     * @param {number} pageNumber\n     */\n    isPageVisible(pageNumber) {\n      return true;\n    }\n\n    /**\n     * @param {number} pageNumber\n     */\n    isPageCached(pageNumber) {\n      return true;\n    }\n  }\n\n  return { PDFLinkService, SimpleLinkService };\n});\ndefine('skylark-pdfjs-viewer/pdf_outline_viewer',[\n  \"skylark-pdfjs-display\",\n  \"./ui_utils\",\n  \"./base_tree_viewer\"\n],function(pdfjsLib,ui_utils,base_tree_viewer){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const {\n    addLinkAttributes,\n    createPromiseCapability,\n    LinkTarget,\n  } = pdfjsLib;\n\n  const { BaseTreeViewer } = base_tree_viewer;\n  const { SidebarView } = ui_utils;\n\n  /**\n   * @typedef {Object} PDFOutlineViewerOptions\n   * @property {HTMLDivElement} container - The viewer element.\n   * @property {IPDFLinkService} linkService - The navigation/linking service.\n   * @property {EventBus} eventBus - The application event bus.\n   */\n\n  /**\n   * @typedef {Object} PDFOutlineViewerRenderParameters\n   * @property {Array|null} outline - An array of outline objects.\n   * @property {PDFDocument} pdfDocument - A {PDFDocument} instance.\n   */\n\n  class PDFOutlineViewer extends BaseTreeViewer {\n    /**\n     * @param {PDFOutlineViewerOptions} options\n     */\n    constructor(options) {\n      super(options);\n      this.linkService = options.linkService;\n\n      this.eventBus._on(\"toggleoutlinetree\", this._toggleAllTreeItems.bind(this));\n      this.eventBus._on(\n        \"currentoutlineitem\",\n        this._currentOutlineItem.bind(this)\n      );\n\n      this.eventBus._on(\"pagechanging\", evt => {\n        this._currentPageNumber = evt.pageNumber;\n      });\n      this.eventBus._on(\"pagesloaded\", evt => {\n        this._isPagesLoaded = !!evt.pagesCount;\n      });\n      this.eventBus._on(\"sidebarviewchanged\", evt => {\n        this._sidebarView = evt.view;\n      });\n    }\n\n    reset() {\n      super.reset();\n      this._outline = null;\n\n      this._pageNumberToDestHashCapability = null;\n      this._currentPageNumber = 1;\n      this._isPagesLoaded = false;\n    }\n\n    /**\n     * @private\n     */\n    _dispatchEvent(outlineCount) {\n      this.eventBus.dispatch(\"outlineloaded\", {\n        source: this,\n        outlineCount,\n        enableCurrentOutlineItemButton:\n          ///outlineCount > 0 && !this._pdfDocument?.loadingParams.disableAutoFetch, // lwf\n          outlineCount > 0 && !(this._pdfDocument && this._pdfDocument.loadingParams.disableAutoFetch),\n      });\n    }\n\n    /**\n     * @private\n     */\n    _bindLink(element, { url, newWindow, dest }) {\n      const { linkService } = this;\n\n      if (url) {\n        addLinkAttributes(element, {\n          url,\n          target: newWindow ? LinkTarget.BLANK : linkService.externalLinkTarget,\n          rel: linkService.externalLinkRel,\n          enabled: linkService.externalLinkEnabled,\n        });\n        return;\n      }\n\n      element.href = linkService.getDestinationHash(dest);\n      element.onclick = evt => {\n        this._updateCurrentTreeItem(evt.target.parentNode);\n\n        if (dest) {\n          linkService.goToDestination(dest);\n        }\n        return false;\n      };\n    }\n\n    /**\n     * @private\n     */\n    _setStyles(element, { bold, italic }) {\n      if (bold) {\n        element.style.fontWeight = \"bold\";\n      }\n      if (italic) {\n        element.style.fontStyle = \"italic\";\n      }\n    }\n\n    /**\n     * @private\n     */\n    _addToggleButton(div, { count, items }) {\n      let hidden = false;\n      if (count < 0) {\n        let totalCount = items.length;\n        if (totalCount > 0) {\n          const queue = [...items];\n          while (queue.length > 0) {\n            const { count: nestedCount, items: nestedItems } = queue.shift();\n            if (nestedCount > 0 && nestedItems.length > 0) {\n              totalCount += nestedItems.length;\n              queue.push(...nestedItems);\n            }\n          }\n        }\n        if (Math.abs(count) === totalCount) {\n          hidden = true;\n        }\n      }\n      super._addToggleButton(div, hidden);\n    }\n\n    /**\n     * @private\n     */\n    _toggleAllTreeItems() {\n      if (!this._outline) {\n        return;\n      }\n      super._toggleAllTreeItems();\n    }\n\n    /**\n     * @param {PDFOutlineViewerRenderParameters} params\n     */\n    render({ outline, pdfDocument }) {\n      if (this._outline) {\n        this.reset();\n      }\n      this._outline = outline || null;\n      this._pdfDocument = pdfDocument || null;\n\n      if (!outline) {\n        this._dispatchEvent(/* outlineCount = */ 0);\n        return;\n      }\n\n      const fragment = document.createDocumentFragment();\n      const queue = [{ parent: fragment, items: outline }];\n      let outlineCount = 0,\n        hasAnyNesting = false;\n      while (queue.length > 0) {\n        const levelData = queue.shift();\n        for (const item of levelData.items) {\n          const div = document.createElement(\"div\");\n          div.className = \"treeItem\";\n\n          const element = document.createElement(\"a\");\n          this._bindLink(element, item);\n          this._setStyles(element, item);\n          element.textContent = this._normalizeTextContent(item.title);\n\n          div.appendChild(element);\n\n          if (item.items.length > 0) {\n            hasAnyNesting = true;\n            this._addToggleButton(div, item);\n\n            const itemsDiv = document.createElement(\"div\");\n            itemsDiv.className = \"treeItems\";\n            div.appendChild(itemsDiv);\n\n            queue.push({ parent: itemsDiv, items: item.items });\n          }\n\n          levelData.parent.appendChild(div);\n          outlineCount++;\n        }\n      }\n\n      this._finishRendering(fragment, outlineCount, hasAnyNesting);\n    }\n\n    /**\n     * Find/highlight the current outline item, corresponding to the active page.\n     * @private\n     */\n    async _currentOutlineItem() {\n      if (!this._isPagesLoaded) {\n        throw new Error(\"_currentOutlineItem: All pages have not been loaded.\");\n      }\n      if (!this._outline || !this._pdfDocument) {\n        return;\n      }\n\n      const pageNumberToDestHash = await this._getPageNumberToDestHash(\n        this._pdfDocument\n      );\n      if (!pageNumberToDestHash) {\n        return;\n      }\n      this._updateCurrentTreeItem(/* treeItem = */ null);\n\n      if (this._sidebarView !== SidebarView.OUTLINE) {\n        return; // The outline view is no longer visible, hence do nothing.\n      }\n      // When there is no destination on the current page, always check the\n      // previous ones in (reverse) order.\n      for (let i = this._currentPageNumber; i > 0; i--) {\n        const destHash = pageNumberToDestHash.get(i);\n        if (!destHash) {\n          continue;\n        }\n        const linkElement = this.container.querySelector(`a[href=\"${destHash}\"]`);\n        if (!linkElement) {\n          continue;\n        }\n        this._scrollToCurrentTreeItem(linkElement.parentNode);\n        break;\n      }\n    }\n\n    /**\n     * To (significantly) simplify the overall implementation, we will only\n     * consider *one* destination per page when finding/highlighting the current\n     * outline item (similar to e.g. Adobe Reader); more specifically, we choose\n     * the *first* outline item at the *lowest* level of the outline tree.\n     * @private\n     */\n    async _getPageNumberToDestHash(pdfDocument) {\n      if (this._pageNumberToDestHashCapability) {\n        return this._pageNumberToDestHashCapability.promise;\n      }\n      this._pageNumberToDestHashCapability = createPromiseCapability();\n\n      const pageNumberToDestHash = new Map(),\n        pageNumberNesting = new Map();\n      const queue = [{ nesting: 0, items: this._outline }];\n      while (queue.length > 0) {\n        const levelData = queue.shift(),\n          currentNesting = levelData.nesting;\n        for (const { dest, items } of levelData.items) {\n          let explicitDest, pageNumber;\n          if (typeof dest === \"string\") {\n            explicitDest = await pdfDocument.getDestination(dest);\n\n            if (pdfDocument !== this._pdfDocument) {\n              return null; // The document was closed while the data resolved.\n            }\n          } else {\n            explicitDest = dest;\n          }\n          if (Array.isArray(explicitDest)) {\n            const [destRef] = explicitDest;\n\n            if (typeof destRef === \"object\") {\n              pageNumber = this.linkService._cachedPageNumber(destRef);\n\n              if (!pageNumber) {\n                try {\n                  pageNumber = (await pdfDocument.getPageIndex(destRef)) + 1;\n\n                  if (pdfDocument !== this._pdfDocument) {\n                    return null; // The document was closed while the data resolved.\n                  }\n                  this.linkService.cachePageRef(pageNumber, destRef);\n                } catch (ex) {\n                  // Invalid page reference, ignore it and continue parsing.\n                }\n              }\n            } else if (Number.isInteger(destRef)) {\n              pageNumber = destRef + 1;\n            }\n\n            if (\n              Number.isInteger(pageNumber) &&\n              (!pageNumberToDestHash.has(pageNumber) ||\n                currentNesting > pageNumberNesting.get(pageNumber))\n            ) {\n              const destHash = this.linkService.getDestinationHash(dest);\n              pageNumberToDestHash.set(pageNumber, destHash);\n              pageNumberNesting.set(pageNumber, currentNesting);\n            }\n          }\n\n          if (items.length > 0) {\n            queue.push({ nesting: currentNesting + 1, items });\n          }\n        }\n      }\n\n      this._pageNumberToDestHashCapability.resolve(\n        pageNumberToDestHash.size > 0 ? pageNumberToDestHash : null\n      );\n      return this._pageNumberToDestHashCapability.promise;\n    }\n  }\n\n  return { PDFOutlineViewer };\n});\ndefine('skylark-pdfjs-viewer/pdf_presentation_mode',[\n  \"./pdfjs_dev\",\n  \"./ui_utils\",\n],function(\n  PDFJSDev,\n  ui_utils\n){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { normalizeWheelEventDelta, PresentationModeState } = ui_utils;\n\n  const DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS = 1500; // in ms\n  const DELAY_BEFORE_HIDING_CONTROLS = 3000; // in ms\n  const ACTIVE_SELECTOR = \"pdfPresentationMode\";\n  const CONTROLS_SELECTOR = \"pdfPresentationModeControls\";\n  const MOUSE_SCROLL_COOLDOWN_TIME = 50; // in ms\n  const PAGE_SWITCH_THRESHOLD = 0.1;\n\n  // Number of CSS pixels for a movement to count as a swipe.\n  const SWIPE_MIN_DISTANCE_THRESHOLD = 50;\n\n  // Swipe angle deviation from the x or y axis before it is not\n  // considered a swipe in that direction any more.\n  const SWIPE_ANGLE_THRESHOLD = Math.PI / 6;\n\n  /**\n   * @typedef {Object} PDFPresentationModeOptions\n   * @property {HTMLDivElement} container - The container for the viewer element.\n   * @property {PDFViewer} pdfViewer - The document viewer.\n   * @property {EventBus} eventBus - The application event bus.\n   * @property {Array} [contextMenuItems] - The menu items that are added to the\n   *   context menu in Presentation Mode.\n   */\n\n  class PDFPresentationMode {\n    /**\n     * @param {PDFPresentationModeOptions} options\n     */\n    constructor({ container, pdfViewer, eventBus, contextMenuItems = null }) {\n      this.container = container;\n      this.pdfViewer = pdfViewer;\n      this.eventBus = eventBus;\n\n      this.active = false;\n      this.args = null;\n      this.contextMenuOpen = false;\n      this.mouseScrollTimeStamp = 0;\n      this.mouseScrollDelta = 0;\n      this.touchSwipeState = null;\n\n      if (contextMenuItems) {\n        contextMenuItems.contextFirstPage.addEventListener(\"click\", () => {\n          this.contextMenuOpen = false;\n          this.eventBus.dispatch(\"firstpage\", { source: this });\n        });\n        contextMenuItems.contextLastPage.addEventListener(\"click\", () => {\n          this.contextMenuOpen = false;\n          this.eventBus.dispatch(\"lastpage\", { source: this });\n        });\n        contextMenuItems.contextPageRotateCw.addEventListener(\"click\", () => {\n          this.contextMenuOpen = false;\n          this.eventBus.dispatch(\"rotatecw\", { source: this });\n        });\n        contextMenuItems.contextPageRotateCcw.addEventListener(\"click\", () => {\n          this.contextMenuOpen = false;\n          this.eventBus.dispatch(\"rotateccw\", { source: this });\n        });\n      }\n    }\n\n    /**\n     * Request the browser to enter fullscreen mode.\n     * @returns {boolean} Indicating if the request was successful.\n     */\n    request() {\n      if (this.switchInProgress || this.active || !this.pdfViewer.pagesCount) {\n        return false;\n      }\n      this._addFullscreenChangeListeners();\n      this._setSwitchInProgress();\n      this._notifyStateChange();\n\n      if (this.container.requestFullscreen) {\n        this.container.requestFullscreen();\n      } else if (this.container.mozRequestFullScreen) {\n        this.container.mozRequestFullScreen();\n      } else if (this.container.webkitRequestFullscreen) {\n        this.container.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n      } else {\n        return false;\n      }\n\n      this.args = {\n        page: this.pdfViewer.currentPageNumber,\n        previousScale: this.pdfViewer.currentScaleValue,\n      };\n\n      return true;\n    }\n\n    /**\n     * @private\n     */\n    _mouseWheel(evt) {\n      if (!this.active) {\n        return;\n      }\n\n      evt.preventDefault();\n\n      const delta = normalizeWheelEventDelta(evt);\n      const currentTime = new Date().getTime();\n      const storedTime = this.mouseScrollTimeStamp;\n\n      // If we've already switched page, avoid accidentally switching again.\n      if (\n        currentTime > storedTime &&\n        currentTime - storedTime < MOUSE_SCROLL_COOLDOWN_TIME\n      ) {\n        return;\n      }\n      // If the scroll direction changed, reset the accumulated scroll delta.\n      if (\n        (this.mouseScrollDelta > 0 && delta < 0) ||\n        (this.mouseScrollDelta < 0 && delta > 0)\n      ) {\n        this._resetMouseScrollState();\n      }\n      this.mouseScrollDelta += delta;\n\n      if (Math.abs(this.mouseScrollDelta) >= PAGE_SWITCH_THRESHOLD) {\n        const totalDelta = this.mouseScrollDelta;\n        this._resetMouseScrollState();\n        const success =\n          totalDelta > 0\n            ? this.pdfViewer.previousPage()\n            : this.pdfViewer.nextPage();\n        if (success) {\n          this.mouseScrollTimeStamp = currentTime;\n        }\n      }\n    }\n\n    get isFullscreen() {\n      return !!(\n        document.fullscreenElement ||\n        document.mozFullScreen ||\n        document.webkitIsFullScreen\n      );\n    }\n\n    /**\n     * @private\n     */\n    _notifyStateChange() {\n      let state = PresentationModeState.NORMAL;\n      if (this.switchInProgress) {\n        state = PresentationModeState.CHANGING;\n      } else if (this.active) {\n        state = PresentationModeState.FULLSCREEN;\n      }\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n        this.eventBus.dispatch(\"presentationmodechanged\", {\n          source: this,\n          state,\n        });\n      } else {\n        this.eventBus.dispatch(\"presentationmodechanged\", {\n          source: this,\n          state,\n          get active() {\n            throw new Error(\n              \"Deprecated parameter: `active`, please use `state` instead.\"\n            );\n          },\n          get switchInProgress() {\n            throw new Error(\n              \"Deprecated parameter: `switchInProgress`, please use `state` instead.\"\n            );\n          },\n        });\n      }\n    }\n\n    /**\n     * Used to initialize a timeout when requesting Presentation Mode,\n     * i.e. when the browser is requested to enter fullscreen mode.\n     * This timeout is used to prevent the current page from being scrolled\n     * partially, or completely, out of view when entering Presentation Mode.\n     * NOTE: This issue seems limited to certain zoom levels (e.g. page-width).\n     *\n     * @private\n     */\n    _setSwitchInProgress() {\n      if (this.switchInProgress) {\n        clearTimeout(this.switchInProgress);\n      }\n      this.switchInProgress = setTimeout(() => {\n        this._removeFullscreenChangeListeners();\n        delete this.switchInProgress;\n        this._notifyStateChange();\n      }, DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS);\n    }\n\n    /**\n     * @private\n     */\n    _resetSwitchInProgress() {\n      if (this.switchInProgress) {\n        clearTimeout(this.switchInProgress);\n        delete this.switchInProgress;\n      }\n    }\n\n    /**\n     * @private\n     */\n    _enter() {\n      this.active = true;\n      this._resetSwitchInProgress();\n      this._notifyStateChange();\n      this.container.classList.add(ACTIVE_SELECTOR);\n\n      // Ensure that the correct page is scrolled into view when entering\n      // Presentation Mode, by waiting until fullscreen mode in enabled.\n      setTimeout(() => {\n        this.pdfViewer.currentPageNumber = this.args.page;\n        this.pdfViewer.currentScaleValue = \"page-fit\";\n      }, 0);\n\n      this._addWindowListeners();\n      this._showControls();\n      this.contextMenuOpen = false;\n      this.container.setAttribute(\"contextmenu\", \"viewerContextMenu\");\n\n      // Text selection is disabled in Presentation Mode, thus it's not possible\n      // for the user to deselect text that is selected (e.g. with \"Select all\")\n      // when entering Presentation Mode, hence we remove any active selection.\n      window.getSelection().removeAllRanges();\n    }\n\n    /**\n     * @private\n     */\n    _exit() {\n      const page = this.pdfViewer.currentPageNumber;\n      this.container.classList.remove(ACTIVE_SELECTOR);\n\n      // Ensure that the correct page is scrolled into view when exiting\n      // Presentation Mode, by waiting until fullscreen mode is disabled.\n      setTimeout(() => {\n        this.active = false;\n        this._removeFullscreenChangeListeners();\n        this._notifyStateChange();\n\n        this.pdfViewer.currentScaleValue = this.args.previousScale;\n        this.pdfViewer.currentPageNumber = page;\n        this.args = null;\n      }, 0);\n\n      this._removeWindowListeners();\n      this._hideControls();\n      this._resetMouseScrollState();\n      this.container.removeAttribute(\"contextmenu\");\n      this.contextMenuOpen = false;\n    }\n\n    /**\n     * @private\n     */\n    _mouseDown(evt) {\n      if (this.contextMenuOpen) {\n        this.contextMenuOpen = false;\n        evt.preventDefault();\n        return;\n      }\n      if (evt.button === 0) {\n        // Enable clicking of links in presentation mode. Note: only links\n        // pointing to destinations in the current PDF document work.\n        const isInternalLink =\n          evt.target.href && evt.target.classList.contains(\"internalLink\");\n        if (!isInternalLink) {\n          // Unless an internal link was clicked, advance one page.\n          evt.preventDefault();\n\n          if (evt.shiftKey) {\n            this.pdfViewer.previousPage();\n          } else {\n            this.pdfViewer.nextPage();\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     */\n    _contextMenu() {\n      this.contextMenuOpen = true;\n    }\n\n    /**\n     * @private\n     */\n    _showControls() {\n      if (this.controlsTimeout) {\n        clearTimeout(this.controlsTimeout);\n      } else {\n        this.container.classList.add(CONTROLS_SELECTOR);\n      }\n      this.controlsTimeout = setTimeout(() => {\n        this.container.classList.remove(CONTROLS_SELECTOR);\n        delete this.controlsTimeout;\n      }, DELAY_BEFORE_HIDING_CONTROLS);\n    }\n\n    /**\n     * @private\n     */\n    _hideControls() {\n      if (!this.controlsTimeout) {\n        return;\n      }\n      clearTimeout(this.controlsTimeout);\n      this.container.classList.remove(CONTROLS_SELECTOR);\n      delete this.controlsTimeout;\n    }\n\n    /**\n     * Resets the properties used for tracking mouse scrolling events.\n     *\n     * @private\n     */\n    _resetMouseScrollState() {\n      this.mouseScrollTimeStamp = 0;\n      this.mouseScrollDelta = 0;\n    }\n\n    /**\n     * @private\n     */\n    _touchSwipe(evt) {\n      if (!this.active) {\n        return;\n      }\n      if (evt.touches.length > 1) {\n        // Multiple touch points detected; cancel the swipe.\n        this.touchSwipeState = null;\n        return;\n      }\n\n      switch (evt.type) {\n        case \"touchstart\":\n          this.touchSwipeState = {\n            startX: evt.touches[0].pageX,\n            startY: evt.touches[0].pageY,\n            endX: evt.touches[0].pageX,\n            endY: evt.touches[0].pageY,\n          };\n          break;\n        case \"touchmove\":\n          if (this.touchSwipeState === null) {\n            return;\n          }\n          this.touchSwipeState.endX = evt.touches[0].pageX;\n          this.touchSwipeState.endY = evt.touches[0].pageY;\n          // Avoid the swipe from triggering browser gestures (Chrome in\n          // particular has some sort of swipe gesture in fullscreen mode).\n          evt.preventDefault();\n          break;\n        case \"touchend\":\n          if (this.touchSwipeState === null) {\n            return;\n          }\n          let delta = 0;\n          const dx = this.touchSwipeState.endX - this.touchSwipeState.startX;\n          const dy = this.touchSwipeState.endY - this.touchSwipeState.startY;\n          const absAngle = Math.abs(Math.atan2(dy, dx));\n          if (\n            Math.abs(dx) > SWIPE_MIN_DISTANCE_THRESHOLD &&\n            (absAngle <= SWIPE_ANGLE_THRESHOLD ||\n              absAngle >= Math.PI - SWIPE_ANGLE_THRESHOLD)\n          ) {\n            // Horizontal swipe.\n            delta = dx;\n          } else if (\n            Math.abs(dy) > SWIPE_MIN_DISTANCE_THRESHOLD &&\n            Math.abs(absAngle - Math.PI / 2) <= SWIPE_ANGLE_THRESHOLD\n          ) {\n            // Vertical swipe.\n            delta = dy;\n          }\n          if (delta > 0) {\n            this.pdfViewer.previousPage();\n          } else if (delta < 0) {\n            this.pdfViewer.nextPage();\n          }\n          break;\n      }\n    }\n\n    /**\n     * @private\n     */\n    _addWindowListeners() {\n      this.showControlsBind = this._showControls.bind(this);\n      this.mouseDownBind = this._mouseDown.bind(this);\n      this.mouseWheelBind = this._mouseWheel.bind(this);\n      this.resetMouseScrollStateBind = this._resetMouseScrollState.bind(this);\n      this.contextMenuBind = this._contextMenu.bind(this);\n      this.touchSwipeBind = this._touchSwipe.bind(this);\n\n      window.addEventListener(\"mousemove\", this.showControlsBind);\n      window.addEventListener(\"mousedown\", this.mouseDownBind);\n      window.addEventListener(\"wheel\", this.mouseWheelBind, { passive: false });\n      window.addEventListener(\"keydown\", this.resetMouseScrollStateBind);\n      window.addEventListener(\"contextmenu\", this.contextMenuBind);\n      window.addEventListener(\"touchstart\", this.touchSwipeBind);\n      window.addEventListener(\"touchmove\", this.touchSwipeBind);\n      window.addEventListener(\"touchend\", this.touchSwipeBind);\n    }\n\n    /**\n     * @private\n     */\n    _removeWindowListeners() {\n      window.removeEventListener(\"mousemove\", this.showControlsBind);\n      window.removeEventListener(\"mousedown\", this.mouseDownBind);\n      window.removeEventListener(\"wheel\", this.mouseWheelBind, {\n        passive: false,\n      });\n      window.removeEventListener(\"keydown\", this.resetMouseScrollStateBind);\n      window.removeEventListener(\"contextmenu\", this.contextMenuBind);\n      window.removeEventListener(\"touchstart\", this.touchSwipeBind);\n      window.removeEventListener(\"touchmove\", this.touchSwipeBind);\n      window.removeEventListener(\"touchend\", this.touchSwipeBind);\n\n      delete this.showControlsBind;\n      delete this.mouseDownBind;\n      delete this.mouseWheelBind;\n      delete this.resetMouseScrollStateBind;\n      delete this.contextMenuBind;\n      delete this.touchSwipeBind;\n    }\n\n    /**\n     * @private\n     */\n    _fullscreenChange() {\n      if (this.isFullscreen) {\n        this._enter();\n      } else {\n        this._exit();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _addFullscreenChangeListeners() {\n      this.fullscreenChangeBind = this._fullscreenChange.bind(this);\n\n      window.addEventListener(\"fullscreenchange\", this.fullscreenChangeBind);\n      window.addEventListener(\"mozfullscreenchange\", this.fullscreenChangeBind);\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        window.addEventListener(\n          \"webkitfullscreenchange\",\n          this.fullscreenChangeBind\n        );\n      }\n    }\n\n    /**\n     * @private\n     */\n    _removeFullscreenChangeListeners() {\n      window.removeEventListener(\"fullscreenchange\", this.fullscreenChangeBind);\n      window.removeEventListener(\n        \"mozfullscreenchange\",\n        this.fullscreenChangeBind\n      );\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        window.removeEventListener(\n          \"webkitfullscreenchange\",\n          this.fullscreenChangeBind\n        );\n      }\n\n      delete this.fullscreenChangeBind;\n    }\n  }\n\n  return { PDFPresentationMode };\n});\ndefine('skylark-pdfjs-viewer/pdf_sidebar',[\n  \"./ui_utils\",\n  \"./pdf_rendering_queue\"\n],function(ui_utils,pdf_rendering_queue){\n  /* Copyright 2016 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { NullL10n, PresentationModeState, SidebarView } = ui_utils;\n  const { RenderingStates } = pdf_rendering_queue;\n\n  const UI_NOTIFICATION_CLASS = \"pdfSidebarNotification\";\n\n  /**\n   * @typedef {Object} PDFSidebarOptions\n   * @property {PDFSidebarElements} elements - The DOM elements.\n   * @property {PDFViewer} pdfViewer - The document viewer.\n   * @property {PDFThumbnailViewer} pdfThumbnailViewer - The thumbnail viewer.\n   * @property {EventBus} eventBus - The application event bus.\n   * @property {IL10n} l10n - The localization service.\n   */\n\n  /**\n   * @typedef {Object} PDFSidebarElements\n   * @property {HTMLDivElement} outerContainer - The outer container\n   *   (encasing both the viewer and sidebar elements).\n   * @property {HTMLDivElement} viewerContainer - The viewer container\n   *   (in which the viewer element is placed).\n   * @property {HTMLButtonElement} toggleButton - The button used for\n   *   opening/closing the sidebar.\n   * @property {HTMLButtonElement} thumbnailButton - The button used to show\n   *   the thumbnail view.\n   * @property {HTMLButtonElement} outlineButton - The button used to show\n   *   the outline view.\n   * @property {HTMLButtonElement} attachmentsButton - The button used to show\n   *   the attachments view.\n   * @property {HTMLButtonElement} layersButton - The button used to show\n   *   the layers view.\n   * @property {HTMLDivElement} thumbnailView - The container in which\n   *   the thumbnails are placed.\n   * @property {HTMLDivElement} outlineView - The container in which\n   *   the outline is placed.\n   * @property {HTMLDivElement} attachmentsView - The container in which\n   *   the attachments are placed.\n   * @property {HTMLDivElement} layersView - The container in which\n   *   the layers are placed.\n   * @property {HTMLDivElement} outlineOptionsContainer - The container in which\n   *   the outline view-specific option button(s) are placed.\n   * @property {HTMLButtonElement} currentOutlineItemButton - The button used to\n   *   find the current outline item.\n   */\n\n  class PDFSidebar {\n    /**\n     * @param {PDFSidebarOptions} options\n     */\n    constructor({\n      elements,\n      pdfViewer,\n      pdfThumbnailViewer,\n      eventBus,\n      l10n = NullL10n,\n    }) {\n      this.isOpen = false;\n      this.active = SidebarView.THUMBS;\n      this.isInitialViewSet = false;\n\n      /**\n       * Callback used when the sidebar has been opened/closed, to ensure that\n       * the viewers (PDFViewer/PDFThumbnailViewer) are updated correctly.\n       */\n      this.onToggled = null;\n\n      this.pdfViewer = pdfViewer;\n      this.pdfThumbnailViewer = pdfThumbnailViewer;\n\n      this.outerContainer = elements.outerContainer;\n      this.viewerContainer = elements.viewerContainer;\n      this.toggleButton = elements.toggleButton;\n\n      this.thumbnailButton = elements.thumbnailButton;\n      this.outlineButton = elements.outlineButton;\n      this.attachmentsButton = elements.attachmentsButton;\n      this.layersButton = elements.layersButton;\n\n      this.thumbnailView = elements.thumbnailView;\n      this.outlineView = elements.outlineView;\n      this.attachmentsView = elements.attachmentsView;\n      this.layersView = elements.layersView;\n\n      this._outlineOptionsContainer = elements.outlineOptionsContainer;\n      this._currentOutlineItemButton = elements.currentOutlineItemButton;\n\n      this.eventBus = eventBus;\n      this.l10n = l10n;\n\n      this._addEventListeners();\n    }\n\n    reset() {\n      this.isInitialViewSet = false;\n\n      this._hideUINotification(/* reset = */ true);\n      this.switchView(SidebarView.THUMBS);\n\n      this.outlineButton.disabled = false;\n      this.attachmentsButton.disabled = false;\n      this.layersButton.disabled = false;\n      this._currentOutlineItemButton.disabled = true;\n    }\n\n    /**\n     * @type {number} One of the values in {SidebarView}.\n     */\n    get visibleView() {\n      return this.isOpen ? this.active : SidebarView.NONE;\n    }\n\n    get isThumbnailViewVisible() {\n      return this.isOpen && this.active === SidebarView.THUMBS;\n    }\n\n    get isOutlineViewVisible() {\n      return this.isOpen && this.active === SidebarView.OUTLINE;\n    }\n\n    get isAttachmentsViewVisible() {\n      return this.isOpen && this.active === SidebarView.ATTACHMENTS;\n    }\n\n    get isLayersViewVisible() {\n      return this.isOpen && this.active === SidebarView.LAYERS;\n    }\n\n    /**\n     * @param {number} view - The sidebar view that should become visible,\n     *                        must be one of the values in {SidebarView}.\n     */\n    setInitialView(view = SidebarView.NONE) {\n      if (this.isInitialViewSet) {\n        return;\n      }\n      this.isInitialViewSet = true;\n\n      // If the user has already manually opened the sidebar, immediately closing\n      // it would be bad UX; also ignore the \"unknown\" sidebar view value.\n      if (view === SidebarView.NONE || view === SidebarView.UNKNOWN) {\n        this._dispatchEvent();\n        return;\n      }\n      // Prevent dispatching two back-to-back `sidebarviewchanged` events,\n      // since `this._switchView` dispatched the event if the view changed.\n      if (!this._switchView(view, /* forceOpen */ true)) {\n        this._dispatchEvent();\n      }\n    }\n\n    /**\n     * @param {number} view - The sidebar view that should be switched to,\n     *                        must be one of the values in {SidebarView}.\n     * @param {boolean} [forceOpen] - Ensure that the sidebar is open.\n     *                                The default value is `false`.\n     */\n    switchView(view, forceOpen = false) {\n      this._switchView(view, forceOpen);\n    }\n\n    /**\n     * @returns {boolean} Indicating if `this._dispatchEvent` was called.\n     * @private\n     */\n    _switchView(view, forceOpen = false) {\n      const isViewChanged = view !== this.active;\n      let shouldForceRendering = false;\n\n      switch (view) {\n        case SidebarView.NONE:\n          if (this.isOpen) {\n            this.close();\n            return true; // Closing will trigger rendering and dispatch the event.\n          }\n          return false;\n        case SidebarView.THUMBS:\n          if (this.isOpen && isViewChanged) {\n            shouldForceRendering = true;\n          }\n          break;\n        case SidebarView.OUTLINE:\n          if (this.outlineButton.disabled) {\n            return false;\n          }\n          break;\n        case SidebarView.ATTACHMENTS:\n          if (this.attachmentsButton.disabled) {\n            return false;\n          }\n          break;\n        case SidebarView.LAYERS:\n          if (this.layersButton.disabled) {\n            return false;\n          }\n          break;\n        default:\n          console.error(`PDFSidebar._switchView: \"${view}\" is not a valid view.`);\n          return false;\n      }\n      // Update the active view *after* it has been validated above,\n      // in order to prevent setting it to an invalid state.\n      this.active = view;\n\n      // Update the CSS classes, for all buttons...\n      this.thumbnailButton.classList.toggle(\n        \"toggled\",\n        view === SidebarView.THUMBS\n      );\n      this.outlineButton.classList.toggle(\n        \"toggled\",\n        view === SidebarView.OUTLINE\n      );\n      this.attachmentsButton.classList.toggle(\n        \"toggled\",\n        view === SidebarView.ATTACHMENTS\n      );\n      this.layersButton.classList.toggle(\"toggled\", view === SidebarView.LAYERS);\n      // ... and for all views.\n      this.thumbnailView.classList.toggle(\"hidden\", view !== SidebarView.THUMBS);\n      this.outlineView.classList.toggle(\"hidden\", view !== SidebarView.OUTLINE);\n      this.attachmentsView.classList.toggle(\n        \"hidden\",\n        view !== SidebarView.ATTACHMENTS\n      );\n      this.layersView.classList.toggle(\"hidden\", view !== SidebarView.LAYERS);\n\n      // Finally, update view-specific CSS classes.\n      this._outlineOptionsContainer.classList.toggle(\n        \"hidden\",\n        view !== SidebarView.OUTLINE\n      );\n\n      if (forceOpen && !this.isOpen) {\n        this.open();\n        return true; // Opening will trigger rendering and dispatch the event.\n      }\n      if (shouldForceRendering) {\n        this._updateThumbnailViewer();\n        this._forceRendering();\n      }\n      if (isViewChanged) {\n        this._dispatchEvent();\n      }\n      return isViewChanged;\n    }\n\n    open() {\n      if (this.isOpen) {\n        return;\n      }\n      this.isOpen = true;\n      this.toggleButton.classList.add(\"toggled\");\n\n      this.outerContainer.classList.add(\"sidebarMoving\", \"sidebarOpen\");\n\n      if (this.active === SidebarView.THUMBS) {\n        this._updateThumbnailViewer();\n      }\n      this._forceRendering();\n      this._dispatchEvent();\n\n      this._hideUINotification();\n    }\n\n    close() {\n      if (!this.isOpen) {\n        return;\n      }\n      this.isOpen = false;\n      this.toggleButton.classList.remove(\"toggled\");\n\n      this.outerContainer.classList.add(\"sidebarMoving\");\n      this.outerContainer.classList.remove(\"sidebarOpen\");\n\n      this._forceRendering();\n      this._dispatchEvent();\n    }\n\n    toggle() {\n      if (this.isOpen) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _dispatchEvent() {\n      this.eventBus.dispatch(\"sidebarviewchanged\", {\n        source: this,\n        view: this.visibleView,\n      });\n    }\n\n    /**\n     * @private\n     */\n    _forceRendering() {\n      if (this.onToggled) {\n        this.onToggled();\n      } else {\n        // Fallback\n        this.pdfViewer.forceRendering();\n        this.pdfThumbnailViewer.forceRendering();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _updateThumbnailViewer() {\n      const { pdfViewer, pdfThumbnailViewer } = this;\n\n      // Use the rendered pages to set the corresponding thumbnail images.\n      const pagesCount = pdfViewer.pagesCount;\n      for (let pageIndex = 0; pageIndex < pagesCount; pageIndex++) {\n        const pageView = pdfViewer.getPageView(pageIndex);\n        if (pageView && pageView.renderingState === RenderingStates.FINISHED) {\n          const thumbnailView = pdfThumbnailViewer.getThumbnail(pageIndex);\n          thumbnailView.setImage(pageView);\n        }\n      }\n      pdfThumbnailViewer.scrollThumbnailIntoView(pdfViewer.currentPageNumber);\n    }\n\n    /**\n     * @private\n     */\n    _showUINotification() {\n      this.l10n\n        .get(\n          \"toggle_sidebar_notification2.title\",\n          null,\n          \"Toggle Sidebar (document contains outline/attachments/layers)\"\n        )\n        .then(msg => {\n          this.toggleButton.title = msg;\n        });\n\n      if (!this.isOpen) {\n        // Only show the notification on the `toggleButton` if the sidebar is\n        // currently closed, to avoid unnecessarily bothering the user.\n        this.toggleButton.classList.add(UI_NOTIFICATION_CLASS);\n      }\n    }\n\n    /**\n     * @private\n     */\n    _hideUINotification(reset = false) {\n      if (this.isOpen || reset) {\n        // Only hide the notification on the `toggleButton` if the sidebar is\n        // currently open, or when the current PDF document is being closed.\n        this.toggleButton.classList.remove(UI_NOTIFICATION_CLASS);\n      }\n\n      if (reset) {\n        this.l10n\n          .get(\"toggle_sidebar.title\", null, \"Toggle Sidebar\")\n          .then(msg => {\n            this.toggleButton.title = msg;\n          });\n      }\n    }\n\n    /**\n     * @private\n     */\n    _addEventListeners() {\n      this.viewerContainer.addEventListener(\"transitionend\", evt => {\n        if (evt.target === this.viewerContainer) {\n          this.outerContainer.classList.remove(\"sidebarMoving\");\n        }\n      });\n\n      this.toggleButton.addEventListener(\"click\", () => {\n        this.toggle();\n      });\n\n      // Buttons for switching views.\n      this.thumbnailButton.addEventListener(\"click\", () => {\n        this.switchView(SidebarView.THUMBS);\n      });\n\n      this.outlineButton.addEventListener(\"click\", () => {\n        this.switchView(SidebarView.OUTLINE);\n      });\n      this.outlineButton.addEventListener(\"dblclick\", () => {\n        this.eventBus.dispatch(\"toggleoutlinetree\", { source: this });\n      });\n\n      this.attachmentsButton.addEventListener(\"click\", () => {\n        this.switchView(SidebarView.ATTACHMENTS);\n      });\n\n      this.layersButton.addEventListener(\"click\", () => {\n        this.switchView(SidebarView.LAYERS);\n      });\n      this.layersButton.addEventListener(\"dblclick\", () => {\n        this.eventBus.dispatch(\"resetlayers\", { source: this });\n      });\n\n      // Buttons for view-specific options.\n      this._currentOutlineItemButton.addEventListener(\"click\", () => {\n        this.eventBus.dispatch(\"currentoutlineitem\", { source: this });\n      });\n\n      // Disable/enable views.\n      const onTreeLoaded = (count, button, view) => {\n        button.disabled = !count;\n\n        if (count) {\n          this._showUINotification();\n        } else if (this.active === view) {\n          // If the `view` was opened by the user during document load,\n          // switch away from it if it turns out to be empty.\n          this.switchView(SidebarView.THUMBS);\n        }\n      };\n\n      this.eventBus._on(\"outlineloaded\", evt => {\n        onTreeLoaded(evt.outlineCount, this.outlineButton, SidebarView.OUTLINE);\n\n        if (evt.enableCurrentOutlineItemButton) {\n          this.pdfViewer.pagesPromise.then(() => {\n            this._currentOutlineItemButton.disabled = !this.isInitialViewSet;\n          });\n        }\n      });\n\n      this.eventBus._on(\"attachmentsloaded\", evt => {\n        onTreeLoaded(\n          evt.attachmentsCount,\n          this.attachmentsButton,\n          SidebarView.ATTACHMENTS\n        );\n      });\n\n      this.eventBus._on(\"layersloaded\", evt => {\n        onTreeLoaded(evt.layersCount, this.layersButton, SidebarView.LAYERS);\n      });\n\n      // Update the thumbnailViewer, if visible, when exiting presentation mode.\n      this.eventBus._on(\"presentationmodechanged\", evt => {\n        if (\n          evt.state === PresentationModeState.NORMAL &&\n          this.isThumbnailViewVisible\n        ) {\n          this._updateThumbnailViewer();\n        }\n      });\n    }\n  }\n\n  return { PDFSidebar };\n});\ndefine('skylark-pdfjs-viewer/pdf_sidebar_resizer',[\n  \"./ui_utils\",\n],function(ui_utils){\n  /* Copyright 2017 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { NullL10n } = ui_utils;\n\n  const SIDEBAR_WIDTH_VAR = \"--sidebar-width\";\n  const SIDEBAR_MIN_WIDTH = 200; // pixels\n  const SIDEBAR_RESIZING_CLASS = \"sidebarResizing\";\n\n  /**\n   * @typedef {Object} PDFSidebarResizerOptions\n   * @property {HTMLDivElement} outerContainer - The outer container\n   *   (encasing both the viewer and sidebar elements).\n   * @property {HTMLDivElement} resizer - The DOM element that can be dragged in\n   *   order to adjust the width of the sidebar.\n   */\n\n  class PDFSidebarResizer {\n    /**\n     * @param {PDFSidebarResizerOptions} options\n     * @param {EventBus} eventBus - The application event bus.\n     * @param {IL10n} l10n - Localization service.\n     */\n    constructor(options, eventBus, l10n = NullL10n) {\n      this.isRTL = false;\n      this.sidebarOpen = false;\n      this.doc = document.documentElement;\n      this._width = null;\n      this._outerContainerWidth = null;\n      this._boundEvents = Object.create(null);\n\n      this.outerContainer = options.outerContainer;\n      this.resizer = options.resizer;\n      this.eventBus = eventBus;\n\n      l10n.getDirection().then(dir => {\n        this.isRTL = dir === \"rtl\";\n      });\n      this._addEventListeners();\n    }\n\n    /**\n     * @type {number}\n     */\n    get outerContainerWidth() {\n      if (!this._outerContainerWidth) {\n        this._outerContainerWidth = this.outerContainer.clientWidth;\n      }\n      return this._outerContainerWidth;\n    }\n\n    /**\n     * @private\n     * returns {boolean} Indicating if the sidebar width was updated.\n     */\n    _updateWidth(width = 0) {\n      // Prevent the sidebar from becoming too narrow, or from occupying more\n      // than half of the available viewer width.\n      const maxWidth = Math.floor(this.outerContainerWidth / 2);\n      if (width > maxWidth) {\n        width = maxWidth;\n      }\n      if (width < SIDEBAR_MIN_WIDTH) {\n        width = SIDEBAR_MIN_WIDTH;\n      }\n      // Only update the UI when the sidebar width did in fact change.\n      if (width === this._width) {\n        return false;\n      }\n      this._width = width;\n      this.doc.style.setProperty(SIDEBAR_WIDTH_VAR, `${width}px`);\n      return true;\n    }\n\n    /**\n     * @private\n     */\n    _mouseMove(evt) {\n      let width = evt.clientX;\n      // For sidebar resizing to work correctly in RTL mode, invert the width.\n      if (this.isRTL) {\n        width = this.outerContainerWidth - width;\n      }\n      this._updateWidth(width);\n    }\n\n    /**\n     * @private\n     */\n    _mouseUp(evt) {\n      // Re-enable the `transition-duration` rules when sidebar resizing ends...\n      this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);\n      // ... and ensure that rendering will always be triggered.\n      this.eventBus.dispatch(\"resize\", { source: this });\n\n      const _boundEvents = this._boundEvents;\n      window.removeEventListener(\"mousemove\", _boundEvents.mouseMove);\n      window.removeEventListener(\"mouseup\", _boundEvents.mouseUp);\n    }\n\n    /**\n     * @private\n     */\n    _addEventListeners() {\n      const _boundEvents = this._boundEvents;\n      _boundEvents.mouseMove = this._mouseMove.bind(this);\n      _boundEvents.mouseUp = this._mouseUp.bind(this);\n\n      this.resizer.addEventListener(\"mousedown\", evt => {\n        if (evt.button !== 0) {\n          return;\n        }\n        // Disable the `transition-duration` rules when sidebar resizing begins,\n        // in order to improve responsiveness and to avoid visual glitches.\n        this.outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);\n\n        window.addEventListener(\"mousemove\", _boundEvents.mouseMove);\n        window.addEventListener(\"mouseup\", _boundEvents.mouseUp);\n      });\n\n      this.eventBus._on(\"sidebarviewchanged\", evt => {\n        this.sidebarOpen = !!(evt && evt.view);\n      });\n\n      this.eventBus._on(\"resize\", evt => {\n        // When the *entire* viewer is resized, such that it becomes narrower,\n        // ensure that the sidebar doesn't end up being too wide.\n        if (!evt || evt.source !== window) {\n          return;\n        }\n        // Always reset the cached width when the viewer is resized.\n        this._outerContainerWidth = null;\n\n        if (!this._width) {\n          // The sidebar hasn't been resized, hence no need to adjust its width.\n          return;\n        }\n        // NOTE: If the sidebar is closed, we don't need to worry about\n        //       visual glitches nor ensure that rendering is triggered.\n        if (!this.sidebarOpen) {\n          this._updateWidth(this._width);\n          return;\n        }\n        this.outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);\n        const updated = this._updateWidth(this._width);\n\n        Promise.resolve().then(() => {\n          this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);\n          // Trigger rendering if the sidebar width changed, to avoid\n          // depending on the order in which 'resize' events are handled.\n          if (updated) {\n            this.eventBus.dispatch(\"resize\", { source: this });\n          }\n        });\n      });\n    }\n  }\n\n  return { PDFSidebarResizer };\n});\ndefine('skylark-pdfjs-viewer/pdf_thumbnail_view',[\n  \"skylark-pdfjs-display\",\n  \"./pdfjs_dev\",\n  \"./ui_utils\",\n  \"./pdf_rendering_queue\"\n],function(\n  pdfjsLib,\n  PDFJSDev,\n  ui_utils,\n  pdf_rendering_queue\n){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { getOutputScale, NullL10n } = ui_utils;\n  const { RenderingCancelledException } = pdfjsLib;\n  const { RenderingStates } = pdf_rendering_queue;\n\n  const MAX_NUM_SCALING_STEPS = 3;\n  const THUMBNAIL_CANVAS_BORDER_WIDTH = 1; // px\n  const THUMBNAIL_WIDTH = 98; // px\n\n  /**\n   * @typedef {Object} PDFThumbnailViewOptions\n   * @property {HTMLDivElement} container - The viewer element.\n   * @property {number} id - The thumbnail's unique ID (normally its number).\n   * @property {PageViewport} defaultViewport - The page viewport.\n   * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n   *   A promise that is resolved with an {@link OptionalContentConfig} instance.\n   *   The default value is `null`.\n   * @property {IPDFLinkService} linkService - The navigation/linking service.\n   * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\n   * @property {function} checkSetImageDisabled\n   * @property {boolean} [disableCanvasToImageConversion] - Don't convert the\n   *   canvas thumbnails to images. This prevents `toDataURL` calls, but\n   *   increases the overall memory usage. The default value is `false`.\n   * @property {IL10n} l10n - Localization service.\n   */\n\n  const TempImageFactory = (function TempImageFactoryClosure() {\n    let tempCanvasCache = null;\n\n    return {\n      getCanvas(width, height) {\n        let tempCanvas = tempCanvasCache;\n        if (!tempCanvas) {\n          tempCanvas = document.createElement(\"canvas\");\n          tempCanvasCache = tempCanvas;\n        }\n        tempCanvas.width = width;\n        tempCanvas.height = height;\n\n        // Since this is a temporary canvas, we need to fill it with a white\n        // background ourselves. `_getPageDrawContext` uses CSS rules for this.\n        if (\n          typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n        ) {\n          tempCanvas.mozOpaque = true;\n        }\n\n        const ctx = tempCanvas.getContext(\"2d\", { alpha: false });\n        ctx.save();\n        ctx.fillStyle = \"rgb(255, 255, 255)\";\n        ctx.fillRect(0, 0, width, height);\n        ctx.restore();\n        return tempCanvas;\n      },\n\n      destroyCanvas() {\n        const tempCanvas = tempCanvasCache;\n        if (tempCanvas) {\n          // Zeroing the width and height causes Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          tempCanvas.width = 0;\n          tempCanvas.height = 0;\n        }\n        tempCanvasCache = null;\n      },\n    };\n  })();\n\n  /**\n   * @implements {IRenderableView}\n   */\n  class PDFThumbnailView {\n    /**\n     * @param {PDFThumbnailViewOptions} options\n     */\n    constructor({\n      container,\n      id,\n      defaultViewport,\n      optionalContentConfigPromise,\n      linkService,\n      renderingQueue,\n      checkSetImageDisabled,\n      disableCanvasToImageConversion = false,\n      l10n = NullL10n,\n    }) {\n      this.id = id;\n      this.renderingId = \"thumbnail\" + id;\n      this.pageLabel = null;\n\n      this.pdfPage = null;\n      this.rotation = 0;\n      this.viewport = defaultViewport;\n      this.pdfPageRotate = defaultViewport.rotation;\n      this._optionalContentConfigPromise = optionalContentConfigPromise || null;\n\n      this.linkService = linkService;\n      this.renderingQueue = renderingQueue;\n\n      this.renderTask = null;\n      this.renderingState = RenderingStates.INITIAL;\n      this.resume = null;\n      this._checkSetImageDisabled =\n        checkSetImageDisabled ||\n        function () {\n          return false;\n        };\n      this.disableCanvasToImageConversion = disableCanvasToImageConversion;\n\n      this.pageWidth = this.viewport.width;\n      this.pageHeight = this.viewport.height;\n      this.pageRatio = this.pageWidth / this.pageHeight;\n\n      this.canvasWidth = THUMBNAIL_WIDTH;\n      this.canvasHeight = (this.canvasWidth / this.pageRatio) | 0;\n      this.scale = this.canvasWidth / this.pageWidth;\n\n      this.l10n = l10n;\n\n      const anchor = document.createElement(\"a\");\n      anchor.href = linkService.getAnchorUrl(\"#page=\" + id);\n      this._thumbPageTitle.then(msg => {\n        anchor.title = msg;\n      });\n      anchor.onclick = function () {\n        linkService.goToPage(id);\n        return false;\n      };\n      this.anchor = anchor;\n\n      const div = document.createElement(\"div\");\n      div.className = \"thumbnail\";\n      div.setAttribute(\"data-page-number\", this.id);\n      this.div = div;\n\n      const ring = document.createElement(\"div\");\n      ring.className = \"thumbnailSelectionRing\";\n      const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\n      ring.style.width = this.canvasWidth + borderAdjustment + \"px\";\n      ring.style.height = this.canvasHeight + borderAdjustment + \"px\";\n      this.ring = ring;\n\n      div.appendChild(ring);\n      anchor.appendChild(div);\n      container.appendChild(anchor);\n    }\n\n    setPdfPage(pdfPage) {\n      this.pdfPage = pdfPage;\n      this.pdfPageRotate = pdfPage.rotate;\n      const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n      this.viewport = pdfPage.getViewport({ scale: 1, rotation: totalRotation });\n      this.reset();\n    }\n\n    reset() {\n      this.cancelRendering();\n      this.renderingState = RenderingStates.INITIAL;\n\n      this.pageWidth = this.viewport.width;\n      this.pageHeight = this.viewport.height;\n      this.pageRatio = this.pageWidth / this.pageHeight;\n\n      this.canvasHeight = (this.canvasWidth / this.pageRatio) | 0;\n      this.scale = this.canvasWidth / this.pageWidth;\n\n      this.div.removeAttribute(\"data-loaded\");\n      const ring = this.ring;\n      const childNodes = ring.childNodes;\n      for (let i = childNodes.length - 1; i >= 0; i--) {\n        ring.removeChild(childNodes[i]);\n      }\n      const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\n      ring.style.width = this.canvasWidth + borderAdjustment + \"px\";\n      ring.style.height = this.canvasHeight + borderAdjustment + \"px\";\n\n      if (this.canvas) {\n        // Zeroing the width and height causes Firefox to release graphics\n        // resources immediately, which can greatly reduce memory consumption.\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        delete this.canvas;\n      }\n      if (this.image) {\n        this.image.removeAttribute(\"src\");\n        delete this.image;\n      }\n    }\n\n    update(rotation) {\n      if (typeof rotation !== \"undefined\") {\n        this.rotation = rotation;\n      }\n      const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n      this.viewport = this.viewport.clone({\n        scale: 1,\n        rotation: totalRotation,\n      });\n      this.reset();\n    }\n\n    /**\n     * PLEASE NOTE: Most likely you want to use the `this.reset()` method,\n     *              rather than calling this one directly.\n     */\n    cancelRendering() {\n      if (this.renderTask) {\n        this.renderTask.cancel();\n        this.renderTask = null;\n      }\n      this.resume = null;\n    }\n\n    /**\n     * @private\n     */\n    _getPageDrawContext() {\n      const canvas = document.createElement(\"canvas\");\n      // Keep the no-thumbnail outline visible, i.e. `data-loaded === false`,\n      // until rendering/image conversion is complete, to avoid display issues.\n      this.canvas = canvas;\n\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      const ctx = canvas.getContext(\"2d\", { alpha: false });\n      const outputScale = getOutputScale(ctx);\n\n      canvas.width = (this.canvasWidth * outputScale.sx) | 0;\n      canvas.height = (this.canvasHeight * outputScale.sy) | 0;\n      canvas.style.width = this.canvasWidth + \"px\";\n      canvas.style.height = this.canvasHeight + \"px\";\n\n      const transform = outputScale.scaled\n        ? [outputScale.sx, 0, 0, outputScale.sy, 0, 0]\n        : null;\n\n      return [ctx, transform];\n    }\n\n    /**\n     * @private\n     */\n    _convertCanvasToImage() {\n      if (!this.canvas) {\n        return;\n      }\n      if (this.renderingState !== RenderingStates.FINISHED) {\n        return;\n      }\n      const className = \"thumbnailImage\";\n\n      if (this.disableCanvasToImageConversion) {\n        this.canvas.className = className;\n        this._thumbPageCanvas.then(msg => {\n          this.canvas.setAttribute(\"aria-label\", msg);\n        });\n\n        this.div.setAttribute(\"data-loaded\", true);\n        this.ring.appendChild(this.canvas);\n        return;\n      }\n      const image = document.createElement(\"img\");\n      image.className = className;\n      this._thumbPageCanvas.then(msg => {\n        image.setAttribute(\"aria-label\", msg);\n      });\n\n      image.style.width = this.canvasWidth + \"px\";\n      image.style.height = this.canvasHeight + \"px\";\n\n      image.src = this.canvas.toDataURL();\n      this.image = image;\n\n      this.div.setAttribute(\"data-loaded\", true);\n      this.ring.appendChild(image);\n\n      // Zeroing the width and height causes Firefox to release graphics\n      // resources immediately, which can greatly reduce memory consumption.\n      this.canvas.width = 0;\n      this.canvas.height = 0;\n      delete this.canvas;\n    }\n\n    draw() {\n      if (this.renderingState !== RenderingStates.INITIAL) {\n        console.error(\"Must be in new state before drawing\");\n        return Promise.resolve(undefined);\n      }\n      const { pdfPage } = this;\n\n      if (!pdfPage) {\n        this.renderingState = RenderingStates.FINISHED;\n        return Promise.reject(new Error(\"pdfPage is not loaded\"));\n      }\n\n      this.renderingState = RenderingStates.RUNNING;\n\n      const finishRenderTask = async (error = null) => {\n        // The renderTask may have been replaced by a new one, so only remove\n        // the reference to the renderTask if it matches the one that is\n        // triggering this callback.\n        if (renderTask === this.renderTask) {\n          this.renderTask = null;\n        }\n\n        if (error instanceof RenderingCancelledException) {\n          return;\n        }\n\n        this.renderingState = RenderingStates.FINISHED;\n        this._convertCanvasToImage();\n\n        if (error) {\n          throw error;\n        }\n      };\n\n      const [ctx, transform] = this._getPageDrawContext();\n      const drawViewport = this.viewport.clone({ scale: this.scale });\n      const renderContinueCallback = cont => {\n        if (!this.renderingQueue.isHighestPriority(this)) {\n          this.renderingState = RenderingStates.PAUSED;\n          this.resume = () => {\n            this.renderingState = RenderingStates.RUNNING;\n            cont();\n          };\n          return;\n        }\n        cont();\n      };\n\n      const renderContext = {\n        canvasContext: ctx,\n        transform,\n        viewport: drawViewport,\n        optionalContentConfigPromise: this._optionalContentConfigPromise,\n      };\n      const renderTask = (this.renderTask = pdfPage.render(renderContext));\n      renderTask.onContinue = renderContinueCallback;\n\n      const resultPromise = renderTask.promise.then(\n        function () {\n          finishRenderTask(null);\n        },\n        function (error) {\n          finishRenderTask(error);\n        }\n      );\n      // Only trigger cleanup, once rendering has finished, when the current\n      // pageView is *not* cached on the `BaseViewer`-instance.\n      resultPromise.finally(() => {\n        const pageCached = this.linkService.isPageCached(this.id);\n        if (pageCached) {\n          return;\n        }\n        ///this.pdfPage?.cleanup(); lwf\n        this.pdfPage && this.pdfPage.cleanup();\n      });\n\n      return resultPromise;\n    }\n\n    setImage(pageView) {\n      if (this._checkSetImageDisabled()) {\n        return;\n      }\n      if (this.renderingState !== RenderingStates.INITIAL) {\n        return;\n      }\n      const img = pageView.canvas;\n      if (!img) {\n        return;\n      }\n      if (!this.pdfPage) {\n        this.setPdfPage(pageView.pdfPage);\n      }\n\n      this.renderingState = RenderingStates.FINISHED;\n\n      const [ctx] = this._getPageDrawContext();\n      const canvas = ctx.canvas;\n      if (img.width <= 2 * canvas.width) {\n        ctx.drawImage(\n          img,\n          0,\n          0,\n          img.width,\n          img.height,\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        this._convertCanvasToImage();\n        return;\n      }\n\n      // drawImage does an awful job of rescaling the image, doing it gradually.\n      let reducedWidth = canvas.width << MAX_NUM_SCALING_STEPS;\n      let reducedHeight = canvas.height << MAX_NUM_SCALING_STEPS;\n      const reducedImage = TempImageFactory.getCanvas(\n        reducedWidth,\n        reducedHeight\n      );\n      const reducedImageCtx = reducedImage.getContext(\"2d\");\n\n      while (reducedWidth > img.width || reducedHeight > img.height) {\n        reducedWidth >>= 1;\n        reducedHeight >>= 1;\n      }\n      reducedImageCtx.drawImage(\n        img,\n        0,\n        0,\n        img.width,\n        img.height,\n        0,\n        0,\n        reducedWidth,\n        reducedHeight\n      );\n      while (reducedWidth > 2 * canvas.width) {\n        reducedImageCtx.drawImage(\n          reducedImage,\n          0,\n          0,\n          reducedWidth,\n          reducedHeight,\n          0,\n          0,\n          reducedWidth >> 1,\n          reducedHeight >> 1\n        );\n        reducedWidth >>= 1;\n        reducedHeight >>= 1;\n      }\n      ctx.drawImage(\n        reducedImage,\n        0,\n        0,\n        reducedWidth,\n        reducedHeight,\n        0,\n        0,\n        canvas.width,\n        canvas.height\n      );\n      this._convertCanvasToImage();\n    }\n\n    get _thumbPageTitle() {\n      return this.l10n.get(\n        \"thumb_page_title\",\n        ///{ page: this.pageLabel ?? this.id }, // lwf\n        { page: this.pageLabel && this.id },\n        \"Page {{page}}\"\n      );\n    }\n\n    get _thumbPageCanvas() {\n      return this.l10n.get(\n        \"thumb_page_canvas\",\n        ///{ page: this.pageLabel ?? this.id }, // lwf\n        { page: this.pageLabel && this.id },\n        \"Thumbnail of Page {{page}}\"\n      );\n    }\n\n    /**\n     * @param {string|null} label\n     */\n    setPageLabel(label) {\n      this.pageLabel = typeof label === \"string\" ? label : null;\n\n      this._thumbPageTitle.then(msg => {\n        this.anchor.title = msg;\n      });\n\n      if (this.renderingState !== RenderingStates.FINISHED) {\n        return;\n      }\n\n      this._thumbPageCanvas.then(msg => {\n        if (this.image) {\n          this.image.setAttribute(\"aria-label\", msg);\n        } else if (this.disableCanvasToImageConversion && this.canvas) {\n          this.canvas.setAttribute(\"aria-label\", msg);\n        }\n      });\n    }\n  }\n\n  return { PDFThumbnailView, TempImageFactory };\n});\ndefine('skylark-pdfjs-viewer/pdf_thumbnail_viewer',[\n  \"./ui_utils\",\n  \"./pdf_thumbnail_view\",\n  \"./pdf_rendering_queue\"\n],function(ui_utils,pdf_thumbnail_view,pdf_rendering_queue){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const {\n    getVisibleElements,\n    isValidRotation,\n    NullL10n,\n    scrollIntoView,\n    watchScroll,\n  } = ui_utils;\n  const { PDFThumbnailView, TempImageFactory } = pdf_thumbnail_view;\n  const { RenderingStates } = pdf_rendering_queue;\n\n  const THUMBNAIL_SCROLL_MARGIN = -19;\n  const THUMBNAIL_SELECTED_CLASS = \"selected\";\n\n  /**\n   * @typedef {Object} PDFThumbnailViewerOptions\n   * @property {HTMLDivElement} container - The container for the thumbnail\n   *   elements.\n   * @property {EventBus} eventBus - The application event bus.\n   * @property {IPDFLinkService} linkService - The navigation/linking service.\n   * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\n   * @property {IL10n} l10n - Localization service.\n   */\n\n  /**\n   * Viewer control to display thumbnails for pages in a PDF document.\n   *\n   * @implements {IRenderableView}\n   */\n  class PDFThumbnailViewer {\n    /**\n     * @param {PDFThumbnailViewerOptions} options\n     */\n    constructor({\n      container,\n      eventBus,\n      linkService,\n      renderingQueue,\n      l10n = NullL10n,\n    }) {\n      this.container = container;\n      this.linkService = linkService;\n      this.renderingQueue = renderingQueue;\n      this.l10n = l10n;\n\n      this.scroll = watchScroll(this.container, this._scrollUpdated.bind(this));\n      this._resetView();\n\n      eventBus._on(\"optionalcontentconfigchanged\", () => {\n        // Ensure that the thumbnails always render with the *default* optional\n        // content configuration.\n        this._setImageDisabled = true;\n      });\n    }\n\n    /**\n     * @private\n     */\n    _scrollUpdated() {\n      this.renderingQueue.renderHighestPriority();\n    }\n\n    getThumbnail(index) {\n      return this._thumbnails[index];\n    }\n\n    /**\n     * @private\n     */\n    _getVisibleThumbs() {\n      return getVisibleElements({\n        scrollEl: this.container,\n        views: this._thumbnails,\n      });\n    }\n\n    scrollThumbnailIntoView(pageNumber) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      const thumbnailView = this._thumbnails[pageNumber - 1];\n\n      if (!thumbnailView) {\n        console.error('scrollThumbnailIntoView: Invalid \"pageNumber\" parameter.');\n        return;\n      }\n\n      if (pageNumber !== this._currentPageNumber) {\n        const prevThumbnailView = this._thumbnails[this._currentPageNumber - 1];\n        // Remove the highlight from the previous thumbnail...\n        prevThumbnailView.div.classList.remove(THUMBNAIL_SELECTED_CLASS);\n        // ... and add the highlight to the new thumbnail.\n        thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\n      }\n      const visibleThumbs = this._getVisibleThumbs();\n      const numVisibleThumbs = visibleThumbs.views.length;\n\n      // If the thumbnail isn't currently visible, scroll it into view.\n      if (numVisibleThumbs > 0) {\n        const first = visibleThumbs.first.id;\n        // Account for only one thumbnail being visible.\n        const last = numVisibleThumbs > 1 ? visibleThumbs.last.id : first;\n\n        let shouldScroll = false;\n        if (pageNumber <= first || pageNumber >= last) {\n          shouldScroll = true;\n        } else {\n          visibleThumbs.views.some(function (view) {\n            if (view.id !== pageNumber) {\n              return false;\n            }\n            shouldScroll = view.percent < 100;\n            return true;\n          });\n        }\n        if (shouldScroll) {\n          scrollIntoView(thumbnailView.div, { top: THUMBNAIL_SCROLL_MARGIN });\n        }\n      }\n\n      this._currentPageNumber = pageNumber;\n    }\n\n    get pagesRotation() {\n      return this._pagesRotation;\n    }\n\n    set pagesRotation(rotation) {\n      if (!isValidRotation(rotation)) {\n        throw new Error(\"Invalid thumbnails rotation angle.\");\n      }\n      if (!this.pdfDocument) {\n        return;\n      }\n      if (this._pagesRotation === rotation) {\n        return; // The rotation didn't change.\n      }\n      this._pagesRotation = rotation;\n\n      for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n        this._thumbnails[i].update(rotation);\n      }\n    }\n\n    cleanup() {\n      for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n        if (\n          this._thumbnails[i] &&\n          this._thumbnails[i].renderingState !== RenderingStates.FINISHED\n        ) {\n          this._thumbnails[i].reset();\n        }\n      }\n      TempImageFactory.destroyCanvas();\n    }\n\n    /**\n     * @private\n     */\n    _resetView() {\n      this._thumbnails = [];\n      this._currentPageNumber = 1;\n      this._pageLabels = null;\n      this._pagesRotation = 0;\n      this._optionalContentConfigPromise = null;\n      this._pagesRequests = new WeakMap();\n      this._setImageDisabled = false;\n\n      // Remove the thumbnails from the DOM.\n      this.container.textContent = \"\";\n    }\n\n    setDocument(pdfDocument) {\n      if (this.pdfDocument) {\n        this._cancelRendering();\n        this._resetView();\n      }\n\n      this.pdfDocument = pdfDocument;\n      if (!pdfDocument) {\n        return;\n      }\n      const firstPagePromise = pdfDocument.getPage(1);\n      const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig();\n\n      firstPagePromise\n        .then(firstPdfPage => {\n          this._optionalContentConfigPromise = optionalContentConfigPromise;\n\n          const pagesCount = pdfDocument.numPages;\n          const viewport = firstPdfPage.getViewport({ scale: 1 });\n          const checkSetImageDisabled = () => {\n            return this._setImageDisabled;\n          };\n\n          for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n            const thumbnail = new PDFThumbnailView({\n              container: this.container,\n              id: pageNum,\n              defaultViewport: viewport.clone(),\n              optionalContentConfigPromise,\n              linkService: this.linkService,\n              renderingQueue: this.renderingQueue,\n              checkSetImageDisabled,\n              disableCanvasToImageConversion: false,\n              l10n: this.l10n,\n            });\n            this._thumbnails.push(thumbnail);\n          }\n          // Set the first `pdfPage` immediately, since it's already loaded,\n          // rather than having to repeat the `PDFDocumentProxy.getPage` call in\n          // the `this._ensurePdfPageLoaded` method before rendering can start.\n          const firstThumbnailView = this._thumbnails[0];\n          if (firstThumbnailView) {\n            firstThumbnailView.setPdfPage(firstPdfPage);\n          }\n\n          // Ensure that the current thumbnail is always highlighted on load.\n          const thumbnailView = this._thumbnails[this._currentPageNumber - 1];\n          thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\n        })\n        .catch(reason => {\n          console.error(\"Unable to initialize thumbnail viewer\", reason);\n        });\n    }\n\n    /**\n     * @private\n     */\n    _cancelRendering() {\n      for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n        if (this._thumbnails[i]) {\n          this._thumbnails[i].cancelRendering();\n        }\n      }\n    }\n\n    /**\n     * @param {Array|null} labels\n     */\n    setPageLabels(labels) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      if (!labels) {\n        this._pageLabels = null;\n      } else if (\n        !(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)\n      ) {\n        this._pageLabels = null;\n        console.error(\"PDFThumbnailViewer_setPageLabels: Invalid page labels.\");\n      } else {\n        this._pageLabels = labels;\n      }\n      // Update all the `PDFThumbnailView` instances.\n      for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n        const label = this._pageLabels && this._pageLabels[i];\n        this._thumbnails[i].setPageLabel(label);\n      }\n    }\n\n    /**\n     * @param {PDFThumbnailView} thumbView\n     * @returns {PDFPage}\n     * @private\n     */\n    _ensurePdfPageLoaded(thumbView) {\n      if (thumbView.pdfPage) {\n        return Promise.resolve(thumbView.pdfPage);\n      }\n      if (this._pagesRequests.has(thumbView)) {\n        return this._pagesRequests.get(thumbView);\n      }\n      const promise = this.pdfDocument\n        .getPage(thumbView.id)\n        .then(pdfPage => {\n          if (!thumbView.pdfPage) {\n            thumbView.setPdfPage(pdfPage);\n          }\n          this._pagesRequests.delete(thumbView);\n          return pdfPage;\n        })\n        .catch(reason => {\n          console.error(\"Unable to get page for thumb view\", reason);\n          // Page error -- there is nothing that can be done.\n          this._pagesRequests.delete(thumbView);\n        });\n      this._pagesRequests.set(thumbView, promise);\n      return promise;\n    }\n\n    forceRendering() {\n      const visibleThumbs = this._getVisibleThumbs();\n      const thumbView = this.renderingQueue.getHighestPriority(\n        visibleThumbs,\n        this._thumbnails,\n        this.scroll.down\n      );\n      if (thumbView) {\n        this._ensurePdfPageLoaded(thumbView).then(() => {\n          this.renderingQueue.renderView(thumbView);\n        });\n        return true;\n      }\n      return false;\n    }\n  }\n\n  return { PDFThumbnailViewer };\n});\ndefine('skylark-pdfjs-viewer/annotation_layer_builder',[\n  \"skylark-pdfjs-display\",\n  \"./ui_utils\",\n  \"./pdf_link_service\"\n],function(pdfjsLib,ui_utils,pdf_link_service){\n  /* Copyright 2014 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { AnnotationLayer } = pdfjsLib;\n  const { NullL10n } =  ui_utils;\n  const { SimpleLinkService } = pdf_link_service;\n\n  /**\n   * @typedef {Object} AnnotationLayerBuilderOptions\n   * @property {HTMLDivElement} pageDiv\n   * @property {PDFPage} pdfPage\n   * @property {AnnotationStorage} [annotationStorage]\n   * @property {string} [imageResourcesPath] - Path for image resources, mainly\n   *   for annotation icons. Include trailing slash.\n   * @property {boolean} renderInteractiveForms\n   * @property {IPDFLinkService} linkService\n   * @property {DownloadManager} downloadManager\n   * @property {IL10n} l10n - Localization service.\n   * @property {boolean} [enableScripting]\n   * @property {Promise<boolean>} [hasJSActionsPromise]\n   * @property {Object} [mouseState]\n   */\n\n  class AnnotationLayerBuilder {\n    /**\n     * @param {AnnotationLayerBuilderOptions} options\n     */\n    constructor({\n      pageDiv,\n      pdfPage,\n      linkService,\n      downloadManager,\n      annotationStorage = null,\n      imageResourcesPath = \"\",\n      renderInteractiveForms = true,\n      l10n = NullL10n,\n      enableScripting = false,\n      hasJSActionsPromise = null,\n      mouseState = null,\n    }) {\n      this.pageDiv = pageDiv;\n      this.pdfPage = pdfPage;\n      this.linkService = linkService;\n      this.downloadManager = downloadManager;\n      this.imageResourcesPath = imageResourcesPath;\n      this.renderInteractiveForms = renderInteractiveForms;\n      this.l10n = l10n;\n      this.annotationStorage = annotationStorage;\n      this.enableScripting = enableScripting;\n      this._hasJSActionsPromise = hasJSActionsPromise;\n      this._mouseState = mouseState;\n\n      this.div = null;\n      this._cancelled = false;\n    }\n\n    /**\n     * @param {PageViewport} viewport\n     * @param {string} intent (default value is 'display')\n     * @returns {Promise<void>} A promise that is resolved when rendering of the\n     *   annotations is complete.\n     */\n    render(viewport, intent = \"display\") {\n      return Promise.all([\n        this.pdfPage.getAnnotations({ intent }),\n        this._hasJSActionsPromise,\n      ]).then(([annotations, hasJSActions = false]) => {\n        if (this._cancelled) {\n          return;\n        }\n        if (annotations.length === 0) {\n          return;\n        }\n\n        const parameters = {\n          viewport: viewport.clone({ dontFlip: true }),\n          div: this.div,\n          annotations,\n          page: this.pdfPage,\n          imageResourcesPath: this.imageResourcesPath,\n          renderInteractiveForms: this.renderInteractiveForms,\n          linkService: this.linkService,\n          downloadManager: this.downloadManager,\n          annotationStorage: this.annotationStorage,\n          enableScripting: this.enableScripting,\n          hasJSActions,\n          mouseState: this._mouseState,\n        };\n\n        if (this.div) {\n          // If an annotationLayer already exists, refresh its children's\n          // transformation matrices.\n          AnnotationLayer.update(parameters);\n        } else {\n          // Create an annotation layer div and render the annotations\n          // if there is at least one annotation.\n          this.div = document.createElement(\"div\");\n          this.div.className = \"annotationLayer\";\n          this.pageDiv.appendChild(this.div);\n          parameters.div = this.div;\n\n          AnnotationLayer.render(parameters);\n          this.l10n.translate(this.div);\n        }\n      });\n    }\n\n    cancel() {\n      this._cancelled = true;\n    }\n\n    hide() {\n      if (!this.div) {\n        return;\n      }\n      this.div.setAttribute(\"hidden\", \"true\");\n    }\n  }\n\n  /**\n   * @implements IPDFAnnotationLayerFactory\n   */\n  class DefaultAnnotationLayerFactory {\n    /**\n     * @param {HTMLDivElement} pageDiv\n     * @param {PDFPage} pdfPage\n     * @param {AnnotationStorage} [annotationStorage]\n     * @param {string} [imageResourcesPath] - Path for image resources, mainly\n     *   for annotation icons. Include trailing slash.\n     * @param {boolean} renderInteractiveForms\n     * @param {IL10n} l10n\n     * @param {boolean} [enableScripting]\n     * @param {Promise<boolean>} [hasJSActionsPromise]\n     * @param {Object} [mouseState]\n     * @returns {AnnotationLayerBuilder}\n     */\n    createAnnotationLayerBuilder(\n      pageDiv,\n      pdfPage,\n      annotationStorage = null,\n      imageResourcesPath = \"\",\n      renderInteractiveForms = true,\n      l10n = NullL10n,\n      enableScripting = false,\n      hasJSActionsPromise = null,\n      mouseState = null\n    ) {\n      return new AnnotationLayerBuilder({\n        pageDiv,\n        pdfPage,\n        imageResourcesPath,\n        renderInteractiveForms,\n        linkService: new SimpleLinkService(),\n        l10n,\n        annotationStorage,\n        enableScripting,\n        hasJSActionsPromise,\n        mouseState,\n      });\n    }\n  }\n\n  return { \n    AnnotationLayerBuilder, \n    DefaultAnnotationLayerFactory \n  };\n});\ndefine('skylark-pdfjs-viewer/pdf_page_view',[\n  \"skylark-pdfjs-display\",\n  \"./pdfjs_dev\",\n  \"./ui_utils\",\n  \"./pdf_rendering_queue\",\n  \"./viewer_compatibility\"\n],function(\n  pdfjsLib,\n  PDFJSDev,\n  ui_utils,\n  pdf_rendering_queue,\n  viewer_compatibility\n){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const {\n    approximateFraction,\n    CSS_UNITS,\n    DEFAULT_SCALE,\n    getOutputScale,\n    NullL10n,\n    RendererType,\n    roundToDivide,\n    TextLayerMode,\n  } = ui_utils;\n  const {\n    createPromiseCapability,\n    RenderingCancelledException,\n    SVGGraphics,\n  } = pdfjsLib;\n  const { RenderingStates } = pdf_rendering_queue;\n  const { viewerCompatibilityParams } = viewer_compatibility;\n\n  /**\n   * @typedef {Object} PDFPageViewOptions\n   * @property {HTMLDivElement} container - The viewer element.\n   * @property {EventBus} eventBus - The application event bus.\n   * @property {number} id - The page unique ID (normally its number).\n   * @property {number} scale - The page scale display.\n   * @property {PageViewport} defaultViewport - The page viewport.\n   * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n   *   A promise that is resolved with an {@link OptionalContentConfig} instance.\n   *   The default value is `null`.\n   * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\n   * @property {IPDFTextLayerFactory} textLayerFactory\n   * @property {number} [textLayerMode] - Controls if the text layer used for\n   *   selection and searching is created, and if the improved text selection\n   *   behaviour is enabled. The constants from {TextLayerMode} should be used.\n   *   The default value is `TextLayerMode.ENABLE`.\n   * @property {IPDFAnnotationLayerFactory} annotationLayerFactory\n   * @property {string} [imageResourcesPath] - Path for image resources, mainly\n   *   for annotation icons. Include trailing slash.\n   * @property {boolean} renderInteractiveForms - Turns on rendering of\n   *   interactive form elements. The default value is `true`.\n   * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\n   * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n   *   some operations. The default value is `false`.\n   * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\n   *   value is `false`.\n   * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\n   *   total pixels, i.e. width * height. Use -1 for no limit. The default value\n   *   is 4096 * 4096 (16 mega-pixels).\n   * @property {IL10n} l10n - Localization service.\n   * @property {boolean} [enableScripting] - Enable embedded script execution.\n   *   The default value is `false`.\n   */\n\n  const MAX_CANVAS_PIXELS = viewerCompatibilityParams.maxCanvasPixels || 16777216;\n\n  /**\n   * @implements {IRenderableView}\n   */\n  class PDFPageView {\n    /**\n     * @param {PDFPageViewOptions} options\n     */\n    constructor(options) {\n      const container = options.container;\n      const defaultViewport = options.defaultViewport;\n\n      this.id = options.id;\n      this.renderingId = \"page\" + this.id;\n\n      this.pdfPage = null;\n      this.pageLabel = null;\n      this.rotation = 0;\n      this.scale = options.scale || DEFAULT_SCALE;\n      this.viewport = defaultViewport;\n      this.pdfPageRotate = defaultViewport.rotation;\n      this._optionalContentConfigPromise =\n        options.optionalContentConfigPromise || null;\n      this.hasRestrictedScaling = false;\n      this.textLayerMode = Number.isInteger(options.textLayerMode)\n        ? options.textLayerMode\n        : TextLayerMode.ENABLE;\n      this.imageResourcesPath = options.imageResourcesPath || \"\";\n      this.renderInteractiveForms =\n        typeof options.renderInteractiveForms === \"boolean\"\n          ? options.renderInteractiveForms\n          : true;\n      this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n      this.maxCanvasPixels = options.maxCanvasPixels || MAX_CANVAS_PIXELS;\n\n      this.eventBus = options.eventBus;\n      this.renderingQueue = options.renderingQueue;\n      this.textLayerFactory = options.textLayerFactory;\n      this.annotationLayerFactory = options.annotationLayerFactory;\n      this.renderer = options.renderer || RendererType.CANVAS;\n      this.enableWebGL = options.enableWebGL || false;\n      this.l10n = options.l10n || NullL10n;\n      this.enableScripting = options.enableScripting || false;\n\n      this.paintTask = null;\n      this.paintedViewportMap = new WeakMap();\n      this.renderingState = RenderingStates.INITIAL;\n      this.resume = null;\n      this._renderError = null;\n\n      this.annotationLayer = null;\n      this.textLayer = null;\n      this.zoomLayer = null;\n\n      const div = document.createElement(\"div\");\n      div.className = \"page\";\n      div.style.width = Math.floor(this.viewport.width) + \"px\";\n      div.style.height = Math.floor(this.viewport.height) + \"px\";\n      div.setAttribute(\"data-page-number\", this.id);\n      this.div = div;\n\n      container.appendChild(div);\n    }\n\n    setPdfPage(pdfPage) {\n      this.pdfPage = pdfPage;\n      this.pdfPageRotate = pdfPage.rotate;\n\n      const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n      this.viewport = pdfPage.getViewport({\n        scale: this.scale * CSS_UNITS,\n        rotation: totalRotation,\n      });\n      this.reset();\n    }\n\n    destroy() {\n      this.reset();\n      if (this.pdfPage) {\n        this.pdfPage.cleanup();\n      }\n    }\n\n    /**\n     * @private\n     */\n    async _renderAnnotationLayer() {\n      let error = null;\n      try {\n        await this.annotationLayer.render(this.viewport, \"display\");\n      } catch (ex) {\n        error = ex;\n      } finally {\n        this.eventBus.dispatch(\"annotationlayerrendered\", {\n          source: this,\n          pageNumber: this.id,\n          error,\n        });\n      }\n    }\n\n    /**\n     * @private\n     */\n    _resetZoomLayer(removeFromDOM = false) {\n      if (!this.zoomLayer) {\n        return;\n      }\n      const zoomLayerCanvas = this.zoomLayer.firstChild;\n      this.paintedViewportMap.delete(zoomLayerCanvas);\n      // Zeroing the width and height causes Firefox to release graphics\n      // resources immediately, which can greatly reduce memory consumption.\n      zoomLayerCanvas.width = 0;\n      zoomLayerCanvas.height = 0;\n\n      if (removeFromDOM) {\n        // Note: `ChildNode.remove` doesn't throw if the parent node is undefined.\n        this.zoomLayer.remove();\n      }\n      this.zoomLayer = null;\n    }\n\n    reset(keepZoomLayer = false, keepAnnotations = false) {\n      this.cancelRendering(keepAnnotations);\n      this.renderingState = RenderingStates.INITIAL;\n\n      const div = this.div;\n      div.style.width = Math.floor(this.viewport.width) + \"px\";\n      div.style.height = Math.floor(this.viewport.height) + \"px\";\n\n      const childNodes = div.childNodes;\n      const currentZoomLayerNode = (keepZoomLayer && this.zoomLayer) || null;\n      const currentAnnotationNode =\n        (keepAnnotations && this.annotationLayer && this.annotationLayer.div) ||\n        null;\n      for (let i = childNodes.length - 1; i >= 0; i--) {\n        const node = childNodes[i];\n        if (currentZoomLayerNode === node || currentAnnotationNode === node) {\n          continue;\n        }\n        div.removeChild(node);\n      }\n      div.removeAttribute(\"data-loaded\");\n\n      if (currentAnnotationNode) {\n        // Hide the annotation layer until all elements are resized\n        // so they are not displayed on the already resized page.\n        this.annotationLayer.hide();\n      } else if (this.annotationLayer) {\n        this.annotationLayer.cancel();\n        this.annotationLayer = null;\n      }\n\n      if (!currentZoomLayerNode) {\n        if (this.canvas) {\n          this.paintedViewportMap.delete(this.canvas);\n          // Zeroing the width and height causes Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this.canvas.width = 0;\n          this.canvas.height = 0;\n          delete this.canvas;\n        }\n        this._resetZoomLayer();\n      }\n      if (this.svg) {\n        this.paintedViewportMap.delete(this.svg);\n        delete this.svg;\n      }\n\n      this.loadingIconDiv = document.createElement(\"div\");\n      this.loadingIconDiv.className = \"loadingIcon\";\n      div.appendChild(this.loadingIconDiv);\n    }\n\n    update(scale, rotation, optionalContentConfigPromise = null) {\n      this.scale = scale || this.scale;\n      // The rotation may be zero.\n      if (typeof rotation !== \"undefined\") {\n        this.rotation = rotation;\n      }\n      if (optionalContentConfigPromise instanceof Promise) {\n        this._optionalContentConfigPromise = optionalContentConfigPromise;\n      }\n\n      const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n      this.viewport = this.viewport.clone({\n        scale: this.scale * CSS_UNITS,\n        rotation: totalRotation,\n      });\n\n      if (this.svg) {\n        this.cssTransform(this.svg, true);\n\n        this.eventBus.dispatch(\"pagerendered\", {\n          source: this,\n          pageNumber: this.id,\n          cssTransform: true,\n          timestamp: performance.now(),\n          error: this._renderError,\n        });\n        return;\n      }\n\n      let isScalingRestricted = false;\n      if (this.canvas && this.maxCanvasPixels > 0) {\n        const outputScale = this.outputScale;\n        if (\n          ((Math.floor(this.viewport.width) * outputScale.sx) | 0) *\n            ((Math.floor(this.viewport.height) * outputScale.sy) | 0) >\n          this.maxCanvasPixels\n        ) {\n          isScalingRestricted = true;\n        }\n      }\n\n      if (this.canvas) {\n        if (\n          this.useOnlyCssZoom ||\n          (this.hasRestrictedScaling && isScalingRestricted)\n        ) {\n          this.cssTransform(this.canvas, true);\n\n          this.eventBus.dispatch(\"pagerendered\", {\n            source: this,\n            pageNumber: this.id,\n            cssTransform: true,\n            timestamp: performance.now(),\n            error: this._renderError,\n          });\n          return;\n        }\n        if (!this.zoomLayer && !this.canvas.hasAttribute(\"hidden\")) {\n          this.zoomLayer = this.canvas.parentNode;\n          this.zoomLayer.style.position = \"absolute\";\n        }\n      }\n      if (this.zoomLayer) {\n        this.cssTransform(this.zoomLayer.firstChild);\n      }\n      this.reset(/* keepZoomLayer = */ true, /* keepAnnotations = */ true);\n    }\n\n    /**\n     * PLEASE NOTE: Most likely you want to use the `this.reset()` method,\n     *              rather than calling this one directly.\n     */\n    cancelRendering(keepAnnotations = false) {\n      if (this.paintTask) {\n        this.paintTask.cancel();\n        this.paintTask = null;\n      }\n      this.resume = null;\n\n      if (this.textLayer) {\n        this.textLayer.cancel();\n        this.textLayer = null;\n      }\n      if (!keepAnnotations && this.annotationLayer) {\n        this.annotationLayer.cancel();\n        this.annotationLayer = null;\n      }\n    }\n\n    cssTransform(target, redrawAnnotations = false) {\n      // Scale target (canvas or svg), its wrapper and page container.\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const div = this.div;\n      target.style.width = target.parentNode.style.width = div.style.width =\n        Math.floor(width) + \"px\";\n      target.style.height = target.parentNode.style.height = div.style.height =\n        Math.floor(height) + \"px\";\n      // The canvas may have been originally rotated; rotate relative to that.\n      const relativeRotation =\n        this.viewport.rotation - this.paintedViewportMap.get(target).rotation;\n      const absRotation = Math.abs(relativeRotation);\n      let scaleX = 1,\n        scaleY = 1;\n      if (absRotation === 90 || absRotation === 270) {\n        // Scale x and y because of the rotation.\n        scaleX = height / width;\n        scaleY = width / height;\n      }\n      target.style.transform = `rotate(${relativeRotation}deg) scale(${scaleX}, ${scaleY})`;\n\n      if (this.textLayer) {\n        // Rotating the text layer is more complicated since the divs inside the\n        // the text layer are rotated.\n        // TODO: This could probably be simplified by drawing the text layer in\n        // one orientation and then rotating overall.\n        const textLayerViewport = this.textLayer.viewport;\n        const textRelativeRotation =\n          this.viewport.rotation - textLayerViewport.rotation;\n        const textAbsRotation = Math.abs(textRelativeRotation);\n        let scale = width / textLayerViewport.width;\n        if (textAbsRotation === 90 || textAbsRotation === 270) {\n          scale = width / textLayerViewport.height;\n        }\n        const textLayerDiv = this.textLayer.textLayerDiv;\n        let transX, transY;\n        switch (textAbsRotation) {\n          case 0:\n            transX = transY = 0;\n            break;\n          case 90:\n            transX = 0;\n            transY = \"-\" + textLayerDiv.style.height;\n            break;\n          case 180:\n            transX = \"-\" + textLayerDiv.style.width;\n            transY = \"-\" + textLayerDiv.style.height;\n            break;\n          case 270:\n            transX = \"-\" + textLayerDiv.style.width;\n            transY = 0;\n            break;\n          default:\n            console.error(\"Bad rotation value.\");\n            break;\n        }\n\n        textLayerDiv.style.transform =\n          `rotate(${textAbsRotation}deg) ` +\n          `scale(${scale}) ` +\n          `translate(${transX}, ${transY})`;\n        textLayerDiv.style.transformOrigin = \"0% 0%\";\n      }\n\n      if (redrawAnnotations && this.annotationLayer) {\n        this._renderAnnotationLayer();\n      }\n    }\n\n    get width() {\n      return this.viewport.width;\n    }\n\n    get height() {\n      return this.viewport.height;\n    }\n\n    getPagePoint(x, y) {\n      return this.viewport.convertToPdfPoint(x, y);\n    }\n\n    draw() {\n      if (this.renderingState !== RenderingStates.INITIAL) {\n        console.error(\"Must be in new state before drawing\");\n        this.reset(); // Ensure that we reset all state to prevent issues.\n      }\n      const { div, pdfPage } = this;\n\n      if (!pdfPage) {\n        this.renderingState = RenderingStates.FINISHED;\n\n        if (this.loadingIconDiv) {\n          div.removeChild(this.loadingIconDiv);\n          delete this.loadingIconDiv;\n        }\n        return Promise.reject(new Error(\"pdfPage is not loaded\"));\n      }\n\n      this.renderingState = RenderingStates.RUNNING;\n\n      // Wrap the canvas so that if it has a CSS transform for high DPI the\n      // overflow will be hidden in Firefox.\n      const canvasWrapper = document.createElement(\"div\");\n      canvasWrapper.style.width = div.style.width;\n      canvasWrapper.style.height = div.style.height;\n      canvasWrapper.classList.add(\"canvasWrapper\");\n\n      if (this.annotationLayer && this.annotationLayer.div) {\n        // The annotation layer needs to stay on top.\n        div.insertBefore(canvasWrapper, this.annotationLayer.div);\n      } else {\n        div.appendChild(canvasWrapper);\n      }\n\n      let textLayer = null;\n      if (this.textLayerMode !== TextLayerMode.DISABLE && this.textLayerFactory) {\n        const textLayerDiv = document.createElement(\"div\");\n        textLayerDiv.className = \"textLayer\";\n        textLayerDiv.style.width = canvasWrapper.style.width;\n        textLayerDiv.style.height = canvasWrapper.style.height;\n        if (this.annotationLayer && this.annotationLayer.div) {\n          // The annotation layer needs to stay on top.\n          div.insertBefore(textLayerDiv, this.annotationLayer.div);\n        } else {\n          div.appendChild(textLayerDiv);\n        }\n\n        textLayer = this.textLayerFactory.createTextLayerBuilder(\n          textLayerDiv,\n          this.id - 1,\n          this.viewport,\n          this.textLayerMode === TextLayerMode.ENABLE_ENHANCE,\n          this.eventBus\n        );\n      }\n      this.textLayer = textLayer;\n\n      let renderContinueCallback = null;\n      if (this.renderingQueue) {\n        renderContinueCallback = cont => {\n          if (!this.renderingQueue.isHighestPriority(this)) {\n            this.renderingState = RenderingStates.PAUSED;\n            this.resume = () => {\n              this.renderingState = RenderingStates.RUNNING;\n              cont();\n            };\n            return;\n          }\n          cont();\n        };\n      }\n\n      const finishPaintTask = async (error = null) => {\n        // The paintTask may have been replaced by a new one, so only remove\n        // the reference to the paintTask if it matches the one that is\n        // triggering this callback.\n        if (paintTask === this.paintTask) {\n          this.paintTask = null;\n        }\n\n        if (error instanceof RenderingCancelledException) {\n          this._renderError = null;\n          return;\n        }\n        this._renderError = error;\n\n        this.renderingState = RenderingStates.FINISHED;\n\n        if (this.loadingIconDiv) {\n          div.removeChild(this.loadingIconDiv);\n          delete this.loadingIconDiv;\n        }\n        this._resetZoomLayer(/* removeFromDOM = */ true);\n\n        this.eventBus.dispatch(\"pagerendered\", {\n          source: this,\n          pageNumber: this.id,\n          cssTransform: false,\n          timestamp: performance.now(),\n          error: this._renderError,\n        });\n\n        if (error) {\n          throw error;\n        }\n      };\n\n      const paintTask =\n        this.renderer === RendererType.SVG\n          ? this.paintOnSvg(canvasWrapper)\n          : this.paintOnCanvas(canvasWrapper);\n      paintTask.onRenderContinue = renderContinueCallback;\n      this.paintTask = paintTask;\n\n      const resultPromise = paintTask.promise.then(\n        function () {\n          return finishPaintTask(null).then(function () {\n            if (textLayer) {\n              const readableStream = pdfPage.streamTextContent({\n                normalizeWhitespace: true,\n              });\n              textLayer.setTextContentStream(readableStream);\n              textLayer.render();\n            }\n          });\n        },\n        function (reason) {\n          return finishPaintTask(reason);\n        }\n      );\n\n      if (this.annotationLayerFactory) {\n        if (!this.annotationLayer) {\n          this.annotationLayer = this.annotationLayerFactory.createAnnotationLayerBuilder(\n            div,\n            pdfPage,\n            /* annotationStorage = */ null,\n            this.imageResourcesPath,\n            this.renderInteractiveForms,\n            this.l10n,\n            this.enableScripting,\n            /* hasJSActionsPromise = */ null,\n            /* mouseState = */ null\n          );\n        }\n        this._renderAnnotationLayer();\n      }\n      div.setAttribute(\"data-loaded\", true);\n\n      this.eventBus.dispatch(\"pagerender\", {\n        source: this,\n        pageNumber: this.id,\n      });\n      return resultPromise;\n    }\n\n    paintOnCanvas(canvasWrapper) {\n      const renderCapability = createPromiseCapability();\n      const result = {\n        promise: renderCapability.promise,\n        onRenderContinue(cont) {\n          cont();\n        },\n        cancel() {\n          renderTask.cancel();\n        },\n      };\n\n      const viewport = this.viewport;\n      const canvas = document.createElement(\"canvas\");\n      this.l10n\n        .get(\"page_canvas\", { page: this.id }, \"Page {{page}}\")\n        .then(msg => {\n          canvas.setAttribute(\"aria-label\", msg);\n        });\n\n      // Keep the canvas hidden until the first draw callback, or until drawing\n      // is complete when `!this.renderingQueue`, to prevent black flickering.\n      canvas.setAttribute(\"hidden\", \"hidden\");\n      let isCanvasHidden = true;\n      const showCanvas = function () {\n        if (isCanvasHidden) {\n          canvas.removeAttribute(\"hidden\");\n          isCanvasHidden = false;\n        }\n      };\n\n      canvasWrapper.appendChild(canvas);\n      this.canvas = canvas;\n\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n\n      const ctx = canvas.getContext(\"2d\", { alpha: false });\n      const outputScale = getOutputScale(ctx);\n      this.outputScale = outputScale;\n\n      if (this.useOnlyCssZoom) {\n        const actualSizeViewport = viewport.clone({ scale: CSS_UNITS });\n        // Use a scale that makes the canvas have the originally intended size\n        // of the page.\n        outputScale.sx *= actualSizeViewport.width / viewport.width;\n        outputScale.sy *= actualSizeViewport.height / viewport.height;\n        outputScale.scaled = true;\n      }\n\n      if (this.maxCanvasPixels > 0) {\n        const pixelsInViewport = viewport.width * viewport.height;\n        const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\n        if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n          outputScale.sx = maxScale;\n          outputScale.sy = maxScale;\n          outputScale.scaled = true;\n          this.hasRestrictedScaling = true;\n        } else {\n          this.hasRestrictedScaling = false;\n        }\n      }\n\n      const sfx = approximateFraction(outputScale.sx);\n      const sfy = approximateFraction(outputScale.sy);\n      canvas.width = roundToDivide(viewport.width * outputScale.sx, sfx[0]);\n      canvas.height = roundToDivide(viewport.height * outputScale.sy, sfy[0]);\n      canvas.style.width = roundToDivide(viewport.width, sfx[1]) + \"px\";\n      canvas.style.height = roundToDivide(viewport.height, sfy[1]) + \"px\";\n      // Add the viewport so it's known what it was originally drawn with.\n      this.paintedViewportMap.set(canvas, viewport);\n\n      // Rendering area\n      const transform = !outputScale.scaled\n        ? null\n        : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n      const renderContext = {\n        canvasContext: ctx,\n        transform,\n        viewport: this.viewport,\n        enableWebGL: this.enableWebGL,\n        renderInteractiveForms: this.renderInteractiveForms,\n        optionalContentConfigPromise: this._optionalContentConfigPromise,\n      };\n      const renderTask = this.pdfPage.render(renderContext);\n      renderTask.onContinue = function (cont) {\n        showCanvas();\n        if (result.onRenderContinue) {\n          result.onRenderContinue(cont);\n        } else {\n          cont();\n        }\n      };\n\n      renderTask.promise.then(\n        function () {\n          showCanvas();\n          renderCapability.resolve(undefined);\n        },\n        function (error) {\n          showCanvas();\n          renderCapability.reject(error);\n        }\n      );\n      return result;\n    }\n\n    paintOnSvg(wrapper) {\n      if (\n        typeof PDFJSDev !== \"undefined\" &&\n        PDFJSDev.test(\"MOZCENTRAL || CHROME\")\n      ) {\n        // Return a mock object, to prevent errors such as e.g.\n        // \"TypeError: paintTask.promise is undefined\".\n        return {\n          promise: Promise.reject(new Error(\"SVG rendering is not supported.\")),\n          onRenderContinue(cont) {},\n          cancel() {},\n        };\n      }\n\n      let cancelled = false;\n      const ensureNotCancelled = () => {\n        if (cancelled) {\n          throw new RenderingCancelledException(\n            `Rendering cancelled, page ${this.id}`,\n            \"svg\"\n          );\n        }\n      };\n\n      const pdfPage = this.pdfPage;\n      const actualSizeViewport = this.viewport.clone({ scale: CSS_UNITS });\n      const promise = pdfPage.getOperatorList().then(opList => {\n        ensureNotCancelled();\n        const svgGfx = new SVGGraphics(pdfPage.commonObjs, pdfPage.objs);\n        return svgGfx.getSVG(opList, actualSizeViewport).then(svg => {\n          ensureNotCancelled();\n          this.svg = svg;\n          this.paintedViewportMap.set(svg, actualSizeViewport);\n\n          svg.style.width = wrapper.style.width;\n          svg.style.height = wrapper.style.height;\n          this.renderingState = RenderingStates.FINISHED;\n          wrapper.appendChild(svg);\n        });\n      });\n\n      return {\n        promise,\n        onRenderContinue(cont) {\n          cont();\n        },\n        cancel() {\n          cancelled = true;\n        },\n      };\n    }\n\n    /**\n     * @param {string|null} label\n     */\n    setPageLabel(label) {\n      this.pageLabel = typeof label === \"string\" ? label : null;\n\n      if (this.pageLabel !== null) {\n        this.div.setAttribute(\"data-page-label\", this.pageLabel);\n      } else {\n        this.div.removeAttribute(\"data-page-label\");\n      }\n    }\n  }\n\n  return { PDFPageView };\n});\ndefine('skylark-pdfjs-viewer/text_layer_builder',[\n  \"skylark-pdfjs-display\",\n  \"./pdfjs_dev\"\n],function(pdfjsLib,PDFJSDev){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { renderTextLayer } = pdfjsLib;\n\n  const EXPAND_DIVS_TIMEOUT = 300; // ms\n\n  /**\n   * @typedef {Object} TextLayerBuilderOptions\n   * @property {HTMLDivElement} textLayerDiv - The text layer container.\n   * @property {EventBus} eventBus - The application event bus.\n   * @property {number} pageIndex - The page index.\n   * @property {PageViewport} viewport - The viewport of the text layer.\n   * @property {PDFFindController} findController\n   * @property {boolean} enhanceTextSelection - Option to turn on improved\n   *   text selection.\n   */\n\n  /**\n   * The text layer builder provides text selection functionality for the PDF.\n   * It does this by creating overlay divs over the PDF's text. These divs\n   * contain text that matches the PDF text they are overlaying. This object\n   * also provides a way to highlight text that is being searched for.\n   */\n  class TextLayerBuilder {\n    constructor({\n      textLayerDiv,\n      eventBus,\n      pageIndex,\n      viewport,\n      findController = null,\n      enhanceTextSelection = false,\n    }) {\n      this.textLayerDiv = textLayerDiv;\n      this.eventBus = eventBus;\n      this.textContent = null;\n      this.textContentItemsStr = [];\n      this.textContentStream = null;\n      this.renderingDone = false;\n      this.pageIdx = pageIndex;\n      this.pageNumber = this.pageIdx + 1;\n      this.matches = [];\n      this.viewport = viewport;\n      this.textDivs = [];\n      this.findController = findController;\n      this.textLayerRenderTask = null;\n      this.enhanceTextSelection = enhanceTextSelection;\n\n      this._onUpdateTextLayerMatches = null;\n      this._bindMouse();\n    }\n\n    /**\n     * @private\n     */\n    _finishRendering() {\n      this.renderingDone = true;\n\n      if (!this.enhanceTextSelection) {\n        const endOfContent = document.createElement(\"div\");\n        endOfContent.className = \"endOfContent\";\n        this.textLayerDiv.appendChild(endOfContent);\n      }\n\n      this.eventBus.dispatch(\"textlayerrendered\", {\n        source: this,\n        pageNumber: this.pageNumber,\n        numTextDivs: this.textDivs.length,\n      });\n    }\n\n    /**\n     * Renders the text layer.\n     *\n     * @param {number} [timeout] - Wait for a specified amount of milliseconds\n     *                             before rendering.\n     */\n    render(timeout = 0) {\n      if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n        return;\n      }\n      this.cancel();\n\n      this.textDivs = [];\n      const textLayerFrag = document.createDocumentFragment();\n      this.textLayerRenderTask = renderTextLayer({\n        textContent: this.textContent,\n        textContentStream: this.textContentStream,\n        container: textLayerFrag,\n        viewport: this.viewport,\n        textDivs: this.textDivs,\n        textContentItemsStr: this.textContentItemsStr,\n        timeout,\n        enhanceTextSelection: this.enhanceTextSelection,\n      });\n      this.textLayerRenderTask.promise.then(\n        () => {\n          this.textLayerDiv.appendChild(textLayerFrag);\n          this._finishRendering();\n          this._updateMatches();\n        },\n        function (reason) {\n          // Cancelled or failed to render text layer; skipping errors.\n        }\n      );\n\n      if (!this._onUpdateTextLayerMatches) {\n        this._onUpdateTextLayerMatches = evt => {\n          if (evt.pageIndex === this.pageIdx || evt.pageIndex === -1) {\n            this._updateMatches();\n          }\n        };\n        this.eventBus._on(\n          \"updatetextlayermatches\",\n          this._onUpdateTextLayerMatches\n        );\n      }\n    }\n\n    /**\n     * Cancel rendering of the text layer.\n     */\n    cancel() {\n      if (this.textLayerRenderTask) {\n        this.textLayerRenderTask.cancel();\n        this.textLayerRenderTask = null;\n      }\n      if (this._onUpdateTextLayerMatches) {\n        this.eventBus._off(\n          \"updatetextlayermatches\",\n          this._onUpdateTextLayerMatches\n        );\n        this._onUpdateTextLayerMatches = null;\n      }\n    }\n\n    setTextContentStream(readableStream) {\n      this.cancel();\n      this.textContentStream = readableStream;\n    }\n\n    setTextContent(textContent) {\n      this.cancel();\n      this.textContent = textContent;\n    }\n\n    _convertMatches(matches, matchesLength) {\n      // Early exit if there is nothing to convert.\n      if (!matches) {\n        return [];\n      }\n      const { textContentItemsStr } = this;\n\n      let i = 0,\n        iIndex = 0;\n      const end = textContentItemsStr.length - 1;\n      const result = [];\n\n      for (let m = 0, mm = matches.length; m < mm; m++) {\n        // Calculate the start position.\n        let matchIdx = matches[m];\n\n        // Loop over the divIdxs.\n        while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n          iIndex += textContentItemsStr[i].length;\n          i++;\n        }\n\n        if (i === textContentItemsStr.length) {\n          console.error(\"Could not find a matching mapping\");\n        }\n\n        const match = {\n          begin: {\n            divIdx: i,\n            offset: matchIdx - iIndex,\n          },\n        };\n\n        // Calculate the end position.\n        matchIdx += matchesLength[m];\n\n        // Somewhat the same array as above, but use > instead of >= to get\n        // the end position right.\n        while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n          iIndex += textContentItemsStr[i].length;\n          i++;\n        }\n\n        match.end = {\n          divIdx: i,\n          offset: matchIdx - iIndex,\n        };\n        result.push(match);\n      }\n      return result;\n    }\n\n    _renderMatches(matches) {\n      // Early exit if there is nothing to render.\n      if (matches.length === 0) {\n        return;\n      }\n      const { findController, pageIdx, textContentItemsStr, textDivs } = this;\n\n      const isSelectedPage = pageIdx === findController.selected.pageIdx;\n      const selectedMatchIdx = findController.selected.matchIdx;\n      const highlightAll = findController.state.highlightAll;\n      let prevEnd = null;\n      const infinity = {\n        divIdx: -1,\n        offset: undefined,\n      };\n\n      function beginText(begin, className) {\n        const divIdx = begin.divIdx;\n        textDivs[divIdx].textContent = \"\";\n        appendTextToDiv(divIdx, 0, begin.offset, className);\n      }\n\n      function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n        const div = textDivs[divIdx];\n        const content = textContentItemsStr[divIdx].substring(\n          fromOffset,\n          toOffset\n        );\n        const node = document.createTextNode(content);\n        if (className) {\n          const span = document.createElement(\"span\");\n          span.className = className;\n          span.appendChild(node);\n          div.appendChild(span);\n          return;\n        }\n        div.appendChild(node);\n      }\n\n      let i0 = selectedMatchIdx,\n        i1 = i0 + 1;\n      if (highlightAll) {\n        i0 = 0;\n        i1 = matches.length;\n      } else if (!isSelectedPage) {\n        // Not highlighting all and this isn't the selected page, so do nothing.\n        return;\n      }\n\n      for (let i = i0; i < i1; i++) {\n        const match = matches[i];\n        const begin = match.begin;\n        const end = match.end;\n        const isSelected = isSelectedPage && i === selectedMatchIdx;\n        const highlightSuffix = isSelected ? \" selected\" : \"\";\n\n        if (isSelected) {\n          // Attempt to scroll the selected match into view.\n          findController.scrollMatchIntoView({\n            element: textDivs[begin.divIdx],\n            pageIndex: pageIdx,\n            matchIndex: selectedMatchIdx,\n          });\n        }\n\n        // Match inside new div.\n        if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n          // If there was a previous div, then add the text at the end.\n          if (prevEnd !== null) {\n            appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n          }\n          // Clear the divs and set the content until the starting point.\n          beginText(begin);\n        } else {\n          appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n        }\n\n        if (begin.divIdx === end.divIdx) {\n          appendTextToDiv(\n            begin.divIdx,\n            begin.offset,\n            end.offset,\n            \"highlight\" + highlightSuffix\n          );\n        } else {\n          appendTextToDiv(\n            begin.divIdx,\n            begin.offset,\n            infinity.offset,\n            \"highlight begin\" + highlightSuffix\n          );\n          for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n            textDivs[n0].className = \"highlight middle\" + highlightSuffix;\n          }\n          beginText(end, \"highlight end\" + highlightSuffix);\n        }\n        prevEnd = end;\n      }\n\n      if (prevEnd) {\n        appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n      }\n    }\n\n    _updateMatches() {\n      // Only show matches when all rendering is done.\n      if (!this.renderingDone) {\n        return;\n      }\n      const {\n        findController,\n        matches,\n        pageIdx,\n        textContentItemsStr,\n        textDivs,\n      } = this;\n      let clearedUntilDivIdx = -1;\n\n      // Clear all current matches.\n      for (let i = 0, ii = matches.length; i < ii; i++) {\n        const match = matches[i];\n        const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n        for (let n = begin, end = match.end.divIdx; n <= end; n++) {\n          const div = textDivs[n];\n          div.textContent = textContentItemsStr[n];\n          div.className = \"\";\n        }\n        clearedUntilDivIdx = match.end.divIdx + 1;\n      }\n\n      if (!findController || !findController.highlightMatches) {\n        return;\n      }\n      // Convert the matches on the `findController` into the match format\n      // used for the textLayer.\n      const pageMatches = findController.pageMatches[pageIdx] || null;\n      const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\n\n      this.matches = this._convertMatches(pageMatches, pageMatchesLength);\n      this._renderMatches(this.matches);\n    }\n\n    /**\n     * Improves text selection by adding an additional div where the mouse was\n     * clicked. This reduces flickering of the content if the mouse is slowly\n     * dragged up or down.\n     *\n     * @private\n     */\n    _bindMouse() {\n      const div = this.textLayerDiv;\n      let expandDivsTimer = null;\n\n      div.addEventListener(\"mousedown\", evt => {\n        if (this.enhanceTextSelection && this.textLayerRenderTask) {\n          this.textLayerRenderTask.expandTextDivs(true);\n          if (\n            (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) &&\n            expandDivsTimer\n          ) {\n            clearTimeout(expandDivsTimer);\n            expandDivsTimer = null;\n          }\n          return;\n        }\n\n        const end = div.querySelector(\".endOfContent\");\n        if (!end) {\n          return;\n        }\n        if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n          // On non-Firefox browsers, the selection will feel better if the height\n          // of the `endOfContent` div is adjusted to start at mouse click\n          // location. This avoids flickering when the selection moves up.\n          // However it does not work when selection is started on empty space.\n          let adjustTop = evt.target !== div;\n          if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n            adjustTop =\n              adjustTop &&\n              window\n                .getComputedStyle(end)\n                .getPropertyValue(\"-moz-user-select\") !== \"none\";\n          }\n          if (adjustTop) {\n            const divBounds = div.getBoundingClientRect();\n            const r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height);\n            end.style.top = (r * 100).toFixed(2) + \"%\";\n          }\n        }\n        end.classList.add(\"active\");\n      });\n\n      div.addEventListener(\"mouseup\", () => {\n        if (this.enhanceTextSelection && this.textLayerRenderTask) {\n          if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n            expandDivsTimer = setTimeout(() => {\n              if (this.textLayerRenderTask) {\n                this.textLayerRenderTask.expandTextDivs(false);\n              }\n              expandDivsTimer = null;\n            }, EXPAND_DIVS_TIMEOUT);\n          } else {\n            this.textLayerRenderTask.expandTextDivs(false);\n          }\n          return;\n        }\n\n        const end = div.querySelector(\".endOfContent\");\n        if (!end) {\n          return;\n        }\n        if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n          end.style.top = \"\";\n        }\n        end.classList.remove(\"active\");\n      });\n    }\n  }\n\n  /**\n   * @implements IPDFTextLayerFactory\n   */\n  class DefaultTextLayerFactory {\n    /**\n     * @param {HTMLDivElement} textLayerDiv\n     * @param {number} pageIndex\n     * @param {PageViewport} viewport\n     * @param {boolean} enhanceTextSelection\n     * @param {EventBus} eventBus\n     * @returns {TextLayerBuilder}\n     */\n    createTextLayerBuilder(\n      textLayerDiv,\n      pageIndex,\n      viewport,\n      enhanceTextSelection = false,\n      eventBus\n    ) {\n      return new TextLayerBuilder({\n        textLayerDiv,\n        pageIndex,\n        viewport,\n        enhanceTextSelection,\n        eventBus,\n      });\n    }\n  }\n\n  return { \n    DefaultTextLayerFactory, \n    TextLayerBuilder \n  };\n});\ndefine('skylark-pdfjs-viewer/base_viewer',[\n  \"skylark-pdfjs-display\",\n  \"./pdfjs_dev\",\n  \"./ui_utils\",\n  \"./pdf_rendering_queue\",\n  \"./annotation_layer_builder\",\n  \"./pdf_page_view\",\n  \"./pdf_link_service\",\n  \"./text_layer_builder\"\n],function(\n  pdfjsLib,\n  PDFJSDev,\n  ui_utils,\n  pdf_rendering_queue,\n  annotation_layer_builder,\n  pdf_page_view,\n  pdf_link_service,\n  text_layer_builder\n\n){\n\n  /* Copyright 2014 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { createPromiseCapability, version } = pdfjsLib;\n  const {\n    CSS_UNITS,\n    DEFAULT_SCALE,\n    DEFAULT_SCALE_VALUE,\n    getVisibleElements,\n    isPortraitOrientation,\n    isValidRotation,\n    isValidScrollMode,\n    isValidSpreadMode,\n    MAX_AUTO_SCALE,\n    moveToEndOfArray,\n    NullL10n,\n    PresentationModeState,\n    RendererType,\n    SCROLLBAR_PADDING,\n    scrollIntoView,\n    ScrollMode,\n    SpreadMode,\n    TextLayerMode,\n    UNKNOWN_SCALE,\n    VERTICAL_PADDING,\n    watchScroll,\n  } = ui_utils;\n  const { PDFRenderingQueue, RenderingStates } = pdf_rendering_queue;\n  const { AnnotationLayerBuilder } = annotation_layer_builder;\n  const { PDFPageView } = pdf_page_view;\n  const { SimpleLinkService } = pdf_link_service;\n  const { TextLayerBuilder } = text_layer_builder;\n\n  const DEFAULT_CACHE_SIZE = 10;\n\n  /**\n   * @typedef {Object} PDFViewerOptions\n   * @property {HTMLDivElement} container - The container for the viewer element.\n   * @property {HTMLDivElement} [viewer] - The viewer element.\n   * @property {EventBus} eventBus - The application event bus.\n   * @property {IPDFLinkService} linkService - The navigation/linking service.\n   * @property {DownloadManager} [downloadManager] - The download manager\n   *   component.\n   * @property {PDFFindController} [findController] - The find controller\n   *   component.\n   * @property {PDFRenderingQueue} [renderingQueue] - The rendering queue object.\n   * @property {boolean} [removePageBorders] - Removes the border shadow around\n   *   the pages. The default value is `false`.\n   * @property {number} [textLayerMode] - Controls if the text layer used for\n   *   selection and searching is created, and if the improved text selection\n   *   behaviour is enabled. The constants from {TextLayerMode} should be used.\n   *   The default value is `TextLayerMode.ENABLE`.\n   * @property {string} [imageResourcesPath] - Path for image resources, mainly\n   *   mainly for annotation icons. Include trailing slash.\n   * @property {boolean} [renderInteractiveForms] - Enables rendering of\n   *   interactive form elements. The default value is `true`.\n   * @property {boolean} [enablePrintAutoRotate] - Enables automatic rotation of\n   *   landscape pages upon printing. The default is `false`.\n   * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\n   * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n   *   some operations. The default value is `false`.\n   * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\n   *   value is `false`.\n   * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\n   *   total pixels, i.e. width * height. Use -1 for no limit. The default value\n   *   is 4096 * 4096 (16 mega-pixels).\n   * @property {IL10n} l10n - Localization service.\n   * @property {boolean} [enableScripting] - Enable embedded script execution.\n   *   The default value is `false`.\n   * @property {Object} [mouseState] - The mouse button state. The default value\n   *   is `null`.\n   */\n\n  function PDFPageViewBuffer(size) {\n    const data = [];\n    this.push = function (view) {\n      const i = data.indexOf(view);\n      if (i >= 0) {\n        data.splice(i, 1);\n      }\n      data.push(view);\n      if (data.length > size) {\n        data.shift().destroy();\n      }\n    };\n    /**\n     * After calling resize, the size of the buffer will be newSize. The optional\n     * parameter pagesToKeep is, if present, an array of pages to push to the back\n     * of the buffer, delaying their destruction. The size of pagesToKeep has no\n     * impact on the final size of the buffer; if pagesToKeep has length larger\n     * than newSize, some of those pages will be destroyed anyway.\n     */\n    this.resize = function (newSize, pagesToKeep) {\n      size = newSize;\n      if (pagesToKeep) {\n        const pageIdsToKeep = new Set();\n        for (let i = 0, iMax = pagesToKeep.length; i < iMax; ++i) {\n          pageIdsToKeep.add(pagesToKeep[i].id);\n        }\n        moveToEndOfArray(data, function (page) {\n          return pageIdsToKeep.has(page.id);\n        });\n      }\n      while (data.length > size) {\n        data.shift().destroy();\n      }\n    };\n\n    this.has = function (view) {\n      return data.includes(view);\n    };\n  }\n\n  function isSameScale(oldScale, newScale) {\n    if (newScale === oldScale) {\n      return true;\n    }\n    if (Math.abs(newScale - oldScale) < 1e-15) {\n      // Prevent unnecessary re-rendering of all pages when the scale\n      // changes only because of limited numerical precision.\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Simple viewer control to display PDF content/pages.\n   * @implements {IRenderableView}\n   */\n  class BaseViewer {\n    /**\n     * @param {PDFViewerOptions} options\n     */\n    constructor(options) {\n      if (this.constructor === BaseViewer) {\n        throw new Error(\"Cannot initialize BaseViewer.\");\n      }\n\n      //TODO : checking\n      const viewerVersion =\n        typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n      if (version !== viewerVersion) {\n        throw new Error(\n          `The API version \"${version}\" does not match the Viewer version \"${viewerVersion}\".`\n        );\n      }\n      this._name = this.constructor.name;\n\n      this.container = options.container;\n      this.viewer = options.viewer || options.container.firstElementChild;\n\n      //TODO : checking\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n      ) {\n        if (\n          !(\n            ///this.container?.tagName.toUpperCase() === \"DIV\" && // lwf \n            this.container && this.container.tagName.toUpperCase() === \"DIV\" &&\n            ///this.viewer?.tagName.toUpperCase() === \"DIV\" // lwf\n            this.viewer && this.viewer.tagName.toUpperCase() === \"DIV\"\n          )\n        ) {\n          throw new Error(\"Invalid `container` and/or `viewer` option.\");\n        }\n\n        if (getComputedStyle(this.container).position !== \"absolute\") {\n          throw new Error(\"The `container` must be absolutely positioned.\");\n        }\n      }\n      this.eventBus = options.eventBus;\n      this.linkService = options.linkService || new SimpleLinkService();\n      this.downloadManager = options.downloadManager || null;\n      this.findController = options.findController || null;\n      this.removePageBorders = options.removePageBorders || false;\n      this.textLayerMode = Number.isInteger(options.textLayerMode)\n        ? options.textLayerMode\n        : TextLayerMode.ENABLE;\n      this.imageResourcesPath = options.imageResourcesPath || \"\";\n      this.renderInteractiveForms =\n        typeof options.renderInteractiveForms === \"boolean\"\n          ? options.renderInteractiveForms\n          : true;\n      this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\n      this.renderer = options.renderer || RendererType.CANVAS;\n      this.enableWebGL = options.enableWebGL || false;\n      this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n      this.maxCanvasPixels = options.maxCanvasPixels;\n      this.l10n = options.l10n || NullL10n;\n      this.enableScripting = options.enableScripting || false;\n      this._mouseState = options.mouseState || null;\n\n      this.defaultRenderingQueue = !options.renderingQueue;\n      if (this.defaultRenderingQueue) {\n        // Custom rendering queue is not specified, using default one\n        this.renderingQueue = new PDFRenderingQueue();\n        this.renderingQueue.setViewer(this);\n      } else {\n        this.renderingQueue = options.renderingQueue;\n      }\n\n      this.scroll = watchScroll(this.container, this._scrollUpdate.bind(this));\n      this.presentationModeState = PresentationModeState.UNKNOWN;\n      this._onBeforeDraw = this._onAfterDraw = null;\n      this._resetView();\n\n      if (this.removePageBorders) {\n        this.viewer.classList.add(\"removePageBorders\");\n      }\n      // Defer the dispatching of this event, to give other viewer components\n      // time to initialize *and* register 'baseviewerinit' event listeners.\n      Promise.resolve().then(() => {\n        this.eventBus.dispatch(\"baseviewerinit\", { source: this });\n      });\n    }\n\n    get pagesCount() {\n      return this._pages.length;\n    }\n\n    getPageView(index) {\n      return this._pages[index];\n    }\n\n    /**\n     * @type {boolean} - True if all {PDFPageView} objects are initialized.\n     */\n    get pageViewsReady() {\n      if (!this._pagesCapability.settled) {\n        return false;\n      }\n      // Prevent printing errors when 'disableAutoFetch' is set, by ensuring\n      // that *all* pages have in fact been completely loaded.\n      return this._pages.every(function (pageView) {\n        return pageView && pageView.pdfPage;\n      });\n    }\n\n    /**\n     * @type {number}\n     */\n    get currentPageNumber() {\n      return this._currentPageNumber;\n    }\n\n    /**\n     * @param {number} val - The page number.\n     */\n    set currentPageNumber(val) {\n      if (!Number.isInteger(val)) {\n        throw new Error(\"Invalid page number.\");\n      }\n      if (!this.pdfDocument) {\n        return;\n      }\n      // The intent can be to just reset a scroll position and/or scale.\n      if (!this._setCurrentPageNumber(val, /* resetCurrentPageView = */ true)) {\n        console.error(\n          `${this._name}.currentPageNumber: \"${val}\" is not a valid page.`\n        );\n      }\n    }\n\n    /**\n     * @returns {boolean} Whether the pageNumber is valid (within bounds).\n     * @private\n     */\n    _setCurrentPageNumber(val, resetCurrentPageView = false) {\n      if (this._currentPageNumber === val) {\n        if (resetCurrentPageView) {\n          this._resetCurrentPageView();\n        }\n        return true;\n      }\n\n      if (!(0 < val && val <= this.pagesCount)) {\n        return false;\n      }\n      const previous = this._currentPageNumber;\n      this._currentPageNumber = val;\n\n      this.eventBus.dispatch(\"pagechanging\", {\n        source: this,\n        pageNumber: val,\n        pageLabel: this._pageLabels && this._pageLabels[val - 1],\n        previous,\n      });\n\n      if (resetCurrentPageView) {\n        this._resetCurrentPageView();\n      }\n      return true;\n    }\n\n    /**\n     * @type {string|null} Returns the current page label, or `null` if no page\n     *   labels exist.\n     */\n    get currentPageLabel() {\n      return this._pageLabels && this._pageLabels[this._currentPageNumber - 1];\n    }\n\n    /**\n     * @param {string} val - The page label.\n     */\n    set currentPageLabel(val) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      let page = val | 0; // Fallback page number.\n      if (this._pageLabels) {\n        const i = this._pageLabels.indexOf(val);\n        if (i >= 0) {\n          page = i + 1;\n        }\n      }\n      // The intent can be to just reset a scroll position and/or scale.\n      if (!this._setCurrentPageNumber(page, /* resetCurrentPageView = */ true)) {\n        console.error(\n          `${this._name}.currentPageLabel: \"${val}\" is not a valid page.`\n        );\n      }\n    }\n\n    /**\n     * @type {number}\n     */\n    get currentScale() {\n      return this._currentScale !== UNKNOWN_SCALE\n        ? this._currentScale\n        : DEFAULT_SCALE;\n    }\n\n    /**\n     * @param {number} val - Scale of the pages in percents.\n     */\n    set currentScale(val) {\n      if (isNaN(val)) {\n        throw new Error(\"Invalid numeric scale.\");\n      }\n      if (!this.pdfDocument) {\n        return;\n      }\n      this._setScale(val, false);\n    }\n\n    /**\n     * @type {string}\n     */\n    get currentScaleValue() {\n      return this._currentScaleValue;\n    }\n\n    /**\n     * @param val - The scale of the pages (in percent or predefined value).\n     */\n    set currentScaleValue(val) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      this._setScale(val, false);\n    }\n\n    /**\n     * @type {number}\n     */\n    get pagesRotation() {\n      return this._pagesRotation;\n    }\n\n    /**\n     * @param {number} rotation - The rotation of the pages (0, 90, 180, 270).\n     */\n    set pagesRotation(rotation) {\n      if (!isValidRotation(rotation)) {\n        throw new Error(\"Invalid pages rotation angle.\");\n      }\n      if (!this.pdfDocument) {\n        return;\n      }\n      if (this._pagesRotation === rotation) {\n        return; // The rotation didn't change.\n      }\n      this._pagesRotation = rotation;\n\n      const pageNumber = this._currentPageNumber;\n\n      for (let i = 0, ii = this._pages.length; i < ii; i++) {\n        const pageView = this._pages[i];\n        pageView.update(pageView.scale, rotation);\n      }\n      // Prevent errors in case the rotation changes *before* the scale has been\n      // set to a non-default value.\n      if (this._currentScaleValue) {\n        this._setScale(this._currentScaleValue, true);\n      }\n\n      this.eventBus.dispatch(\"rotationchanging\", {\n        source: this,\n        pagesRotation: rotation,\n        pageNumber,\n      });\n\n      if (this.defaultRenderingQueue) {\n        this.update();\n      }\n    }\n\n    get firstPagePromise() {\n      return this.pdfDocument ? this._firstPageCapability.promise : null;\n    }\n\n    get onePageRendered() {\n      return this.pdfDocument ? this._onePageRenderedCapability.promise : null;\n    }\n\n    get pagesPromise() {\n      return this.pdfDocument ? this._pagesCapability.promise : null;\n    }\n\n    /**\n     * @private\n     */\n    get _viewerElement() {\n      // In most viewers, e.g. `PDFViewer`, this should return `this.viewer`.\n      throw new Error(\"Not implemented: _viewerElement\");\n    }\n\n    /**\n     * @private\n     */\n    _onePageRenderedOrForceFetch() {\n      // Unless the viewer *and* its pages are visible, rendering won't start and\n      // `this._onePageRenderedCapability` thus won't be resolved.\n      // To ensure that automatic printing, on document load, still works even in\n      // those cases we force-allow fetching of all pages when:\n      //  - The viewer is hidden in the DOM, e.g. in a `display: none` <iframe>\n      //    element; fixes bug 1618621.\n      //  - The viewer is visible, but none of the pages are (e.g. if the\n      //    viewer is very small); fixes bug 1618955.\n      if (\n        !this.container.offsetParent ||\n        this._getVisiblePages().views.length === 0\n      ) {\n        return Promise.resolve();\n      }\n      return this._onePageRenderedCapability.promise;\n    }\n\n    /**\n     * @param pdfDocument {PDFDocument}\n     */\n    setDocument(pdfDocument) {\n      if (this.pdfDocument) {\n        this.eventBus.dispatch(\"pagesdestroy\", { source: this });\n\n        this._cancelRendering();\n        this._resetView();\n\n        if (this.findController) {\n          this.findController.setDocument(null);\n        }\n      }\n\n      this.pdfDocument = pdfDocument;\n      if (!pdfDocument) {\n        return;\n      }\n      const pagesCount = pdfDocument.numPages;\n      const firstPagePromise = pdfDocument.getPage(1);\n      // Rendering (potentially) depends on this, hence fetching it immediately.\n      const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig();\n\n      this._pagesCapability.promise.then(() => {\n        this.eventBus.dispatch(\"pagesloaded\", {\n          source: this,\n          pagesCount,\n        });\n      });\n\n      this._onBeforeDraw = evt => {\n        const pageView = this._pages[evt.pageNumber - 1];\n        if (!pageView) {\n          return;\n        }\n        // Add the page to the buffer at the start of drawing. That way it can be\n        // evicted from the buffer and destroyed even if we pause its rendering.\n        this._buffer.push(pageView);\n      };\n      this.eventBus._on(\"pagerender\", this._onBeforeDraw);\n\n      this._onAfterDraw = evt => {\n        if (evt.cssTransform || this._onePageRenderedCapability.settled) {\n          return;\n        }\n        this._onePageRenderedCapability.resolve();\n\n        this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n        this._onAfterDraw = null;\n      };\n      this.eventBus._on(\"pagerendered\", this._onAfterDraw);\n\n      // Fetch a single page so we can get a viewport that will be the default\n      // viewport for all pages\n      firstPagePromise\n        .then(firstPdfPage => {\n          this._firstPageCapability.resolve(firstPdfPage);\n          this._optionalContentConfigPromise = optionalContentConfigPromise;\n\n          const scale = this.currentScale;\n          const viewport = firstPdfPage.getViewport({ scale: scale * CSS_UNITS });\n          const textLayerFactory =\n            this.textLayerMode !== TextLayerMode.DISABLE ? this : null;\n\n          for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n            const pageView = new PDFPageView({\n              container: this._viewerElement,\n              eventBus: this.eventBus,\n              id: pageNum,\n              scale,\n              defaultViewport: viewport.clone(),\n              optionalContentConfigPromise,\n              renderingQueue: this.renderingQueue,\n              textLayerFactory,\n              textLayerMode: this.textLayerMode,\n              annotationLayerFactory: this,\n              imageResourcesPath: this.imageResourcesPath,\n              renderInteractiveForms: this.renderInteractiveForms,\n              renderer: this.renderer,\n              enableWebGL: this.enableWebGL,\n              useOnlyCssZoom: this.useOnlyCssZoom,\n              maxCanvasPixels: this.maxCanvasPixels,\n              l10n: this.l10n,\n              enableScripting: this.enableScripting,\n            });\n            this._pages.push(pageView);\n          }\n          // Set the first `pdfPage` immediately, since it's already loaded,\n          // rather than having to repeat the `PDFDocumentProxy.getPage` call in\n          // the `this._ensurePdfPageLoaded` method before rendering can start.\n          const firstPageView = this._pages[0];\n          if (firstPageView) {\n            firstPageView.setPdfPage(firstPdfPage);\n            this.linkService.cachePageRef(1, firstPdfPage.ref);\n          }\n          if (this._spreadMode !== SpreadMode.NONE) {\n            this._updateSpreadMode();\n          }\n\n          // Fetch all the pages since the viewport is needed before printing\n          // starts to create the correct size canvas. Wait until one page is\n          // rendered so we don't tie up too many resources early on.\n          this._onePageRenderedOrForceFetch().then(() => {\n            if (this.findController) {\n              this.findController.setDocument(pdfDocument); // Enable searching.\n            }\n\n            // In addition to 'disableAutoFetch' being set, also attempt to reduce\n            // resource usage when loading *very* long/large documents.\n            if (pdfDocument.loadingParams.disableAutoFetch || pagesCount > 7500) {\n              // XXX: Printing is semi-broken with auto fetch disabled.\n              this._pagesCapability.resolve();\n              return;\n            }\n            let getPagesLeft = pagesCount - 1; // The first page was already loaded.\n\n            if (getPagesLeft <= 0) {\n              this._pagesCapability.resolve();\n              return;\n            }\n            for (let pageNum = 2; pageNum <= pagesCount; ++pageNum) {\n              pdfDocument.getPage(pageNum).then(\n                pdfPage => {\n                  const pageView = this._pages[pageNum - 1];\n                  if (!pageView.pdfPage) {\n                    pageView.setPdfPage(pdfPage);\n                  }\n                  this.linkService.cachePageRef(pageNum, pdfPage.ref);\n                  if (--getPagesLeft === 0) {\n                    this._pagesCapability.resolve();\n                  }\n                },\n                reason => {\n                  console.error(\n                    `Unable to get page ${pageNum} to initialize viewer`,\n                    reason\n                  );\n                  if (--getPagesLeft === 0) {\n                    this._pagesCapability.resolve();\n                  }\n                }\n              );\n            }\n          });\n\n          this.eventBus.dispatch(\"pagesinit\", { source: this });\n\n          if (this.defaultRenderingQueue) {\n            this.update();\n          }\n        })\n        .catch(reason => {\n          console.error(\"Unable to initialize viewer\", reason);\n        });\n    }\n\n    /**\n     * @param {Array|null} labels\n     */\n    setPageLabels(labels) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      if (!labels) {\n        this._pageLabels = null;\n      } else if (\n        !(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)\n      ) {\n        this._pageLabels = null;\n        console.error(`${this._name}.setPageLabels: Invalid page labels.`);\n      } else {\n        this._pageLabels = labels;\n      }\n      // Update all the `PDFPageView` instances.\n      for (let i = 0, ii = this._pages.length; i < ii; i++) {\n        const pageView = this._pages[i];\n        const label = this._pageLabels && this._pageLabels[i];\n        pageView.setPageLabel(label);\n      }\n    }\n\n    _resetView() {\n      this._pages = [];\n      this._currentPageNumber = 1;\n      this._currentScale = UNKNOWN_SCALE;\n      this._currentScaleValue = null;\n      this._pageLabels = null;\n      this._buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);\n      this._location = null;\n      this._pagesRotation = 0;\n      this._optionalContentConfigPromise = null;\n      this._pagesRequests = new WeakMap();\n      this._firstPageCapability = createPromiseCapability();\n      this._onePageRenderedCapability = createPromiseCapability();\n      this._pagesCapability = createPromiseCapability();\n      this._scrollMode = ScrollMode.VERTICAL;\n      this._spreadMode = SpreadMode.NONE;\n\n      if (this._onBeforeDraw) {\n        this.eventBus._off(\"pagerender\", this._onBeforeDraw);\n        this._onBeforeDraw = null;\n      }\n      if (this._onAfterDraw) {\n        this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n        this._onAfterDraw = null;\n      }\n      this._resetScriptingEvents();\n\n      // Remove the pages from the DOM...\n      this.viewer.textContent = \"\";\n      // ... and reset the Scroll mode CSS class(es) afterwards.\n      this._updateScrollMode();\n    }\n\n    _scrollUpdate() {\n      if (this.pagesCount === 0) {\n        return;\n      }\n      this.update();\n    }\n\n    _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n      scrollIntoView(pageDiv, pageSpot);\n    }\n\n    _setScaleUpdatePages(newScale, newValue, noScroll = false, preset = false) {\n      this._currentScaleValue = newValue.toString();\n\n      if (isSameScale(this._currentScale, newScale)) {\n        if (preset) {\n          this.eventBus.dispatch(\"scalechanging\", {\n            source: this,\n            scale: newScale,\n            presetValue: newValue,\n          });\n        }\n        return;\n      }\n\n      for (let i = 0, ii = this._pages.length; i < ii; i++) {\n        this._pages[i].update(newScale);\n      }\n      this._currentScale = newScale;\n\n      if (!noScroll) {\n        let page = this._currentPageNumber,\n          dest;\n        if (\n          this._location &&\n          !(this.isInPresentationMode || this.isChangingPresentationMode)\n        ) {\n          page = this._location.pageNumber;\n          dest = [\n            null,\n            { name: \"XYZ\" },\n            this._location.left,\n            this._location.top,\n            null,\n          ];\n        }\n        this.scrollPageIntoView({\n          pageNumber: page,\n          destArray: dest,\n          allowNegativeOffset: true,\n        });\n      }\n\n      this.eventBus.dispatch(\"scalechanging\", {\n        source: this,\n        scale: newScale,\n        presetValue: preset ? newValue : undefined,\n      });\n\n      if (this.defaultRenderingQueue) {\n        this.update();\n      }\n    }\n\n    /**\n     * @private\n     */\n    get _pageWidthScaleFactor() {\n      if (\n        this.spreadMode !== SpreadMode.NONE &&\n        this.scrollMode !== ScrollMode.HORIZONTAL &&\n        !this.isInPresentationMode\n      ) {\n        return 2;\n      }\n      return 1;\n    }\n\n    _setScale(value, noScroll = false) {\n      let scale = parseFloat(value);\n\n      if (scale > 0) {\n        this._setScaleUpdatePages(scale, value, noScroll, /* preset = */ false);\n      } else {\n        const currentPage = this._pages[this._currentPageNumber - 1];\n        if (!currentPage) {\n          return;\n        }\n        const noPadding = this.isInPresentationMode || this.removePageBorders;\n        let hPadding = noPadding ? 0 : SCROLLBAR_PADDING;\n        let vPadding = noPadding ? 0 : VERTICAL_PADDING;\n\n        if (!noPadding && this._isScrollModeHorizontal) {\n          [hPadding, vPadding] = [vPadding, hPadding]; // Swap the padding values.\n        }\n        const pageWidthScale =\n          (((this.container.clientWidth - hPadding) / currentPage.width) *\n            currentPage.scale) /\n          this._pageWidthScaleFactor;\n        const pageHeightScale =\n          ((this.container.clientHeight - vPadding) / currentPage.height) *\n          currentPage.scale;\n        switch (value) {\n          case \"page-actual\":\n            scale = 1;\n            break;\n          case \"page-width\":\n            scale = pageWidthScale;\n            break;\n          case \"page-height\":\n            scale = pageHeightScale;\n            break;\n          case \"page-fit\":\n            scale = Math.min(pageWidthScale, pageHeightScale);\n            break;\n          case \"auto\":\n            // For pages in landscape mode, fit the page height to the viewer\n            // *unless* the page would thus become too wide to fit horizontally.\n            const horizontalScale = isPortraitOrientation(currentPage)\n              ? pageWidthScale\n              : Math.min(pageHeightScale, pageWidthScale);\n            scale = Math.min(MAX_AUTO_SCALE, horizontalScale);\n            break;\n          default:\n            console.error(\n              `${this._name}._setScale: \"${value}\" is an unknown zoom value.`\n            );\n            return;\n        }\n        this._setScaleUpdatePages(scale, value, noScroll, /* preset = */ true);\n      }\n    }\n\n    /**\n     * Refreshes page view: scrolls to the current page and updates the scale.\n     * @private\n     */\n    _resetCurrentPageView() {\n      if (this.isInPresentationMode) {\n        // Fixes the case when PDF has different page sizes.\n        this._setScale(this._currentScaleValue, true);\n      }\n\n      const pageView = this._pages[this._currentPageNumber - 1];\n      this._scrollIntoView({ pageDiv: pageView.div });\n    }\n\n    /**\n     * @param {string} label - The page label.\n     * @returns {number|null} The page number corresponding to the page label,\n     *   or `null` when no page labels exist and/or the input is invalid.\n     */\n    pageLabelToPageNumber(label) {\n      if (!this._pageLabels) {\n        return null;\n      }\n      const i = this._pageLabels.indexOf(label);\n      if (i < 0) {\n        return null;\n      }\n      return i + 1;\n    }\n\n    /**\n     * @typedef ScrollPageIntoViewParameters\n     * @property {number} pageNumber - The page number.\n     * @property {Array} [destArray] - The original PDF destination array, in the\n     *   format: <page-ref> </XYZ|/FitXXX> <args..>\n     * @property {boolean} [allowNegativeOffset] - Allow negative page offsets.\n     *   The default value is `false`.\n     * @property {boolean} [ignoreDestinationZoom] - Ignore the zoom argument in\n     *   the destination array. The default value is `false`.\n     */\n\n    /**\n     * Scrolls page into view.\n     * @param {ScrollPageIntoViewParameters} params\n     */\n    scrollPageIntoView({\n      pageNumber,\n      destArray = null,\n      allowNegativeOffset = false,\n      ignoreDestinationZoom = false,\n    }) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      const pageView =\n        Number.isInteger(pageNumber) && this._pages[pageNumber - 1];\n      if (!pageView) {\n        console.error(\n          `${this._name}.scrollPageIntoView: ` +\n            `\"${pageNumber}\" is not a valid pageNumber parameter.`\n        );\n        return;\n      }\n\n      if (this.isInPresentationMode || !destArray) {\n        this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n        return;\n      }\n      let x = 0,\n        y = 0;\n      let width = 0,\n        height = 0,\n        widthScale,\n        heightScale;\n      const changeOrientation = pageView.rotation % 180 !== 0;\n      const pageWidth =\n        (changeOrientation ? pageView.height : pageView.width) /\n        pageView.scale /\n        CSS_UNITS;\n      const pageHeight =\n        (changeOrientation ? pageView.width : pageView.height) /\n        pageView.scale /\n        CSS_UNITS;\n      let scale = 0;\n      switch (destArray[1].name) {\n        case \"XYZ\":\n          x = destArray[2];\n          y = destArray[3];\n          scale = destArray[4];\n          // If x and/or y coordinates are not supplied, default to\n          // _top_ left of the page (not the obvious bottom left,\n          // since aligning the bottom of the intended page with the\n          // top of the window is rarely helpful).\n          x = x !== null ? x : 0;\n          y = y !== null ? y : pageHeight;\n          break;\n        case \"Fit\":\n        case \"FitB\":\n          scale = \"page-fit\";\n          break;\n        case \"FitH\":\n        case \"FitBH\":\n          y = destArray[2];\n          scale = \"page-width\";\n          // According to the PDF spec, section 12.3.2.2, a `null` value in the\n          // parameter should maintain the position relative to the new page.\n          if (y === null && this._location) {\n            x = this._location.left;\n            y = this._location.top;\n          } else if (typeof y !== \"number\") {\n            // The \"top\" value isn't optional, according to the spec, however some\n            // bad PDF generators will pretend that it is (fixes bug 1663390).\n            y = pageHeight;\n          }\n          break;\n        case \"FitV\":\n        case \"FitBV\":\n          x = destArray[2];\n          width = pageWidth;\n          height = pageHeight;\n          scale = \"page-height\";\n          break;\n        case \"FitR\":\n          x = destArray[2];\n          y = destArray[3];\n          width = destArray[4] - x;\n          height = destArray[5] - y;\n          const hPadding = this.removePageBorders ? 0 : SCROLLBAR_PADDING;\n          const vPadding = this.removePageBorders ? 0 : VERTICAL_PADDING;\n\n          widthScale =\n            (this.container.clientWidth - hPadding) / width / CSS_UNITS;\n          heightScale =\n            (this.container.clientHeight - vPadding) / height / CSS_UNITS;\n          scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n          break;\n        default:\n          console.error(\n            `${this._name}.scrollPageIntoView: ` +\n              `\"${destArray[1].name}\" is not a valid destination type.`\n          );\n          return;\n      }\n\n      if (!ignoreDestinationZoom) {\n        if (scale && scale !== this._currentScale) {\n          this.currentScaleValue = scale;\n        } else if (this._currentScale === UNKNOWN_SCALE) {\n          this.currentScaleValue = DEFAULT_SCALE_VALUE;\n        }\n      }\n\n      if (scale === \"page-fit\" && !destArray[4]) {\n        this._scrollIntoView({\n          pageDiv: pageView.div,\n          pageNumber,\n        });\n        return;\n      }\n\n      const boundingRect = [\n        pageView.viewport.convertToViewportPoint(x, y),\n        pageView.viewport.convertToViewportPoint(x + width, y + height),\n      ];\n      let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n      let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n\n      if (!allowNegativeOffset) {\n        // Some bad PDF generators will create destinations with e.g. top values\n        // that exceeds the page height. Ensure that offsets are not negative,\n        // to prevent a previous page from becoming visible (fixes bug 874482).\n        left = Math.max(left, 0);\n        top = Math.max(top, 0);\n      }\n      this._scrollIntoView({\n        pageDiv: pageView.div,\n        pageSpot: { left, top },\n        pageNumber,\n      });\n    }\n\n    _updateLocation(firstPage) {\n      const currentScale = this._currentScale;\n      const currentScaleValue = this._currentScaleValue;\n      const normalizedScaleValue =\n        parseFloat(currentScaleValue) === currentScale\n          ? Math.round(currentScale * 10000) / 100\n          : currentScaleValue;\n\n      const pageNumber = firstPage.id;\n      let pdfOpenParams = \"#page=\" + pageNumber;\n      pdfOpenParams += \"&zoom=\" + normalizedScaleValue;\n      const currentPageView = this._pages[pageNumber - 1];\n      const container = this.container;\n      const topLeft = currentPageView.getPagePoint(\n        container.scrollLeft - firstPage.x,\n        container.scrollTop - firstPage.y\n      );\n      const intLeft = Math.round(topLeft[0]);\n      const intTop = Math.round(topLeft[1]);\n      pdfOpenParams += \",\" + intLeft + \",\" + intTop;\n\n      this._location = {\n        pageNumber,\n        scale: normalizedScaleValue,\n        top: intTop,\n        left: intLeft,\n        rotation: this._pagesRotation,\n        pdfOpenParams,\n      };\n    }\n\n    _updateHelper(visiblePages) {\n      throw new Error(\"Not implemented: _updateHelper\");\n    }\n\n    update() {\n      const visible = this._getVisiblePages();\n      const visiblePages = visible.views,\n        numVisiblePages = visiblePages.length;\n\n      if (numVisiblePages === 0) {\n        return;\n      }\n      const newCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * numVisiblePages + 1);\n      this._buffer.resize(newCacheSize, visiblePages);\n\n      this.renderingQueue.renderHighestPriority(visible);\n\n      this._updateHelper(visiblePages); // Run any class-specific update code.\n\n      this._updateLocation(visible.first);\n      this.eventBus.dispatch(\"updateviewarea\", {\n        source: this,\n        location: this._location,\n      });\n    }\n\n    containsElement(element) {\n      return this.container.contains(element);\n    }\n\n    focus() {\n      this.container.focus();\n    }\n\n    get _isScrollModeHorizontal() {\n      // Used to ensure that pre-rendering of the next/previous page works\n      // correctly, since Scroll/Spread modes are ignored in Presentation Mode.\n      return this.isInPresentationMode\n        ? false\n        : this._scrollMode === ScrollMode.HORIZONTAL;\n    }\n\n    get _isContainerRtl() {\n      return getComputedStyle(this.container).direction === \"rtl\";\n    }\n\n    get isInPresentationMode() {\n      return this.presentationModeState === PresentationModeState.FULLSCREEN;\n    }\n\n    get isChangingPresentationMode() {\n      return this.presentationModeState === PresentationModeState.CHANGING;\n    }\n\n    get isHorizontalScrollbarEnabled() {\n      return this.isInPresentationMode\n        ? false\n        : this.container.scrollWidth > this.container.clientWidth;\n    }\n\n    get isVerticalScrollbarEnabled() {\n      return this.isInPresentationMode\n        ? false\n        : this.container.scrollHeight > this.container.clientHeight;\n    }\n\n    /**\n     * Helper method for `this._getVisiblePages`. Should only ever be used when\n     * the viewer can only display a single page at a time, for example in:\n     *  - `PDFSinglePageViewer`.\n     *  - `PDFViewer` with Presentation Mode active.\n     */\n    _getCurrentVisiblePage() {\n      if (!this.pagesCount) {\n        return { views: [] };\n      }\n      const pageView = this._pages[this._currentPageNumber - 1];\n      // NOTE: Compute the `x` and `y` properties of the current view,\n      // since `this._updateLocation` depends of them being available.\n      const element = pageView.div;\n\n      const view = {\n        id: pageView.id,\n        x: element.offsetLeft + element.clientLeft,\n        y: element.offsetTop + element.clientTop,\n        view: pageView,\n      };\n      return { first: view, last: view, views: [view] };\n    }\n\n    _getVisiblePages() {\n      return getVisibleElements({\n        scrollEl: this.container,\n        views: this._pages,\n        sortByVisibility: true,\n        horizontal: this._isScrollModeHorizontal,\n        rtl: this._isScrollModeHorizontal && this._isContainerRtl,\n      });\n    }\n\n    /**\n     * @param {number} pageNumber\n     */\n    isPageVisible(pageNumber) {\n      if (!this.pdfDocument) {\n        return false;\n      }\n      if (\n        !(\n          Number.isInteger(pageNumber) &&\n          pageNumber > 0 &&\n          pageNumber <= this.pagesCount\n        )\n      ) {\n        console.error(\n          `${this._name}.isPageVisible: \"${pageNumber}\" is not a valid page.`\n        );\n        return false;\n      }\n      return this._getVisiblePages().views.some(function (view) {\n        return view.id === pageNumber;\n      });\n    }\n\n    /**\n     * @param {number} pageNumber\n     */\n    isPageCached(pageNumber) {\n      if (!this.pdfDocument || !this._buffer) {\n        return false;\n      }\n      if (\n        !(\n          Number.isInteger(pageNumber) &&\n          pageNumber > 0 &&\n          pageNumber <= this.pagesCount\n        )\n      ) {\n        console.error(\n          `${this._name}.isPageCached: \"${pageNumber}\" is not a valid page.`\n        );\n        return false;\n      }\n      const pageView = this._pages[pageNumber - 1];\n      if (!pageView) {\n        return false;\n      }\n      return this._buffer.has(pageView);\n    }\n\n    cleanup() {\n      for (let i = 0, ii = this._pages.length; i < ii; i++) {\n        if (\n          this._pages[i] &&\n          this._pages[i].renderingState !== RenderingStates.FINISHED\n        ) {\n          this._pages[i].reset();\n        }\n      }\n    }\n\n    /**\n     * @private\n     */\n    _cancelRendering() {\n      for (let i = 0, ii = this._pages.length; i < ii; i++) {\n        if (this._pages[i]) {\n          this._pages[i].cancelRendering();\n        }\n      }\n    }\n\n    /**\n     * @param {PDFPageView} pageView\n     * @returns {Promise} Returns a promise containing a {PDFPageProxy} object.\n     * @private\n     */\n    _ensurePdfPageLoaded(pageView) {\n      if (pageView.pdfPage) {\n        return Promise.resolve(pageView.pdfPage);\n      }\n      if (this._pagesRequests.has(pageView)) {\n        return this._pagesRequests.get(pageView);\n      }\n      const promise = this.pdfDocument\n        .getPage(pageView.id)\n        .then(pdfPage => {\n          if (!pageView.pdfPage) {\n            pageView.setPdfPage(pdfPage);\n          }\n          this._pagesRequests.delete(pageView);\n          return pdfPage;\n        })\n        .catch(reason => {\n          console.error(\"Unable to get page for page view\", reason);\n          // Page error -- there is nothing that can be done.\n          this._pagesRequests.delete(pageView);\n        });\n      this._pagesRequests.set(pageView, promise);\n      return promise;\n    }\n\n    forceRendering(currentlyVisiblePages) {\n      const visiblePages = currentlyVisiblePages || this._getVisiblePages();\n      const scrollAhead = this._isScrollModeHorizontal\n        ? this.scroll.right\n        : this.scroll.down;\n      const pageView = this.renderingQueue.getHighestPriority(\n        visiblePages,\n        this._pages,\n        scrollAhead\n      );\n      if (pageView) {\n        this._ensurePdfPageLoaded(pageView).then(() => {\n          this.renderingQueue.renderView(pageView);\n        });\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * @param {HTMLDivElement} textLayerDiv\n     * @param {number} pageIndex\n     * @param {PageViewport} viewport\n     * @param {boolean} enhanceTextSelection\n     * @param {EventBus} eventBus\n     * @returns {TextLayerBuilder}\n     */\n    createTextLayerBuilder(\n      textLayerDiv,\n      pageIndex,\n      viewport,\n      enhanceTextSelection = false,\n      eventBus\n    ) {\n      return new TextLayerBuilder({\n        textLayerDiv,\n        eventBus,\n        pageIndex,\n        viewport,\n        findController: this.isInPresentationMode ? null : this.findController,\n        enhanceTextSelection: this.isInPresentationMode\n          ? false\n          : enhanceTextSelection,\n      });\n    }\n\n    /**\n     * @param {HTMLDivElement} pageDiv\n     * @param {PDFPage} pdfPage\n     * @param {AnnotationStorage} [annotationStorage] - Storage for annotation\n     *   data in forms.\n     * @param {string} [imageResourcesPath] - Path for image resources, mainly\n     *   for annotation icons. Include trailing slash.\n     * @param {boolean} renderInteractiveForms\n     * @param {IL10n} l10n\n     * @param {boolean} [enableScripting]\n     * @param {Promise<boolean>} [hasJSActionsPromise]\n     * @param {Object} [mouseState]\n     * @returns {AnnotationLayerBuilder}\n     */\n    createAnnotationLayerBuilder(\n      pageDiv,\n      pdfPage,\n      annotationStorage = null,\n      imageResourcesPath = \"\",\n      renderInteractiveForms = false,\n      l10n = NullL10n,\n      enableScripting = false,\n      hasJSActionsPromise = null,\n      mouseState = null\n    ) {\n      return new AnnotationLayerBuilder({\n        pageDiv,\n        pdfPage,\n        annotationStorage:\n          ///annotationStorage || this.pdfDocument?.annotationStorage, // lwf\n          annotationStorage || (this.pdfDocument && this.pdfDocument.annotationStorage),\n        imageResourcesPath,\n        renderInteractiveForms,\n        linkService: this.linkService,\n        downloadManager: this.downloadManager,\n        l10n,\n        enableScripting,\n        hasJSActionsPromise:\n          ///hasJSActionsPromise || this.pdfDocument?.hasJSActions(), // lwf\n          hasJSActionsPromise || (this.pdfDocument && this.pdfDocument.hasJSActions()),\n        mouseState: mouseState || this._mouseState,\n      });\n    }\n\n    /**\n     * @type {boolean} Whether all pages of the PDF document have identical\n     *   widths and heights.\n     */\n    get hasEqualPageSizes() {\n      const firstPageView = this._pages[0];\n      for (let i = 1, ii = this._pages.length; i < ii; ++i) {\n        const pageView = this._pages[i];\n        if (\n          pageView.width !== firstPageView.width ||\n          pageView.height !== firstPageView.height\n        ) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Returns sizes of the pages.\n     * @returns {Array} Array of objects with width/height/rotation fields.\n     */\n    getPagesOverview() {\n      const pagesOverview = this._pages.map(function (pageView) {\n        const viewport = pageView.pdfPage.getViewport({ scale: 1 });\n        return {\n          width: viewport.width,\n          height: viewport.height,\n          rotation: viewport.rotation,\n        };\n      });\n      if (!this.enablePrintAutoRotate) {\n        return pagesOverview;\n      }\n      return pagesOverview.map(function (size) {\n        if (isPortraitOrientation(size)) {\n          return size;\n        }\n        return {\n          width: size.height,\n          height: size.width,\n          rotation: (size.rotation + 90) % 360,\n        };\n      });\n    }\n\n    /**\n     * @type {Promise<OptionalContentConfig | null>}\n     */\n    get optionalContentConfigPromise() {\n      if (!this.pdfDocument) {\n        return Promise.resolve(null);\n      }\n      if (!this._optionalContentConfigPromise) {\n        // Prevent issues if the getter is accessed *before* the `onePageRendered`\n        // promise has resolved; won't (normally) happen in the default viewer.\n        return this.pdfDocument.getOptionalContentConfig();\n      }\n      return this._optionalContentConfigPromise;\n    }\n\n    /**\n     * @param {Promise<OptionalContentConfig>} promise - A promise that is\n     *   resolved with an {@link OptionalContentConfig} instance.\n     */\n    set optionalContentConfigPromise(promise) {\n      if (!(promise instanceof Promise)) {\n        throw new Error(`Invalid optionalContentConfigPromise: ${promise}`);\n      }\n      if (!this.pdfDocument) {\n        return;\n      }\n      if (!this._optionalContentConfigPromise) {\n        // Ignore the setter *before* the `onePageRendered` promise has resolved,\n        // since it'll be overwritten anyway; won't happen in the default viewer.\n        return;\n      }\n      this._optionalContentConfigPromise = promise;\n\n      for (const pageView of this._pages) {\n        pageView.update(pageView.scale, pageView.rotation, promise);\n      }\n      this.update();\n\n      this.eventBus.dispatch(\"optionalcontentconfigchanged\", {\n        source: this,\n        promise,\n      });\n    }\n\n    /**\n     * @type {number} One of the values in {ScrollMode}.\n     */\n    get scrollMode() {\n      return this._scrollMode;\n    }\n\n    /**\n     * @param {number} mode - The direction in which the document pages should be\n     *   laid out within the scrolling container.\n     *   The constants from {ScrollMode} should be used.\n     */\n    set scrollMode(mode) {\n      if (this._scrollMode === mode) {\n        return; // The Scroll mode didn't change.\n      }\n      if (!isValidScrollMode(mode)) {\n        throw new Error(`Invalid scroll mode: ${mode}`);\n      }\n      this._scrollMode = mode;\n      this.eventBus.dispatch(\"scrollmodechanged\", { source: this, mode });\n\n      this._updateScrollMode(/* pageNumber = */ this._currentPageNumber);\n    }\n\n    _updateScrollMode(pageNumber = null) {\n      const scrollMode = this._scrollMode,\n        viewer = this.viewer;\n\n      viewer.classList.toggle(\n        \"scrollHorizontal\",\n        scrollMode === ScrollMode.HORIZONTAL\n      );\n      viewer.classList.toggle(\"scrollWrapped\", scrollMode === ScrollMode.WRAPPED);\n\n      if (!this.pdfDocument || !pageNumber) {\n        return;\n      }\n      // Non-numeric scale values can be sensitive to the scroll orientation.\n      // Call this before re-scrolling to the current page, to ensure that any\n      // changes in scale don't move the current page.\n      if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n        this._setScale(this._currentScaleValue, true);\n      }\n      this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n      this.update();\n    }\n\n    /**\n     * @type {number} One of the values in {SpreadMode}.\n     */\n    get spreadMode() {\n      return this._spreadMode;\n    }\n\n    /**\n     * @param {number} mode - Group the pages in spreads, starting with odd- or\n     *   even-number pages (unless `SpreadMode.NONE` is used).\n     *   The constants from {SpreadMode} should be used.\n     */\n    set spreadMode(mode) {\n      if (this._spreadMode === mode) {\n        return; // The Spread mode didn't change.\n      }\n      if (!isValidSpreadMode(mode)) {\n        throw new Error(`Invalid spread mode: ${mode}`);\n      }\n      this._spreadMode = mode;\n      this.eventBus.dispatch(\"spreadmodechanged\", { source: this, mode });\n\n      this._updateSpreadMode(/* pageNumber = */ this._currentPageNumber);\n    }\n\n    _updateSpreadMode(pageNumber = null) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      const viewer = this.viewer,\n        pages = this._pages;\n      // Temporarily remove all the pages from the DOM.\n      viewer.textContent = \"\";\n\n      if (this._spreadMode === SpreadMode.NONE) {\n        for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n          viewer.appendChild(pages[i].div);\n        }\n      } else {\n        const parity = this._spreadMode - 1;\n        let spread = null;\n        for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n          if (spread === null) {\n            spread = document.createElement(\"div\");\n            spread.className = \"spread\";\n            viewer.appendChild(spread);\n          } else if (i % 2 === parity) {\n            spread = spread.cloneNode(false);\n            viewer.appendChild(spread);\n          }\n          spread.appendChild(pages[i].div);\n        }\n      }\n\n      if (!pageNumber) {\n        return;\n      }\n      if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n        this._setScale(this._currentScaleValue, true);\n      }\n      this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n      this.update();\n    }\n\n    /**\n     * @private\n     */\n    _getPageAdvance(currentPageNumber, previous = false) {\n      if (this.isInPresentationMode) {\n        return 1;\n      }\n      switch (this._scrollMode) {\n        case ScrollMode.WRAPPED: {\n          const { views } = this._getVisiblePages(),\n            pageLayout = new Map();\n\n          // Determine the current (visible) page layout.\n          for (const { id, y, percent, widthPercent } of views) {\n            if (percent === 0 || widthPercent < 100) {\n              continue;\n            }\n            let yArray = pageLayout.get(y);\n            if (!yArray) {\n              ///pageLayout.set(y, (yArray ||= [])); // lwf\n              pageLayout.set(y, (yArray = []));\n            }\n            yArray.push(id);\n          }\n          // Find the row of the current page.\n          for (const yArray of pageLayout.values()) {\n            const currentIndex = yArray.indexOf(currentPageNumber);\n            if (currentIndex === -1) {\n              continue;\n            }\n            const numPages = yArray.length;\n            if (numPages === 1) {\n              break;\n            }\n            // Handle documents with varying page sizes.\n            if (previous) {\n              for (let i = currentIndex - 1, ii = 0; i >= ii; i--) {\n                const currentId = yArray[i],\n                  expectedId = yArray[i + 1] - 1;\n                if (currentId < expectedId) {\n                  return currentPageNumber - expectedId;\n                }\n              }\n            } else {\n              for (let i = currentIndex + 1, ii = numPages; i < ii; i++) {\n                const currentId = yArray[i],\n                  expectedId = yArray[i - 1] + 1;\n                if (currentId > expectedId) {\n                  return expectedId - currentPageNumber;\n                }\n              }\n            }\n            // The current row is \"complete\", advance to the previous/next one.\n            if (previous) {\n              const firstId = yArray[0];\n              if (firstId < currentPageNumber) {\n                return currentPageNumber - firstId + 1;\n              }\n            } else {\n              const lastId = yArray[numPages - 1];\n              if (lastId > currentPageNumber) {\n                return lastId - currentPageNumber + 1;\n              }\n            }\n            break;\n          }\n          break;\n        }\n        case ScrollMode.HORIZONTAL: {\n          break;\n        }\n        case ScrollMode.VERTICAL: {\n          if (this._spreadMode === SpreadMode.NONE) {\n            break; // Normal vertical scrolling.\n          }\n          const parity = this._spreadMode - 1;\n\n          if (previous && currentPageNumber % 2 !== parity) {\n            break; // Left-hand side page.\n          } else if (!previous && currentPageNumber % 2 === parity) {\n            break; // Right-hand side page.\n          }\n          const { views } = this._getVisiblePages(),\n            expectedId = previous ? currentPageNumber - 1 : currentPageNumber + 1;\n\n          for (const { id, percent, widthPercent } of views) {\n            if (id !== expectedId) {\n              continue;\n            }\n            if (percent > 0 && widthPercent === 100) {\n              return 2;\n            }\n            break;\n          }\n          break;\n        }\n      }\n      return 1;\n    }\n\n    /**\n     * Go to the next page, taking scroll/spread-modes into account.\n     * @returns {boolean} Whether navigation occured.\n     */\n    nextPage() {\n      const currentPageNumber = this._currentPageNumber,\n        pagesCount = this.pagesCount;\n\n      if (currentPageNumber >= pagesCount) {\n        return false;\n      }\n      const advance =\n        this._getPageAdvance(currentPageNumber, /* previous = */ false) || 1;\n\n      this.currentPageNumber = Math.min(currentPageNumber + advance, pagesCount);\n      return true;\n    }\n\n    /**\n     * Go to the previous page, taking scroll/spread-modes into account.\n     * @returns {boolean} Whether navigation occured.\n     */\n    previousPage() {\n      const currentPageNumber = this._currentPageNumber;\n\n      if (currentPageNumber <= 1) {\n        return false;\n      }\n      const advance =\n        this._getPageAdvance(currentPageNumber, /* previous = */ true) || 1;\n\n      this.currentPageNumber = Math.max(currentPageNumber - advance, 1);\n      return true;\n    }\n\n    initializeScriptingEvents() {\n      if (!this.enableScripting || this._pageOpenPendingSet) {\n        return;\n      }\n      const eventBus = this.eventBus,\n        pageOpenPendingSet = (this._pageOpenPendingSet = new Set()),\n        //scriptingEvents = (this._scriptingEvents ||= Object.create(null)); // lwf\n        scriptingEvents = (this._scriptingEvents || (this._scriptingEvents = Object.create(null)));\n\n      const dispatchPageClose = pageNumber => {\n        if (pageOpenPendingSet.has(pageNumber)) {\n          return; // No \"pageopen\" event was dispatched for the previous page.\n        }\n        eventBus.dispatch(\"pageclose\", { source: this, pageNumber });\n      };\n      const dispatchPageOpen = pageNumber => {\n        const pageView = this._pages[pageNumber - 1];\n        //if (pageView?.renderingState === RenderingStates.FINISHED) { // lwf\n        if (pageView && pageView.renderingState === RenderingStates.FINISHED) {\n          pageOpenPendingSet.delete(pageNumber);\n\n          eventBus.dispatch(\"pageopen\", {\n            source: this,\n            pageNumber,\n            ///actionsPromise: pageView.pdfPage?.getJSActions(),// lwf\n            actionsPromise: pageView.pdfPage && pageView.pdfPage.getJSActions(),\n          });\n        } else {\n          pageOpenPendingSet.add(pageNumber);\n        }\n      };\n\n      scriptingEvents.onPageChanging = ({ pageNumber, previous }) => {\n        if (pageNumber === previous) {\n          return; // The active page didn't change.\n        }\n        dispatchPageClose(previous);\n        dispatchPageOpen(pageNumber);\n      };\n      eventBus._on(\"pagechanging\", scriptingEvents.onPageChanging);\n\n      scriptingEvents.onPageRendered = ({ pageNumber }) => {\n        if (!pageOpenPendingSet.has(pageNumber)) {\n          return; // No pending \"pageopen\" event for the newly rendered page.\n        }\n        if (pageNumber !== this._currentPageNumber) {\n          return; // The newly rendered page is no longer the current one.\n        }\n        dispatchPageOpen(pageNumber);\n      };\n      eventBus._on(\"pagerendered\", scriptingEvents.onPageRendered);\n\n      scriptingEvents.onPagesDestroy = () => {\n        dispatchPageClose(this._currentPageNumber);\n      };\n      eventBus._on(\"pagesdestroy\", scriptingEvents.onPagesDestroy);\n\n      // Ensure that a \"pageopen\" event is dispatched for the initial page.\n      dispatchPageOpen(this._currentPageNumber);\n    }\n\n    /**\n     * @private\n     */\n    _resetScriptingEvents() {\n      if (!this.enableScripting || !this._pageOpenPendingSet) {\n        return;\n      }\n      const eventBus = this.eventBus,\n        scriptingEvents = this._scriptingEvents;\n\n      // Remove the event listeners.\n      eventBus._off(\"pagechanging\", scriptingEvents.onPageChanging);\n      scriptingEvents.onPageChanging = null;\n\n      eventBus._off(\"pagerendered\", scriptingEvents.onPageRendered);\n      scriptingEvents.onPageRendered = null;\n\n      eventBus._off(\"pagesdestroy\", scriptingEvents.onPagesDestroy);\n      scriptingEvents.onPagesDestroy = null;\n\n      this._pageOpenPendingSet = null;\n    }\n  }\n\n  return { BaseViewer };\n});\ndefine('skylark-pdfjs-viewer/pdf_viewer',[\n  \"skylark-pdfjs-display\",\n  \"./ui_utils\",\n  \"./base_viewer\"\n],function(pdfjsLib,ui_utils,base_viewer){\n  /* Copyright 2014 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { ScrollMode, SpreadMode } = ui_utils;\n  const { BaseViewer } = base_viewer;\n  const { shadow } = pdfjsLib;\n\n  class PDFViewer extends BaseViewer {\n    get _viewerElement() {\n      return shadow(this, \"_viewerElement\", this.viewer);\n    }\n\n    _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n      if (!pageSpot && !this.isInPresentationMode) {\n        const left = pageDiv.offsetLeft + pageDiv.clientLeft;\n        const right = left + pageDiv.clientWidth;\n        const { scrollLeft, clientWidth } = this.container;\n        if (\n          this._isScrollModeHorizontal ||\n          left < scrollLeft ||\n          right > scrollLeft + clientWidth\n        ) {\n          pageSpot = { left: 0, top: 0 };\n        }\n      }\n      super._scrollIntoView({ pageDiv, pageSpot, pageNumber });\n    }\n\n    _getVisiblePages() {\n      if (this.isInPresentationMode) {\n        // The algorithm in `getVisibleElements` doesn't work in all browsers and\n        // configurations (e.g. Chrome) when Presentation Mode is active.\n        return this._getCurrentVisiblePage();\n      }\n      return super._getVisiblePages();\n    }\n\n    _updateHelper(visiblePages) {\n      if (this.isInPresentationMode) {\n        return;\n      }\n      let currentId = this._currentPageNumber;\n      let stillFullyVisible = false;\n\n      for (const page of visiblePages) {\n        if (page.percent < 100) {\n          break;\n        }\n        if (\n          page.id === currentId &&\n          this._scrollMode === ScrollMode.VERTICAL &&\n          this._spreadMode === SpreadMode.NONE\n        ) {\n          stillFullyVisible = true;\n          break;\n        }\n      }\n      if (!stillFullyVisible) {\n        currentId = visiblePages[0].id;\n      }\n      this._setCurrentPageNumber(currentId);\n    }\n  }\n\n  return { PDFViewer };\n});\ndefine('skylark-pdfjs-viewer/pdf_single_page_viewer',[\n  \"skylark-pdfjs-display\",\n  \"./base_viewer\"\n],function(pdfjsLib,base_viewer){\n  /* Copyright 2017 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { BaseViewer } = base_viewer;\n  const { shadow } = pdfjsLib;\n\n  class PDFSinglePageViewer extends BaseViewer {\n    constructor(options) {\n      super(options);\n\n      this.eventBus._on(\"pagesinit\", evt => {\n        // Since the pages are placed in a `DocumentFragment`, make sure that\n        // the current page becomes visible upon loading of the document.\n        this._ensurePageViewVisible();\n      });\n    }\n\n    get _viewerElement() {\n      // Since we only want to display *one* page at a time when using the\n      // `PDFSinglePageViewer`, we cannot append them to the `viewer` DOM element.\n      // Instead, they are placed in a `DocumentFragment`, and only the current\n      // page is displayed in the viewer (refer to `this._ensurePageViewVisible`).\n      return shadow(this, \"_viewerElement\", this._shadowViewer);\n    }\n\n    get _pageWidthScaleFactor() {\n      return 1;\n    }\n\n    _resetView() {\n      super._resetView();\n      this._previousPageNumber = 1;\n      this._shadowViewer = document.createDocumentFragment();\n      this._updateScrollDown = null;\n    }\n\n    _ensurePageViewVisible() {\n      const pageView = this._pages[this._currentPageNumber - 1];\n      const previousPageView = this._pages[this._previousPageNumber - 1];\n\n      const viewerNodes = this.viewer.childNodes;\n      switch (viewerNodes.length) {\n        case 0: // Should *only* occur on initial loading.\n          this.viewer.appendChild(pageView.div);\n          break;\n        case 1: // The normal page-switching case.\n          if (viewerNodes[0] !== previousPageView.div) {\n            throw new Error(\n              \"_ensurePageViewVisible: Unexpected previously visible page.\"\n            );\n          }\n          if (pageView === previousPageView) {\n            break; // The correct page is already visible.\n          }\n          // Switch visible pages, and reset the viewerContainer scroll position.\n          this._shadowViewer.appendChild(previousPageView.div);\n          this.viewer.appendChild(pageView.div);\n\n          this.container.scrollTop = 0;\n          break;\n        default:\n          throw new Error(\n            \"_ensurePageViewVisible: Only one page should be visible at a time.\"\n          );\n      }\n      this._previousPageNumber = this._currentPageNumber;\n    }\n\n    _scrollUpdate() {\n      if (this._updateScrollDown) {\n        this._updateScrollDown();\n      }\n      super._scrollUpdate();\n    }\n\n    _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n      if (pageNumber) {\n        // Ensure that `this._currentPageNumber` is correct.\n        this._setCurrentPageNumber(pageNumber);\n      }\n      const scrolledDown = this._currentPageNumber >= this._previousPageNumber;\n\n      this._ensurePageViewVisible();\n      // Ensure that rendering always occurs, to avoid showing a blank page,\n      // even if the current position doesn't change when the page is scrolled.\n      this.update();\n\n      super._scrollIntoView({ pageDiv, pageSpot, pageNumber });\n\n      // Since scrolling is tracked using `requestAnimationFrame`, update the\n      // scroll direction during the next `this._scrollUpdate` invocation.\n      this._updateScrollDown = () => {\n        this.scroll.down = scrolledDown;\n        this._updateScrollDown = null;\n      };\n    }\n\n    _getVisiblePages() {\n      return this._getCurrentVisiblePage();\n    }\n\n    _updateHelper(visiblePages) {}\n\n    get _isScrollModeHorizontal() {\n      // The Scroll/Spread modes are never used in `PDFSinglePageViewer`.\n      return shadow(this, \"_isScrollModeHorizontal\", false);\n    }\n\n    _updateScrollMode() {}\n\n    _updateSpreadMode() {}\n\n    _getPageAdvance() {\n      return 1;\n    }\n  }\n\n  return { PDFSinglePageViewer };\n});\ndefine('skylark-pdfjs-viewer/secondary_toolbar',[\n  \"./ui_utils\",\n  \"./pdf_cursor_tools\",\n  \"./pdf_single_page_viewer\"\n],function(ui_utils,pdf_cursor_tools,pdf_single_page_viewer){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { SCROLLBAR_PADDING, ScrollMode, SpreadMode } = ui_utils;\n  const { CursorTool } = pdf_cursor_tools;\n  const { PDFSinglePageViewer } = pdf_single_page_viewer;\n\n  /**\n   * @typedef {Object} SecondaryToolbarOptions\n   * @property {HTMLDivElement} toolbar - Container for the secondary toolbar.\n   * @property {HTMLButtonElement} toggleButton - Button to toggle the visibility\n   *   of the secondary toolbar.\n   * @property {HTMLDivElement} toolbarButtonContainer - Container where all the\n   *   toolbar buttons are placed. The maximum height of the toolbar is controlled\n   *   dynamically by adjusting the 'max-height' CSS property of this DOM element.\n   * @property {HTMLButtonElement} presentationModeButton - Button for entering\n   *   presentation mode.\n   * @property {HTMLButtonElement} openFileButton - Button to open a file.\n   * @property {HTMLButtonElement} printButton - Button to print the document.\n   * @property {HTMLButtonElement} downloadButton - Button to download the\n   *   document.\n   * @property {HTMLLinkElement} viewBookmarkButton - Button to obtain a bookmark\n   *   link to the current location in the document.\n   * @property {HTMLButtonElement} firstPageButton - Button to go to the first\n   *   page in the document.\n   * @property {HTMLButtonElement} lastPageButton - Button to go to the last page\n   *   in the document.\n   * @property {HTMLButtonElement} pageRotateCwButton - Button to rotate the pages\n   *   clockwise.\n   * @property {HTMLButtonElement} pageRotateCcwButton - Button to rotate the\n   *   pages counterclockwise.\n   * @property {HTMLButtonElement} cursorSelectToolButton - Button to enable the\n   *   select tool.\n   * @property {HTMLButtonElement} cursorHandToolButton - Button to enable the\n   *   hand tool.\n   * @property {HTMLButtonElement} documentPropertiesButton - Button for opening\n   *   the document properties dialog.\n   */\n\n  class SecondaryToolbar {\n    /**\n     * @param {SecondaryToolbarOptions} options\n     * @param {HTMLDivElement} mainContainer\n     * @param {EventBus} eventBus\n     */\n    constructor(options, mainContainer, eventBus) {\n      this.toolbar = options.toolbar;\n      this.toggleButton = options.toggleButton;\n      this.toolbarButtonContainer = options.toolbarButtonContainer;\n      this.buttons = [\n        {\n          element: options.presentationModeButton,\n          eventName: \"presentationmode\",\n          close: true,\n        },\n        { element: options.openFileButton, eventName: \"openfile\", close: true },\n        { element: options.printButton, eventName: \"print\", close: true },\n        { element: options.downloadButton, eventName: \"download\", close: true },\n        { element: options.viewBookmarkButton, eventName: null, close: true },\n        { element: options.firstPageButton, eventName: \"firstpage\", close: true },\n        { element: options.lastPageButton, eventName: \"lastpage\", close: true },\n        {\n          element: options.pageRotateCwButton,\n          eventName: \"rotatecw\",\n          close: false,\n        },\n        {\n          element: options.pageRotateCcwButton,\n          eventName: \"rotateccw\",\n          close: false,\n        },\n        {\n          element: options.cursorSelectToolButton,\n          eventName: \"switchcursortool\",\n          eventDetails: { tool: CursorTool.SELECT },\n          close: true,\n        },\n        {\n          element: options.cursorHandToolButton,\n          eventName: \"switchcursortool\",\n          eventDetails: { tool: CursorTool.HAND },\n          close: true,\n        },\n        {\n          element: options.scrollVerticalButton,\n          eventName: \"switchscrollmode\",\n          eventDetails: { mode: ScrollMode.VERTICAL },\n          close: true,\n        },\n        {\n          element: options.scrollHorizontalButton,\n          eventName: \"switchscrollmode\",\n          eventDetails: { mode: ScrollMode.HORIZONTAL },\n          close: true,\n        },\n        {\n          element: options.scrollWrappedButton,\n          eventName: \"switchscrollmode\",\n          eventDetails: { mode: ScrollMode.WRAPPED },\n          close: true,\n        },\n        {\n          element: options.spreadNoneButton,\n          eventName: \"switchspreadmode\",\n          eventDetails: { mode: SpreadMode.NONE },\n          close: true,\n        },\n        {\n          element: options.spreadOddButton,\n          eventName: \"switchspreadmode\",\n          eventDetails: { mode: SpreadMode.ODD },\n          close: true,\n        },\n        {\n          element: options.spreadEvenButton,\n          eventName: \"switchspreadmode\",\n          eventDetails: { mode: SpreadMode.EVEN },\n          close: true,\n        },\n        {\n          element: options.documentPropertiesButton,\n          eventName: \"documentproperties\",\n          close: true,\n        },\n      ];\n      this.items = {\n        firstPage: options.firstPageButton,\n        lastPage: options.lastPageButton,\n        pageRotateCw: options.pageRotateCwButton,\n        pageRotateCcw: options.pageRotateCcwButton,\n      };\n\n      this.mainContainer = mainContainer;\n      this.eventBus = eventBus;\n\n      this.opened = false;\n      this.containerHeight = null;\n      this.previousContainerHeight = null;\n\n      this.reset();\n\n      // Bind the event listeners for click, cursor tool, and scroll/spread mode\n      // actions.\n      this._bindClickListeners();\n      this._bindCursorToolsListener(options);\n      this._bindScrollModeListener(options);\n      this._bindSpreadModeListener(options);\n\n      // Bind the event listener for adjusting the 'max-height' of the toolbar.\n      this.eventBus._on(\"resize\", this._setMaxHeight.bind(this));\n\n      // Hide the Scroll/Spread mode buttons, when they're not applicable to the\n      // current `BaseViewer` instance (in particular `PDFSinglePageViewer`).\n      this.eventBus._on(\"baseviewerinit\", evt => {\n        if (evt.source instanceof PDFSinglePageViewer) {\n          this.toolbarButtonContainer.classList.add(\n            \"hiddenScrollModeButtons\",\n            \"hiddenSpreadModeButtons\"\n          );\n        } else {\n          this.toolbarButtonContainer.classList.remove(\n            \"hiddenScrollModeButtons\",\n            \"hiddenSpreadModeButtons\"\n          );\n        }\n      });\n    }\n\n    /**\n     * @type {boolean}\n     */\n    get isOpen() {\n      return this.opened;\n    }\n\n    setPageNumber(pageNumber) {\n      this.pageNumber = pageNumber;\n      this._updateUIState();\n    }\n\n    setPagesCount(pagesCount) {\n      this.pagesCount = pagesCount;\n      this._updateUIState();\n    }\n\n    reset() {\n      this.pageNumber = 0;\n      this.pagesCount = 0;\n      this._updateUIState();\n\n      // Reset the Scroll/Spread buttons too, since they're document specific.\n      this.eventBus.dispatch(\"secondarytoolbarreset\", { source: this });\n    }\n\n    _updateUIState() {\n      this.items.firstPage.disabled = this.pageNumber <= 1;\n      this.items.lastPage.disabled = this.pageNumber >= this.pagesCount;\n      this.items.pageRotateCw.disabled = this.pagesCount === 0;\n      this.items.pageRotateCcw.disabled = this.pagesCount === 0;\n    }\n\n    _bindClickListeners() {\n      // Button to toggle the visibility of the secondary toolbar.\n      this.toggleButton.addEventListener(\"click\", this.toggle.bind(this));\n\n      // All items within the secondary toolbar.\n      for (const { element, eventName, close, eventDetails } of this.buttons) {\n        element.addEventListener(\"click\", evt => {\n          if (eventName !== null) {\n            const details = { source: this };\n            for (const property in eventDetails) {\n              details[property] = eventDetails[property];\n            }\n            this.eventBus.dispatch(eventName, details);\n          }\n          if (close) {\n            this.close();\n          }\n        });\n      }\n    }\n\n    _bindCursorToolsListener(buttons) {\n      this.eventBus._on(\"cursortoolchanged\", function ({ tool }) {\n        buttons.cursorSelectToolButton.classList.toggle(\n          \"toggled\",\n          tool === CursorTool.SELECT\n        );\n        buttons.cursorHandToolButton.classList.toggle(\n          \"toggled\",\n          tool === CursorTool.HAND\n        );\n      });\n    }\n\n    _bindScrollModeListener(buttons) {\n      function scrollModeChanged({ mode }) {\n        buttons.scrollVerticalButton.classList.toggle(\n          \"toggled\",\n          mode === ScrollMode.VERTICAL\n        );\n        buttons.scrollHorizontalButton.classList.toggle(\n          \"toggled\",\n          mode === ScrollMode.HORIZONTAL\n        );\n        buttons.scrollWrappedButton.classList.toggle(\n          \"toggled\",\n          mode === ScrollMode.WRAPPED\n        );\n\n        // Temporarily *disable* the Spread buttons when horizontal scrolling is\n        // enabled, since the non-default Spread modes doesn't affect the layout.\n        const isScrollModeHorizontal = mode === ScrollMode.HORIZONTAL;\n        buttons.spreadNoneButton.disabled = isScrollModeHorizontal;\n        buttons.spreadOddButton.disabled = isScrollModeHorizontal;\n        buttons.spreadEvenButton.disabled = isScrollModeHorizontal;\n      }\n      this.eventBus._on(\"scrollmodechanged\", scrollModeChanged);\n\n      this.eventBus._on(\"secondarytoolbarreset\", evt => {\n        if (evt.source === this) {\n          scrollModeChanged({ mode: ScrollMode.VERTICAL });\n        }\n      });\n    }\n\n    _bindSpreadModeListener(buttons) {\n      function spreadModeChanged({ mode }) {\n        buttons.spreadNoneButton.classList.toggle(\n          \"toggled\",\n          mode === SpreadMode.NONE\n        );\n        buttons.spreadOddButton.classList.toggle(\n          \"toggled\",\n          mode === SpreadMode.ODD\n        );\n        buttons.spreadEvenButton.classList.toggle(\n          \"toggled\",\n          mode === SpreadMode.EVEN\n        );\n      }\n      this.eventBus._on(\"spreadmodechanged\", spreadModeChanged);\n\n      this.eventBus._on(\"secondarytoolbarreset\", evt => {\n        if (evt.source === this) {\n          spreadModeChanged({ mode: SpreadMode.NONE });\n        }\n      });\n    }\n\n    open() {\n      if (this.opened) {\n        return;\n      }\n      this.opened = true;\n      this._setMaxHeight();\n\n      this.toggleButton.classList.add(\"toggled\");\n      this.toolbar.classList.remove(\"hidden\");\n    }\n\n    close() {\n      if (!this.opened) {\n        return;\n      }\n      this.opened = false;\n      this.toolbar.classList.add(\"hidden\");\n      this.toggleButton.classList.remove(\"toggled\");\n    }\n\n    toggle() {\n      if (this.opened) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setMaxHeight() {\n      if (!this.opened) {\n        return; // Only adjust the 'max-height' if the toolbar is visible.\n      }\n      this.containerHeight = this.mainContainer.clientHeight;\n\n      if (this.containerHeight === this.previousContainerHeight) {\n        return;\n      }\n      this.toolbarButtonContainer.style.maxHeight = `${\n        this.containerHeight - SCROLLBAR_PADDING\n      }px`;\n\n      this.previousContainerHeight = this.containerHeight;\n    }\n  }\n\n  return { SecondaryToolbar };\n});\ndefine('skylark-pdfjs-viewer/toolbar',[\n  \"./pdfjs_dev\",\n  \"./ui_utils\"\n],function(PDFJSDev, ui_utils){\n  /* Copyright 2016 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const {\n    animationStarted,\n    DEFAULT_SCALE,\n    DEFAULT_SCALE_VALUE,\n    MAX_SCALE,\n    MIN_SCALE,\n    noContextMenuHandler,\n    NullL10n,\n  } = ui_utils;\n\n  const PAGE_NUMBER_LOADING_INDICATOR = \"visiblePageIsLoading\";\n  // Keep the two values below up-to-date with the values in `web/viewer.css`:\n  const SCALE_SELECT_CONTAINER_WIDTH = 140; // px\n  const SCALE_SELECT_WIDTH = 162; // px\n\n  /**\n   * @typedef {Object} ToolbarOptions\n   * @property {HTMLDivElement} container - Container for the secondary toolbar.\n   * @property {HTMLSpanElement} numPages - Label that contains number of pages.\n   * @property {HTMLInputElement} pageNumber - Control for display and user input\n   *   of the current page number.\n   * @property {HTMLSpanElement} scaleSelectContainer - Container where scale\n   *   controls are placed. The width is adjusted on UI initialization.\n   * @property {HTMLSelectElement} scaleSelect - Scale selection control.\n   * @property {HTMLOptionElement} customScaleOption - The item used to display\n   *   a non-predefined scale.\n   * @property {HTMLButtonElement} previous - Button to go to the previous page.\n   * @property {HTMLButtonElement} next - Button to go to the next page.\n   * @property {HTMLButtonElement} zoomIn - Button to zoom in the pages.\n   * @property {HTMLButtonElement} zoomOut - Button to zoom out the pages.\n   * @property {HTMLButtonElement} viewFind - Button to open find bar.\n   * @property {HTMLButtonElement} openFile - Button to open a new document.\n   * @property {HTMLButtonElement} presentationModeButton - Button to switch to\n   *   presentation mode.\n   * @property {HTMLButtonElement} download - Button to download the document.\n   * @property {HTMLAElement} viewBookmark - Element to link current url of\n   *   the page view.\n   */\n\n  class Toolbar {\n    /**\n     * @param {ToolbarOptions} options\n     * @param {EventBus} eventBus\n     * @param {IL10n} l10n - Localization service.\n     */\n    constructor(options, eventBus, l10n = NullL10n) {\n      this.toolbar = options.container;\n      this.eventBus = eventBus;\n      this.l10n = l10n;\n      this.buttons = [\n        { element: options.previous, eventName: \"previouspage\" },\n        { element: options.next, eventName: \"nextpage\" },\n        { element: options.zoomIn, eventName: \"zoomin\" },\n        { element: options.zoomOut, eventName: \"zoomout\" },\n        { element: options.openFile, eventName: \"openfile\" },\n        { element: options.print, eventName: \"print\" },\n        {\n          element: options.presentationModeButton,\n          eventName: \"presentationmode\",\n        },\n        { element: options.download, eventName: \"download\" },\n        { element: options.viewBookmark, eventName: null },\n      ];\n      this.items = {\n        numPages: options.numPages,\n        pageNumber: options.pageNumber,\n        scaleSelectContainer: options.scaleSelectContainer,\n        scaleSelect: options.scaleSelect,\n        customScaleOption: options.customScaleOption,\n        previous: options.previous,\n        next: options.next,\n        zoomIn: options.zoomIn,\n        zoomOut: options.zoomOut,\n      };\n\n      this._wasLocalized = false;\n      this.reset();\n\n      // Bind the event listeners for click and various other actions.\n      this._bindListeners();\n    }\n\n    setPageNumber(pageNumber, pageLabel) {\n      this.pageNumber = pageNumber;\n      this.pageLabel = pageLabel;\n      this._updateUIState(false);\n    }\n\n    setPagesCount(pagesCount, hasPageLabels) {\n      this.pagesCount = pagesCount;\n      this.hasPageLabels = hasPageLabels;\n      this._updateUIState(true);\n    }\n\n    setPageScale(pageScaleValue, pageScale) {\n      this.pageScaleValue = (pageScaleValue || pageScale).toString();\n      this.pageScale = pageScale;\n      this._updateUIState(false);\n    }\n\n    reset() {\n      this.pageNumber = 0;\n      this.pageLabel = null;\n      this.hasPageLabels = false;\n      this.pagesCount = 0;\n      this.pageScaleValue = DEFAULT_SCALE_VALUE;\n      this.pageScale = DEFAULT_SCALE;\n      this._updateUIState(true);\n      this.updateLoadingIndicatorState();\n    }\n\n    _bindListeners() {\n      const { pageNumber, scaleSelect } = this.items;\n      const self = this;\n\n      // The buttons within the toolbar.\n      for (const { element, eventName } of this.buttons) {\n        element.addEventListener(\"click\", evt => {\n          if (eventName !== null) {\n            this.eventBus.dispatch(eventName, { source: this });\n          }\n        });\n      }\n      // The non-button elements within the toolbar.\n      pageNumber.addEventListener(\"click\", function () {\n        this.select();\n      });\n      pageNumber.addEventListener(\"change\", function () {\n        self.eventBus.dispatch(\"pagenumberchanged\", {\n          source: self,\n          value: this.value,\n        });\n      });\n\n      scaleSelect.addEventListener(\"change\", function () {\n        if (this.value === \"custom\") {\n          return;\n        }\n        self.eventBus.dispatch(\"scalechanged\", {\n          source: self,\n          value: this.value,\n        });\n      });\n      // Suppress context menus for some controls.\n      scaleSelect.oncontextmenu = noContextMenuHandler;\n\n      this.eventBus._on(\"localized\", () => {\n        this._wasLocalized = true;\n        this._adjustScaleWidth();\n        this._updateUIState(true);\n      });\n    }\n\n    _updateUIState(resetNumPages = false) {\n      if (!this._wasLocalized) {\n        // Don't update the UI state until we localize the toolbar.\n        return;\n      }\n      const { pageNumber, pagesCount, pageScaleValue, pageScale, items } = this;\n\n      if (resetNumPages) {\n        if (this.hasPageLabels) {\n          items.pageNumber.type = \"text\";\n        } else {\n          items.pageNumber.type = \"number\";\n          this.l10n\n            .get(\"of_pages\", { pagesCount }, \"of {{pagesCount}}\")\n            .then(msg => {\n              items.numPages.textContent = msg;\n            });\n        }\n        items.pageNumber.max = pagesCount;\n      }\n\n      if (this.hasPageLabels) {\n        items.pageNumber.value = this.pageLabel;\n        this.l10n\n          .get(\n            \"page_of_pages\",\n            { pageNumber, pagesCount },\n            \"({{pageNumber}} of {{pagesCount}})\"\n          )\n          .then(msg => {\n            items.numPages.textContent = msg;\n          });\n      } else {\n        items.pageNumber.value = pageNumber;\n      }\n\n      items.previous.disabled = pageNumber <= 1;\n      items.next.disabled = pageNumber >= pagesCount;\n\n      items.zoomOut.disabled = pageScale <= MIN_SCALE;\n      items.zoomIn.disabled = pageScale >= MAX_SCALE;\n\n      const customScale = Math.round(pageScale * 10000) / 100;\n      this.l10n\n        .get(\"page_scale_percent\", { scale: customScale }, \"{{scale}}%\")\n        .then(msg => {\n          let predefinedValueFound = false;\n          for (const option of items.scaleSelect.options) {\n            if (option.value !== pageScaleValue) {\n              option.selected = false;\n              continue;\n            }\n            option.selected = true;\n            predefinedValueFound = true;\n          }\n          if (!predefinedValueFound) {\n            items.customScaleOption.textContent = msg;\n            items.customScaleOption.selected = true;\n          }\n        });\n    }\n\n    updateLoadingIndicatorState(loading = false) {\n      const pageNumberInput = this.items.pageNumber;\n\n      pageNumberInput.classList.toggle(PAGE_NUMBER_LOADING_INDICATOR, loading);\n    }\n\n    /**\n     * Increase the width of the zoom dropdown DOM element if, and only if, it's\n     * too narrow to fit the *longest* of the localized strings.\n     * @private\n     */\n    async _adjustScaleWidth() {\n      const { items, l10n } = this;\n\n      const predefinedValuesPromise = Promise.all([\n        l10n.get(\"page_scale_auto\", null, \"Automatic Zoom\"),\n        l10n.get(\"page_scale_actual\", null, \"Actual Size\"),\n        l10n.get(\"page_scale_fit\", null, \"Page Fit\"),\n        l10n.get(\"page_scale_width\", null, \"Page Width\"),\n      ]);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      let canvas = document.createElement(\"canvas\");\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      let ctx = canvas.getContext(\"2d\", { alpha: false });\n\n      await animationStarted;\n      const { fontSize, fontFamily } = getComputedStyle(items.scaleSelect);\n      ctx.font = `${fontSize} ${fontFamily}`;\n\n      let maxWidth = 0;\n      for (const predefinedValue of await predefinedValuesPromise) {\n        const { width } = ctx.measureText(predefinedValue);\n        if (width > maxWidth) {\n          maxWidth = width;\n        }\n      }\n      const overflow = SCALE_SELECT_WIDTH - SCALE_SELECT_CONTAINER_WIDTH;\n      maxWidth += 2 * overflow;\n\n      if (maxWidth > SCALE_SELECT_CONTAINER_WIDTH) {\n        items.scaleSelect.style.width = `${maxWidth + overflow}px`;\n        items.scaleSelectContainer.style.width = `${maxWidth}px`;\n      }\n      // Zeroing the width and height cause Firefox to release graphics resources\n      // immediately, which can greatly reduce memory consumption.\n      canvas.width = 0;\n      canvas.height = 0;\n      canvas = ctx = null;\n    }\n  }\n\n  return { Toolbar };\n});\ndefine('skylark-pdfjs-viewer/view_history',[\n  \"./pdfjs_dev\"\n],function(PDFJSDev){\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const DEFAULT_VIEW_HISTORY_CACHE_SIZE = 20;\n\n  /**\n   * View History - This is a utility for saving various view parameters for\n   *                recently opened files.\n   *\n   * The way that the view parameters are stored depends on how PDF.js is built,\n   * for 'gulp <flag>' the following cases exist:\n   *  - MOZCENTRAL        - uses sessionStorage.\n   *  - GENERIC or CHROME - uses localStorage, if it is available.\n   */\n  class ViewHistory {\n    constructor(fingerprint, cacheSize = DEFAULT_VIEW_HISTORY_CACHE_SIZE) {\n      this.fingerprint = fingerprint;\n      this.cacheSize = cacheSize;\n\n      this._initializedPromise = this._readFromStorage().then(databaseStr => {\n        const database = JSON.parse(databaseStr || \"{}\");\n        let index = -1;\n        if (!Array.isArray(database.files)) {\n          database.files = [];\n        } else {\n          while (database.files.length >= this.cacheSize) {\n            database.files.shift();\n          }\n\n          for (let i = 0, ii = database.files.length; i < ii; i++) {\n            const branch = database.files[i];\n            if (branch.fingerprint === this.fingerprint) {\n              index = i;\n              break;\n            }\n          }\n        }\n        if (index === -1) {\n          index = database.files.push({ fingerprint: this.fingerprint }) - 1;\n        }\n        this.file = database.files[index];\n        this.database = database;\n      });\n    }\n\n    async _writeToStorage() {\n      const databaseStr = JSON.stringify(this.database);\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n        sessionStorage.setItem(\"pdfjs.history\", databaseStr);\n        return;\n      }\n      localStorage.setItem(\"pdfjs.history\", databaseStr);\n    }\n\n    async _readFromStorage() {\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n        return sessionStorage.getItem(\"pdfjs.history\");\n      }\n      return localStorage.getItem(\"pdfjs.history\");\n    }\n\n    async set(name, val) {\n      await this._initializedPromise;\n      this.file[name] = val;\n      return this._writeToStorage();\n    }\n\n    async setMultiple(properties) {\n      await this._initializedPromise;\n      for (const name in properties) {\n        this.file[name] = properties[name];\n      }\n      return this._writeToStorage();\n    }\n\n    async get(name, defaultValue) {\n      await this._initializedPromise;\n      const val = this.file[name];\n      return val !== undefined ? val : defaultValue;\n    }\n\n    async getMultiple(properties) {\n      await this._initializedPromise;\n      const values = Object.create(null);\n\n      for (const name in properties) {\n        const val = this.file[name];\n        values[name] = val !== undefined ? val : properties[name];\n      }\n      return values;\n    }\n  }\n\n  return { ViewHistory };\n});\ndefine('skylark-pdfjs-viewer/app',[\n  \"skylark-pdfjs-display\",\n  \"./pdfjs_dev\",\n\n  \"./ui_utils\",\n  \"./app_options\",\n\n  \"./pdf_cursor_tools\",\n  \"./pdf_rendering_queue\",\n  \"./overlay_manager\",\n  \"./password_prompt\",\n  \"./pdf_attachment_viewer\",\n  \"./pdf_document_properties\",\n  \"./pdf_find_bar\",\n  \"./pdf_find_controller\",\n  \"./pdf_history\",\n  \"./pdf_layer_viewer\",\n  \"./pdf_link_service\",\n  \"./pdf_outline_viewer\",\n  \"./pdf_presentation_mode\",\n  \"./pdf_sidebar\",\n  \"./pdf_sidebar_resizer\",\n  \"./pdf_thumbnail_viewer\",\n  \"./pdf_viewer\",\n  \"./secondary_toolbar\",\n  \"./toolbar\",\n  \"./viewer_compatibility\",\n  \"./view_history\"\n\n],function(\n  pdfjsLib,\n  PDFJSDev,\n\n  ui_utils,\n  app_options,\n\n  pdf_cursor_tools,\n  pdf_rendering_queue,\n  overlay_manager,\n  password_prompt,\n  pdf_attachment_viewer,\n  pdf_document_properties,\n  pdf_find_bar,\n  pdf_find_controller,\n  pdf_history,\n  pdf_layer_viewer,\n  pdf_link_service,\n  pdf_outline_viewer,\n  pdf_presentation_mode,\n  pdf_sidebar,\n  pdf_sidebar_resizer,\n  pdf_thumbnail_viewer,\n  pdf_viewer,\n  secondary_toolbar,\n  toolbar,\n  viewer_compatibility,\n  view_history\n\n  ){\n\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /* globals PDFBug, Stats */\n\n\n\n  const {\n    animationStarted,\n    AutoPrintRegExp,\n    DEFAULT_SCALE_VALUE,\n    EventBus,\n    getActiveOrFocusedElement,\n    getPDFFileNameFromURL,\n    isValidRotation,\n    isValidScrollMode,\n    isValidSpreadMode,\n    MAX_SCALE,\n    MIN_SCALE,\n    noContextMenuHandler,\n    normalizeWheelEventDirection,\n    parseQueryString,\n    ProgressBar,\n    RendererType,\n    ScrollMode,\n    SidebarView,\n    SpreadMode,\n    TextLayerMode,\n  } = ui_utils;\n\n\n\n  const { AppOptions, OptionKind } = app_options;\n  const {\n    build,\n    createPromiseCapability,\n    getDocument,\n    getFilenameFromUrl,\n    GlobalWorkerOptions,\n    InvalidPDFException,\n    LinkTarget,\n    loadScript,\n    MissingPDFException,\n    OPS,\n    PDFWorker,\n    PermissionFlag,\n    shadow,\n    UnexpectedResponseException,\n    UNSUPPORTED_FEATURES,\n    version,\n  } = pdfjsLib;\n\n\n  const { CursorTool, PDFCursorTools } = pdf_cursor_tools;\n  const { PDFRenderingQueue, RenderingStates } = pdf_rendering_queue;\n  const { OverlayManager } = overlay_manager;\n  const { PasswordPrompt } = password_prompt;\n  const { PDFAttachmentViewer } = pdf_attachment_viewer;\n  const { PDFDocumentProperties } = pdf_document_properties;\n  const { PDFFindBar } = pdf_find_bar;\n  const { PDFFindController } = pdf_find_controller;\n  const { PDFHistory } = pdf_history;\n  const { PDFLayerViewer } = pdf_layer_viewer;\n  const { PDFLinkService } = pdf_link_service;\n  const { PDFOutlineViewer } = pdf_outline_viewer;\n  const { PDFPresentationMode } = pdf_presentation_mode;\n  const { PDFSidebar } = pdf_sidebar;\n  const { PDFSidebarResizer } = pdf_sidebar_resizer;\n  const { PDFThumbnailViewer } = pdf_thumbnail_viewer;\n  const { PDFViewer } = pdf_viewer;\n  const { SecondaryToolbar } = secondary_toolbar;\n  const { Toolbar } = toolbar;\n  const { viewerCompatibilityParams } = viewer_compatibility;\n  const { ViewHistory } = view_history;\n\n  const DEFAULT_SCALE_DELTA = 1.1;\n  const DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT = 5000; // ms\n  const FORCE_PAGES_LOADED_TIMEOUT = 10000; // ms\n  const WHEEL_ZOOM_DISABLED_TIMEOUT = 1000; // ms\n  const ENABLE_PERMISSIONS_CLASS = \"enablePermissions\";\n\n  const ViewOnLoad = {\n    UNKNOWN: -1,\n    PREVIOUS: 0, // Default value.\n    INITIAL: 1,\n  };\n\n  const ViewerCssTheme = {\n    AUTOMATIC: 0, // Default value.\n    LIGHT: 1,\n    DARK: 2,\n  };\n\n  // Keep these in sync with mozilla-central's Histograms.json.\n  const KNOWN_VERSIONS = [\n    \"1.0\",\n    \"1.1\",\n    \"1.2\",\n    \"1.3\",\n    \"1.4\",\n    \"1.5\",\n    \"1.6\",\n    \"1.7\",\n    \"1.8\",\n    \"1.9\",\n    \"2.0\",\n    \"2.1\",\n    \"2.2\",\n    \"2.3\",\n  ];\n  // Keep these in sync with mozilla-central's Histograms.json.\n  const KNOWN_GENERATORS = [\n    \"acrobat distiller\",\n    \"acrobat pdfwriter\",\n    \"adobe livecycle\",\n    \"adobe pdf library\",\n    \"adobe photoshop\",\n    \"ghostscript\",\n    \"tcpdf\",\n    \"cairo\",\n    \"dvipdfm\",\n    \"dvips\",\n    \"pdftex\",\n    \"pdfkit\",\n    \"itext\",\n    \"prince\",\n    \"quarkxpress\",\n    \"mac os x\",\n    \"microsoft\",\n    \"openoffice\",\n    \"oracle\",\n    \"luradocument\",\n    \"pdf-xchange\",\n    \"antenna house\",\n    \"aspose.cells\",\n    \"fpdf\",\n  ];\n\n  class DefaultExternalServices {\n    constructor() {\n      throw new Error(\"Cannot initialize DefaultExternalServices.\");\n    }\n\n    static updateFindControlState(data) {}\n\n    static updateFindMatchesCount(data) {}\n\n    static initPassiveLoading(callbacks) {}\n\n    static async fallback(data) {}\n\n    static reportTelemetry(data) {}\n\n    static createDownloadManager(options) {\n      throw new Error(\"Not implemented: createDownloadManager\");\n    }\n\n    static createPreferences() {\n      throw new Error(\"Not implemented: createPreferences\");\n    }\n\n    static createL10n(options) {\n      throw new Error(\"Not implemented: createL10n\");\n    }\n\n    static createScripting(options) {\n      throw new Error(\"Not implemented: createScripting\");\n    }\n\n    static get supportsIntegratedFind() {\n      return shadow(this, \"supportsIntegratedFind\", false);\n    }\n\n    static get supportsDocumentFonts() {\n      return shadow(this, \"supportsDocumentFonts\", true);\n    }\n\n    static get supportedMouseWheelZoomModifierKeys() {\n      return shadow(this, \"supportedMouseWheelZoomModifierKeys\", {\n        ctrlKey: true,\n        metaKey: true,\n      });\n    }\n\n    static get isInAutomation() {\n      return shadow(this, \"isInAutomation\", false);\n    }\n  }\n\n  const PDFViewerApplication = {\n    initialBookmark: document.location.hash.substring(1),\n    _initializedCapability: createPromiseCapability(),\n    fellback: false,\n    appConfig: null,\n    pdfDocument: null,\n    pdfLoadingTask: null,\n    printService: null,\n    /** @type {PDFViewer} */\n    pdfViewer: null,\n    /** @type {PDFThumbnailViewer} */\n    pdfThumbnailViewer: null,\n    /** @type {PDFRenderingQueue} */\n    pdfRenderingQueue: null,\n    /** @type {PDFPresentationMode} */\n    pdfPresentationMode: null,\n    /** @type {PDFDocumentProperties} */\n    pdfDocumentProperties: null,\n    /** @type {PDFLinkService} */\n    pdfLinkService: null,\n    /** @type {PDFHistory} */\n    pdfHistory: null,\n    /** @type {PDFSidebar} */\n    pdfSidebar: null,\n    /** @type {PDFSidebarResizer} */\n    pdfSidebarResizer: null,\n    /** @type {PDFOutlineViewer} */\n    pdfOutlineViewer: null,\n    /** @type {PDFAttachmentViewer} */\n    pdfAttachmentViewer: null,\n    /** @type {PDFLayerViewer} */\n    pdfLayerViewer: null,\n    /** @type {PDFCursorTools} */\n    pdfCursorTools: null,\n    /** @type {ViewHistory} */\n    store: null,\n    /** @type {DownloadManager} */\n    downloadManager: null,\n    /** @type {OverlayManager} */\n    overlayManager: null,\n    /** @type {Preferences} */\n    preferences: null,\n    /** @type {Toolbar} */\n    toolbar: null,\n    /** @type {SecondaryToolbar} */\n    secondaryToolbar: null,\n    /** @type {EventBus} */\n    eventBus: null,\n    /** @type {IL10n} */\n    l10n: null,\n    isInitialViewSet: false,\n    downloadComplete: false,\n    isViewerEmbedded: window.parent !== window,\n    url: \"\",\n    baseUrl: \"\",\n    externalServices: DefaultExternalServices,\n    _boundEvents: Object.create(null),\n    documentInfo: null,\n    metadata: null,\n    _contentDispositionFilename: null,\n    _contentLength: null,\n    triggerDelayedFallback: null,\n    _saveInProgress: false,\n    _wheelUnusedTicks: 0,\n    _idleCallbacks: new Set(),\n    _scriptingInstance: null,\n    _mouseState: Object.create(null),\n\n    // Called once when the document is loaded.\n    async initialize(appConfig) {\n      this.preferences = this.externalServices.createPreferences();\n      this.appConfig = appConfig;\n\n      await this._readPreferences();\n      await this._parseHashParameters();\n      this._forceCssTheme();\n      await this._initializeL10n();\n\n      if (\n        this.isViewerEmbedded &&\n        AppOptions.get(\"externalLinkTarget\") === LinkTarget.NONE\n      ) {\n        // Prevent external links from \"replacing\" the viewer,\n        // when it's embedded in e.g. an <iframe> or an <object>.\n        AppOptions.set(\"externalLinkTarget\", LinkTarget.TOP);\n      }\n      await this._initializeViewerComponents();\n\n      // Bind the various event handlers *after* the viewer has been\n      // initialized, to prevent errors if an event arrives too soon.\n      this.bindEvents();\n      this.bindWindowEvents();\n\n      // We can start UI localization now.\n      const appContainer = appConfig.appContainer || document.documentElement;\n      this.l10n.translate(appContainer).then(() => {\n        // Dispatch the 'localized' event on the `eventBus` once the viewer\n        // has been fully initialized and translated.\n        this.eventBus.dispatch(\"localized\", { source: this });\n      });\n\n      this._initializedCapability.resolve();\n    },\n\n    /**\n     * @private\n     */\n    async _readPreferences() {\n      if (\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || GENERIC\")) &&\n        AppOptions.get(\"disablePreferences\")\n      ) {\n        // Give custom implementations of the default viewer a simpler way to\n        // opt-out of having the `Preferences` override existing `AppOptions`.\n        return;\n      }\n      try {\n        AppOptions.setAll(await this.preferences.getAll());\n      } catch (reason) {\n        ///console.error(`_readPreferences: \"${reason?.message}\".`);  // lwf\n        console.error(`_readPreferences: \"${reason && reason.message}\".`); \n      }\n    },\n\n    /**\n     * Potentially parse special debugging flags in the hash section of the URL.\n     * @private\n     */\n    async _parseHashParameters() {\n      if (!AppOptions.get(\"pdfBugEnabled\")) {\n        return undefined;\n      }\n      const hash = document.location.hash.substring(1);\n      if (!hash) {\n        return undefined;\n      }\n      const hashParams = parseQueryString(hash),\n        waitOn = [];\n\n      if (\"disableworker\" in hashParams && hashParams.disableworker === \"true\") {\n        waitOn.push(loadFakeWorker());\n      }\n      if (\"disablerange\" in hashParams) {\n        AppOptions.set(\"disableRange\", hashParams.disablerange === \"true\");\n      }\n      if (\"disablestream\" in hashParams) {\n        AppOptions.set(\"disableStream\", hashParams.disablestream === \"true\");\n      }\n      if (\"disableautofetch\" in hashParams) {\n        AppOptions.set(\n          \"disableAutoFetch\",\n          hashParams.disableautofetch === \"true\"\n        );\n      }\n      if (\"disablefontface\" in hashParams) {\n        AppOptions.set(\"disableFontFace\", hashParams.disablefontface === \"true\");\n      }\n      if (\"disablehistory\" in hashParams) {\n        AppOptions.set(\"disableHistory\", hashParams.disablehistory === \"true\");\n      }\n      if (\"webgl\" in hashParams) {\n        AppOptions.set(\"enableWebGL\", hashParams.webgl === \"true\");\n      }\n      if (\"verbosity\" in hashParams) {\n        AppOptions.set(\"verbosity\", hashParams.verbosity | 0);\n      }\n      if (\"textlayer\" in hashParams) {\n        switch (hashParams.textlayer) {\n          case \"off\":\n            AppOptions.set(\"textLayerMode\", TextLayerMode.DISABLE);\n            break;\n          case \"visible\":\n          case \"shadow\":\n          case \"hover\":\n            const viewer = this.appConfig.viewerContainer;\n            viewer.classList.add(\"textLayer-\" + hashParams.textlayer);\n            break;\n        }\n      }\n      if (\"pdfbug\" in hashParams) {\n        AppOptions.set(\"pdfBug\", true);\n        AppOptions.set(\"fontExtraProperties\", true);\n\n        const enabled = hashParams.pdfbug.split(\",\");\n        waitOn.push(loadAndEnablePDFBug(enabled));\n      }\n      // It is not possible to change locale for the (various) extension builds.\n      if (\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || GENERIC\")) &&\n        \"locale\" in hashParams\n      ) {\n        AppOptions.set(\"locale\", hashParams.locale);\n      }\n\n      if (waitOn.length === 0) {\n        return undefined;\n      }\n      return Promise.all(waitOn).catch(reason => {\n        console.error(`_parseHashParameters: \"${reason.message}\".`);\n      });\n    },\n\n    /**\n     * @private\n     */\n    async _initializeL10n() {\n      this.l10n = this.externalServices.createL10n(\n        typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n          ? { locale: AppOptions.get(\"locale\") }\n          : null\n      );\n      const dir = await this.l10n.getDirection();\n      document.getElementsByTagName(\"html\")[0].dir = dir;\n    },\n\n    /**\n     * @private\n     */\n    _forceCssTheme() {\n      const cssTheme = AppOptions.get(\"viewerCssTheme\");\n      if (\n        cssTheme === ViewerCssTheme.AUTOMATIC ||\n        !Object.values(ViewerCssTheme).includes(cssTheme)\n      ) {\n        return;\n      }\n      try {\n        const styleSheet = document.styleSheets[0];\n        //const cssRules = styleSheet?.cssRules || []; // lwf\n        const cssRules = styleSheet && styleSheet.cssRules || [];\n        for (let i = 0, ii = cssRules.length; i < ii; i++) {\n          const rule = cssRules[i];\n          if (\n            rule instanceof CSSMediaRule &&\n            ///rule.media?.[0] === \"(prefers-color-scheme: dark)\" // lwf\n            rule.media && rule.media[0] === \"(prefers-color-scheme: dark)\"\n          ) {\n            if (cssTheme === ViewerCssTheme.LIGHT) {\n              styleSheet.deleteRule(i);\n              return;\n            }\n            // cssTheme === ViewerCssTheme.DARK\n            const darkRules = /^@media \\(prefers-color-scheme: dark\\) {\\n\\s*([\\w\\s-.,:;/\\\\{}()]+)\\n}$/.exec(\n              rule.cssText\n            );\n            ///if (darkRules?.[1]) { // lwf\n            if (darkRules && darkRules[1]) {\n              styleSheet.deleteRule(i);\n              styleSheet.insertRule(darkRules[1], i);\n            }\n            return;\n          }\n        }\n      } catch (reason) {\n        ///console.error(`_forceCssTheme: \"${reason?.message}\".`); // lwf\n        console.error(`_forceCssTheme: \"${reason && reason.message}\".`);\n      }\n    },\n\n    /**\n     * @private\n     */\n    async _initializeViewerComponents() {\n      const appConfig = this.appConfig;\n\n      const eventBus =\n        appConfig.eventBus ||\n        new EventBus({ isInAutomation: this.externalServices.isInAutomation });\n      this.eventBus = eventBus;\n\n      this.overlayManager = new OverlayManager();\n\n      const pdfRenderingQueue = new PDFRenderingQueue();\n      pdfRenderingQueue.onIdle = this.cleanup.bind(this);\n      this.pdfRenderingQueue = pdfRenderingQueue;\n\n      const pdfLinkService = new PDFLinkService({\n        eventBus,\n        externalLinkTarget: AppOptions.get(\"externalLinkTarget\"),\n        externalLinkRel: AppOptions.get(\"externalLinkRel\"),\n        ignoreDestinationZoom: AppOptions.get(\"ignoreDestinationZoom\"),\n      });\n      this.pdfLinkService = pdfLinkService;\n\n      const downloadManager = this.externalServices.createDownloadManager();\n      this.downloadManager = downloadManager;\n\n      const findController = new PDFFindController({\n        linkService: pdfLinkService,\n        eventBus,\n      });\n      this.findController = findController;\n\n      const container = appConfig.mainContainer;\n      const viewer = appConfig.viewerContainer;\n      this.pdfViewer = new PDFViewer({\n        container,\n        viewer,\n        eventBus,\n        renderingQueue: pdfRenderingQueue,\n        linkService: pdfLinkService,\n        downloadManager,\n        findController,\n        renderer: AppOptions.get(\"renderer\"),\n        enableWebGL: AppOptions.get(\"enableWebGL\"),\n        l10n: this.l10n,\n        textLayerMode: AppOptions.get(\"textLayerMode\"),\n        imageResourcesPath: AppOptions.get(\"imageResourcesPath\"),\n        renderInteractiveForms: AppOptions.get(\"renderInteractiveForms\"),\n        enablePrintAutoRotate: AppOptions.get(\"enablePrintAutoRotate\"),\n        useOnlyCssZoom: AppOptions.get(\"useOnlyCssZoom\"),\n        maxCanvasPixels: AppOptions.get(\"maxCanvasPixels\"),\n        enableScripting: AppOptions.get(\"enableScripting\"),\n        mouseState: this._mouseState,\n      });\n      pdfRenderingQueue.setViewer(this.pdfViewer);\n      pdfLinkService.setViewer(this.pdfViewer);\n\n      this.pdfThumbnailViewer = new PDFThumbnailViewer({\n        container: appConfig.sidebar.thumbnailView,\n        eventBus,\n        renderingQueue: pdfRenderingQueue,\n        linkService: pdfLinkService,\n        l10n: this.l10n,\n      });\n      pdfRenderingQueue.setThumbnailViewer(this.pdfThumbnailViewer);\n\n      this.pdfHistory = new PDFHistory({\n        linkService: pdfLinkService,\n        eventBus,\n      });\n      pdfLinkService.setHistory(this.pdfHistory);\n\n      if (!this.supportsIntegratedFind) {\n        this.findBar = new PDFFindBar(appConfig.findBar, eventBus, this.l10n);\n      }\n\n      this.pdfDocumentProperties = new PDFDocumentProperties(\n        appConfig.documentProperties,\n        this.overlayManager,\n        eventBus,\n        this.l10n\n      );\n\n      this.pdfCursorTools = new PDFCursorTools({\n        container,\n        eventBus,\n        cursorToolOnLoad: AppOptions.get(\"cursorToolOnLoad\"),\n      });\n\n      this.toolbar = new Toolbar(appConfig.toolbar, eventBus, this.l10n);\n\n      this.secondaryToolbar = new SecondaryToolbar(\n        appConfig.secondaryToolbar,\n        container,\n        eventBus\n      );\n\n      if (this.supportsFullscreen) {\n        this.pdfPresentationMode = new PDFPresentationMode({\n          container,\n          pdfViewer: this.pdfViewer,\n          eventBus,\n          contextMenuItems: appConfig.fullscreen,\n        });\n      }\n\n      this.passwordPrompt = new PasswordPrompt(\n        appConfig.passwordOverlay,\n        this.overlayManager,\n        this.l10n\n      );\n\n      this.pdfOutlineViewer = new PDFOutlineViewer({\n        container: appConfig.sidebar.outlineView,\n        eventBus,\n        linkService: pdfLinkService,\n      });\n\n      this.pdfAttachmentViewer = new PDFAttachmentViewer({\n        container: appConfig.sidebar.attachmentsView,\n        eventBus,\n        downloadManager,\n      });\n\n      this.pdfLayerViewer = new PDFLayerViewer({\n        container: appConfig.sidebar.layersView,\n        eventBus,\n        l10n: this.l10n,\n      });\n\n      this.pdfSidebar = new PDFSidebar({\n        elements: appConfig.sidebar,\n        pdfViewer: this.pdfViewer,\n        pdfThumbnailViewer: this.pdfThumbnailViewer,\n        eventBus,\n        l10n: this.l10n,\n      });\n      this.pdfSidebar.onToggled = this.forceRendering.bind(this);\n\n      this.pdfSidebarResizer = new PDFSidebarResizer(\n        appConfig.sidebarResizer,\n        eventBus,\n        this.l10n\n      );\n    },\n\n    run(config) {\n      this.initialize(config).then(webViewerInitialized);\n    },\n\n    get initialized() {\n      return this._initializedCapability.settled;\n    },\n\n    get initializedPromise() {\n      return this._initializedCapability.promise;\n    },\n\n    zoomIn(ticks) {\n      if (this.pdfViewer.isInPresentationMode) {\n        return;\n      }\n      let newScale = this.pdfViewer.currentScale;\n      do {\n        newScale = (newScale * DEFAULT_SCALE_DELTA).toFixed(2);\n        newScale = Math.ceil(newScale * 10) / 10;\n        newScale = Math.min(MAX_SCALE, newScale);\n      } while (--ticks > 0 && newScale < MAX_SCALE);\n      this.pdfViewer.currentScaleValue = newScale;\n    },\n\n    zoomOut(ticks) {\n      if (this.pdfViewer.isInPresentationMode) {\n        return;\n      }\n      let newScale = this.pdfViewer.currentScale;\n      do {\n        newScale = (newScale / DEFAULT_SCALE_DELTA).toFixed(2);\n        newScale = Math.floor(newScale * 10) / 10;\n        newScale = Math.max(MIN_SCALE, newScale);\n      } while (--ticks > 0 && newScale > MIN_SCALE);\n      this.pdfViewer.currentScaleValue = newScale;\n    },\n\n    zoomReset() {\n      if (this.pdfViewer.isInPresentationMode) {\n        return;\n      }\n      this.pdfViewer.currentScaleValue = DEFAULT_SCALE_VALUE;\n    },\n\n    get pagesCount() {\n      return this.pdfDocument ? this.pdfDocument.numPages : 0;\n    },\n\n    get page() {\n      return this.pdfViewer.currentPageNumber;\n    },\n\n    set page(val) {\n      this.pdfViewer.currentPageNumber = val;\n    },\n\n    get supportsPrinting() {\n      return PDFPrintServiceFactory.instance.supportsPrinting;\n    },\n\n    get supportsFullscreen() {\n      let support;\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n        support =\n          document.fullscreenEnabled === true ||\n          document.mozFullScreenEnabled === true;\n      } else {\n        const doc = document.documentElement;\n        support = !!(\n          doc.requestFullscreen ||\n          doc.mozRequestFullScreen ||\n          doc.webkitRequestFullScreen\n        );\n\n        if (\n          document.fullscreenEnabled === false ||\n          document.mozFullScreenEnabled === false ||\n          document.webkitFullscreenEnabled === false\n        ) {\n          support = false;\n        }\n      }\n      return shadow(this, \"supportsFullscreen\", support);\n    },\n\n    get supportsIntegratedFind() {\n      return this.externalServices.supportsIntegratedFind;\n    },\n\n    get supportsDocumentFonts() {\n      return this.externalServices.supportsDocumentFonts;\n    },\n\n    get loadingBar() {\n      const bar = new ProgressBar(\"#loadingBar\");\n      return shadow(this, \"loadingBar\", bar);\n    },\n\n    get supportedMouseWheelZoomModifierKeys() {\n      return this.externalServices.supportedMouseWheelZoomModifierKeys;\n    },\n\n    initPassiveLoading() {\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        !PDFJSDev.test(\"MOZCENTRAL || CHROME\")\n      ) {\n        throw new Error(\"Not implemented: initPassiveLoading\");\n      }\n      this.externalServices.initPassiveLoading({\n        onOpenWithTransport(url, length, transport) {\n          PDFViewerApplication.open(url, { length, range: transport });\n        },\n        onOpenWithData(data) {\n          PDFViewerApplication.open(data);\n        },\n        onOpenWithURL(url, length, originalUrl) {\n          let file = url,\n            args = null;\n          if (length !== undefined) {\n            args = { length };\n          }\n          if (originalUrl !== undefined) {\n            file = { url, originalUrl };\n          }\n          PDFViewerApplication.open(file, args);\n        },\n        onError(err) {\n          PDFViewerApplication.l10n\n            .get(\n              \"loading_error\",\n              null,\n              \"An error occurred while loading the PDF.\"\n            )\n            .then(msg => {\n              PDFViewerApplication.error(msg, err);\n            });\n        },\n        onProgress(loaded, total) {\n          PDFViewerApplication.progress(loaded / total);\n        },\n      });\n    },\n\n    setTitleUsingUrl(url = \"\") {\n      this.url = url;\n      this.baseUrl = url.split(\"#\")[0];\n      let title = getPDFFileNameFromURL(url, \"\");\n      if (!title) {\n        try {\n          title = decodeURIComponent(getFilenameFromUrl(url)) || url;\n        } catch (ex) {\n          // decodeURIComponent may throw URIError,\n          // fall back to using the unprocessed url in that case\n          title = url;\n        }\n      }\n      this.setTitle(title);\n    },\n\n    setTitle(title) {\n      if (this.isViewerEmbedded) {\n        // Embedded PDF viewers should not be changing their parent page's title.\n        return;\n      }\n      document.title = title;\n    },\n\n    get _docFilename() {\n      // Use `this.url` instead of `this.baseUrl` to perform filename detection\n      // based on the reference fragment as ultimate fallback if needed.\n      return this._contentDispositionFilename || getPDFFileNameFromURL(this.url);\n    },\n\n    /**\n     * @private\n     */\n    _cancelIdleCallbacks() {\n      if (!this._idleCallbacks.size) {\n        return;\n      }\n      for (const callback of this._idleCallbacks) {\n        window.cancelIdleCallback(callback);\n      }\n      this._idleCallbacks.clear();\n    },\n\n    /**\n     * @private\n     */\n    async _destroyScriptingInstance() {\n      if (!this._scriptingInstance) {\n        return;\n      }\n      const { scripting, internalEvents, domEvents } = this._scriptingInstance;\n      try {\n        await scripting.destroySandbox();\n      } catch (ex) {}\n\n      for (const [name, listener] of internalEvents) {\n        this.eventBus._off(name, listener);\n      }\n      internalEvents.clear();\n\n      for (const [name, listener] of domEvents) {\n        window.removeEventListener(name, listener);\n      }\n      domEvents.clear();\n\n      delete this._mouseState.isDown;\n      this._scriptingInstance = null;\n    },\n\n    /**\n     * Closes opened PDF document.\n     * @returns {Promise} - Returns the promise, which is resolved when all\n     *                      destruction is completed.\n     */\n    async close() {\n      const errorWrapper = this.appConfig.errorWrapper.container;\n      errorWrapper.setAttribute(\"hidden\", \"true\");\n\n      if (!this.pdfLoadingTask) {\n        return undefined;\n      }\n      const promises = [];\n\n      promises.push(this.pdfLoadingTask.destroy());\n      this.pdfLoadingTask = null;\n\n      if (this.pdfDocument) {\n        this.pdfDocument = null;\n\n        this.pdfThumbnailViewer.setDocument(null);\n        this.pdfViewer.setDocument(null);\n        this.pdfLinkService.setDocument(null);\n        this.pdfDocumentProperties.setDocument(null);\n      }\n      webViewerResetPermissions();\n      this.store = null;\n      this.isInitialViewSet = false;\n      this.downloadComplete = false;\n      this.url = \"\";\n      this.baseUrl = \"\";\n      this.documentInfo = null;\n      this.metadata = null;\n      this._contentDispositionFilename = null;\n      this._contentLength = null;\n      this.triggerDelayedFallback = null;\n      this._saveInProgress = false;\n\n      this._cancelIdleCallbacks();\n      promises.push(this._destroyScriptingInstance());\n\n      this.pdfSidebar.reset();\n      this.pdfOutlineViewer.reset();\n      this.pdfAttachmentViewer.reset();\n      this.pdfLayerViewer.reset();\n\n      if (this.pdfHistory) {\n        this.pdfHistory.reset();\n      }\n      if (this.findBar) {\n        this.findBar.reset();\n      }\n      this.toolbar.reset();\n      this.secondaryToolbar.reset();\n\n      if (typeof PDFBug !== \"undefined\") {\n        PDFBug.cleanup();\n      }\n      await Promise.all(promises);\n\n      return undefined;\n    },\n\n    /**\n     * Opens PDF document specified by URL or array with additional arguments.\n     * @param {string|TypedArray|ArrayBuffer} file - PDF location or binary data.\n     * @param {Object} [args] - Additional arguments for the getDocument call,\n     *                          e.g. HTTP headers ('httpHeaders') or alternative\n     *                          data transport ('range').\n     * @returns {Promise} - Returns the promise, which is resolved when document\n     *                      is opened.\n     */\n    async open(file, args) {\n      if (this.pdfLoadingTask) {\n        // We need to destroy already opened document.\n        await this.close();\n      }\n      // Set the necessary global worker parameters, using the available options.\n      const workerParameters = AppOptions.getAll(OptionKind.WORKER);\n      for (const key in workerParameters) {\n        GlobalWorkerOptions[key] = workerParameters[key];\n      }\n\n      const parameters = Object.create(null);\n      if (typeof file === \"string\") {\n        // URL\n        this.setTitleUsingUrl(file);\n        parameters.url = file;\n      } else if (file && \"byteLength\" in file) {\n        // ArrayBuffer\n        parameters.data = file;\n      } else if (file.url && file.originalUrl) {\n        this.setTitleUsingUrl(file.originalUrl);\n        parameters.url = file.url;\n      }\n      // Set the necessary API parameters, using the available options.\n      const apiParameters = AppOptions.getAll(OptionKind.API);\n      for (const key in apiParameters) {\n        let value = apiParameters[key];\n\n        if (key === \"docBaseUrl\" && !value) {\n          if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n            value = document.URL.split(\"#\")[0];\n          } else if (PDFJSDev.test(\"MOZCENTRAL || CHROME\")) {\n            value = this.baseUrl;\n          }\n        }\n        parameters[key] = value;\n      }\n      // Finally, update the API parameters with the arguments (if they exist).\n      if (args) {\n        for (const key in args) {\n          parameters[key] = args[key];\n        }\n      }\n\n      const loadingTask = getDocument(parameters);\n      this.pdfLoadingTask = loadingTask;\n\n      loadingTask.onPassword = (updateCallback, reason) => {\n        this.pdfLinkService.externalLinkEnabled = false;\n        this.passwordPrompt.setUpdateCallback(updateCallback, reason);\n        this.passwordPrompt.open();\n      };\n\n      loadingTask.onProgress = ({ loaded, total }) => {\n        this.progress(loaded / total);\n      };\n\n      // Listen for unsupported features to trigger the fallback UI.\n      loadingTask.onUnsupportedFeature = this.fallback.bind(this);\n\n      return loadingTask.promise.then(\n        pdfDocument => {\n          this.load(pdfDocument);\n        },\n        exception => {\n          if (loadingTask !== this.pdfLoadingTask) {\n            return undefined; // Ignore errors for previously opened PDF files.\n          }\n\n          ///const message = exception?.message; // lwf\n          const message = exception && exception.message;\n          let loadingErrorMessage;\n          if (exception instanceof InvalidPDFException) {\n            // change error message also for other builds\n            loadingErrorMessage = this.l10n.get(\n              \"invalid_file_error\",\n              null,\n              \"Invalid or corrupted PDF file.\"\n            );\n          } else if (exception instanceof MissingPDFException) {\n            // special message for missing PDF's\n            loadingErrorMessage = this.l10n.get(\n              \"missing_file_error\",\n              null,\n              \"Missing PDF file.\"\n            );\n          } else if (exception instanceof UnexpectedResponseException) {\n            loadingErrorMessage = this.l10n.get(\n              \"unexpected_response_error\",\n              null,\n              \"Unexpected server response.\"\n            );\n          } else {\n            loadingErrorMessage = this.l10n.get(\n              \"loading_error\",\n              null,\n              \"An error occurred while loading the PDF.\"\n            );\n          }\n\n          return loadingErrorMessage.then(msg => {\n            this.error(msg, { message });\n            throw exception;\n          });\n        }\n      );\n    },\n\n    download({ sourceEventType = \"download\" } = {}) {\n      function downloadByUrl() {\n        downloadManager.downloadUrl(url, filename);\n      }\n\n      const downloadManager = this.downloadManager,\n        url = this.baseUrl,\n        filename = this._docFilename;\n\n      // When the PDF document isn't ready, or the PDF file is still downloading,\n      // simply download using the URL.\n      if (!this.pdfDocument || !this.downloadComplete) {\n        downloadByUrl();\n        return;\n      }\n\n      this.pdfDocument\n        .getData()\n        .then(function (data) {\n          const blob = new Blob([data], { type: \"application/pdf\" });\n          downloadManager.download(blob, url, filename, sourceEventType);\n        })\n        .catch(downloadByUrl); // Error occurred, try downloading with the URL.\n    },\n\n    async save({ sourceEventType = \"download\" } = {}) {\n      if (this._saveInProgress) {\n        return;\n      }\n\n      const downloadManager = this.downloadManager,\n        url = this.baseUrl,\n        filename = this._docFilename;\n\n      // When the PDF document isn't ready, or the PDF file is still downloading,\n      // simply download using the URL.\n      if (!this.pdfDocument || !this.downloadComplete) {\n        this.download({ sourceEventType });\n        return;\n      }\n      this._saveInProgress = true;\n\n      ///await this._scriptingInstance?.scripting.dispatchEventInSandbox({ // lwf\n      await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({\n        id: \"doc\",\n        name: \"WillSave\",\n      });\n\n      this.pdfDocument\n        .saveDocument(this.pdfDocument.annotationStorage)\n        .then(data => {\n          const blob = new Blob([data], { type: \"application/pdf\" });\n          downloadManager.download(blob, url, filename, sourceEventType);\n        })\n        .catch(() => {\n          this.download({ sourceEventType });\n        })\n        .finally(async () => {\n          ///await this._scriptingInstance?.scripting.dispatchEventInSandbox({ // lwf\n          await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({\n            id: \"doc\",\n            name: \"DidSave\",\n          });\n\n          this._saveInProgress = false;\n        });\n    },\n\n    downloadOrSave(options) {\n      ///if (this.pdfDocument?.annotationStorage.size > 0) { // lwf\n      if (this.pdfDocument && this.pdfDocument.annotationStorage.size > 0) {\n        this.save(options);\n      } else {\n        this.download(options);\n      }\n    },\n\n    /**\n     * For PDF documents that contain e.g. forms and javaScript, we should only\n     * trigger the fallback bar once the user has interacted with the page.\n     * @private\n     */\n    _delayedFallback(featureId) {\n      // Ensure that telemetry is always reported, since it's not guaranteed\n      // that the fallback bar will be shown (depends on user interaction).\n      this.externalServices.reportTelemetry({\n        type: \"unsupportedFeature\",\n        featureId,\n      });\n\n      if (!this.triggerDelayedFallback) {\n        this.triggerDelayedFallback = () => {\n          this.fallback(featureId);\n          this.triggerDelayedFallback = null;\n        };\n      }\n    },\n\n    fallback(featureId) {\n      this.externalServices.reportTelemetry({\n        type: \"unsupportedFeature\",\n        featureId,\n      });\n\n      // Only trigger the fallback once so we don't spam the user with messages\n      // for one PDF.\n      if (this.fellback) {\n        return;\n      }\n      this.fellback = true;\n      this.externalServices\n        .fallback({\n          featureId,\n          url: this.baseUrl,\n        })\n        .then(download => {\n          if (!download) {\n            return;\n          }\n          this.download({ sourceEventType: \"download\" });\n        });\n    },\n\n    /**\n     * Show the error box.\n     * @param {string} message - A message that is human readable.\n     * @param {Object} [moreInfo] - Further information about the error that is\n     *                              more technical.  Should have a 'message' and\n     *                              optionally a 'stack' property.\n     */\n    error(message, moreInfo) {\n      const moreInfoText = [\n        this.l10n.get(\n          \"error_version_info\",\n          { version: version || \"?\", build: build || \"?\" },\n          \"PDF.js v{{version}} (build: {{build}})\"\n        ),\n      ];\n      if (moreInfo) {\n        moreInfoText.push(\n          this.l10n.get(\n            \"error_message\",\n            { message: moreInfo.message },\n            \"Message: {{message}}\"\n          )\n        );\n        if (moreInfo.stack) {\n          moreInfoText.push(\n            this.l10n.get(\n              \"error_stack\",\n              { stack: moreInfo.stack },\n              \"Stack: {{stack}}\"\n            )\n          );\n        } else {\n          if (moreInfo.filename) {\n            moreInfoText.push(\n              this.l10n.get(\n                \"error_file\",\n                { file: moreInfo.filename },\n                \"File: {{file}}\"\n              )\n            );\n          }\n          if (moreInfo.lineNumber) {\n            moreInfoText.push(\n              this.l10n.get(\n                \"error_line\",\n                { line: moreInfo.lineNumber },\n                \"Line: {{line}}\"\n              )\n            );\n          }\n        }\n      }\n\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        const errorWrapperConfig = this.appConfig.errorWrapper;\n        const errorWrapper = errorWrapperConfig.container;\n        errorWrapper.removeAttribute(\"hidden\");\n\n        const errorMessage = errorWrapperConfig.errorMessage;\n        errorMessage.textContent = message;\n\n        const closeButton = errorWrapperConfig.closeButton;\n        closeButton.onclick = function () {\n          errorWrapper.setAttribute(\"hidden\", \"true\");\n        };\n\n        const errorMoreInfo = errorWrapperConfig.errorMoreInfo;\n        const moreInfoButton = errorWrapperConfig.moreInfoButton;\n        const lessInfoButton = errorWrapperConfig.lessInfoButton;\n        moreInfoButton.onclick = function () {\n          errorMoreInfo.removeAttribute(\"hidden\");\n          moreInfoButton.setAttribute(\"hidden\", \"true\");\n          lessInfoButton.removeAttribute(\"hidden\");\n          errorMoreInfo.style.height = errorMoreInfo.scrollHeight + \"px\";\n        };\n        lessInfoButton.onclick = function () {\n          errorMoreInfo.setAttribute(\"hidden\", \"true\");\n          moreInfoButton.removeAttribute(\"hidden\");\n          lessInfoButton.setAttribute(\"hidden\", \"true\");\n        };\n        moreInfoButton.oncontextmenu = noContextMenuHandler;\n        lessInfoButton.oncontextmenu = noContextMenuHandler;\n        closeButton.oncontextmenu = noContextMenuHandler;\n        moreInfoButton.removeAttribute(\"hidden\");\n        lessInfoButton.setAttribute(\"hidden\", \"true\");\n        Promise.all(moreInfoText).then(parts => {\n          errorMoreInfo.value = parts.join(\"\\n\");\n        });\n      } else {\n        Promise.all(moreInfoText).then(parts => {\n          console.error(message + \"\\n\" + parts.join(\"\\n\"));\n        });\n        this.fallback();\n      }\n    },\n\n    progress(level) {\n      if (this.downloadComplete) {\n        // Don't accidentally show the loading bar again when the entire file has\n        // already been fetched (only an issue when disableAutoFetch is enabled).\n        return;\n      }\n      const percent = Math.round(level * 100);\n      // When we transition from full request to range requests, it's possible\n      // that we discard some of the loaded data. This can cause the loading\n      // bar to move backwards. So prevent this by only updating the bar if it\n      // increases.\n      if (percent > this.loadingBar.percent || isNaN(percent)) {\n        this.loadingBar.percent = percent;\n\n        // When disableAutoFetch is enabled, it's not uncommon for the entire file\n        // to never be fetched (depends on e.g. the file structure). In this case\n        // the loading bar will not be completely filled, nor will it be hidden.\n        // To prevent displaying a partially filled loading bar permanently, we\n        // hide it when no data has been loaded during a certain amount of time.\n        const disableAutoFetch = this.pdfDocument\n          ? this.pdfDocument.loadingParams.disableAutoFetch\n          : AppOptions.get(\"disableAutoFetch\");\n\n        if (disableAutoFetch && percent) {\n          if (this.disableAutoFetchLoadingBarTimeout) {\n            clearTimeout(this.disableAutoFetchLoadingBarTimeout);\n            this.disableAutoFetchLoadingBarTimeout = null;\n          }\n          this.loadingBar.show();\n\n          this.disableAutoFetchLoadingBarTimeout = setTimeout(() => {\n            this.loadingBar.hide();\n            this.disableAutoFetchLoadingBarTimeout = null;\n          }, DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT);\n        }\n      }\n    },\n\n    load(pdfDocument) {\n      this.pdfDocument = pdfDocument;\n\n      pdfDocument.getDownloadInfo().then(({ length }) => {\n        this._contentLength = length; // Ensure that the correct length is used.\n        this.downloadComplete = true;\n        this.loadingBar.hide();\n\n        firstPagePromise.then(() => {\n          this.eventBus.dispatch(\"documentloaded\", { source: this });\n        });\n      });\n\n      // Since the `setInitialView` call below depends on this being resolved,\n      // fetch it early to avoid delaying initial rendering of the PDF document.\n      const pageLayoutPromise = pdfDocument.getPageLayout().catch(function () {\n        /* Avoid breaking initial rendering; ignoring errors. */\n      });\n      const pageModePromise = pdfDocument.getPageMode().catch(function () {\n        /* Avoid breaking initial rendering; ignoring errors. */\n      });\n      const openActionPromise = pdfDocument.getOpenAction().catch(function () {\n        /* Avoid breaking initial rendering; ignoring errors. */\n      });\n\n      this.toolbar.setPagesCount(pdfDocument.numPages, false);\n      this.secondaryToolbar.setPagesCount(pdfDocument.numPages);\n\n      let baseDocumentUrl;\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        baseDocumentUrl = null;\n      } else if (PDFJSDev.test(\"MOZCENTRAL\")) {\n        baseDocumentUrl = this.baseUrl;\n      } else if (PDFJSDev.test(\"CHROME\")) {\n        baseDocumentUrl = location.href.split(\"#\")[0];\n      }\n      this.pdfLinkService.setDocument(pdfDocument, baseDocumentUrl);\n      this.pdfDocumentProperties.setDocument(pdfDocument, this.url);\n\n      const pdfViewer = this.pdfViewer;\n      pdfViewer.setDocument(pdfDocument);\n      const { firstPagePromise, onePageRendered, pagesPromise } = pdfViewer;\n\n      const pdfThumbnailViewer = this.pdfThumbnailViewer;\n      pdfThumbnailViewer.setDocument(pdfDocument);\n\n      const storedPromise = (this.store = new ViewHistory(\n        pdfDocument.fingerprint\n      ))\n        .getMultiple({\n          page: null,\n          zoom: DEFAULT_SCALE_VALUE,\n          scrollLeft: \"0\",\n          scrollTop: \"0\",\n          rotation: null,\n          sidebarView: SidebarView.UNKNOWN,\n          scrollMode: ScrollMode.UNKNOWN,\n          spreadMode: SpreadMode.UNKNOWN,\n        })\n        .catch(() => {\n          /* Unable to read from storage; ignoring errors. */\n          return Object.create(null);\n        });\n\n      firstPagePromise.then(pdfPage => {\n        this.loadingBar.setWidth(this.appConfig.viewerContainer);\n        this._initializeAnnotationStorageCallbacks(pdfDocument);\n\n        Promise.all([\n          animationStarted,\n          storedPromise,\n          pageLayoutPromise,\n          pageModePromise,\n          openActionPromise,\n        ])\n          .then(async ([timeStamp, stored, pageLayout, pageMode, openAction]) => {\n            const viewOnLoad = AppOptions.get(\"viewOnLoad\");\n\n            this._initializePdfHistory({\n              fingerprint: pdfDocument.fingerprint,\n              viewOnLoad,\n              initialDest: openAction && openAction.dest,\n            });\n            const initialBookmark = this.initialBookmark;\n\n            // Initialize the default values, from user preferences.\n            const zoom = AppOptions.get(\"defaultZoomValue\");\n            let hash = zoom ? `zoom=${zoom}` : null;\n\n            let rotation = null;\n            let sidebarView = AppOptions.get(\"sidebarViewOnLoad\");\n            let scrollMode = AppOptions.get(\"scrollModeOnLoad\");\n            let spreadMode = AppOptions.get(\"spreadModeOnLoad\");\n\n            if (stored.page && viewOnLoad !== ViewOnLoad.INITIAL) {\n              hash =\n                `page=${stored.page}&zoom=${zoom || stored.zoom},` +\n                `${stored.scrollLeft},${stored.scrollTop}`;\n\n              rotation = parseInt(stored.rotation, 10);\n              // Always let user preference take precedence over the view history.\n              if (sidebarView === SidebarView.UNKNOWN) {\n                sidebarView = stored.sidebarView | 0;\n              }\n              if (scrollMode === ScrollMode.UNKNOWN) {\n                scrollMode = stored.scrollMode | 0;\n              }\n              if (spreadMode === SpreadMode.UNKNOWN) {\n                spreadMode = stored.spreadMode | 0;\n              }\n            }\n            // Always let the user preference/view history take precedence.\n            if (pageMode && sidebarView === SidebarView.UNKNOWN) {\n              sidebarView = apiPageModeToSidebarView(pageMode);\n            }\n            if (pageLayout && spreadMode === SpreadMode.UNKNOWN) {\n              spreadMode = apiPageLayoutToSpreadMode(pageLayout);\n            }\n\n            this.setInitialView(hash, {\n              rotation,\n              sidebarView,\n              scrollMode,\n              spreadMode,\n            });\n            this.eventBus.dispatch(\"documentinit\", { source: this });\n            // Make all navigation keys work on document load,\n            // unless the viewer is embedded in a web page.\n            if (!this.isViewerEmbedded) {\n              pdfViewer.focus();\n            }\n\n            // Currently only the \"copy\"-permission is supported, hence we delay\n            // the `getPermissions` API call until *after* rendering has started.\n            this._initializePermissions(pdfDocument);\n\n            // For documents with different page sizes, once all pages are\n            // resolved, ensure that the correct location becomes visible on load.\n            // (To reduce the risk, in very large and/or slow loading documents,\n            //  that the location changes *after* the user has started interacting\n            //  with the viewer, wait for either `pagesPromise` or a timeout.)\n            await Promise.race([\n              pagesPromise,\n              new Promise(resolve => {\n                setTimeout(resolve, FORCE_PAGES_LOADED_TIMEOUT);\n              }),\n            ]);\n            if (!initialBookmark && !hash) {\n              return;\n            }\n            if (pdfViewer.hasEqualPageSizes) {\n              return;\n            }\n            this.initialBookmark = initialBookmark;\n\n            // eslint-disable-next-line no-self-assign\n            pdfViewer.currentScaleValue = pdfViewer.currentScaleValue;\n            // Re-apply the initial document location.\n            this.setInitialView(hash);\n          })\n          .catch(() => {\n            // Ensure that the document is always completely initialized,\n            // even if there are any errors thrown above.\n            this.setInitialView();\n          })\n          .then(function () {\n            // At this point, rendering of the initial page(s) should always have\n            // started (and may even have completed).\n            // To prevent any future issues, e.g. the document being completely\n            // blank on load, always trigger rendering here.\n            pdfViewer.update();\n          });\n      });\n\n      pagesPromise.then(() => {\n        this._initializeAutoPrint(pdfDocument, openActionPromise);\n      });\n\n      onePageRendered.then(() => {\n        pdfDocument.getOutline().then(outline => {\n          this.pdfOutlineViewer.render({ outline, pdfDocument });\n        });\n        pdfDocument.getAttachments().then(attachments => {\n          this.pdfAttachmentViewer.render({ attachments });\n        });\n        // Ensure that the layers accurately reflects the current state in the\n        // viewer itself, rather than the default state provided by the API.\n        pdfViewer.optionalContentConfigPromise.then(optionalContentConfig => {\n          this.pdfLayerViewer.render({ optionalContentConfig, pdfDocument });\n        });\n        if (\"requestIdleCallback\" in window) {\n          const callback = window.requestIdleCallback(\n            () => {\n              this._collectTelemetry(pdfDocument);\n              this._idleCallbacks.delete(callback);\n            },\n            { timeout: 1000 }\n          );\n          this._idleCallbacks.add(callback);\n        }\n        this._initializeJavaScript(pdfDocument);\n      });\n\n      this._initializePageLabels(pdfDocument);\n      this._initializeMetadata(pdfDocument);\n    },\n\n    /**\n     * @private\n     */\n    async _initializeJavaScript(pdfDocument) {\n      if (!AppOptions.get(\"enableScripting\")) {\n        return;\n      }\n      const [objects, calculationOrder, docActions] = await Promise.all([\n        pdfDocument.getFieldObjects(),\n        pdfDocument.getCalculationOrderIds(),\n        pdfDocument.getJSActions(),\n      ]);\n\n      if (!objects && !docActions) {\n        // No FieldObjects or JavaScript actions were found in the document.\n        return;\n      }\n      if (pdfDocument !== this.pdfDocument) {\n        return; // The document was closed while the data resolved.\n      }\n      const scripting = this.externalServices.createScripting(\n        typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || GENERIC || CHROME\")\n          ? { sandboxBundleSrc: AppOptions.get(\"sandboxBundleSrc\") }\n          : null\n      );\n      // Store a reference to the current scripting-instance, to allow destruction\n      // of the sandbox and removal of the event listeners at document closing.\n      const internalEvents = new Map(),\n        domEvents = new Map();\n      this._scriptingInstance = {\n        scripting,\n        ready: false,\n        internalEvents,\n        domEvents,\n      };\n\n      if (!this.documentInfo) {\n        // It should be *extremely* rare for metadata to not have been resolved\n        // when this code runs, but ensure that we handle that case here.\n        await new Promise(resolve => {\n          this.eventBus._on(\n            \"metadataloaded\",\n            evt => {\n              resolve();\n            },\n            { once: true }\n          );\n        });\n        if (pdfDocument !== this.pdfDocument) {\n          return; // The document was closed while the metadata resolved.\n        }\n      }\n      if (!this._contentLength) {\n        // Always waiting for the entire PDF document to be loaded will, most\n        // likely, delay sandbox-creation too much in the general case for all\n        // PDF documents which are not provided as binary data to the API.\n        // Hence we'll simply have to trust that the `contentLength` (as provided\n        // by the server), when it exists, is accurate enough here.\n        await new Promise(resolve => {\n          this.eventBus._on(\n            \"documentloaded\",\n            evt => {\n              resolve();\n            },\n            { once: true }\n          );\n        });\n        if (pdfDocument !== this.pdfDocument) {\n          return; // The document was closed while the downloadInfo resolved.\n        }\n      }\n\n      const updateFromSandbox = ({ detail }) => {\n        const { id, command, value } = detail;\n        if (!id) {\n          switch (command) {\n            case \"clear\":\n              console.clear();\n              break;\n            case \"error\":\n              console.error(value);\n              break;\n            case \"layout\":\n              this.pdfViewer.spreadMode = apiPageLayoutToSpreadMode(value);\n              break;\n            case \"page-num\":\n              this.pdfViewer.currentPageNumber = value + 1;\n              break;\n            case \"print\":\n              this.pdfViewer.pagesPromise.then(() => {\n                this.triggerPrinting();\n              });\n              break;\n            case \"println\":\n              console.log(value);\n              break;\n            case \"zoom\":\n              this.pdfViewer.currentScaleValue = value;\n              break;\n          }\n          return;\n        }\n\n        const element = document.getElementById(id);\n        if (element) {\n          element.dispatchEvent(new CustomEvent(\"updatefromsandbox\", { detail }));\n        } else {\n          if (value !== undefined && value !== null) {\n            // The element hasn't been rendered yet, use the AnnotationStorage.\n            pdfDocument.annotationStorage.setValue(id, value);\n          }\n        }\n      };\n      internalEvents.set(\"updatefromsandbox\", updateFromSandbox);\n\n      const visitedPages = new Map();\n      const pageOpen = ({ pageNumber, actionsPromise }) => {\n        visitedPages.set(\n          pageNumber,\n          (async () => {\n            // Avoid sending, and thus serializing, the `actions` data\n            // when the same page is opened several times.\n            let actions = null;\n            if (!visitedPages.has(pageNumber)) {\n              actions = await actionsPromise;\n\n              if (pdfDocument !== this.pdfDocument) {\n                return; // The document was closed while the actions resolved.\n              }\n            }\n\n            ///await this._scriptingInstance?.scripting.dispatchEventInSandbox({ // lwf\n            await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({\n              id: \"page\",\n              name: \"PageOpen\",\n              pageNumber,\n              actions,\n            });\n          })()\n        );\n      };\n\n      const pageClose = async ({ pageNumber }) => {\n        const actionsPromise = visitedPages.get(pageNumber);\n        if (!actionsPromise) {\n          // Ensure that the \"pageclose\" event was preceded by a \"pageopen\" event.\n          return;\n        }\n        visitedPages.set(pageNumber, null);\n\n        // Ensure that the \"pageopen\" event is handled first.\n        await actionsPromise;\n\n        if (pdfDocument !== this.pdfDocument) {\n          return; // The document was closed while the actions resolved.\n        }\n\n        ///await this._scriptingInstance?.scripting.dispatchEventInSandbox({ // lwf\n        await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({\n          id: \"page\",\n          name: \"PageClose\",\n          pageNumber,\n        });\n      };\n      internalEvents.set(\"pageopen\", pageOpen);\n      internalEvents.set(\"pageclose\", pageClose);\n\n      const dispatchEventInSandbox = ({ detail }) => {\n        scripting.dispatchEventInSandbox(detail);\n      };\n      internalEvents.set(\"dispatcheventinsandbox\", dispatchEventInSandbox);\n\n      const mouseDown = event => {\n        this._mouseState.isDown = true;\n      };\n      domEvents.set(\"mousedown\", mouseDown);\n\n      const mouseUp = event => {\n        this._mouseState.isDown = false;\n      };\n      domEvents.set(\"mouseup\", mouseUp);\n\n      for (const [name, listener] of internalEvents) {\n        this.eventBus._on(name, listener);\n      }\n      for (const [name, listener] of domEvents) {\n        window.addEventListener(name, listener);\n      }\n\n      try {\n        await scripting.createSandbox({\n          objects,\n          calculationOrder,\n          appInfo: {\n            platform: navigator.platform,\n            language: navigator.language,\n          },\n          docInfo: {\n            ...this.documentInfo,\n            baseURL: this.baseUrl,\n            filesize: this._contentLength,\n            filename: this._docFilename,\n            ///metadata: this.metadata?.getRaw(), // lwf\n            metadata: this.metadata && this.metadata.getRaw(),\n            ///authors: this.metadata?.get(\"dc:creator\"), // lwf\n            authors: this.metadata && this.metadata.get(\"dc:creator\"),\n            numPages: pdfDocument.numPages,\n            URL: this.url,\n            actions: docActions,\n          },\n        });\n\n        if (this.externalServices.isInAutomation) {\n          this.eventBus.dispatch(\"sandboxcreated\", { source: this });\n        }\n      } catch (error) {\n        ///console.error(`_initializeJavaScript: \"${error?.message}\".`); // lwf\n        console.error(`_initializeJavaScript: \"${error && error.message}\".`);\n\n        this._destroyScriptingInstance();\n        return;\n      }\n\n      await scripting.dispatchEventInSandbox({\n        id: \"doc\",\n        name: \"Open\",\n      });\n      await this.pdfViewer.initializeScriptingEvents();\n\n      // Used together with the integration-tests, see the `scriptingReady`\n      // getter, to enable awaiting full initialization of the scripting/sandbox.\n      // (Defer this slightly, to make absolutely sure that everything is done.)\n      Promise.resolve().then(() => {\n        if (this._scriptingInstance) {\n          this._scriptingInstance.ready = true;\n        }\n      });\n    },\n\n    /**\n     * A place to fetch data for telemetry after one page is rendered and the\n     * viewer is idle.\n     * @private\n     */\n    async _collectTelemetry(pdfDocument) {\n      const markInfo = await this.pdfDocument.getMarkInfo();\n      if (pdfDocument !== this.pdfDocument) {\n        return; // Document was closed while waiting for mark info.\n      }\n      ///const tagged = markInfo?.Marked || false; // lwf\n      const tagged = markInfo && markInfo.Marked || false;\n      this.externalServices.reportTelemetry({\n        type: \"tagged\",\n        tagged,\n      });\n    },\n\n    /**\n     * @private\n     */\n    async _initializeAutoPrint(pdfDocument, openActionPromise) {\n      const [openAction, javaScript] = await Promise.all([\n        openActionPromise,\n        !AppOptions.get(\"enableScripting\") ? pdfDocument.getJavaScript() : null,\n      ]);\n\n      if (pdfDocument !== this.pdfDocument) {\n        return; // The document was closed while the auto print data resolved.\n      }\n      let triggerAutoPrint = false;\n\n      ///if (openAction?.action === \"Print\") { // lwf\n      if (openAction && openAction.action === \"Print\") {\n        triggerAutoPrint = true;\n      }\n      if (javaScript) {\n        javaScript.some(js => {\n          if (!js) {\n            // Don't warn/fallback for empty JavaScript actions.\n            return false;\n          }\n          console.warn(\"Warning: JavaScript is not supported\");\n          this._delayedFallback(UNSUPPORTED_FEATURES.javaScript);\n          return true;\n        });\n\n        if (!triggerAutoPrint) {\n          // Hack to support auto printing.\n          for (const js of javaScript) {\n            if (js && AutoPrintRegExp.test(js)) {\n              triggerAutoPrint = true;\n              break;\n            }\n          }\n        }\n      }\n\n      if (triggerAutoPrint) {\n        this.triggerPrinting();\n      }\n    },\n\n    /**\n     * @private\n     */\n    async _initializeMetadata(pdfDocument) {\n      const {\n        info,\n        metadata,\n        contentDispositionFilename,\n        contentLength,\n      } = await pdfDocument.getMetadata();\n\n      if (pdfDocument !== this.pdfDocument) {\n        return; // The document was closed while the metadata resolved.\n      }\n      this.documentInfo = info;\n      this.metadata = metadata;\n      this._contentDispositionFilename = contentDispositionFilename;\n      //this._contentLength ??= contentLength; // See `getDownloadInfo`-call above. // lwf\n      this._contentLength ||  (this._contentLength = contentLength);\n\n      // Provides some basic debug information\n      console.log(\n        `PDF ${pdfDocument.fingerprint} [${info.PDFFormatVersion} ` +\n          `${(info.Producer || \"-\").trim()} / ${(info.Creator || \"-\").trim()}] ` +\n          `(PDF.js: ${version || \"-\"}` +\n          `${this.pdfViewer.enableWebGL ? \" [WebGL]\" : \"\"})`\n      );\n\n      let pdfTitle;\n      const infoTitle = info && info.Title;\n      if (infoTitle) {\n        pdfTitle = infoTitle;\n      }\n      const metadataTitle = metadata && metadata.get(\"dc:title\");\n      if (metadataTitle) {\n        // Ghostscript can produce invalid 'dc:title' Metadata entries:\n        //  - The title may be \"Untitled\" (fixes bug 1031612).\n        //  - The title may contain incorrectly encoded characters, which thus\n        //    looks broken, hence we ignore the Metadata entry when it\n        //    contains characters from the Specials Unicode block\n        //    (fixes bug 1605526).\n        if (\n          metadataTitle !== \"Untitled\" &&\n          !/[\\uFFF0-\\uFFFF]/g.test(metadataTitle)\n        ) {\n          pdfTitle = metadataTitle;\n        }\n      }\n      if (pdfTitle) {\n        this.setTitle(\n          `${pdfTitle} - ${contentDispositionFilename || document.title}`\n        );\n      } else if (contentDispositionFilename) {\n        this.setTitle(contentDispositionFilename);\n      }\n\n      if (info.IsXFAPresent && !info.IsAcroFormPresent) {\n        console.warn(\"Warning: XFA is not supported\");\n        this._delayedFallback(UNSUPPORTED_FEATURES.forms);\n      } else if (\n        (info.IsAcroFormPresent || info.IsXFAPresent) &&\n        !this.pdfViewer.renderInteractiveForms\n      ) {\n        console.warn(\"Warning: Interactive form support is not enabled\");\n        this._delayedFallback(UNSUPPORTED_FEATURES.forms);\n      }\n\n      // Telemetry labels must be C++ variable friendly.\n      let versionId = \"other\";\n      if (KNOWN_VERSIONS.includes(info.PDFFormatVersion)) {\n        versionId = `v${info.PDFFormatVersion.replace(\".\", \"_\")}`;\n      }\n      let generatorId = \"other\";\n      if (info.Producer) {\n        const producer = info.Producer.toLowerCase();\n        KNOWN_GENERATORS.some(function (generator) {\n          if (!producer.includes(generator)) {\n            return false;\n          }\n          generatorId = generator.replace(/[ .-]/g, \"_\");\n          return true;\n        });\n      }\n      let formType = null;\n      if (info.IsXFAPresent) {\n        formType = \"xfa\";\n      } else if (info.IsAcroFormPresent) {\n        formType = \"acroform\";\n      }\n      this.externalServices.reportTelemetry({\n        type: \"documentInfo\",\n        version: versionId,\n        generator: generatorId,\n        formType,\n      });\n\n      this.eventBus.dispatch(\"metadataloaded\", { source: this });\n    },\n\n    /**\n     * @private\n     */\n    async _initializePageLabels(pdfDocument) {\n      const labels = await pdfDocument.getPageLabels();\n\n      if (pdfDocument !== this.pdfDocument) {\n        return; // The document was closed while the page labels resolved.\n      }\n      if (!labels || AppOptions.get(\"disablePageLabels\")) {\n        return;\n      }\n      const numLabels = labels.length;\n      if (numLabels !== this.pagesCount) {\n        console.error(\n          \"The number of Page Labels does not match the number of pages in the document.\"\n        );\n        return;\n      }\n      let i = 0;\n      // Ignore page labels that correspond to standard page numbering.\n      while (i < numLabels && labels[i] === (i + 1).toString()) {\n        i++;\n      }\n      if (i === numLabels) {\n        return;\n      }\n      const { pdfViewer, pdfThumbnailViewer, toolbar } = this;\n\n      pdfViewer.setPageLabels(labels);\n      pdfThumbnailViewer.setPageLabels(labels);\n\n      // Changing toolbar page display to use labels and we need to set\n      // the label of the current page.\n      toolbar.setPagesCount(numLabels, true);\n      toolbar.setPageNumber(\n        pdfViewer.currentPageNumber,\n        pdfViewer.currentPageLabel\n      );\n    },\n\n    /**\n     * @private\n     */\n    _initializePdfHistory({ fingerprint, viewOnLoad, initialDest = null }) {\n      if (this.isViewerEmbedded || AppOptions.get(\"disableHistory\")) {\n        // The browsing history is only enabled when the viewer is standalone,\n        // i.e. not when it is embedded in a web page.\n        return;\n      }\n      this.pdfHistory.initialize({\n        fingerprint,\n        resetHistory: viewOnLoad === ViewOnLoad.INITIAL,\n        updateUrl: AppOptions.get(\"historyUpdateUrl\"),\n      });\n\n      if (this.pdfHistory.initialBookmark) {\n        this.initialBookmark = this.pdfHistory.initialBookmark;\n\n        this.initialRotation = this.pdfHistory.initialRotation;\n      }\n\n      // Always let the browser history/document hash take precedence.\n      if (\n        initialDest &&\n        !this.initialBookmark &&\n        viewOnLoad === ViewOnLoad.UNKNOWN\n      ) {\n        this.initialBookmark = JSON.stringify(initialDest);\n        // TODO: Re-factor the `PDFHistory` initialization to remove this hack\n        // that's currently necessary to prevent weird initial history state.\n        this.pdfHistory.push({ explicitDest: initialDest, pageNumber: null });\n      }\n    },\n\n    /**\n     * @private\n     */\n    async _initializePermissions(pdfDocument) {\n      const permissions = await pdfDocument.getPermissions();\n\n      if (pdfDocument !== this.pdfDocument) {\n        return; // The document was closed while the permissions resolved.\n      }\n      if (!permissions || !AppOptions.get(\"enablePermissions\")) {\n        return;\n      }\n      // Currently only the \"copy\"-permission is supported.\n      if (!permissions.includes(PermissionFlag.COPY)) {\n        this.appConfig.viewerContainer.classList.add(ENABLE_PERMISSIONS_CLASS);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _initializeAnnotationStorageCallbacks(pdfDocument) {\n      if (pdfDocument !== this.pdfDocument) {\n        return;\n      }\n      const { annotationStorage } = pdfDocument;\n\n      annotationStorage.onSetModified = function () {\n        window.addEventListener(\"beforeunload\", beforeUnload);\n      };\n      annotationStorage.onResetModified = function () {\n        window.removeEventListener(\"beforeunload\", beforeUnload);\n      };\n    },\n\n    setInitialView(\n      storedHash,\n      { rotation, sidebarView, scrollMode, spreadMode } = {}\n    ) {\n      const setRotation = angle => {\n        if (isValidRotation(angle)) {\n          this.pdfViewer.pagesRotation = angle;\n        }\n      };\n      const setViewerModes = (scroll, spread) => {\n        if (isValidScrollMode(scroll)) {\n          this.pdfViewer.scrollMode = scroll;\n        }\n        if (isValidSpreadMode(spread)) {\n          this.pdfViewer.spreadMode = spread;\n        }\n      };\n      this.isInitialViewSet = true;\n      this.pdfSidebar.setInitialView(sidebarView);\n\n      setViewerModes(scrollMode, spreadMode);\n\n      if (this.initialBookmark) {\n        setRotation(this.initialRotation);\n        delete this.initialRotation;\n\n        this.pdfLinkService.setHash(this.initialBookmark);\n        this.initialBookmark = null;\n      } else if (storedHash) {\n        setRotation(rotation);\n\n        this.pdfLinkService.setHash(storedHash);\n      }\n\n      // Ensure that the correct page number is displayed in the UI,\n      // even if the active page didn't change during document load.\n      this.toolbar.setPageNumber(\n        this.pdfViewer.currentPageNumber,\n        this.pdfViewer.currentPageLabel\n      );\n      this.secondaryToolbar.setPageNumber(this.pdfViewer.currentPageNumber);\n\n      if (!this.pdfViewer.currentScaleValue) {\n        // Scale was not initialized: invalid bookmark or scale was not specified.\n        // Setting the default one.\n        this.pdfViewer.currentScaleValue = DEFAULT_SCALE_VALUE;\n      }\n    },\n\n    cleanup() {\n      if (!this.pdfDocument) {\n        return; // run cleanup when document is loaded\n      }\n      this.pdfViewer.cleanup();\n      this.pdfThumbnailViewer.cleanup();\n\n      // We don't want to remove fonts used by active page SVGs.\n      if (this.pdfViewer.renderer !== RendererType.SVG) {\n        this.pdfDocument.cleanup();\n      }\n    },\n\n    forceRendering() {\n      this.pdfRenderingQueue.printing = !!this.printService;\n      this.pdfRenderingQueue.isThumbnailViewEnabled = this.pdfSidebar.isThumbnailViewVisible;\n      this.pdfRenderingQueue.renderHighestPriority();\n    },\n\n    beforePrint() {\n      // Given that the \"beforeprint\" browser event is synchronous, we\n      // unfortunately cannot await the scripting event dispatching here.\n      ///this._scriptingInstance?.scripting.dispatchEventInSandbox({ // lwf\n      this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({\n        id: \"doc\",\n        name: \"WillPrint\",\n      });\n\n      if (this.printService) {\n        // There is no way to suppress beforePrint/afterPrint events,\n        // but PDFPrintService may generate double events -- this will ignore\n        // the second event that will be coming from native window.print().\n        return;\n      }\n\n      if (!this.supportsPrinting) {\n        this.l10n\n          .get(\n            \"printing_not_supported\",\n            null,\n            \"Warning: Printing is not fully supported by this browser.\"\n          )\n          .then(printMessage => {\n            this.error(printMessage);\n          });\n        return;\n      }\n\n      // The beforePrint is a sync method and we need to know layout before\n      // returning from this method. Ensure that we can get sizes of the pages.\n      if (!this.pdfViewer.pageViewsReady) {\n        this.l10n\n          .get(\n            \"printing_not_ready\",\n            null,\n            \"Warning: The PDF is not fully loaded for printing.\"\n          )\n          .then(notReadyMessage => {\n            // eslint-disable-next-line no-alert\n            window.alert(notReadyMessage);\n          });\n        return;\n      }\n\n      const pagesOverview = this.pdfViewer.getPagesOverview();\n      const printContainer = this.appConfig.printContainer;\n      const printResolution = AppOptions.get(\"printResolution\");\n      const optionalContentConfigPromise = this.pdfViewer\n        .optionalContentConfigPromise;\n\n      const printService = PDFPrintServiceFactory.instance.createPrintService(\n        this.pdfDocument,\n        pagesOverview,\n        printContainer,\n        printResolution,\n        optionalContentConfigPromise,\n        this.l10n\n      );\n      this.printService = printService;\n      this.forceRendering();\n\n      printService.layout();\n\n      this.externalServices.reportTelemetry({\n        type: \"print\",\n      });\n    },\n\n    afterPrint() {\n      // Given that the \"afterprint\" browser event is synchronous, we\n      // unfortunately cannot await the scripting event dispatching here.\n      ///this._scriptingInstance?.scripting.dispatchEventInSandbox({ // lwf\n      this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({\n        id: \"doc\",\n        name: \"DidPrint\",\n      });\n\n      if (this.printService) {\n        this.printService.destroy();\n        this.printService = null;\n\n        if (this.pdfDocument) {\n          this.pdfDocument.annotationStorage.resetModified();\n        }\n      }\n      this.forceRendering();\n    },\n\n    rotatePages(delta) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      const newRotation = (this.pdfViewer.pagesRotation + 360 + delta) % 360;\n      this.pdfViewer.pagesRotation = newRotation;\n      // Note that the thumbnail viewer is updated, and rendering is triggered,\n      // in the 'rotationchanging' event handler.\n    },\n\n    requestPresentationMode() {\n      if (!this.pdfPresentationMode) {\n        return;\n      }\n      this.pdfPresentationMode.request();\n    },\n\n    triggerPrinting() {\n      if (!this.supportsPrinting) {\n        return;\n      }\n      window.print();\n    },\n\n    bindEvents() {\n      const { eventBus, _boundEvents } = this;\n\n      _boundEvents.beforePrint = this.beforePrint.bind(this);\n      _boundEvents.afterPrint = this.afterPrint.bind(this);\n\n      eventBus._on(\"resize\", webViewerResize);\n      eventBus._on(\"hashchange\", webViewerHashchange);\n      eventBus._on(\"beforeprint\", _boundEvents.beforePrint);\n      eventBus._on(\"afterprint\", _boundEvents.afterPrint);\n      eventBus._on(\"pagerendered\", webViewerPageRendered);\n      eventBus._on(\"updateviewarea\", webViewerUpdateViewarea);\n      eventBus._on(\"pagechanging\", webViewerPageChanging);\n      eventBus._on(\"scalechanging\", webViewerScaleChanging);\n      eventBus._on(\"rotationchanging\", webViewerRotationChanging);\n      eventBus._on(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n      eventBus._on(\"pagemode\", webViewerPageMode);\n      eventBus._on(\"namedaction\", webViewerNamedAction);\n      eventBus._on(\"presentationmodechanged\", webViewerPresentationModeChanged);\n      eventBus._on(\"presentationmode\", webViewerPresentationMode);\n      eventBus._on(\"print\", webViewerPrint);\n      eventBus._on(\"download\", webViewerDownload);\n      eventBus._on(\"save\", webViewerSave);\n      eventBus._on(\"firstpage\", webViewerFirstPage);\n      eventBus._on(\"lastpage\", webViewerLastPage);\n      eventBus._on(\"nextpage\", webViewerNextPage);\n      eventBus._on(\"previouspage\", webViewerPreviousPage);\n      eventBus._on(\"zoomin\", webViewerZoomIn);\n      eventBus._on(\"zoomout\", webViewerZoomOut);\n      eventBus._on(\"zoomreset\", webViewerZoomReset);\n      eventBus._on(\"pagenumberchanged\", webViewerPageNumberChanged);\n      eventBus._on(\"scalechanged\", webViewerScaleChanged);\n      eventBus._on(\"rotatecw\", webViewerRotateCw);\n      eventBus._on(\"rotateccw\", webViewerRotateCcw);\n      eventBus._on(\"optionalcontentconfig\", webViewerOptionalContentConfig);\n      eventBus._on(\"switchscrollmode\", webViewerSwitchScrollMode);\n      eventBus._on(\"scrollmodechanged\", webViewerScrollModeChanged);\n      eventBus._on(\"switchspreadmode\", webViewerSwitchSpreadMode);\n      eventBus._on(\"spreadmodechanged\", webViewerSpreadModeChanged);\n      eventBus._on(\"documentproperties\", webViewerDocumentProperties);\n      eventBus._on(\"find\", webViewerFind);\n      eventBus._on(\"findfromurlhash\", webViewerFindFromUrlHash);\n      eventBus._on(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n      eventBus._on(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n\n      if (AppOptions.get(\"pdfBug\")) {\n        _boundEvents.reportPageStatsPDFBug = reportPageStatsPDFBug;\n\n        eventBus._on(\"pagerendered\", _boundEvents.reportPageStatsPDFBug);\n        eventBus._on(\"pagechanging\", _boundEvents.reportPageStatsPDFBug);\n      }\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        eventBus._on(\"fileinputchange\", webViewerFileInputChange);\n        eventBus._on(\"openfile\", webViewerOpenFile);\n      }\n    },\n\n    bindWindowEvents() {\n      const { eventBus, _boundEvents } = this;\n\n      _boundEvents.windowResize = () => {\n        eventBus.dispatch(\"resize\", { source: window });\n      };\n      _boundEvents.windowHashChange = () => {\n        eventBus.dispatch(\"hashchange\", {\n          source: window,\n          hash: document.location.hash.substring(1),\n        });\n      };\n      _boundEvents.windowBeforePrint = () => {\n        eventBus.dispatch(\"beforeprint\", { source: window });\n      };\n      _boundEvents.windowAfterPrint = () => {\n        eventBus.dispatch(\"afterprint\", { source: window });\n      };\n      _boundEvents.windowUpdateFromSandbox = event => {\n        eventBus.dispatch(\"updatefromsandbox\", {\n          source: window,\n          detail: event.detail,\n        });\n      };\n\n      window.addEventListener(\"visibilitychange\", webViewerVisibilityChange);\n      window.addEventListener(\"wheel\", webViewerWheel, { passive: false });\n      window.addEventListener(\"touchstart\", webViewerTouchStart, {\n        passive: false,\n      });\n      window.addEventListener(\"click\", webViewerClick);\n      window.addEventListener(\"keydown\", webViewerKeyDown);\n      window.addEventListener(\"keyup\", webViewerKeyUp);\n      window.addEventListener(\"resize\", _boundEvents.windowResize);\n      window.addEventListener(\"hashchange\", _boundEvents.windowHashChange);\n      window.addEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n      window.addEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n      window.addEventListener(\n        \"updatefromsandbox\",\n        _boundEvents.windowUpdateFromSandbox\n      );\n    },\n\n    unbindEvents() {\n      const { eventBus, _boundEvents } = this;\n\n      eventBus._off(\"resize\", webViewerResize);\n      eventBus._off(\"hashchange\", webViewerHashchange);\n      eventBus._off(\"beforeprint\", _boundEvents.beforePrint);\n      eventBus._off(\"afterprint\", _boundEvents.afterPrint);\n      eventBus._off(\"pagerendered\", webViewerPageRendered);\n      eventBus._off(\"updateviewarea\", webViewerUpdateViewarea);\n      eventBus._off(\"pagechanging\", webViewerPageChanging);\n      eventBus._off(\"scalechanging\", webViewerScaleChanging);\n      eventBus._off(\"rotationchanging\", webViewerRotationChanging);\n      eventBus._off(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n      eventBus._off(\"pagemode\", webViewerPageMode);\n      eventBus._off(\"namedaction\", webViewerNamedAction);\n      eventBus._off(\"presentationmodechanged\", webViewerPresentationModeChanged);\n      eventBus._off(\"presentationmode\", webViewerPresentationMode);\n      eventBus._off(\"print\", webViewerPrint);\n      eventBus._off(\"download\", webViewerDownload);\n      eventBus._off(\"save\", webViewerSave);\n      eventBus._off(\"firstpage\", webViewerFirstPage);\n      eventBus._off(\"lastpage\", webViewerLastPage);\n      eventBus._off(\"nextpage\", webViewerNextPage);\n      eventBus._off(\"previouspage\", webViewerPreviousPage);\n      eventBus._off(\"zoomin\", webViewerZoomIn);\n      eventBus._off(\"zoomout\", webViewerZoomOut);\n      eventBus._off(\"zoomreset\", webViewerZoomReset);\n      eventBus._off(\"pagenumberchanged\", webViewerPageNumberChanged);\n      eventBus._off(\"scalechanged\", webViewerScaleChanged);\n      eventBus._off(\"rotatecw\", webViewerRotateCw);\n      eventBus._off(\"rotateccw\", webViewerRotateCcw);\n      eventBus._off(\"optionalcontentconfig\", webViewerOptionalContentConfig);\n      eventBus._off(\"switchscrollmode\", webViewerSwitchScrollMode);\n      eventBus._off(\"scrollmodechanged\", webViewerScrollModeChanged);\n      eventBus._off(\"switchspreadmode\", webViewerSwitchSpreadMode);\n      eventBus._off(\"spreadmodechanged\", webViewerSpreadModeChanged);\n      eventBus._off(\"documentproperties\", webViewerDocumentProperties);\n      eventBus._off(\"find\", webViewerFind);\n      eventBus._off(\"findfromurlhash\", webViewerFindFromUrlHash);\n      eventBus._off(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n      eventBus._off(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n\n      if (_boundEvents.reportPageStatsPDFBug) {\n        eventBus._off(\"pagerendered\", _boundEvents.reportPageStatsPDFBug);\n        eventBus._off(\"pagechanging\", _boundEvents.reportPageStatsPDFBug);\n\n        _boundEvents.reportPageStatsPDFBug = null;\n      }\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        eventBus._off(\"fileinputchange\", webViewerFileInputChange);\n        eventBus._off(\"openfile\", webViewerOpenFile);\n      }\n\n      _boundEvents.beforePrint = null;\n      _boundEvents.afterPrint = null;\n    },\n\n    unbindWindowEvents() {\n      const { _boundEvents } = this;\n\n      window.removeEventListener(\"visibilitychange\", webViewerVisibilityChange);\n      window.removeEventListener(\"wheel\", webViewerWheel, { passive: false });\n      window.removeEventListener(\"touchstart\", webViewerTouchStart, {\n        passive: false,\n      });\n      window.removeEventListener(\"click\", webViewerClick);\n      window.removeEventListener(\"keydown\", webViewerKeyDown);\n      window.removeEventListener(\"keyup\", webViewerKeyUp);\n      window.removeEventListener(\"resize\", _boundEvents.windowResize);\n      window.removeEventListener(\"hashchange\", _boundEvents.windowHashChange);\n      window.removeEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n      window.removeEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n      window.removeEventListener(\n        \"updatefromsandbox\",\n        _boundEvents.windowUpdateFromSandbox\n      );\n\n      _boundEvents.windowResize = null;\n      _boundEvents.windowHashChange = null;\n      _boundEvents.windowBeforePrint = null;\n      _boundEvents.windowAfterPrint = null;\n      _boundEvents.windowUpdateFromSandbox = null;\n    },\n\n    accumulateWheelTicks(ticks) {\n      // If the scroll direction changed, reset the accumulated wheel ticks.\n      if (\n        (this._wheelUnusedTicks > 0 && ticks < 0) ||\n        (this._wheelUnusedTicks < 0 && ticks > 0)\n      ) {\n        this._wheelUnusedTicks = 0;\n      }\n      this._wheelUnusedTicks += ticks;\n      const wholeTicks =\n        Math.sign(this._wheelUnusedTicks) *\n        Math.floor(Math.abs(this._wheelUnusedTicks));\n      this._wheelUnusedTicks -= wholeTicks;\n      return wholeTicks;\n    },\n\n    /**\n     * Used together with the integration-tests, to enable awaiting full\n     * initialization of the scripting/sandbox.\n     */\n    get scriptingReady() {\n      ///return this._scriptingInstance?.ready || false; // lwf\n      return this._scriptingInstance && this._scriptingInstance.ready || false;\n    },\n  };\n\n  let validateFileURL;\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    const HOSTED_VIEWER_ORIGINS = [\n      \"null\",\n      \"http://mozilla.github.io\",\n      \"https://mozilla.github.io\",\n    ];\n    validateFileURL = function (file) {\n      if (file === undefined) {\n        return;\n      }\n      try {\n        const viewerOrigin = new URL(window.location.href).origin || \"null\";\n        if (HOSTED_VIEWER_ORIGINS.includes(viewerOrigin)) {\n          // Hosted or local viewer, allow for any file locations\n          return;\n        }\n        const { origin, protocol } = new URL(file, window.location.href);\n        // Removing of the following line will not guarantee that the viewer will\n        // start accepting URLs from foreign origin -- CORS headers on the remote\n        // server must be properly configured.\n        // IE10 / IE11 does not include an origin in `blob:`-URLs. So don't block\n        // any blob:-URL. The browser's same-origin policy will block requests to\n        // blob:-URLs from other origins, so this is safe.\n        if (origin !== viewerOrigin && protocol !== \"blob:\") {\n          throw new Error(\"file origin does not match viewer's\");\n        }\n      } catch (ex) {\n        const message = ex && ex.message;\n        PDFViewerApplication.l10n\n          .get(\"loading_error\", null, \"An error occurred while loading the PDF.\")\n          .then(loadingErrorMessage => {\n            PDFViewerApplication.error(loadingErrorMessage, { message });\n          });\n        throw ex;\n      }\n    };\n  }\n\n  async function loadFakeWorker() {\n    if (!GlobalWorkerOptions.workerSrc) {\n      GlobalWorkerOptions.workerSrc = AppOptions.get(\"workerSrc\");\n    }\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n      window.pdfjsWorker = await import(\"pdfjs/core/worker.js\");\n      return undefined;\n    }\n    return loadScript(PDFWorker.getWorkerSrc());\n  }\n\n  function loadAndEnablePDFBug(enabledTabs) {\n    const appConfig = PDFViewerApplication.appConfig;\n    return loadScript(appConfig.debuggerScriptPath).then(function () {\n      PDFBug.enable(enabledTabs);\n      PDFBug.init({ OPS }, appConfig.mainContainer);\n    });\n  }\n\n  function reportPageStatsPDFBug({ pageNumber }) {\n    if (typeof Stats === \"undefined\" || !Stats.enabled) {\n      return;\n    }\n    const pageView = PDFViewerApplication.pdfViewer.getPageView(\n      /* index = */ pageNumber - 1\n    );\n    const pageStats = pageView && pageView.pdfPage && pageView.pdfPage.stats;\n    if (!pageStats) {\n      return;\n    }\n    Stats.add(pageNumber, pageStats);\n  }\n\n  function webViewerInitialized() {\n    const appConfig = PDFViewerApplication.appConfig;\n    let file;\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      const queryString = document.location.search.substring(1);\n      const params = parseQueryString(queryString);\n      file = \"file\" in params ? params.file : AppOptions.get(\"defaultUrl\");\n      validateFileURL(file);\n    } else if (PDFJSDev.test(\"MOZCENTRAL\")) {\n      file = window.location.href;\n    } else if (PDFJSDev.test(\"CHROME\")) {\n      file = AppOptions.get(\"defaultUrl\");\n    }\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      const fileInput = document.createElement(\"input\");\n      fileInput.id = appConfig.openFileInputName;\n      fileInput.className = \"fileInput\";\n      fileInput.setAttribute(\"type\", \"file\");\n      fileInput.oncontextmenu = noContextMenuHandler;\n      document.body.appendChild(fileInput);\n\n      if (\n        !window.File ||\n        !window.FileReader ||\n        !window.FileList ||\n        !window.Blob\n      ) {\n        appConfig.toolbar.openFile.setAttribute(\"hidden\", \"true\");\n        appConfig.secondaryToolbar.openFileButton.setAttribute(\"hidden\", \"true\");\n      } else {\n        fileInput.value = null;\n      }\n\n      fileInput.addEventListener(\"change\", function (evt) {\n        const files = evt.target.files;\n        if (!files || files.length === 0) {\n          return;\n        }\n        PDFViewerApplication.eventBus.dispatch(\"fileinputchange\", {\n          source: this,\n          fileInput: evt.target,\n        });\n      });\n\n      // Enable dragging-and-dropping a new PDF file onto the viewerContainer.\n      appConfig.mainContainer.addEventListener(\"dragover\", function (evt) {\n        evt.preventDefault();\n\n        evt.dataTransfer.dropEffect = \"move\";\n      });\n      appConfig.mainContainer.addEventListener(\"drop\", function (evt) {\n        evt.preventDefault();\n\n        const files = evt.dataTransfer.files;\n        if (!files || files.length === 0) {\n          return;\n        }\n        PDFViewerApplication.eventBus.dispatch(\"fileinputchange\", {\n          source: this,\n          fileInput: evt.dataTransfer,\n        });\n      });\n    } else {\n      appConfig.toolbar.openFile.setAttribute(\"hidden\", \"true\");\n      appConfig.secondaryToolbar.openFileButton.setAttribute(\"hidden\", \"true\");\n    }\n\n    if (!PDFViewerApplication.supportsDocumentFonts) {\n      AppOptions.set(\"disableFontFace\", true);\n      PDFViewerApplication.l10n\n        .get(\n          \"web_fonts_disabled\",\n          null,\n          \"Web fonts are disabled: unable to use embedded PDF fonts.\"\n        )\n        .then(msg => {\n          console.warn(msg);\n        });\n    }\n\n    if (!PDFViewerApplication.supportsPrinting) {\n      appConfig.toolbar.print.classList.add(\"hidden\");\n      appConfig.secondaryToolbar.printButton.classList.add(\"hidden\");\n    }\n\n    if (!PDFViewerApplication.supportsFullscreen) {\n      appConfig.toolbar.presentationModeButton.classList.add(\"hidden\");\n      appConfig.secondaryToolbar.presentationModeButton.classList.add(\"hidden\");\n    }\n\n    if (PDFViewerApplication.supportsIntegratedFind) {\n      appConfig.toolbar.viewFind.classList.add(\"hidden\");\n    }\n\n    appConfig.mainContainer.addEventListener(\n      \"transitionend\",\n      function (evt) {\n        if (evt.target === /* mainContainer */ this) {\n          PDFViewerApplication.eventBus.dispatch(\"resize\", { source: this });\n        }\n      },\n      true\n    );\n\n    try {\n      webViewerOpenFileViaURL(file);\n    } catch (reason) {\n      PDFViewerApplication.l10n\n        .get(\"loading_error\", null, \"An error occurred while loading the PDF.\")\n        .then(msg => {\n          PDFViewerApplication.error(msg, reason);\n        });\n    }\n  }\n\n  let webViewerOpenFileViaURL;\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    webViewerOpenFileViaURL = function (file) {\n      if (file && file.lastIndexOf(\"file:\", 0) === 0) {\n        // file:-scheme. Load the contents in the main thread because QtWebKit\n        // cannot load file:-URLs in a Web Worker. file:-URLs are usually loaded\n        // very quickly, so there is no need to set up progress event listeners.\n        PDFViewerApplication.setTitleUsingUrl(file);\n        const xhr = new XMLHttpRequest();\n        xhr.onload = function () {\n          PDFViewerApplication.open(new Uint8Array(xhr.response));\n        };\n        xhr.open(\"GET\", file);\n        xhr.responseType = \"arraybuffer\";\n        xhr.send();\n        return;\n      }\n\n      if (file) {\n        PDFViewerApplication.open(file);\n      }\n    };\n  } else if (PDFJSDev.test(\"MOZCENTRAL || CHROME\")) {\n    webViewerOpenFileViaURL = function (file) {\n      PDFViewerApplication.setTitleUsingUrl(file);\n      PDFViewerApplication.initPassiveLoading();\n    };\n  } else {\n    webViewerOpenFileViaURL = function (file) {\n      if (file) {\n        throw new Error(\"Not implemented: webViewerOpenFileViaURL\");\n      }\n    };\n  }\n\n  function webViewerResetPermissions() {\n    const { appConfig } = PDFViewerApplication;\n    if (!appConfig) {\n      return;\n    }\n    // Currently only the \"copy\"-permission is supported.\n    appConfig.viewerContainer.classList.remove(ENABLE_PERMISSIONS_CLASS);\n  }\n\n  function webViewerPageRendered({ pageNumber, timestamp, error }) {\n    // If the page is still visible when it has finished rendering,\n    // ensure that the page number input loading indicator is hidden.\n    if (pageNumber === PDFViewerApplication.page) {\n      PDFViewerApplication.toolbar.updateLoadingIndicatorState(false);\n    }\n\n    // Use the rendered page to set the corresponding thumbnail image.\n    if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n      const pageView = PDFViewerApplication.pdfViewer.getPageView(\n        /* index = */ pageNumber - 1\n      );\n      const thumbnailView = PDFViewerApplication.pdfThumbnailViewer.getThumbnail(\n        /* index = */ pageNumber - 1\n      );\n      if (pageView && thumbnailView) {\n        thumbnailView.setImage(pageView);\n      }\n    }\n\n    if (error) {\n      PDFViewerApplication.l10n\n        .get(\n          \"rendering_error\",\n          null,\n          \"An error occurred while rendering the page.\"\n        )\n        .then(msg => {\n          PDFViewerApplication.error(msg, error);\n        });\n    }\n\n    PDFViewerApplication.externalServices.reportTelemetry({\n      type: \"pageInfo\",\n      timestamp,\n    });\n    // It is a good time to report stream and font types.\n    PDFViewerApplication.pdfDocument.getStats().then(function (stats) {\n      PDFViewerApplication.externalServices.reportTelemetry({\n        type: \"documentStats\",\n        stats,\n      });\n    });\n  }\n\n  function webViewerPageMode({ mode }) {\n    // Handle the 'pagemode' hash parameter, see also `PDFLinkService_setHash`.\n    let view;\n    switch (mode) {\n      case \"thumbs\":\n        view = SidebarView.THUMBS;\n        break;\n      case \"bookmarks\":\n      case \"outline\": // non-standard\n        view = SidebarView.OUTLINE;\n        break;\n      case \"attachments\": // non-standard\n        view = SidebarView.ATTACHMENTS;\n        break;\n      case \"layers\": // non-standard\n        view = SidebarView.LAYERS;\n        break;\n      case \"none\":\n        view = SidebarView.NONE;\n        break;\n      default:\n        console.error('Invalid \"pagemode\" hash parameter: ' + mode);\n        return;\n    }\n    PDFViewerApplication.pdfSidebar.switchView(view, /* forceOpen = */ true);\n  }\n\n  function webViewerNamedAction(evt) {\n    // Processing a couple of named actions that might be useful, see also\n    // `PDFLinkService.executeNamedAction`.\n    switch (evt.action) {\n      case \"GoToPage\":\n        PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n        break;\n\n      case \"Find\":\n        if (!PDFViewerApplication.supportsIntegratedFind) {\n          PDFViewerApplication.findBar.toggle();\n        }\n        break;\n\n      case \"Print\":\n        PDFViewerApplication.triggerPrinting();\n        break;\n\n      case \"SaveAs\":\n        webViewerSave();\n        break;\n    }\n  }\n\n  function webViewerPresentationModeChanged(evt) {\n    PDFViewerApplication.pdfViewer.presentationModeState = evt.state;\n  }\n\n  function webViewerSidebarViewChanged(evt) {\n    PDFViewerApplication.pdfRenderingQueue.isThumbnailViewEnabled =\n      PDFViewerApplication.pdfSidebar.isThumbnailViewVisible;\n\n    const store = PDFViewerApplication.store;\n    if (store && PDFViewerApplication.isInitialViewSet) {\n      // Only update the storage when the document has been loaded *and* rendered.\n      store.set(\"sidebarView\", evt.view).catch(function () {});\n    }\n  }\n\n  function webViewerUpdateViewarea(evt) {\n    const location = evt.location,\n      store = PDFViewerApplication.store;\n\n    if (store && PDFViewerApplication.isInitialViewSet) {\n      store\n        .setMultiple({\n          page: location.pageNumber,\n          zoom: location.scale,\n          scrollLeft: location.left,\n          scrollTop: location.top,\n          rotation: location.rotation,\n        })\n        .catch(function () {\n          /* unable to write to storage */\n        });\n    }\n    const href = PDFViewerApplication.pdfLinkService.getAnchorUrl(\n      location.pdfOpenParams\n    );\n    PDFViewerApplication.appConfig.toolbar.viewBookmark.href = href;\n    PDFViewerApplication.appConfig.secondaryToolbar.viewBookmarkButton.href = href;\n\n    // Show/hide the loading indicator in the page number input element.\n    const currentPage = PDFViewerApplication.pdfViewer.getPageView(\n      /* index = */ PDFViewerApplication.page - 1\n    );\n    const loading =\n      (currentPage && currentPage.renderingState) !== RenderingStates.FINISHED;\n    PDFViewerApplication.toolbar.updateLoadingIndicatorState(loading);\n  }\n\n  function webViewerScrollModeChanged(evt) {\n    const store = PDFViewerApplication.store;\n    if (store && PDFViewerApplication.isInitialViewSet) {\n      // Only update the storage when the document has been loaded *and* rendered.\n      store.set(\"scrollMode\", evt.mode).catch(function () {});\n    }\n  }\n\n  function webViewerSpreadModeChanged(evt) {\n    const store = PDFViewerApplication.store;\n    if (store && PDFViewerApplication.isInitialViewSet) {\n      // Only update the storage when the document has been loaded *and* rendered.\n      store.set(\"spreadMode\", evt.mode).catch(function () {});\n    }\n  }\n\n  function webViewerResize() {\n    const { pdfDocument, pdfViewer } = PDFViewerApplication;\n    if (!pdfDocument) {\n      return;\n    }\n    const currentScaleValue = pdfViewer.currentScaleValue;\n    if (\n      currentScaleValue === \"auto\" ||\n      currentScaleValue === \"page-fit\" ||\n      currentScaleValue === \"page-width\"\n    ) {\n      // Note: the scale is constant for 'page-actual'.\n      pdfViewer.currentScaleValue = currentScaleValue;\n    }\n    pdfViewer.update();\n  }\n\n  function webViewerHashchange(evt) {\n    const hash = evt.hash;\n    if (!hash) {\n      return;\n    }\n    if (!PDFViewerApplication.isInitialViewSet) {\n      PDFViewerApplication.initialBookmark = hash;\n    } else if (!PDFViewerApplication.pdfHistory.popStateInProgress) {\n      PDFViewerApplication.pdfLinkService.setHash(hash);\n    }\n  }\n\n  let webViewerFileInputChange, webViewerOpenFile;\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    webViewerFileInputChange = function (evt) {\n      if (\n        PDFViewerApplication.pdfViewer &&\n        PDFViewerApplication.pdfViewer.isInPresentationMode\n      ) {\n        return; // Opening a new PDF file isn't supported in Presentation Mode.\n      }\n      const file = evt.fileInput.files[0];\n\n      if (!viewerCompatibilityParams.disableCreateObjectURL) {\n        let url = URL.createObjectURL(file);\n        if (file.name) {\n          url = { url, originalUrl: file.name };\n        }\n        PDFViewerApplication.open(url);\n      } else {\n        PDFViewerApplication.setTitleUsingUrl(file.name);\n        // Read the local file into a Uint8Array.\n        const fileReader = new FileReader();\n        fileReader.onload = function webViewerChangeFileReaderOnload(event) {\n          const buffer = event.target.result;\n          PDFViewerApplication.open(new Uint8Array(buffer));\n        };\n        fileReader.readAsArrayBuffer(file);\n      }\n\n      // URL does not reflect proper document location - hiding some icons.\n      const appConfig = PDFViewerApplication.appConfig;\n      appConfig.toolbar.viewBookmark.setAttribute(\"hidden\", \"true\");\n      appConfig.secondaryToolbar.viewBookmarkButton.setAttribute(\n        \"hidden\",\n        \"true\"\n      );\n      appConfig.toolbar.download.setAttribute(\"hidden\", \"true\");\n      appConfig.secondaryToolbar.downloadButton.setAttribute(\"hidden\", \"true\");\n    };\n\n    webViewerOpenFile = function (evt) {\n      const openFileInputName = PDFViewerApplication.appConfig.openFileInputName;\n      document.getElementById(openFileInputName).click();\n    };\n  }\n\n  function webViewerPresentationMode() {\n    PDFViewerApplication.requestPresentationMode();\n  }\n  function webViewerPrint() {\n    PDFViewerApplication.triggerPrinting();\n  }\n  function webViewerDownload() {\n    PDFViewerApplication.downloadOrSave({ sourceEventType: \"download\" });\n  }\n  function webViewerSave() {\n    PDFViewerApplication.downloadOrSave({ sourceEventType: \"save\" });\n  }\n  function webViewerFirstPage() {\n    if (PDFViewerApplication.pdfDocument) {\n      PDFViewerApplication.page = 1;\n    }\n  }\n  function webViewerLastPage() {\n    if (PDFViewerApplication.pdfDocument) {\n      PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n    }\n  }\n  function webViewerNextPage() {\n    PDFViewerApplication.pdfViewer.nextPage();\n  }\n  function webViewerPreviousPage() {\n    PDFViewerApplication.pdfViewer.previousPage();\n  }\n  function webViewerZoomIn() {\n    PDFViewerApplication.zoomIn();\n  }\n  function webViewerZoomOut() {\n    PDFViewerApplication.zoomOut();\n  }\n  function webViewerZoomReset() {\n    PDFViewerApplication.zoomReset();\n  }\n  function webViewerPageNumberChanged(evt) {\n    const pdfViewer = PDFViewerApplication.pdfViewer;\n    // Note that for `<input type=\"number\">` HTML elements, an empty string will\n    // be returned for non-number inputs; hence we simply do nothing in that case.\n    if (evt.value !== \"\") {\n      PDFViewerApplication.pdfLinkService.goToPage(evt.value);\n    }\n\n    // Ensure that the page number input displays the correct value, even if the\n    // value entered by the user was invalid (e.g. a floating point number).\n    if (\n      evt.value !== pdfViewer.currentPageNumber.toString() &&\n      evt.value !== pdfViewer.currentPageLabel\n    ) {\n      PDFViewerApplication.toolbar.setPageNumber(\n        pdfViewer.currentPageNumber,\n        pdfViewer.currentPageLabel\n      );\n    }\n  }\n  function webViewerScaleChanged(evt) {\n    PDFViewerApplication.pdfViewer.currentScaleValue = evt.value;\n  }\n  function webViewerRotateCw() {\n    PDFViewerApplication.rotatePages(90);\n  }\n  function webViewerRotateCcw() {\n    PDFViewerApplication.rotatePages(-90);\n  }\n  function webViewerOptionalContentConfig(evt) {\n    PDFViewerApplication.pdfViewer.optionalContentConfigPromise = evt.promise;\n  }\n  function webViewerSwitchScrollMode(evt) {\n    PDFViewerApplication.pdfViewer.scrollMode = evt.mode;\n  }\n  function webViewerSwitchSpreadMode(evt) {\n    PDFViewerApplication.pdfViewer.spreadMode = evt.mode;\n  }\n  function webViewerDocumentProperties() {\n    PDFViewerApplication.pdfDocumentProperties.open();\n  }\n\n  function webViewerFind(evt) {\n    PDFViewerApplication.findController.executeCommand(\"find\" + evt.type, {\n      query: evt.query,\n      phraseSearch: evt.phraseSearch,\n      caseSensitive: evt.caseSensitive,\n      entireWord: evt.entireWord,\n      highlightAll: evt.highlightAll,\n      findPrevious: evt.findPrevious,\n    });\n  }\n\n  function webViewerFindFromUrlHash(evt) {\n    PDFViewerApplication.findController.executeCommand(\"find\", {\n      query: evt.query,\n      phraseSearch: evt.phraseSearch,\n      caseSensitive: false,\n      entireWord: false,\n      highlightAll: true,\n      findPrevious: false,\n    });\n  }\n\n  function webViewerUpdateFindMatchesCount({ matchesCount }) {\n    if (PDFViewerApplication.supportsIntegratedFind) {\n      PDFViewerApplication.externalServices.updateFindMatchesCount(matchesCount);\n    } else {\n      PDFViewerApplication.findBar.updateResultsCount(matchesCount);\n    }\n  }\n\n  function webViewerUpdateFindControlState({\n    state,\n    previous,\n    matchesCount,\n    rawQuery,\n  }) {\n    if (PDFViewerApplication.supportsIntegratedFind) {\n      PDFViewerApplication.externalServices.updateFindControlState({\n        result: state,\n        findPrevious: previous,\n        matchesCount,\n        rawQuery,\n      });\n    } else {\n      PDFViewerApplication.findBar.updateUIState(state, previous, matchesCount);\n    }\n  }\n\n  function webViewerScaleChanging(evt) {\n    PDFViewerApplication.toolbar.setPageScale(evt.presetValue, evt.scale);\n\n    PDFViewerApplication.pdfViewer.update();\n  }\n\n  function webViewerRotationChanging(evt) {\n    PDFViewerApplication.pdfThumbnailViewer.pagesRotation = evt.pagesRotation;\n\n    PDFViewerApplication.forceRendering();\n    // Ensure that the active page doesn't change during rotation.\n    PDFViewerApplication.pdfViewer.currentPageNumber = evt.pageNumber;\n  }\n\n  function webViewerPageChanging({ pageNumber, pageLabel }) {\n    PDFViewerApplication.toolbar.setPageNumber(pageNumber, pageLabel);\n    PDFViewerApplication.secondaryToolbar.setPageNumber(pageNumber);\n\n    if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n      PDFViewerApplication.pdfThumbnailViewer.scrollThumbnailIntoView(pageNumber);\n    }\n  }\n\n  function webViewerVisibilityChange(evt) {\n    if (document.visibilityState === \"visible\") {\n      // Ignore mouse wheel zooming during tab switches (bug 1503412).\n      setZoomDisabledTimeout();\n    }\n  }\n\n  let zoomDisabledTimeout = null;\n  function setZoomDisabledTimeout() {\n    if (zoomDisabledTimeout) {\n      clearTimeout(zoomDisabledTimeout);\n    }\n    zoomDisabledTimeout = setTimeout(function () {\n      zoomDisabledTimeout = null;\n    }, WHEEL_ZOOM_DISABLED_TIMEOUT);\n  }\n\n  function webViewerWheel(evt) {\n    const {\n      pdfViewer,\n      supportedMouseWheelZoomModifierKeys,\n    } = PDFViewerApplication;\n\n    if (pdfViewer.isInPresentationMode) {\n      return;\n    }\n\n    if (\n      (evt.ctrlKey && supportedMouseWheelZoomModifierKeys.ctrlKey) ||\n      (evt.metaKey && supportedMouseWheelZoomModifierKeys.metaKey)\n    ) {\n      // Only zoom the pages, not the entire viewer.\n      evt.preventDefault();\n      // NOTE: this check must be placed *after* preventDefault.\n      if (zoomDisabledTimeout || document.visibilityState === \"hidden\") {\n        return;\n      }\n\n      const previousScale = pdfViewer.currentScale;\n\n      const delta = normalizeWheelEventDirection(evt);\n      let ticks = 0;\n      if (\n        evt.deltaMode === WheelEvent.DOM_DELTA_LINE ||\n        evt.deltaMode === WheelEvent.DOM_DELTA_PAGE\n      ) {\n        // For line-based devices, use one tick per event, because different\n        // OSs have different defaults for the number lines. But we generally\n        // want one \"clicky\" roll of the wheel (which produces one event) to\n        // adjust the zoom by one step.\n        if (Math.abs(delta) >= 1) {\n          ticks = Math.sign(delta);\n        } else {\n          // If we're getting fractional lines (I can't think of a scenario\n          // this might actually happen), be safe and use the accumulator.\n          ticks = PDFViewerApplication.accumulateWheelTicks(delta);\n        }\n      } else {\n        // pixel-based devices\n        const PIXELS_PER_LINE_SCALE = 30;\n        ticks = PDFViewerApplication.accumulateWheelTicks(\n          delta / PIXELS_PER_LINE_SCALE\n        );\n      }\n\n      if (ticks < 0) {\n        PDFViewerApplication.zoomOut(-ticks);\n      } else if (ticks > 0) {\n        PDFViewerApplication.zoomIn(ticks);\n      }\n\n      const currentScale = pdfViewer.currentScale;\n      if (previousScale !== currentScale) {\n        // After scaling the page via zoomIn/zoomOut, the position of the upper-\n        // left corner is restored. When the mouse wheel is used, the position\n        // under the cursor should be restored instead.\n        const scaleCorrectionFactor = currentScale / previousScale - 1;\n        const rect = pdfViewer.container.getBoundingClientRect();\n        const dx = evt.clientX - rect.left;\n        const dy = evt.clientY - rect.top;\n        pdfViewer.container.scrollLeft += dx * scaleCorrectionFactor;\n        pdfViewer.container.scrollTop += dy * scaleCorrectionFactor;\n      }\n    } else {\n      setZoomDisabledTimeout();\n    }\n  }\n\n  function webViewerTouchStart(evt) {\n    if (evt.touches.length > 1) {\n      // Disable touch-based zooming, because the entire UI bits gets zoomed and\n      // that doesn't look great. If we do want to have a good touch-based\n      // zooming experience, we need to implement smooth zoom capability (probably\n      // using a CSS transform for faster visual response, followed by async\n      // re-rendering at the final zoom level) and do gesture detection on the\n      // touchmove events to drive it. Or if we want to settle for a less good\n      // experience we can make the touchmove events drive the existing step-zoom\n      // behaviour that the ctrl+mousewheel path takes.\n      evt.preventDefault();\n    }\n  }\n\n  function webViewerClick(evt) {\n    // Avoid triggering the fallback bar when the user clicks on the\n    // toolbar or sidebar.\n    if (\n      PDFViewerApplication.triggerDelayedFallback &&\n      PDFViewerApplication.pdfViewer.containsElement(evt.target)\n    ) {\n      PDFViewerApplication.triggerDelayedFallback();\n    }\n\n    if (!PDFViewerApplication.secondaryToolbar.isOpen) {\n      return;\n    }\n    const appConfig = PDFViewerApplication.appConfig;\n    if (\n      PDFViewerApplication.pdfViewer.containsElement(evt.target) ||\n      (appConfig.toolbar.container.contains(evt.target) &&\n        evt.target !== appConfig.secondaryToolbar.toggleButton)\n    ) {\n      PDFViewerApplication.secondaryToolbar.close();\n    }\n  }\n\n  function webViewerKeyUp(evt) {\n    if (evt.keyCode === 9) {\n      // The user is tabbing into the viewer. Trigger the fallback bar if it has\n      // not already been displayed.\n      if (PDFViewerApplication.triggerDelayedFallback) {\n        PDFViewerApplication.triggerDelayedFallback();\n      }\n    }\n  }\n\n  function webViewerKeyDown(evt) {\n    if (PDFViewerApplication.overlayManager.active) {\n      return;\n    }\n\n    let handled = false,\n      ensureViewerFocused = false;\n    const cmd =\n      (evt.ctrlKey ? 1 : 0) |\n      (evt.altKey ? 2 : 0) |\n      (evt.shiftKey ? 4 : 0) |\n      (evt.metaKey ? 8 : 0);\n\n    const pdfViewer = PDFViewerApplication.pdfViewer;\n    const isViewerInPresentationMode =\n      pdfViewer && pdfViewer.isInPresentationMode;\n\n    // First, handle the key bindings that are independent whether an input\n    // control is selected or not.\n    if (cmd === 1 || cmd === 8 || cmd === 5 || cmd === 12) {\n      // either CTRL or META key with optional SHIFT.\n      switch (evt.keyCode) {\n        case 70: // f\n          if (!PDFViewerApplication.supportsIntegratedFind && !evt.shiftKey) {\n            PDFViewerApplication.findBar.open();\n            handled = true;\n          }\n          break;\n        case 71: // g\n          if (!PDFViewerApplication.supportsIntegratedFind) {\n            const findState = PDFViewerApplication.findController.state;\n            if (findState) {\n              PDFViewerApplication.findController.executeCommand(\"findagain\", {\n                query: findState.query,\n                phraseSearch: findState.phraseSearch,\n                caseSensitive: findState.caseSensitive,\n                entireWord: findState.entireWord,\n                highlightAll: findState.highlightAll,\n                findPrevious: cmd === 5 || cmd === 12,\n              });\n            }\n            handled = true;\n          }\n          break;\n        case 61: // FF/Mac '='\n        case 107: // FF '+' and '='\n        case 187: // Chrome '+'\n        case 171: // FF with German keyboard\n          if (!isViewerInPresentationMode) {\n            PDFViewerApplication.zoomIn();\n          }\n          handled = true;\n          break;\n        case 173: // FF/Mac '-'\n        case 109: // FF '-'\n        case 189: // Chrome '-'\n          if (!isViewerInPresentationMode) {\n            PDFViewerApplication.zoomOut();\n          }\n          handled = true;\n          break;\n        case 48: // '0'\n        case 96: // '0' on Numpad of Swedish keyboard\n          if (!isViewerInPresentationMode) {\n            // keeping it unhandled (to restore page zoom to 100%)\n            setTimeout(function () {\n              // ... and resetting the scale after browser adjusts its scale\n              PDFViewerApplication.zoomReset();\n            });\n            handled = false;\n          }\n          break;\n\n        case 38: // up arrow\n          if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n            PDFViewerApplication.page = 1;\n            handled = true;\n            ensureViewerFocused = true;\n          }\n          break;\n        case 40: // down arrow\n          if (\n            isViewerInPresentationMode ||\n            PDFViewerApplication.page < PDFViewerApplication.pagesCount\n          ) {\n            PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n            handled = true;\n            ensureViewerFocused = true;\n          }\n          break;\n      }\n    }\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC || CHROME\")) {\n      const { eventBus } = PDFViewerApplication;\n\n      // CTRL or META without shift\n      if (cmd === 1 || cmd === 8) {\n        switch (evt.keyCode) {\n          case 83: // s\n            eventBus.dispatch(\"download\", { source: window });\n            handled = true;\n            break;\n\n          case 79: // o\n            if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n              eventBus.dispatch(\"openfile\", { source: window });\n              handled = true;\n            }\n            break;\n        }\n      }\n    }\n\n    // CTRL+ALT or Option+Command\n    if (cmd === 3 || cmd === 10) {\n      switch (evt.keyCode) {\n        case 80: // p\n          PDFViewerApplication.requestPresentationMode();\n          handled = true;\n          break;\n        case 71: // g\n          // focuses input#pageNumber field\n          PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n          handled = true;\n          break;\n      }\n    }\n\n    if (handled) {\n      if (ensureViewerFocused && !isViewerInPresentationMode) {\n        pdfViewer.focus();\n      }\n      evt.preventDefault();\n      return;\n    }\n\n    // Some shortcuts should not get handled if a control/input element\n    // is selected.\n    const curElement = getActiveOrFocusedElement();\n    const curElementTagName = curElement && curElement.tagName.toUpperCase();\n    if (\n      curElementTagName === \"INPUT\" ||\n      curElementTagName === \"TEXTAREA\" ||\n      curElementTagName === \"SELECT\" ||\n      (curElement && curElement.isContentEditable)\n    ) {\n      // Make sure that the secondary toolbar is closed when Escape is pressed.\n      if (evt.keyCode !== /* Esc = */ 27) {\n        return;\n      }\n    }\n\n    // No control key pressed at all.\n    if (cmd === 0) {\n      let turnPage = 0,\n        turnOnlyIfPageFit = false;\n      switch (evt.keyCode) {\n        case 38: // up arrow\n        case 33: // pg up\n          // vertical scrolling using arrow/pg keys\n          if (pdfViewer.isVerticalScrollbarEnabled) {\n            turnOnlyIfPageFit = true;\n          }\n          turnPage = -1;\n          break;\n        case 8: // backspace\n          if (!isViewerInPresentationMode) {\n            turnOnlyIfPageFit = true;\n          }\n          turnPage = -1;\n          break;\n        case 37: // left arrow\n          // horizontal scrolling using arrow keys\n          if (pdfViewer.isHorizontalScrollbarEnabled) {\n            turnOnlyIfPageFit = true;\n          }\n        /* falls through */\n        case 75: // 'k'\n        case 80: // 'p'\n          turnPage = -1;\n          break;\n        case 27: // esc key\n          if (PDFViewerApplication.secondaryToolbar.isOpen) {\n            PDFViewerApplication.secondaryToolbar.close();\n            handled = true;\n          }\n          if (\n            !PDFViewerApplication.supportsIntegratedFind &&\n            PDFViewerApplication.findBar.opened\n          ) {\n            PDFViewerApplication.findBar.close();\n            handled = true;\n          }\n          break;\n        case 40: // down arrow\n        case 34: // pg down\n          // vertical scrolling using arrow/pg keys\n          if (pdfViewer.isVerticalScrollbarEnabled) {\n            turnOnlyIfPageFit = true;\n          }\n          turnPage = 1;\n          break;\n        case 13: // enter key\n        case 32: // spacebar\n          if (!isViewerInPresentationMode) {\n            turnOnlyIfPageFit = true;\n          }\n          turnPage = 1;\n          break;\n        case 39: // right arrow\n          // horizontal scrolling using arrow keys\n          if (pdfViewer.isHorizontalScrollbarEnabled) {\n            turnOnlyIfPageFit = true;\n          }\n        /* falls through */\n        case 74: // 'j'\n        case 78: // 'n'\n          turnPage = 1;\n          break;\n\n        case 36: // home\n          if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n            PDFViewerApplication.page = 1;\n            handled = true;\n            ensureViewerFocused = true;\n          }\n          break;\n        case 35: // end\n          if (\n            isViewerInPresentationMode ||\n            PDFViewerApplication.page < PDFViewerApplication.pagesCount\n          ) {\n            PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n            handled = true;\n            ensureViewerFocused = true;\n          }\n          break;\n\n        case 83: // 's'\n          PDFViewerApplication.pdfCursorTools.switchTool(CursorTool.SELECT);\n          break;\n        case 72: // 'h'\n          PDFViewerApplication.pdfCursorTools.switchTool(CursorTool.HAND);\n          break;\n\n        case 82: // 'r'\n          PDFViewerApplication.rotatePages(90);\n          break;\n\n        case 115: // F4\n          PDFViewerApplication.pdfSidebar.toggle();\n          break;\n      }\n\n      if (\n        turnPage !== 0 &&\n        (!turnOnlyIfPageFit || pdfViewer.currentScaleValue === \"page-fit\")\n      ) {\n        if (turnPage > 0) {\n          pdfViewer.nextPage();\n        } else {\n          pdfViewer.previousPage();\n        }\n        handled = true;\n      }\n    }\n\n    // shift-key\n    if (cmd === 4) {\n      switch (evt.keyCode) {\n        case 13: // enter key\n        case 32: // spacebar\n          if (\n            !isViewerInPresentationMode &&\n            pdfViewer.currentScaleValue !== \"page-fit\"\n          ) {\n            break;\n          }\n          if (PDFViewerApplication.page > 1) {\n            PDFViewerApplication.page--;\n          }\n          handled = true;\n          break;\n\n        case 82: // 'r'\n          PDFViewerApplication.rotatePages(-90);\n          break;\n      }\n    }\n\n    if (!handled && !isViewerInPresentationMode) {\n      // 33=Page Up  34=Page Down  35=End    36=Home\n      // 37=Left     38=Up         39=Right  40=Down\n      // 32=Spacebar\n      if (\n        (evt.keyCode >= 33 && evt.keyCode <= 40) ||\n        (evt.keyCode === 32 && curElementTagName !== \"BUTTON\")\n      ) {\n        ensureViewerFocused = true;\n      }\n    }\n\n    if (ensureViewerFocused && !pdfViewer.containsElement(curElement)) {\n      // The page container is not focused, but a page navigation key has been\n      // pressed. Change the focus to the viewer container to make sure that\n      // navigation by keyboard works as expected.\n      pdfViewer.focus();\n    }\n\n    if (handled) {\n      evt.preventDefault();\n    }\n  }\n\n  function beforeUnload(evt) {\n    evt.preventDefault();\n    evt.returnValue = \"\";\n    return false;\n  }\n\n  /**\n   * Converts API PageLayout values to the format used by `PDFViewer`.\n   * NOTE: This is supported to the extent that the viewer implements the\n   *       necessary Scroll/Spread modes (since SinglePage, TwoPageLeft,\n   *       and TwoPageRight all suggests using non-continuous scrolling).\n   * @param {string} mode - The API PageLayout value.\n   * @returns {number} A value from {SpreadMode}.\n   */\n  function apiPageLayoutToSpreadMode(layout) {\n    switch (layout) {\n      case \"SinglePage\":\n      case \"OneColumn\":\n        return SpreadMode.NONE;\n      case \"TwoColumnLeft\":\n      case \"TwoPageLeft\":\n        return SpreadMode.ODD;\n      case \"TwoColumnRight\":\n      case \"TwoPageRight\":\n        return SpreadMode.EVEN;\n    }\n    return SpreadMode.NONE; // Default value.\n  }\n\n  /**\n   * Converts API PageMode values to the format used by `PDFSidebar`.\n   * NOTE: There's also a \"FullScreen\" parameter which is not possible to support,\n   *       since the Fullscreen API used in browsers requires that entering\n   *       fullscreen mode only occurs as a result of a user-initiated event.\n   * @param {string} mode - The API PageMode value.\n   * @returns {number} A value from {SidebarView}.\n   */\n  function apiPageModeToSidebarView(mode) {\n    switch (mode) {\n      case \"UseNone\":\n        return SidebarView.NONE;\n      case \"UseThumbs\":\n        return SidebarView.THUMBS;\n      case \"UseOutlines\":\n        return SidebarView.OUTLINE;\n      case \"UseAttachments\":\n        return SidebarView.ATTACHMENTS;\n      case \"UseOC\":\n        return SidebarView.LAYERS;\n    }\n    return SidebarView.NONE; // Default value.\n  }\n\n  /* Abstract factory for the print service. */\n  const PDFPrintServiceFactory = {\n    instance: {\n      supportsPrinting: false,\n      createPrintService() {\n        throw new Error(\"Not implemented: createPrintService\");\n      },\n    },\n  };\n\n  return {\n    DefaultExternalServices,\n    PDFPrintServiceFactory,\n    PDFViewerApplication,\n  };\n\n});\ndefine('skylark-pdfjs-viewer/preferences',[\n\n  \"./app_options\"\n],function(app_options){\n  /* Copyright 2013 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { AppOptions, OptionKind } =  app_options;\n\n  /**\n   * BasePreferences - Abstract base class for storing persistent settings.\n   *   Used for settings that should be applied to all opened documents,\n   *   or every time the viewer is loaded.\n   */\n  class BasePreferences {\n    constructor() {\n      if (this.constructor === BasePreferences) {\n        throw new Error(\"Cannot initialize BasePreferences.\");\n      }\n      Object.defineProperty(this, \"defaults\", {\n        value: Object.freeze(\n          typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n            ? AppOptions.getAll(OptionKind.PREFERENCE)\n            : PDFJSDev.json(\"$ROOT/build/default_preferences.json\")\n        ),\n        writable: false,\n        enumerable: true,\n        configurable: false,\n      });\n      this.prefs = Object.assign(Object.create(null), this.defaults);\n\n      this._initializedPromise = this._readFromStorage(this.defaults).then(\n        prefs => {\n          if (!prefs) {\n            return;\n          }\n          for (const name in prefs) {\n            const defaultValue = this.defaults[name],\n              prefValue = prefs[name];\n            // Ignore preferences not present in, or whose types don't match,\n            // the default values.\n            if (\n              defaultValue === undefined ||\n              typeof prefValue !== typeof defaultValue\n            ) {\n              continue;\n            }\n            this.prefs[name] = prefValue;\n          }\n        }\n      );\n    }\n\n    /**\n     * Stub function for writing preferences to storage.\n     * @param {Object} prefObj The preferences that should be written to storage.\n     * @returns {Promise} A promise that is resolved when the preference values\n     *                    have been written.\n     */\n    async _writeToStorage(prefObj) {\n      throw new Error(\"Not implemented: _writeToStorage\");\n    }\n\n    /**\n     * Stub function for reading preferences from storage.\n     * @param {Object} prefObj The preferences that should be read from storage.\n     * @returns {Promise} A promise that is resolved with an {Object} containing\n     *                    the preferences that have been read.\n     */\n    async _readFromStorage(prefObj) {\n      throw new Error(\"Not implemented: _readFromStorage\");\n    }\n\n    /**\n     * Reset the preferences to their default values and update storage.\n     * @returns {Promise} A promise that is resolved when the preference values\n     *                    have been reset.\n     */\n    async reset() {\n      await this._initializedPromise;\n      this.prefs = Object.assign(Object.create(null), this.defaults);\n      return this._writeToStorage(this.defaults);\n    }\n\n    /**\n     * Set the value of a preference.\n     * @param {string} name The name of the preference that should be changed.\n     * @param {boolean|number|string} value The new value of the preference.\n     * @returns {Promise} A promise that is resolved when the value has been set,\n     *                    provided that the preference exists and the types match.\n     */\n    async set(name, value) {\n      await this._initializedPromise;\n      const defaultValue = this.defaults[name];\n\n      if (defaultValue === undefined) {\n        throw new Error(`Set preference: \"${name}\" is undefined.`);\n      } else if (value === undefined) {\n        throw new Error(\"Set preference: no value is specified.\");\n      }\n      const valueType = typeof value;\n      const defaultType = typeof defaultValue;\n\n      if (valueType !== defaultType) {\n        if (valueType === \"number\" && defaultType === \"string\") {\n          value = value.toString();\n        } else {\n          throw new Error(\n            `Set preference: \"${value}\" is a ${valueType}, ` +\n              `expected a ${defaultType}.`\n          );\n        }\n      } else {\n        if (valueType === \"number\" && !Number.isInteger(value)) {\n          throw new Error(`Set preference: \"${value}\" must be an integer.`);\n        }\n      }\n      this.prefs[name] = value;\n      return this._writeToStorage(this.prefs);\n    }\n\n    /**\n     * Get the value of a preference.\n     * @param {string} name The name of the preference whose value is requested.\n     * @returns {Promise} A promise resolved with a {boolean|number|string}\n     *                    containing the value of the preference.\n     */\n    async get(name) {\n      await this._initializedPromise;\n      const defaultValue = this.defaults[name];\n\n      if (defaultValue === undefined) {\n        throw new Error(`Get preference: \"${name}\" is undefined.`);\n      } else {\n        const prefValue = this.prefs[name];\n\n        if (prefValue !== undefined) {\n          return prefValue;\n        }\n      }\n      return defaultValue;\n    }\n\n    /**\n     * Get the values of all preferences.\n     * @returns {Promise} A promise that is resolved with an {Object} containing\n     *                    the values of all preferences.\n     */\n    async getAll() {\n      await this._initializedPromise;\n      return Object.assign(Object.create(null), this.defaults, this.prefs);\n    }\n  }\n\n  return { BasePreferences };\n});\ndefine('skylark-pdfjs-viewer/download_manager',[\n  \"skylark-pdfjs-display\",\n  \"./pdfjs_dev\",\n  \"./viewer_compatibility\"\n],function(\n  pdfjsLib,\n  PDFJSDev,\n  viewer_compatibility\n){\n\n\n  /* Copyright 2013 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { createObjectURL, createValidAbsoluteUrl } = pdfjsLib;\n  const { viewerCompatibilityParams } = viewer_compatibility;\n\n  if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"CHROME || GENERIC\")) {\n    throw new Error(\n      'Module \"pdfjs-web/download_manager\" shall not be used ' +\n        \"outside CHROME and GENERIC builds.\"\n    );\n  }\n\n  function download(blobUrl, filename) {\n    const a = document.createElement(\"a\");\n    if (!a.click) {\n      throw new Error('DownloadManager: \"a.click()\" is not supported.');\n    }\n    a.href = blobUrl;\n    a.target = \"_parent\";\n    // Use a.download if available. This increases the likelihood that\n    // the file is downloaded instead of opened by another PDF plugin.\n    if (\"download\" in a) {\n      a.download = filename;\n    }\n    // <a> must be in the document for recent Firefox versions,\n    // otherwise .click() is ignored.\n    (document.body || document.documentElement).appendChild(a);\n    a.click();\n    a.remove();\n  }\n\n  class DownloadManager {\n    downloadUrl(url, filename) {\n      if (!createValidAbsoluteUrl(url, \"http://example.com\")) {\n        return; // restricted/invalid URL\n      }\n      download(url + \"#pdfjs.action=download\", filename);\n    }\n\n    downloadData(data, filename, contentType) {\n      const blobUrl = createObjectURL(\n        data,\n        contentType,\n        viewerCompatibilityParams.disableCreateObjectURL\n      );\n      download(blobUrl, filename);\n    }\n\n    /**\n     * @param sourceEventType {string} Used to signal what triggered the download.\n     *   The version of PDF.js integrated with Firefox uses this to to determine\n     *   which dialog to show. \"save\" triggers \"save as\" and \"download\" triggers\n     *   the \"open with\" dialog.\n     */\n    download(blob, url, filename, sourceEventType = \"download\") {\n      if (viewerCompatibilityParams.disableCreateObjectURL) {\n        // URL.createObjectURL is not supported\n        this.downloadUrl(url, filename);\n        return;\n      }\n      const blobUrl = URL.createObjectURL(blob);\n      download(blobUrl, filename);\n    }\n  }\n\n  return { DownloadManager };\n});\ndefine('skylark-pdfjs-viewer/l10n',[],function(){\r\n  /**\r\n   * Copyright (c) 2011-2013 Fabien Cazenave, Mozilla.\r\n   *\r\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n   * of this software and associated documentation files (the \"Software\"), to\r\n   * deal in the Software without restriction, including without limitation the\r\n   * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n   * sell copies of the Software, and to permit persons to whom the Software is\r\n   * furnished to do so, subject to the following conditions:\r\n   *\r\n   * The above copyright notice and this permission notice shall be included in\r\n   * all copies or substantial portions of the Software.\r\n   *\r\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n   * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n   * IN THE SOFTWARE.\r\n   */\r\n  /*\r\n    Additional modifications for PDF.js project:\r\n      - Disables language initialization on page loading.\r\n      - Disables document translation on page loading.\r\n      - Removes consoleWarn and consoleLog and use console.log/warn directly.\r\n      - Removes window._ assignment.\r\n      - Remove compatibility code for OldIE.\r\n      - Replaces `String.prototype.substr()` with `String.prototype.substring()`.\r\n      - Removes `fireL10nReadyEvent` since the \"localized\" event it dispatches\r\n        is unused and may clash with an identically named event in the viewer.\r\n  */\r\n\r\n  /*jshint browser: true, devel: true, es5: true, globalstrict: true */\r\n  'use strict';\r\n\r\n  return document.webL10n = (function(window, document, undefined) {\r\n    var gL10nData = {};\r\n    var gTextData = '';\r\n    var gTextProp = 'textContent';\r\n    var gLanguage = '';\r\n    var gMacros = {};\r\n    var gReadyState = 'loading';\r\n\r\n\r\n    /**\r\n     * Synchronously loading l10n resources significantly minimizes flickering\r\n     * from displaying the app with non-localized strings and then updating the\r\n     * strings. Although this will block all script execution on this page, we\r\n     * expect that the l10n resources are available locally on flash-storage.\r\n     *\r\n     * As synchronous XHR is generally considered as a bad idea, we're still\r\n     * loading l10n resources asynchronously -- but we keep this in a setting,\r\n     * just in case... and applications using this library should hide their\r\n     * content until the `localized' event happens.\r\n     */\r\n\r\n    var gAsyncResourceLoading = true; // read-only\r\n\r\n\r\n    /**\r\n     * DOM helpers for the so-called \"HTML API\".\r\n     *\r\n     * These functions are written for modern browsers. For old versions of IE,\r\n     * they're overridden in the 'startup' section at the end of this file.\r\n     */\r\n\r\n    function getL10nResourceLinks() {\r\n      return document.querySelectorAll('link[type=\"application/l10n\"]');\r\n    }\r\n\r\n    function getL10nDictionary() {\r\n      var script = document.querySelector('script[type=\"application/l10n\"]');\r\n      // TODO: support multiple and external JSON dictionaries\r\n      return script ? JSON.parse(script.innerHTML) : null;\r\n    }\r\n\r\n    function getTranslatableChildren(element) {\r\n      return element ? element.querySelectorAll('*[data-l10n-id]') : [];\r\n    }\r\n\r\n    function getL10nAttributes(element) {\r\n      if (!element)\r\n        return {};\r\n\r\n      var l10nId = element.getAttribute('data-l10n-id');\r\n      var l10nArgs = element.getAttribute('data-l10n-args');\r\n      var args = {};\r\n      if (l10nArgs) {\r\n        try {\r\n          args = JSON.parse(l10nArgs);\r\n        } catch (e) {\r\n          console.warn('could not parse arguments for #' + l10nId);\r\n        }\r\n      }\r\n      return { id: l10nId, args: args };\r\n    }\r\n\r\n    function xhrLoadText(url, onSuccess, onFailure) {\r\n      onSuccess = onSuccess || function _onSuccess(data) {};\r\n      onFailure = onFailure || function _onFailure() {};\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, gAsyncResourceLoading);\r\n      if (xhr.overrideMimeType) {\r\n        xhr.overrideMimeType('text/plain; charset=utf-8');\r\n      }\r\n      xhr.onreadystatechange = function() {\r\n        if (xhr.readyState == 4) {\r\n          if (xhr.status == 200 || xhr.status === 0) {\r\n            onSuccess(xhr.responseText);\r\n          } else {\r\n            onFailure();\r\n          }\r\n        }\r\n      };\r\n      xhr.onerror = onFailure;\r\n      xhr.ontimeout = onFailure;\r\n\r\n      // in Firefox OS with the app:// protocol, trying to XHR a non-existing\r\n      // URL will raise an exception here -- hence this ugly try...catch.\r\n      try {\r\n        xhr.send(null);\r\n      } catch (e) {\r\n        onFailure();\r\n      }\r\n    }\r\n\r\n\r\n    /**\r\n     * l10n resource parser:\r\n     *  - reads (async XHR) the l10n resource matching `lang';\r\n     *  - imports linked resources (synchronously) when specified;\r\n     *  - parses the text data (fills `gL10nData' and `gTextData');\r\n     *  - triggers success/failure callbacks when done.\r\n     *\r\n     * @param {string} href\r\n     *    URL of the l10n resource to parse.\r\n     *\r\n     * @param {string} lang\r\n     *    locale (language) to parse. Must be a lowercase string.\r\n     *\r\n     * @param {Function} successCallback\r\n     *    triggered when the l10n resource has been successfully parsed.\r\n     *\r\n     * @param {Function} failureCallback\r\n     *    triggered when the an error has occurred.\r\n     *\r\n     * @return {void}\r\n     *    uses the following global variables: gL10nData, gTextData, gTextProp.\r\n     */\r\n\r\n    function parseResource(href, lang, successCallback, failureCallback) {\r\n      var baseURL = href.replace(/[^\\/]*$/, '') || './';\r\n\r\n      // handle escaped characters (backslashes) in a string\r\n      function evalString(text) {\r\n        if (text.lastIndexOf('\\\\') < 0)\r\n          return text;\r\n        return text.replace(/\\\\\\\\/g, '\\\\')\r\n                   .replace(/\\\\n/g, '\\n')\r\n                   .replace(/\\\\r/g, '\\r')\r\n                   .replace(/\\\\t/g, '\\t')\r\n                   .replace(/\\\\b/g, '\\b')\r\n                   .replace(/\\\\f/g, '\\f')\r\n                   .replace(/\\\\{/g, '{')\r\n                   .replace(/\\\\}/g, '}')\r\n                   .replace(/\\\\\"/g, '\"')\r\n                   .replace(/\\\\'/g, \"'\");\r\n      }\r\n\r\n      // parse *.properties text data into an l10n dictionary\r\n      // If gAsyncResourceLoading is false, then the callback will be called\r\n      // synchronously. Otherwise it is called asynchronously.\r\n      function parseProperties(text, parsedPropertiesCallback) {\r\n        var dictionary = {};\r\n\r\n        // token expressions\r\n        var reBlank = /^\\s*|\\s*$/;\r\n        var reComment = /^\\s*#|^\\s*$/;\r\n        var reSection = /^\\s*\\[(.*)\\]\\s*$/;\r\n        var reImport = /^\\s*@import\\s+url\\((.*)\\)\\s*$/i;\r\n        var reSplit = /^([^=\\s]*)\\s*=\\s*(.+)$/; // TODO: escape EOLs with '\\'\r\n\r\n        // parse the *.properties file into an associative array\r\n        function parseRawLines(rawText, extendedSyntax, parsedRawLinesCallback) {\r\n          var entries = rawText.replace(reBlank, '').split(/[\\r\\n]+/);\r\n          var currentLang = '*';\r\n          var genericLang = lang.split('-', 1)[0];\r\n          var skipLang = false;\r\n          var match = '';\r\n\r\n          function nextEntry() {\r\n            // Use infinite loop instead of recursion to avoid reaching the\r\n            // maximum recursion limit for content with many lines.\r\n            while (true) {\r\n              if (!entries.length) {\r\n                parsedRawLinesCallback();\r\n                return;\r\n              }\r\n              var line = entries.shift();\r\n\r\n              // comment or blank line?\r\n              if (reComment.test(line))\r\n                continue;\r\n\r\n              // the extended syntax supports [lang] sections and @import rules\r\n              if (extendedSyntax) {\r\n                match = reSection.exec(line);\r\n                if (match) { // section start?\r\n                  // RFC 4646, section 4.4, \"All comparisons MUST be performed\r\n                  // in a case-insensitive manner.\"\r\n\r\n                  currentLang = match[1].toLowerCase();\r\n                  skipLang = (currentLang !== '*') &&\r\n                      (currentLang !== lang) && (currentLang !== genericLang);\r\n                  continue;\r\n                } else if (skipLang) {\r\n                  continue;\r\n                }\r\n                match = reImport.exec(line);\r\n                if (match) { // @import rule?\r\n                  loadImport(baseURL + match[1], nextEntry);\r\n                  return;\r\n                }\r\n              }\r\n\r\n              // key-value pair\r\n              var tmp = line.match(reSplit);\r\n              if (tmp && tmp.length == 3) {\r\n                dictionary[tmp[1]] = evalString(tmp[2]);\r\n              }\r\n            }\r\n          }\r\n          nextEntry();\r\n        }\r\n\r\n        // import another *.properties file\r\n        function loadImport(url, callback) {\r\n          xhrLoadText(url, function(content) {\r\n            parseRawLines(content, false, callback); // don't allow recursive imports\r\n          }, function () {\r\n            console.warn(url + ' not found.');\r\n            callback();\r\n          });\r\n        }\r\n\r\n        // fill the dictionary\r\n        parseRawLines(text, true, function() {\r\n          parsedPropertiesCallback(dictionary);\r\n        });\r\n      }\r\n\r\n      // load and parse l10n data (warning: global variables are used here)\r\n      xhrLoadText(href, function(response) {\r\n        gTextData += response; // mostly for debug\r\n\r\n        // parse *.properties text data into an l10n dictionary\r\n        parseProperties(response, function(data) {\r\n\r\n          // find attribute descriptions, if any\r\n          for (var key in data) {\r\n            var id, prop, index = key.lastIndexOf('.');\r\n            if (index > 0) { // an attribute has been specified\r\n              id = key.substring(0, index);\r\n              prop = key.substring(index + 1);\r\n            } else { // no attribute: assuming text content by default\r\n              id = key;\r\n              prop = gTextProp;\r\n            }\r\n            if (!gL10nData[id]) {\r\n              gL10nData[id] = {};\r\n            }\r\n            gL10nData[id][prop] = data[key];\r\n          }\r\n\r\n          // trigger callback\r\n          if (successCallback) {\r\n            successCallback();\r\n          }\r\n        });\r\n      }, failureCallback);\r\n    }\r\n\r\n    // load and parse all resources for the specified locale\r\n    function loadLocale(lang, callback) {\r\n      // RFC 4646, section 2.1 states that language tags have to be treated as\r\n      // case-insensitive. Convert to lowercase for case-insensitive comparisons.\r\n      if (lang) {\r\n        lang = lang.toLowerCase();\r\n      }\r\n\r\n      callback = callback || function _callback() {};\r\n\r\n      clear();\r\n      gLanguage = lang;\r\n\r\n      // check all <link type=\"application/l10n\" href=\"...\" /> nodes\r\n      // and load the resource files\r\n      var langLinks = getL10nResourceLinks();\r\n      var langCount = langLinks.length;\r\n      if (langCount === 0) {\r\n        // we might have a pre-compiled dictionary instead\r\n        var dict = getL10nDictionary();\r\n        if (dict && dict.locales && dict.default_locale) {\r\n          console.log('using the embedded JSON directory, early way out');\r\n          gL10nData = dict.locales[lang];\r\n          if (!gL10nData) {\r\n            var defaultLocale = dict.default_locale.toLowerCase();\r\n            for (var anyCaseLang in dict.locales) {\r\n              anyCaseLang = anyCaseLang.toLowerCase();\r\n              if (anyCaseLang === lang) {\r\n                gL10nData = dict.locales[lang];\r\n                break;\r\n              } else if (anyCaseLang === defaultLocale) {\r\n                gL10nData = dict.locales[defaultLocale];\r\n              }\r\n            }\r\n          }\r\n          callback();\r\n        } else {\r\n          console.log('no resource to load, early way out');\r\n        }\r\n        // early way out\r\n        gReadyState = 'complete';\r\n        return;\r\n      }\r\n\r\n      // start the callback when all resources are loaded\r\n      var onResourceLoaded = null;\r\n      var gResourceCount = 0;\r\n      onResourceLoaded = function() {\r\n        gResourceCount++;\r\n        if (gResourceCount >= langCount) {\r\n          callback();\r\n          gReadyState = 'complete';\r\n        }\r\n      };\r\n\r\n      // load all resource files\r\n      function L10nResourceLink(link) {\r\n        var href = link.href;\r\n        // Note: If |gAsyncResourceLoading| is false, then the following callbacks\r\n        // are synchronously called.\r\n        this.load = function(lang, callback) {\r\n          parseResource(href, lang, callback, function() {\r\n            console.warn(href + ' not found.');\r\n            // lang not found, used default resource instead\r\n            console.warn('\"' + lang + '\" resource not found');\r\n            gLanguage = '';\r\n            // Resource not loaded, but we still need to call the callback.\r\n            callback();\r\n          });\r\n        };\r\n      }\r\n\r\n      for (var i = 0; i < langCount; i++) {\r\n        var resource = new L10nResourceLink(langLinks[i]);\r\n        resource.load(lang, onResourceLoaded);\r\n      }\r\n    }\r\n\r\n    // clear all l10n data\r\n    function clear() {\r\n      gL10nData = {};\r\n      gTextData = '';\r\n      gLanguage = '';\r\n      // TODO: clear all non predefined macros.\r\n      // There's no such macro /yet/ but we're planning to have some...\r\n    }\r\n\r\n\r\n    /**\r\n     * Get rules for plural forms (shared with JetPack), see:\r\n     * http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html\r\n     * https://github.com/mozilla/addon-sdk/blob/master/python-lib/plural-rules-generator.p\r\n     *\r\n     * @param {string} lang\r\n     *    locale (language) used.\r\n     *\r\n     * @return {Function}\r\n     *    returns a function that gives the plural form name for a given integer:\r\n     *       var fun = getPluralRules('en');\r\n     *       fun(1)    -> 'one'\r\n     *       fun(0)    -> 'other'\r\n     *       fun(1000) -> 'other'.\r\n     */\r\n\r\n    function getPluralRules(lang) {\r\n      var locales2rules = {\r\n        'af': 3,\r\n        'ak': 4,\r\n        'am': 4,\r\n        'ar': 1,\r\n        'asa': 3,\r\n        'az': 0,\r\n        'be': 11,\r\n        'bem': 3,\r\n        'bez': 3,\r\n        'bg': 3,\r\n        'bh': 4,\r\n        'bm': 0,\r\n        'bn': 3,\r\n        'bo': 0,\r\n        'br': 20,\r\n        'brx': 3,\r\n        'bs': 11,\r\n        'ca': 3,\r\n        'cgg': 3,\r\n        'chr': 3,\r\n        'cs': 12,\r\n        'cy': 17,\r\n        'da': 3,\r\n        'de': 3,\r\n        'dv': 3,\r\n        'dz': 0,\r\n        'ee': 3,\r\n        'el': 3,\r\n        'en': 3,\r\n        'eo': 3,\r\n        'es': 3,\r\n        'et': 3,\r\n        'eu': 3,\r\n        'fa': 0,\r\n        'ff': 5,\r\n        'fi': 3,\r\n        'fil': 4,\r\n        'fo': 3,\r\n        'fr': 5,\r\n        'fur': 3,\r\n        'fy': 3,\r\n        'ga': 8,\r\n        'gd': 24,\r\n        'gl': 3,\r\n        'gsw': 3,\r\n        'gu': 3,\r\n        'guw': 4,\r\n        'gv': 23,\r\n        'ha': 3,\r\n        'haw': 3,\r\n        'he': 2,\r\n        'hi': 4,\r\n        'hr': 11,\r\n        'hu': 0,\r\n        'id': 0,\r\n        'ig': 0,\r\n        'ii': 0,\r\n        'is': 3,\r\n        'it': 3,\r\n        'iu': 7,\r\n        'ja': 0,\r\n        'jmc': 3,\r\n        'jv': 0,\r\n        'ka': 0,\r\n        'kab': 5,\r\n        'kaj': 3,\r\n        'kcg': 3,\r\n        'kde': 0,\r\n        'kea': 0,\r\n        'kk': 3,\r\n        'kl': 3,\r\n        'km': 0,\r\n        'kn': 0,\r\n        'ko': 0,\r\n        'ksb': 3,\r\n        'ksh': 21,\r\n        'ku': 3,\r\n        'kw': 7,\r\n        'lag': 18,\r\n        'lb': 3,\r\n        'lg': 3,\r\n        'ln': 4,\r\n        'lo': 0,\r\n        'lt': 10,\r\n        'lv': 6,\r\n        'mas': 3,\r\n        'mg': 4,\r\n        'mk': 16,\r\n        'ml': 3,\r\n        'mn': 3,\r\n        'mo': 9,\r\n        'mr': 3,\r\n        'ms': 0,\r\n        'mt': 15,\r\n        'my': 0,\r\n        'nah': 3,\r\n        'naq': 7,\r\n        'nb': 3,\r\n        'nd': 3,\r\n        'ne': 3,\r\n        'nl': 3,\r\n        'nn': 3,\r\n        'no': 3,\r\n        'nr': 3,\r\n        'nso': 4,\r\n        'ny': 3,\r\n        'nyn': 3,\r\n        'om': 3,\r\n        'or': 3,\r\n        'pa': 3,\r\n        'pap': 3,\r\n        'pl': 13,\r\n        'ps': 3,\r\n        'pt': 3,\r\n        'rm': 3,\r\n        'ro': 9,\r\n        'rof': 3,\r\n        'ru': 11,\r\n        'rwk': 3,\r\n        'sah': 0,\r\n        'saq': 3,\r\n        'se': 7,\r\n        'seh': 3,\r\n        'ses': 0,\r\n        'sg': 0,\r\n        'sh': 11,\r\n        'shi': 19,\r\n        'sk': 12,\r\n        'sl': 14,\r\n        'sma': 7,\r\n        'smi': 7,\r\n        'smj': 7,\r\n        'smn': 7,\r\n        'sms': 7,\r\n        'sn': 3,\r\n        'so': 3,\r\n        'sq': 3,\r\n        'sr': 11,\r\n        'ss': 3,\r\n        'ssy': 3,\r\n        'st': 3,\r\n        'sv': 3,\r\n        'sw': 3,\r\n        'syr': 3,\r\n        'ta': 3,\r\n        'te': 3,\r\n        'teo': 3,\r\n        'th': 0,\r\n        'ti': 4,\r\n        'tig': 3,\r\n        'tk': 3,\r\n        'tl': 4,\r\n        'tn': 3,\r\n        'to': 0,\r\n        'tr': 0,\r\n        'ts': 3,\r\n        'tzm': 22,\r\n        'uk': 11,\r\n        'ur': 3,\r\n        've': 3,\r\n        'vi': 0,\r\n        'vun': 3,\r\n        'wa': 4,\r\n        'wae': 3,\r\n        'wo': 0,\r\n        'xh': 3,\r\n        'xog': 3,\r\n        'yo': 0,\r\n        'zh': 0,\r\n        'zu': 3\r\n      };\r\n\r\n      // utility functions for plural rules methods\r\n      function isIn(n, list) {\r\n        return list.indexOf(n) !== -1;\r\n      }\r\n      function isBetween(n, start, end) {\r\n        return start <= n && n <= end;\r\n      }\r\n\r\n      // list of all plural rules methods:\r\n      // map an integer to the plural form name to use\r\n      var pluralRules = {\r\n        '0': function(n) {\r\n          return 'other';\r\n        },\r\n        '1': function(n) {\r\n          if ((isBetween((n % 100), 3, 10)))\r\n            return 'few';\r\n          if (n === 0)\r\n            return 'zero';\r\n          if ((isBetween((n % 100), 11, 99)))\r\n            return 'many';\r\n          if (n == 2)\r\n            return 'two';\r\n          if (n == 1)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '2': function(n) {\r\n          if (n !== 0 && (n % 10) === 0)\r\n            return 'many';\r\n          if (n == 2)\r\n            return 'two';\r\n          if (n == 1)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '3': function(n) {\r\n          if (n == 1)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '4': function(n) {\r\n          if ((isBetween(n, 0, 1)))\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '5': function(n) {\r\n          if ((isBetween(n, 0, 2)) && n != 2)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '6': function(n) {\r\n          if (n === 0)\r\n            return 'zero';\r\n          if ((n % 10) == 1 && (n % 100) != 11)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '7': function(n) {\r\n          if (n == 2)\r\n            return 'two';\r\n          if (n == 1)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '8': function(n) {\r\n          if ((isBetween(n, 3, 6)))\r\n            return 'few';\r\n          if ((isBetween(n, 7, 10)))\r\n            return 'many';\r\n          if (n == 2)\r\n            return 'two';\r\n          if (n == 1)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '9': function(n) {\r\n          if (n === 0 || n != 1 && (isBetween((n % 100), 1, 19)))\r\n            return 'few';\r\n          if (n == 1)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '10': function(n) {\r\n          if ((isBetween((n % 10), 2, 9)) && !(isBetween((n % 100), 11, 19)))\r\n            return 'few';\r\n          if ((n % 10) == 1 && !(isBetween((n % 100), 11, 19)))\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '11': function(n) {\r\n          if ((isBetween((n % 10), 2, 4)) && !(isBetween((n % 100), 12, 14)))\r\n            return 'few';\r\n          if ((n % 10) === 0 ||\r\n              (isBetween((n % 10), 5, 9)) ||\r\n              (isBetween((n % 100), 11, 14)))\r\n            return 'many';\r\n          if ((n % 10) == 1 && (n % 100) != 11)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '12': function(n) {\r\n          if ((isBetween(n, 2, 4)))\r\n            return 'few';\r\n          if (n == 1)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '13': function(n) {\r\n          if ((isBetween((n % 10), 2, 4)) && !(isBetween((n % 100), 12, 14)))\r\n            return 'few';\r\n          if (n != 1 && (isBetween((n % 10), 0, 1)) ||\r\n              (isBetween((n % 10), 5, 9)) ||\r\n              (isBetween((n % 100), 12, 14)))\r\n            return 'many';\r\n          if (n == 1)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '14': function(n) {\r\n          if ((isBetween((n % 100), 3, 4)))\r\n            return 'few';\r\n          if ((n % 100) == 2)\r\n            return 'two';\r\n          if ((n % 100) == 1)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '15': function(n) {\r\n          if (n === 0 || (isBetween((n % 100), 2, 10)))\r\n            return 'few';\r\n          if ((isBetween((n % 100), 11, 19)))\r\n            return 'many';\r\n          if (n == 1)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '16': function(n) {\r\n          if ((n % 10) == 1 && n != 11)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '17': function(n) {\r\n          if (n == 3)\r\n            return 'few';\r\n          if (n === 0)\r\n            return 'zero';\r\n          if (n == 6)\r\n            return 'many';\r\n          if (n == 2)\r\n            return 'two';\r\n          if (n == 1)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '18': function(n) {\r\n          if (n === 0)\r\n            return 'zero';\r\n          if ((isBetween(n, 0, 2)) && n !== 0 && n != 2)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '19': function(n) {\r\n          if ((isBetween(n, 2, 10)))\r\n            return 'few';\r\n          if ((isBetween(n, 0, 1)))\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '20': function(n) {\r\n          if ((isBetween((n % 10), 3, 4) || ((n % 10) == 9)) && !(\r\n              isBetween((n % 100), 10, 19) ||\r\n              isBetween((n % 100), 70, 79) ||\r\n              isBetween((n % 100), 90, 99)\r\n              ))\r\n            return 'few';\r\n          if ((n % 1000000) === 0 && n !== 0)\r\n            return 'many';\r\n          if ((n % 10) == 2 && !isIn((n % 100), [12, 72, 92]))\r\n            return 'two';\r\n          if ((n % 10) == 1 && !isIn((n % 100), [11, 71, 91]))\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '21': function(n) {\r\n          if (n === 0)\r\n            return 'zero';\r\n          if (n == 1)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '22': function(n) {\r\n          if ((isBetween(n, 0, 1)) || (isBetween(n, 11, 99)))\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '23': function(n) {\r\n          if ((isBetween((n % 10), 1, 2)) || (n % 20) === 0)\r\n            return 'one';\r\n          return 'other';\r\n        },\r\n        '24': function(n) {\r\n          if ((isBetween(n, 3, 10) || isBetween(n, 13, 19)))\r\n            return 'few';\r\n          if (isIn(n, [2, 12]))\r\n            return 'two';\r\n          if (isIn(n, [1, 11]))\r\n            return 'one';\r\n          return 'other';\r\n        }\r\n      };\r\n\r\n      // return a function that gives the plural form name for a given integer\r\n      var index = locales2rules[lang.replace(/-.*$/, '')];\r\n      if (!(index in pluralRules)) {\r\n        console.warn('plural form unknown for [' + lang + ']');\r\n        return function() { return 'other'; };\r\n      }\r\n      return pluralRules[index];\r\n    }\r\n\r\n    // pre-defined 'plural' macro\r\n    gMacros.plural = function(str, param, key, prop) {\r\n      var n = parseFloat(param);\r\n      if (isNaN(n))\r\n        return str;\r\n\r\n      // TODO: support other properties (l20n still doesn't...)\r\n      if (prop != gTextProp)\r\n        return str;\r\n\r\n      // initialize _pluralRules\r\n      if (!gMacros._pluralRules) {\r\n        gMacros._pluralRules = getPluralRules(gLanguage);\r\n      }\r\n      var index = '[' + gMacros._pluralRules(n) + ']';\r\n\r\n      // try to find a [zero|one|two] key if it's defined\r\n      if (n === 0 && (key + '[zero]') in gL10nData) {\r\n        str = gL10nData[key + '[zero]'][prop];\r\n      } else if (n == 1 && (key + '[one]') in gL10nData) {\r\n        str = gL10nData[key + '[one]'][prop];\r\n      } else if (n == 2 && (key + '[two]') in gL10nData) {\r\n        str = gL10nData[key + '[two]'][prop];\r\n      } else if ((key + index) in gL10nData) {\r\n        str = gL10nData[key + index][prop];\r\n      } else if ((key + '[other]') in gL10nData) {\r\n        str = gL10nData[key + '[other]'][prop];\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /**\r\n     * l10n dictionary functions\r\n     */\r\n\r\n    // fetch an l10n object, warn if not found, apply `args' if possible\r\n    function getL10nData(key, args, fallback) {\r\n      var data = gL10nData[key];\r\n      if (!data) {\r\n        console.warn('#' + key + ' is undefined.');\r\n        if (!fallback) {\r\n          return null;\r\n        }\r\n        data = fallback;\r\n      }\r\n\r\n      /** This is where l10n expressions should be processed.\r\n        * The plan is to support C-style expressions from the l20n project;\r\n        * until then, only two kinds of simple expressions are supported:\r\n        *   {[ index ]} and {{ arguments }}.\r\n        */\r\n      var rv = {};\r\n      for (var prop in data) {\r\n        var str = data[prop];\r\n        str = substIndexes(str, args, key, prop);\r\n        str = substArguments(str, args, key);\r\n        rv[prop] = str;\r\n      }\r\n      return rv;\r\n    }\r\n\r\n    // replace {[macros]} with their values\r\n    function substIndexes(str, args, key, prop) {\r\n      var reIndex = /\\{\\[\\s*([a-zA-Z]+)\\(([a-zA-Z]+)\\)\\s*\\]\\}/;\r\n      var reMatch = reIndex.exec(str);\r\n      if (!reMatch || !reMatch.length)\r\n        return str;\r\n\r\n      // an index/macro has been found\r\n      // Note: at the moment, only one parameter is supported\r\n      var macroName = reMatch[1];\r\n      var paramName = reMatch[2];\r\n      var param;\r\n      if (args && paramName in args) {\r\n        param = args[paramName];\r\n      } else if (paramName in gL10nData) {\r\n        param = gL10nData[paramName];\r\n      }\r\n\r\n      // there's no macro parser yet: it has to be defined in gMacros\r\n      if (macroName in gMacros) {\r\n        var macro = gMacros[macroName];\r\n        str = macro(str, param, key, prop);\r\n      }\r\n      return str;\r\n    }\r\n\r\n    // replace {{arguments}} with their values\r\n    function substArguments(str, args, key) {\r\n      var reArgs = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\r\n      return str.replace(reArgs, function(matched_text, arg) {\r\n        if (args && arg in args) {\r\n          return args[arg];\r\n        }\r\n        if (arg in gL10nData) {\r\n          return gL10nData[arg];\r\n        }\r\n        console.log('argument {{' + arg + '}} for #' + key + ' is undefined.');\r\n        return matched_text;\r\n      });\r\n    }\r\n\r\n    // translate an HTML element\r\n    function translateElement(element) {\r\n      var l10n = getL10nAttributes(element);\r\n      if (!l10n.id)\r\n        return;\r\n\r\n      // get the related l10n object\r\n      var data = getL10nData(l10n.id, l10n.args);\r\n      if (!data) {\r\n        console.warn('#' + l10n.id + ' is undefined.');\r\n        return;\r\n      }\r\n\r\n      // translate element (TODO: security checks?)\r\n      if (data[gTextProp]) { // XXX\r\n        if (getChildElementCount(element) === 0) {\r\n          element[gTextProp] = data[gTextProp];\r\n        } else {\r\n          // this element has element children: replace the content of the first\r\n          // (non-empty) child textNode and clear other child textNodes\r\n          var children = element.childNodes;\r\n          var found = false;\r\n          for (var i = 0, l = children.length; i < l; i++) {\r\n            if (children[i].nodeType === 3 && /\\S/.test(children[i].nodeValue)) {\r\n              if (found) {\r\n                children[i].nodeValue = '';\r\n              } else {\r\n                children[i].nodeValue = data[gTextProp];\r\n                found = true;\r\n              }\r\n            }\r\n          }\r\n          // if no (non-empty) textNode is found, insert a textNode before the\r\n          // first element child.\r\n          if (!found) {\r\n            var textNode = document.createTextNode(data[gTextProp]);\r\n            element.insertBefore(textNode, element.firstChild);\r\n          }\r\n        }\r\n        delete data[gTextProp];\r\n      }\r\n\r\n      for (var k in data) {\r\n        element[k] = data[k];\r\n      }\r\n    }\r\n\r\n    // webkit browsers don't currently support 'children' on SVG elements...\r\n    function getChildElementCount(element) {\r\n      if (element.children) {\r\n        return element.children.length;\r\n      }\r\n      if (typeof element.childElementCount !== 'undefined') {\r\n        return element.childElementCount;\r\n      }\r\n      var count = 0;\r\n      for (var i = 0; i < element.childNodes.length; i++) {\r\n        count += element.nodeType === 1 ? 1 : 0;\r\n      }\r\n      return count;\r\n    }\r\n\r\n    // translate an HTML subtree\r\n    function translateFragment(element) {\r\n      element = element || document.documentElement;\r\n\r\n      // check all translatable children (= w/ a `data-l10n-id' attribute)\r\n      var children = getTranslatableChildren(element);\r\n      var elementCount = children.length;\r\n      for (var i = 0; i < elementCount; i++) {\r\n        translateElement(children[i]);\r\n      }\r\n\r\n      // translate element itself if necessary\r\n      translateElement(element);\r\n    }\r\n\r\n    return {\r\n      // get a localized string\r\n      get: function(key, args, fallbackString) {\r\n        var index = key.lastIndexOf('.');\r\n        var prop = gTextProp;\r\n        if (index > 0) { // An attribute has been specified\r\n          prop = key.substring(index + 1);\r\n          key = key.substring(0, index);\r\n        }\r\n        var fallback;\r\n        if (fallbackString) {\r\n          fallback = {};\r\n          fallback[prop] = fallbackString;\r\n        }\r\n        var data = getL10nData(key, args, fallback);\r\n        if (data && prop in data) {\r\n          return data[prop];\r\n        }\r\n        return '{{' + key + '}}';\r\n      },\r\n\r\n      // debug\r\n      getData: function() { return gL10nData; },\r\n      getText: function() { return gTextData; },\r\n\r\n      // get|set the document language\r\n      getLanguage: function() { return gLanguage; },\r\n      setLanguage: function(lang, callback) {\r\n        loadLocale(lang, function() {\r\n          if (callback)\r\n            callback();\r\n        });\r\n      },\r\n\r\n      // get the direction (ltr|rtl) of the current language\r\n      getDirection: function() {\r\n        // http://www.w3.org/International/questions/qa-scripts\r\n        // Arabic, Hebrew, Farsi, Pashto, Urdu\r\n        var rtlList = ['ar', 'he', 'fa', 'ps', 'ur'];\r\n        var shortCode = gLanguage.split('-', 1)[0];\r\n        return (rtlList.indexOf(shortCode) >= 0) ? 'rtl' : 'ltr';\r\n      },\r\n\r\n      // translate an element or document fragment\r\n      translate: translateFragment,\r\n\r\n      // this can be used to prevent race conditions\r\n      getReadyState: function() { return gReadyState; },\r\n      ready: function(callback) {\r\n        if (!callback) {\r\n          return;\r\n        } else if (gReadyState == 'complete' || gReadyState == 'interactive') {\r\n          window.setTimeout(function() {\r\n            callback();\r\n          });\r\n        } else if (document.addEventListener) {\r\n          document.addEventListener('localized', function once() {\r\n            document.removeEventListener('localized', once);\r\n            callback();\r\n          });\r\n        }\r\n      }\r\n    };\r\n  }) (window, document);\r\n\r\n});\ndefine('skylark-pdfjs-viewer/genericl10n',[\n  \"./l10n\"\n],function(webL10n){\n  /* Copyright 2017 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n\n  //const webL10n = document.webL10n;\n\n  class GenericL10n {\n    constructor(lang) {\n      this._lang = lang;\n      this._ready = new Promise((resolve, reject) => {\n        webL10n.setLanguage(lang, () => {\n          resolve(webL10n);\n        });\n      });\n    }\n\n    async getLanguage() {\n      const l10n = await this._ready;\n      return l10n.getLanguage();\n    }\n\n    async getDirection() {\n      const l10n = await this._ready;\n      return l10n.getDirection();\n    }\n\n    async get(property, args, fallback) {\n      const l10n = await this._ready;\n      return l10n.get(property, args, fallback);\n    }\n\n    async translate(element) {\n      const l10n = await this._ready;\n      return l10n.translate(element);\n    }\n  }\n\n  return { GenericL10n };\n});\ndefine('skylark-pdfjs-viewer/generic_scripting',[\n  \"skylark-pdfjs-display\"\n],function(pdfjsLib){\n  /* Copyright 2020 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { loadScript } = pdfjsLib;\n\n  class GenericScripting {\n    constructor(sandboxBundleSrc) {\n      this._ready = loadScript(\n        sandboxBundleSrc,\n        /* removeScriptElement = */ true\n      ).then(() => {\n        return window.pdfjsSandbox.QuickJSSandbox();\n      });\n    }\n\n    async createSandbox(data) {\n      const sandbox = await this._ready;\n      sandbox.create(data);\n    }\n\n    async dispatchEventInSandbox(event) {\n      const sandbox = await this._ready;\n      sandbox.dispatchEvent(event);\n    }\n\n    async destroySandbox() {\n      const sandbox = await this._ready;\n      sandbox.nukeSandbox();\n    }\n  }\n\n  return { GenericScripting };\n});\ndefine('skylark-pdfjs-viewer/genericcom',[\n  \"./pdfjs_dev\",\n  \"./app\",\n  \"./preferences\",\n  \"./download_manager\",\n  \"./genericl10n\",\n  \"./generic_scripting\"\n],function(\n  PDFJSDev,\n  app,\n  preferences,\n  download_manager,\n  genericl10n,\n  generic_scripting\n){\n  /* Copyright 2017 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { DefaultExternalServices, PDFViewerApplication } = app;\n  const { BasePreferences } = preferences;\n  const { DownloadManager } = download_manager;\n  const { GenericL10n } = genericl10n;\n  const { GenericScripting } = generic_scripting;\n\n  if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"GENERIC\")) {\n    throw new Error(\n      'Module \"pdfjs-web/genericcom\" shall not be used outside ' +\n        \"GENERIC build.\"\n    );\n  }\n\n  const GenericCom = {};\n\n  class GenericPreferences extends BasePreferences {\n    async _writeToStorage(prefObj) {\n      localStorage.setItem(\"pdfjs.preferences\", JSON.stringify(prefObj));\n    }\n\n    async _readFromStorage(prefObj) {\n      return JSON.parse(localStorage.getItem(\"pdfjs.preferences\"));\n    }\n  }\n\n  class GenericExternalServices extends DefaultExternalServices {\n    static createDownloadManager(options) {\n      return new DownloadManager();\n    }\n\n    static createPreferences() {\n      return new GenericPreferences();\n    }\n\n    static createL10n({ locale = \"en-US\" }) {\n      return new GenericL10n(locale);\n    }\n\n    static createScripting({ sandboxBundleSrc }) {\n      return new GenericScripting(sandboxBundleSrc);\n    }\n  }\n  PDFViewerApplication.externalServices = GenericExternalServices;\n\n  return { GenericCom };\n});\ndefine('skylark-pdfjs-viewer/pdf_print_service',[\n  \"./ui_utils\",\n  \"./app\",\n  \"./viewer_compatibility\"\n],function(ui_utils,app,viewer_compatibility){\n  /* Copyright 2016 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n    const { CSS_UNITS, NullL10n } = ui_utils;\n    const { PDFPrintServiceFactory, PDFViewerApplication } = app;\n    const { viewerCompatibilityParams } = viewer_compatibility;\n\n    let activeService = null;\n    let overlayManager = null;\n\n    // Renders the page to the canvas of the given print service, and returns\n    // the suggested dimensions of the output page.\n    function renderPage(\n      activeServiceOnEntry,\n      pdfDocument,\n      pageNumber,\n      size,\n      printResolution,\n      optionalContentConfigPromise\n    ) {\n      const scratchCanvas = activeService.scratchCanvas;\n\n      // The size of the canvas in pixels for printing.\n      const PRINT_UNITS = printResolution / 72.0;\n      scratchCanvas.width = Math.floor(size.width * PRINT_UNITS);\n      scratchCanvas.height = Math.floor(size.height * PRINT_UNITS);\n\n      // The physical size of the img as specified by the PDF document.\n      const width = Math.floor(size.width * CSS_UNITS) + \"px\";\n      const height = Math.floor(size.height * CSS_UNITS) + \"px\";\n\n      const ctx = scratchCanvas.getContext(\"2d\");\n      ctx.save();\n      ctx.fillStyle = \"rgb(255, 255, 255)\";\n      ctx.fillRect(0, 0, scratchCanvas.width, scratchCanvas.height);\n      ctx.restore();\n\n      return pdfDocument\n        .getPage(pageNumber)\n        .then(function (pdfPage) {\n          const renderContext = {\n            canvasContext: ctx,\n            transform: [PRINT_UNITS, 0, 0, PRINT_UNITS, 0, 0],\n            viewport: pdfPage.getViewport({ scale: 1, rotation: size.rotation }),\n            intent: \"print\",\n            annotationStorage: pdfDocument.annotationStorage,\n            optionalContentConfigPromise,\n          };\n          return pdfPage.render(renderContext).promise;\n        })\n        .then(function () {\n          return {\n            width,\n            height,\n          };\n        });\n    }\n\n    function PDFPrintService(\n      pdfDocument,\n      pagesOverview,\n      printContainer,\n      printResolution,\n      optionalContentConfigPromise = null,\n      l10n\n    ) {\n      this.pdfDocument = pdfDocument;\n      this.pagesOverview = pagesOverview;\n      this.printContainer = printContainer;\n      this._printResolution = printResolution || 150;\n      this._optionalContentConfigPromise =\n        optionalContentConfigPromise || pdfDocument.getOptionalContentConfig();\n      this.l10n = l10n || NullL10n;\n      this.currentPage = -1;\n      // The temporary canvas where renderPage paints one page at a time.\n      this.scratchCanvas = document.createElement(\"canvas\");\n    }\n\n    PDFPrintService.prototype = {\n      layout() {\n        this.throwIfInactive();\n\n        const body = document.querySelector(\"body\");\n        body.setAttribute(\"data-pdfjsprinting\", true);\n\n        const hasEqualPageSizes = this.pagesOverview.every(function (size) {\n          return (\n            size.width === this.pagesOverview[0].width &&\n            size.height === this.pagesOverview[0].height\n          );\n        }, this);\n        if (!hasEqualPageSizes) {\n          console.warn(\n            \"Not all pages have the same size. The printed \" +\n              \"result may be incorrect!\"\n          );\n        }\n\n        // Insert a @page + size rule to make sure that the page size is correctly\n        // set. Note that we assume that all pages have the same size, because\n        // variable-size pages are not supported yet (e.g. in Chrome & Firefox).\n        // TODO(robwu): Use named pages when size calculation bugs get resolved\n        // (e.g. https://crbug.com/355116) AND when support for named pages is\n        // added (http://www.w3.org/TR/css3-page/#using-named-pages).\n        // In browsers where @page + size is not supported (such as Firefox,\n        // https://bugzil.la/851441), the next stylesheet will be ignored and the\n        // user has to select the correct paper size in the UI if wanted.\n        this.pageStyleSheet = document.createElement(\"style\");\n        const pageSize = this.pagesOverview[0];\n        this.pageStyleSheet.textContent =\n          // \"size:<width> <height>\" is what we need. But also add \"A4\" because\n          // Firefox incorrectly reports support for the other value.\n          \"@supports ((size:A4) and (size:1pt 1pt)) {\" +\n          \"@page { size: \" +\n          pageSize.width +\n          \"pt \" +\n          pageSize.height +\n          \"pt;}\" +\n          \"}\";\n        body.appendChild(this.pageStyleSheet);\n      },\n\n      destroy() {\n        if (activeService !== this) {\n          // |activeService| cannot be replaced without calling destroy() first,\n          // so if it differs then an external consumer has a stale reference to\n          // us.\n          return;\n        }\n        this.printContainer.textContent = \"\";\n\n        const body = document.querySelector(\"body\");\n        body.removeAttribute(\"data-pdfjsprinting\");\n\n        if (this.pageStyleSheet) {\n          this.pageStyleSheet.remove();\n          this.pageStyleSheet = null;\n        }\n        this.scratchCanvas.width = this.scratchCanvas.height = 0;\n        this.scratchCanvas = null;\n        activeService = null;\n        ensureOverlay().then(function () {\n          if (overlayManager.active !== \"printServiceOverlay\") {\n            return; // overlay was already closed\n          }\n          overlayManager.close(\"printServiceOverlay\");\n        });\n      },\n\n      renderPages() {\n        const pageCount = this.pagesOverview.length;\n        const renderNextPage = (resolve, reject) => {\n          this.throwIfInactive();\n          if (++this.currentPage >= pageCount) {\n            renderProgress(pageCount, pageCount, this.l10n);\n            resolve();\n            return;\n          }\n          const index = this.currentPage;\n          renderProgress(index, pageCount, this.l10n);\n          renderPage(\n            this,\n            this.pdfDocument,\n            /* pageNumber = */ index + 1,\n            this.pagesOverview[index],\n            this._printResolution,\n            this._optionalContentConfigPromise\n          )\n            .then(this.useRenderedPage.bind(this))\n            .then(function () {\n              renderNextPage(resolve, reject);\n            }, reject);\n        };\n        return new Promise(renderNextPage);\n      },\n\n      useRenderedPage(printItem) {\n        this.throwIfInactive();\n        const img = document.createElement(\"img\");\n        img.style.width = printItem.width;\n        img.style.height = printItem.height;\n\n        const scratchCanvas = this.scratchCanvas;\n        if (\n          \"toBlob\" in scratchCanvas &&\n          !viewerCompatibilityParams.disableCreateObjectURL\n        ) {\n          scratchCanvas.toBlob(function (blob) {\n            img.src = URL.createObjectURL(blob);\n          });\n        } else {\n          img.src = scratchCanvas.toDataURL();\n        }\n\n        const wrapper = document.createElement(\"div\");\n        wrapper.appendChild(img);\n        this.printContainer.appendChild(wrapper);\n\n        return new Promise(function (resolve, reject) {\n          img.onload = resolve;\n          img.onerror = reject;\n        });\n      },\n\n      performPrint() {\n        this.throwIfInactive();\n        return new Promise(resolve => {\n          // Push window.print in the macrotask queue to avoid being affected by\n          // the deprecation of running print() code in a microtask, see\n          // https://github.com/mozilla/pdf.js/issues/7547.\n          setTimeout(() => {\n            if (!this.active) {\n              resolve();\n              return;\n            }\n            print.call(window);\n            // Delay promise resolution in case print() was not synchronous.\n            setTimeout(resolve, 20); // Tidy-up.\n          }, 0);\n        });\n      },\n\n      get active() {\n        return this === activeService;\n      },\n\n      throwIfInactive() {\n        if (!this.active) {\n          throw new Error(\"This print request was cancelled or completed.\");\n        }\n      },\n    };\n\n    const print = window.print;\n    window.print = function () {\n      if (activeService) {\n        console.warn(\"Ignored window.print() because of a pending print job.\");\n        return;\n      }\n      ensureOverlay().then(function () {\n        if (activeService) {\n          overlayManager.open(\"printServiceOverlay\");\n        }\n      });\n\n      try {\n        dispatchEvent(\"beforeprint\");\n      } finally {\n        if (!activeService) {\n          console.error(\"Expected print service to be initialized.\");\n          ensureOverlay().then(function () {\n            if (overlayManager.active === \"printServiceOverlay\") {\n              overlayManager.close(\"printServiceOverlay\");\n            }\n          });\n          return; // eslint-disable-line no-unsafe-finally\n        }\n        const activeServiceOnEntry = activeService;\n        activeService\n          .renderPages()\n          .then(function () {\n            return activeServiceOnEntry.performPrint();\n          })\n          .catch(function () {\n            // Ignore any error messages.\n          })\n          .then(function () {\n            // aborts acts on the \"active\" print request, so we need to check\n            // whether the print request (activeServiceOnEntry) is still active.\n            // Without the check, an unrelated print request (created after aborting\n            // this print request while the pages were being generated) would be\n            // aborted.\n            if (activeServiceOnEntry.active) {\n              abort();\n            }\n          });\n      }\n    };\n\n    function dispatchEvent(eventType) {\n      const event = document.createEvent(\"CustomEvent\");\n      event.initCustomEvent(eventType, false, false, \"custom\");\n      window.dispatchEvent(event);\n    }\n\n    function abort() {\n      if (activeService) {\n        activeService.destroy();\n        dispatchEvent(\"afterprint\");\n      }\n    }\n\n    function renderProgress(index, total, l10n) {\n      const progressContainer = document.getElementById(\"printServiceOverlay\");\n      const progress = Math.round((100 * index) / total);\n      const progressBar = progressContainer.querySelector(\"progress\");\n      const progressPerc = progressContainer.querySelector(\".relative-progress\");\n      progressBar.value = progress;\n      l10n.get(\"print_progress_percent\", { progress }, progress + \"%\").then(msg => {\n        progressPerc.textContent = msg;\n      });\n    }\n\n    window.addEventListener(\n      \"keydown\",\n      function (event) {\n        // Intercept Cmd/Ctrl + P in all browsers.\n        // Also intercept Cmd/Ctrl + Shift + P in Chrome and Opera\n        if (\n          event.keyCode === /* P= */ 80 &&\n          (event.ctrlKey || event.metaKey) &&\n          !event.altKey &&\n          (!event.shiftKey || window.chrome || window.opera)\n        ) {\n          window.print();\n\n          // The (browser) print dialog cannot be prevented from being shown in\n          // IE11.\n          event.preventDefault();\n          if (event.stopImmediatePropagation) {\n            event.stopImmediatePropagation();\n          } else {\n            event.stopPropagation();\n          }\n        }\n      },\n      true\n    );\n\n    if (\"onbeforeprint\" in window) {\n      // Do not propagate before/afterprint events when they are not triggered\n      // from within this polyfill. (FF / Chrome 63+).\n      const stopPropagationIfNeeded = function (event) {\n        if (event.detail !== \"custom\" && event.stopImmediatePropagation) {\n          event.stopImmediatePropagation();\n        }\n      };\n      window.addEventListener(\"beforeprint\", stopPropagationIfNeeded);\n      window.addEventListener(\"afterprint\", stopPropagationIfNeeded);\n    }\n\n    let overlayPromise;\n    function ensureOverlay() {\n      if (!overlayPromise) {\n        overlayManager = PDFViewerApplication.overlayManager;\n        if (!overlayManager) {\n          throw new Error(\"The overlay manager has not yet been initialized.\");\n        }\n\n        overlayPromise = overlayManager.register(\n          \"printServiceOverlay\",\n          document.getElementById(\"printServiceOverlay\"),\n          abort,\n          true\n        );\n        document.getElementById(\"printCancel\").onclick = abort;\n      }\n      return overlayPromise;\n    }\n\n    PDFPrintServiceFactory.instance = {\n      supportsPrinting: true,\n\n      createPrintService(\n        pdfDocument,\n        pagesOverview,\n        printContainer,\n        printResolution,\n        optionalContentConfigPromise,\n        l10n\n      ) {\n        if (activeService) {\n          throw new Error(\"The print service is created and active.\");\n        }\n        activeService = new PDFPrintService(\n          pdfDocument,\n          pagesOverview,\n          printContainer,\n          printResolution,\n          optionalContentConfigPromise,\n          l10n\n        );\n        return activeService;\n      },\n    };\n\n    return { PDFPrintService };\n});\ndefine('skylark-pdfjs-viewer/viewer',[\n  \"./pdfjs_dev\",\n  \"./app_options\",\n  \"./app\",\n  \"./genericcom\",\n  \"./pdf_print_service\"\n],function(\n  PDFJSDev,\n  app_options,\n  app\n){\n  /* Copyright 2016 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  const { AppOptions } = app_options;\n  const { PDFViewerApplication } = app;\n\n  /* eslint-disable-next-line no-unused-vars */\n  const pdfjsVersion =\n    typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n  /* eslint-disable-next-line no-unused-vars */\n  const pdfjsBuild =\n    typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\n  window.PDFViewerApplication = PDFViewerApplication;\n  window.PDFViewerApplicationOptions = AppOptions;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\")) {\n    var defaultUrl; // eslint-disable-line no-var\n\n    (function rewriteUrlClosure() {\n      // Run this code outside DOMContentLoaded to make sure that the URL\n      // is rewritten as soon as possible.\n      const queryString = document.location.search.slice(1);\n      const m = /(^|&)file=([^&]*)/.exec(queryString);\n      defaultUrl = m ? decodeURIComponent(m[2]) : \"\";\n\n      // Example: chrome-extension://.../http://example.com/file.pdf\n      const humanReadableUrl = \"/\" + defaultUrl + location.hash;\n      history.replaceState(history.state, \"\", humanReadableUrl);\n      if (top === window) {\n        // eslint-disable-next-line no-undef\n        chrome.runtime.sendMessage(\"showPageAction\");\n      }\n    })();\n  }\n\n  //TODO : checking\n  ///if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  ///  require(\"./firefoxcom.js\");\n  ///  require(\"./firefox_print_service.js\");\n  ///}\n  ///if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  ///  require(\"./genericcom.js\");\n  ///}\n  ///if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\")) {\n  ///  require(\"./chromecom.js\");\n  ///}\n  ///if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME || GENERIC\")) {\n  ///  require(\"./pdf_print_service.js\");\n  ///}\n\n  function getViewerConfiguration() {\n    return {\n      appContainer: document.body,\n      mainContainer: document.getElementById(\"viewerContainer\"),\n      viewerContainer: document.getElementById(\"viewer\"),\n      eventBus: null,\n      toolbar: {\n        container: document.getElementById(\"toolbarViewer\"),\n        numPages: document.getElementById(\"numPages\"),\n        pageNumber: document.getElementById(\"pageNumber\"),\n        scaleSelectContainer: document.getElementById(\"scaleSelectContainer\"),\n        scaleSelect: document.getElementById(\"scaleSelect\"),\n        customScaleOption: document.getElementById(\"customScaleOption\"),\n        previous: document.getElementById(\"previous\"),\n        next: document.getElementById(\"next\"),\n        zoomIn: document.getElementById(\"zoomIn\"),\n        zoomOut: document.getElementById(\"zoomOut\"),\n        viewFind: document.getElementById(\"viewFind\"),\n        openFile: document.getElementById(\"openFile\"),\n        print: document.getElementById(\"print\"),\n        presentationModeButton: document.getElementById(\"presentationMode\"),\n        download: document.getElementById(\"download\"),\n        viewBookmark: document.getElementById(\"viewBookmark\"),\n      },\n      secondaryToolbar: {\n        toolbar: document.getElementById(\"secondaryToolbar\"),\n        toggleButton: document.getElementById(\"secondaryToolbarToggle\"),\n        toolbarButtonContainer: document.getElementById(\n          \"secondaryToolbarButtonContainer\"\n        ),\n        presentationModeButton: document.getElementById(\n          \"secondaryPresentationMode\"\n        ),\n        openFileButton: document.getElementById(\"secondaryOpenFile\"),\n        printButton: document.getElementById(\"secondaryPrint\"),\n        downloadButton: document.getElementById(\"secondaryDownload\"),\n        viewBookmarkButton: document.getElementById(\"secondaryViewBookmark\"),\n        firstPageButton: document.getElementById(\"firstPage\"),\n        lastPageButton: document.getElementById(\"lastPage\"),\n        pageRotateCwButton: document.getElementById(\"pageRotateCw\"),\n        pageRotateCcwButton: document.getElementById(\"pageRotateCcw\"),\n        cursorSelectToolButton: document.getElementById(\"cursorSelectTool\"),\n        cursorHandToolButton: document.getElementById(\"cursorHandTool\"),\n        scrollVerticalButton: document.getElementById(\"scrollVertical\"),\n        scrollHorizontalButton: document.getElementById(\"scrollHorizontal\"),\n        scrollWrappedButton: document.getElementById(\"scrollWrapped\"),\n        spreadNoneButton: document.getElementById(\"spreadNone\"),\n        spreadOddButton: document.getElementById(\"spreadOdd\"),\n        spreadEvenButton: document.getElementById(\"spreadEven\"),\n        documentPropertiesButton: document.getElementById(\"documentProperties\"),\n      },\n      fullscreen: {\n        contextFirstPage: document.getElementById(\"contextFirstPage\"),\n        contextLastPage: document.getElementById(\"contextLastPage\"),\n        contextPageRotateCw: document.getElementById(\"contextPageRotateCw\"),\n        contextPageRotateCcw: document.getElementById(\"contextPageRotateCcw\"),\n      },\n      sidebar: {\n        // Divs (and sidebar button)\n        outerContainer: document.getElementById(\"outerContainer\"),\n        viewerContainer: document.getElementById(\"viewerContainer\"),\n        toggleButton: document.getElementById(\"sidebarToggle\"),\n        // Buttons\n        thumbnailButton: document.getElementById(\"viewThumbnail\"),\n        outlineButton: document.getElementById(\"viewOutline\"),\n        attachmentsButton: document.getElementById(\"viewAttachments\"),\n        layersButton: document.getElementById(\"viewLayers\"),\n        // Views\n        thumbnailView: document.getElementById(\"thumbnailView\"),\n        outlineView: document.getElementById(\"outlineView\"),\n        attachmentsView: document.getElementById(\"attachmentsView\"),\n        layersView: document.getElementById(\"layersView\"),\n        // View-specific options\n        outlineOptionsContainer: document.getElementById(\n          \"outlineOptionsContainer\"\n        ),\n        currentOutlineItemButton: document.getElementById(\"currentOutlineItem\"),\n      },\n      sidebarResizer: {\n        outerContainer: document.getElementById(\"outerContainer\"),\n        resizer: document.getElementById(\"sidebarResizer\"),\n      },\n      findBar: {\n        bar: document.getElementById(\"findbar\"),\n        toggleButton: document.getElementById(\"viewFind\"),\n        findField: document.getElementById(\"findInput\"),\n        highlightAllCheckbox: document.getElementById(\"findHighlightAll\"),\n        caseSensitiveCheckbox: document.getElementById(\"findMatchCase\"),\n        entireWordCheckbox: document.getElementById(\"findEntireWord\"),\n        findMsg: document.getElementById(\"findMsg\"),\n        findResultsCount: document.getElementById(\"findResultsCount\"),\n        findPreviousButton: document.getElementById(\"findPrevious\"),\n        findNextButton: document.getElementById(\"findNext\"),\n      },\n      passwordOverlay: {\n        overlayName: \"passwordOverlay\",\n        container: document.getElementById(\"passwordOverlay\"),\n        label: document.getElementById(\"passwordText\"),\n        input: document.getElementById(\"password\"),\n        submitButton: document.getElementById(\"passwordSubmit\"),\n        cancelButton: document.getElementById(\"passwordCancel\"),\n      },\n      documentProperties: {\n        overlayName: \"documentPropertiesOverlay\",\n        container: document.getElementById(\"documentPropertiesOverlay\"),\n        closeButton: document.getElementById(\"documentPropertiesClose\"),\n        fields: {\n          fileName: document.getElementById(\"fileNameField\"),\n          fileSize: document.getElementById(\"fileSizeField\"),\n          title: document.getElementById(\"titleField\"),\n          author: document.getElementById(\"authorField\"),\n          subject: document.getElementById(\"subjectField\"),\n          keywords: document.getElementById(\"keywordsField\"),\n          creationDate: document.getElementById(\"creationDateField\"),\n          modificationDate: document.getElementById(\"modificationDateField\"),\n          creator: document.getElementById(\"creatorField\"),\n          producer: document.getElementById(\"producerField\"),\n          version: document.getElementById(\"versionField\"),\n          pageCount: document.getElementById(\"pageCountField\"),\n          pageSize: document.getElementById(\"pageSizeField\"),\n          linearized: document.getElementById(\"linearizedField\"),\n        },\n      },\n      errorWrapper: {\n        container: document.getElementById(\"errorWrapper\"),\n        errorMessage: document.getElementById(\"errorMessage\"),\n        closeButton: document.getElementById(\"errorClose\"),\n        errorMoreInfo: document.getElementById(\"errorMoreInfo\"),\n        moreInfoButton: document.getElementById(\"errorShowMore\"),\n        lessInfoButton: document.getElementById(\"errorShowLess\"),\n      },\n      printContainer: document.getElementById(\"printContainer\"),\n      openFileInputName: \"fileInput\",\n      debuggerScriptPath: \"./debugger.js\",\n    };\n  }\n\n  function webViewerLoad() {\n    const config = getViewerConfiguration();\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        PDFViewerApplication.run(config);\n    } else {\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\")) {\n        AppOptions.set(\"defaultUrl\", defaultUrl);\n      }\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n        // Give custom implementations of the default viewer a simpler way to\n        // set various `AppOptions`, by dispatching an event once all viewer\n        // files are loaded but *before* the viewer initialization has run.\n        const event = document.createEvent(\"CustomEvent\");\n        event.initCustomEvent(\"webviewerloaded\", true, true, {\n          source: window,\n        });\n        try {\n          // Attempt to dispatch the event at the embedding `document`,\n          // in order to support cases where the viewer is embedded in\n          // a *dynamically* created <iframe> element.\n          parent.document.dispatchEvent(event);\n        } catch (ex) {\n          // The viewer could be in e.g. a cross-origin <iframe> element,\n          // fallback to dispatching the event at the current `document`.\n          console.error(`webviewerloaded: ${ex}`);\n          document.dispatchEvent(event);\n        }\n      }\n\n      PDFViewerApplication.run(config);\n    }\n  }\n\n\n  function init() {\n    if (\n      document.readyState === \"interactive\" ||\n      document.readyState === \"complete\"\n    ) {\n      webViewerLoad();\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", webViewerLoad, true);\n    }    \n  }\n\n\n  return { \n    init,\n    PDFViewerApplication, \n    PDFViewerApplicationOptions : AppOptions  \n  };\n});\ndefine('skylark-pdfjs-viewer/main',[\r\n\t\"./viewer\"\t\r\n],function(viewer){\r\n\treturn viewer;\r\n});\ndefine('skylark-pdfjs-viewer', ['skylark-pdfjs-viewer/main'], function (main) { return main; });\n\n"]}