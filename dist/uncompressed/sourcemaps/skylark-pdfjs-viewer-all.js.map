{"version":3,"sources":["skylark-pdfjs-viewer-all.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../skylark-pdfjs-viewer-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        ns[name] = obj2 || {};\r\n        return ns[name];\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-pdfjs/pdf',[\n],function(){\nreturn /******/ (() => { // webpackBootstrap\n/******/  \"use strict\";\n/******/  var __webpack_modules__ = ([\n/* 0 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  Object.defineProperty(exports, \"addLinkAttributes\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.addLinkAttributes;\n    }\n  }));\n  Object.defineProperty(exports, \"getFilenameFromUrl\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.getFilenameFromUrl;\n    }\n  }));\n  Object.defineProperty(exports, \"LinkTarget\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.LinkTarget;\n    }\n  }));\n  Object.defineProperty(exports, \"loadScript\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.loadScript;\n    }\n  }));\n  Object.defineProperty(exports, \"PDFDateString\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.PDFDateString;\n    }\n  }));\n  Object.defineProperty(exports, \"RenderingCancelledException\", ({\n    enumerable: true,\n    get: function () {\n      return _display_utils.RenderingCancelledException;\n    }\n  }));\n  Object.defineProperty(exports, \"build\", ({\n    enumerable: true,\n    get: function () {\n      return _api.build;\n    }\n  }));\n  Object.defineProperty(exports, \"getDocument\", ({\n    enumerable: true,\n    get: function () {\n      return _api.getDocument;\n    }\n  }));\n  Object.defineProperty(exports, \"LoopbackPort\", ({\n    enumerable: true,\n    get: function () {\n      return _api.LoopbackPort;\n    }\n  }));\n  Object.defineProperty(exports, \"PDFDataRangeTransport\", ({\n    enumerable: true,\n    get: function () {\n      return _api.PDFDataRangeTransport;\n    }\n  }));\n  Object.defineProperty(exports, \"PDFWorker\", ({\n    enumerable: true,\n    get: function () {\n      return _api.PDFWorker;\n    }\n  }));\n  Object.defineProperty(exports, \"version\", ({\n    enumerable: true,\n    get: function () {\n      return _api.version;\n    }\n  }));\n  Object.defineProperty(exports, \"CMapCompressionType\", ({\n    enumerable: true,\n    get: function () {\n      return _util.CMapCompressionType;\n    }\n  }));\n  Object.defineProperty(exports, \"createObjectURL\", ({\n    enumerable: true,\n    get: function () {\n      return _util.createObjectURL;\n    }\n  }));\n  Object.defineProperty(exports, \"createPromiseCapability\", ({\n    enumerable: true,\n    get: function () {\n      return _util.createPromiseCapability;\n    }\n  }));\n  Object.defineProperty(exports, \"createValidAbsoluteUrl\", ({\n    enumerable: true,\n    get: function () {\n      return _util.createValidAbsoluteUrl;\n    }\n  }));\n  Object.defineProperty(exports, \"InvalidPDFException\", ({\n    enumerable: true,\n    get: function () {\n      return _util.InvalidPDFException;\n    }\n  }));\n  Object.defineProperty(exports, \"MissingPDFException\", ({\n    enumerable: true,\n    get: function () {\n      return _util.MissingPDFException;\n    }\n  }));\n  Object.defineProperty(exports, \"OPS\", ({\n    enumerable: true,\n    get: function () {\n      return _util.OPS;\n    }\n  }));\n  Object.defineProperty(exports, \"PasswordResponses\", ({\n    enumerable: true,\n    get: function () {\n      return _util.PasswordResponses;\n    }\n  }));\n  Object.defineProperty(exports, \"PermissionFlag\", ({\n    enumerable: true,\n    get: function () {\n      return _util.PermissionFlag;\n    }\n  }));\n  Object.defineProperty(exports, \"removeNullCharacters\", ({\n    enumerable: true,\n    get: function () {\n      return _util.removeNullCharacters;\n    }\n  }));\n  Object.defineProperty(exports, \"shadow\", ({\n    enumerable: true,\n    get: function () {\n      return _util.shadow;\n    }\n  }));\n  Object.defineProperty(exports, \"UnexpectedResponseException\", ({\n    enumerable: true,\n    get: function () {\n      return _util.UnexpectedResponseException;\n    }\n  }));\n  Object.defineProperty(exports, \"UNSUPPORTED_FEATURES\", ({\n    enumerable: true,\n    get: function () {\n      return _util.UNSUPPORTED_FEATURES;\n    }\n  }));\n  Object.defineProperty(exports, \"Util\", ({\n    enumerable: true,\n    get: function () {\n      return _util.Util;\n    }\n  }));\n  Object.defineProperty(exports, \"VerbosityLevel\", ({\n    enumerable: true,\n    get: function () {\n      return _util.VerbosityLevel;\n    }\n  }));\n  Object.defineProperty(exports, \"AnnotationLayer\", ({\n    enumerable: true,\n    get: function () {\n      return _annotation_layer.AnnotationLayer;\n    }\n  }));\n  Object.defineProperty(exports, \"apiCompatibilityParams\", ({\n    enumerable: true,\n    get: function () {\n      return _api_compatibility.apiCompatibilityParams;\n    }\n  }));\n  Object.defineProperty(exports, \"GlobalWorkerOptions\", ({\n    enumerable: true,\n    get: function () {\n      return _worker_options.GlobalWorkerOptions;\n    }\n  }));\n  Object.defineProperty(exports, \"renderTextLayer\", ({\n    enumerable: true,\n    get: function () {\n      return _text_layer.renderTextLayer;\n    }\n  }));\n  Object.defineProperty(exports, \"SVGGraphics\", ({\n    enumerable: true,\n    get: function () {\n      return _svg.SVGGraphics;\n    }\n  }));\n\n  var _display_utils = __w_pdfjs_require__(1);\n\n  var _api = __w_pdfjs_require__(5);\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _annotation_layer = __w_pdfjs_require__(19);\n\n  var _api_compatibility = __w_pdfjs_require__(9);\n\n  var _worker_options = __w_pdfjs_require__(12);\n\n  var _text_layer = __w_pdfjs_require__(21);\n\n  var _svg = __w_pdfjs_require__(22);\n\n  const pdfjsVersion = '2.7.570';\n  const pdfjsBuild = 'f2c7338b0';\n  {\n    const {\n      isNodeJS\n    } = __w_pdfjs_require__(4);\n\n    if (isNodeJS) {\n      const PDFNodeStream = __w_pdfjs_require__(23).PDFNodeStream;\n\n      (0, _api.setPDFNetworkStreamFactory)(params => {\n        return new PDFNodeStream(params);\n      });\n    } else {\n      const PDFNetworkStream = __w_pdfjs_require__(26).PDFNetworkStream;\n\n      let PDFFetchStream;\n\n      if ((0, _display_utils.isFetchSupported)()) {\n        PDFFetchStream = __w_pdfjs_require__(27).PDFFetchStream;\n      }\n\n      (0, _api.setPDFNetworkStreamFactory)(params => {\n        if (PDFFetchStream && (0, _display_utils.isValidFetchUrl)(params.url)) {\n          return new PDFFetchStream(params);\n        }\n\n        return new PDFNetworkStream(params);\n      });\n    }\n  }\n\n  /***/ }),\n  /* 1 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.addLinkAttributes = addLinkAttributes;\n  exports.deprecated = deprecated;\n  exports.getFilenameFromUrl = getFilenameFromUrl;\n  exports.isFetchSupported = isFetchSupported;\n  exports.isValidFetchUrl = isValidFetchUrl;\n  exports.loadScript = loadScript;\n  exports.StatTimer = exports.RenderingCancelledException = exports.PDFDateString = exports.PageViewport = exports.LinkTarget = exports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.DOMCanvasFactory = exports.DEFAULT_LINK_REL = exports.BaseCMapReaderFactory = exports.BaseCanvasFactory = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  const DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\n  exports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;\n  const SVG_NS = \"http://www.w3.org/2000/svg\";\n\n  class BaseCanvasFactory {\n    constructor() {\n      if (this.constructor === BaseCanvasFactory) {\n        (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n      }\n    }\n\n    create(width, height) {\n      (0, _util.unreachable)(\"Abstract method `create` called.\");\n    }\n\n    reset(canvasAndContext, width, height) {\n      if (!canvasAndContext.canvas) {\n        throw new Error(\"Canvas is not specified\");\n      }\n\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n\n      canvasAndContext.canvas.width = width;\n      canvasAndContext.canvas.height = height;\n    }\n\n    destroy(canvasAndContext) {\n      if (!canvasAndContext.canvas) {\n        throw new Error(\"Canvas is not specified\");\n      }\n\n      canvasAndContext.canvas.width = 0;\n      canvasAndContext.canvas.height = 0;\n      canvasAndContext.canvas = null;\n      canvasAndContext.context = null;\n    }\n\n  }\n\n  exports.BaseCanvasFactory = BaseCanvasFactory;\n\n  class DOMCanvasFactory extends BaseCanvasFactory {\n    constructor({\n      ownerDocument = globalThis.document\n    } = {}) {\n      super();\n      this._document = ownerDocument;\n    }\n\n    create(width, height) {\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n\n      const canvas = this._document.createElement(\"canvas\");\n\n      const context = canvas.getContext(\"2d\");\n      canvas.width = width;\n      canvas.height = height;\n      return {\n        canvas,\n        context\n      };\n    }\n\n  }\n\n  exports.DOMCanvasFactory = DOMCanvasFactory;\n\n  class BaseCMapReaderFactory {\n    constructor({\n      baseUrl = null,\n      isCompressed = false\n    }) {\n      if (this.constructor === BaseCMapReaderFactory) {\n        (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n      }\n\n      this.baseUrl = baseUrl;\n      this.isCompressed = isCompressed;\n    }\n\n    async fetch({\n      name\n    }) {\n      if (!this.baseUrl) {\n        throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n      }\n\n      if (!name) {\n        throw new Error(\"CMap name must be specified.\");\n      }\n\n      const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n      const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n      return this._fetchData(url, compressionType).catch(reason => {\n        throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\n      });\n    }\n\n    _fetchData(url, compressionType) {\n      (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n    }\n\n  }\n\n  exports.BaseCMapReaderFactory = BaseCMapReaderFactory;\n\n  class DOMCMapReaderFactory extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      if (isFetchSupported() && isValidFetchUrl(url, document.baseURI)) {\n        return fetch(url).then(async response => {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          let cMapData;\n\n          if (this.isCompressed) {\n            cMapData = new Uint8Array(await response.arrayBuffer());\n          } else {\n            cMapData = (0, _util.stringToBytes)(await response.text());\n          }\n\n          return {\n            cMapData,\n            compressionType\n          };\n        });\n      }\n\n      return new Promise((resolve, reject) => {\n        const request = new XMLHttpRequest();\n        request.open(\"GET\", url, true);\n\n        if (this.isCompressed) {\n          request.responseType = \"arraybuffer\";\n        }\n\n        request.onreadystatechange = () => {\n          if (request.readyState !== XMLHttpRequest.DONE) {\n            return;\n          }\n\n          if (request.status === 200 || request.status === 0) {\n            let cMapData;\n\n            if (this.isCompressed && request.response) {\n              cMapData = new Uint8Array(request.response);\n            } else if (!this.isCompressed && request.responseText) {\n              cMapData = (0, _util.stringToBytes)(request.responseText);\n            }\n\n            if (cMapData) {\n              resolve({\n                cMapData,\n                compressionType\n              });\n              return;\n            }\n          }\n\n          reject(new Error(request.statusText));\n        };\n\n        request.send(null);\n      });\n    }\n\n  }\n\n  exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n\n  class DOMSVGFactory {\n    create(width, height) {\n      (0, _util.assert)(width > 0 && height > 0, \"Invalid SVG dimensions\");\n      const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n      svg.setAttribute(\"version\", \"1.1\");\n      svg.setAttribute(\"width\", width + \"px\");\n      svg.setAttribute(\"height\", height + \"px\");\n      svg.setAttribute(\"preserveAspectRatio\", \"none\");\n      svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n      return svg;\n    }\n\n    createElement(type) {\n      (0, _util.assert)(typeof type === \"string\", \"Invalid SVG element type\");\n      return document.createElementNS(SVG_NS, type);\n    }\n\n  }\n\n  exports.DOMSVGFactory = DOMSVGFactory;\n\n  class PageViewport {\n    constructor({\n      viewBox,\n      scale,\n      rotation,\n      offsetX = 0,\n      offsetY = 0,\n      dontFlip = false\n    }) {\n      this.viewBox = viewBox;\n      this.scale = scale;\n      this.rotation = rotation;\n      this.offsetX = offsetX;\n      this.offsetY = offsetY;\n      const centerX = (viewBox[2] + viewBox[0]) / 2;\n      const centerY = (viewBox[3] + viewBox[1]) / 2;\n      let rotateA, rotateB, rotateC, rotateD;\n      rotation = rotation % 360;\n      rotation = rotation < 0 ? rotation + 360 : rotation;\n\n      switch (rotation) {\n        case 180:\n          rotateA = -1;\n          rotateB = 0;\n          rotateC = 0;\n          rotateD = 1;\n          break;\n\n        case 90:\n          rotateA = 0;\n          rotateB = 1;\n          rotateC = 1;\n          rotateD = 0;\n          break;\n\n        case 270:\n          rotateA = 0;\n          rotateB = -1;\n          rotateC = -1;\n          rotateD = 0;\n          break;\n\n        case 0:\n          rotateA = 1;\n          rotateB = 0;\n          rotateC = 0;\n          rotateD = -1;\n          break;\n\n        default:\n          throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n      }\n\n      if (dontFlip) {\n        rotateC = -rotateC;\n        rotateD = -rotateD;\n      }\n\n      let offsetCanvasX, offsetCanvasY;\n      let width, height;\n\n      if (rotateA === 0) {\n        offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n        offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n        width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n        height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      } else {\n        offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n        offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n        width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n        height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      }\n\n      this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n      this.width = width;\n      this.height = height;\n    }\n\n    clone({\n      scale = this.scale,\n      rotation = this.rotation,\n      offsetX = this.offsetX,\n      offsetY = this.offsetY,\n      dontFlip = false\n    } = {}) {\n      return new PageViewport({\n        viewBox: this.viewBox.slice(),\n        scale,\n        rotation,\n        offsetX,\n        offsetY,\n        dontFlip\n      });\n    }\n\n    convertToViewportPoint(x, y) {\n      return _util.Util.applyTransform([x, y], this.transform);\n    }\n\n    convertToViewportRectangle(rect) {\n      const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n\n      const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n\n      return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n    }\n\n    convertToPdfPoint(x, y) {\n      return _util.Util.applyInverseTransform([x, y], this.transform);\n    }\n\n  }\n\n  exports.PageViewport = PageViewport;\n\n  class RenderingCancelledException extends _util.BaseException {\n    constructor(msg, type) {\n      super(msg);\n      this.type = type;\n    }\n\n  }\n\n  exports.RenderingCancelledException = RenderingCancelledException;\n  const LinkTarget = {\n    NONE: 0,\n    SELF: 1,\n    BLANK: 2,\n    PARENT: 3,\n    TOP: 4\n  };\n  exports.LinkTarget = LinkTarget;\n\n  function addLinkAttributes(link, {\n    url,\n    target,\n    rel,\n    enabled = true\n  } = {}) {\n    (0, _util.assert)(url && typeof url === \"string\", 'addLinkAttributes: A valid \"url\" parameter must provided.');\n    const urlNullRemoved = (0, _util.removeNullCharacters)(url);\n\n    if (enabled) {\n      link.href = link.title = urlNullRemoved;\n    } else {\n      link.href = \"\";\n      link.title = `Disabled: ${urlNullRemoved}`;\n\n      link.onclick = () => {\n        return false;\n      };\n    }\n\n    let targetStr = \"\";\n\n    switch (target) {\n      case LinkTarget.NONE:\n        break;\n\n      case LinkTarget.SELF:\n        targetStr = \"_self\";\n        break;\n\n      case LinkTarget.BLANK:\n        targetStr = \"_blank\";\n        break;\n\n      case LinkTarget.PARENT:\n        targetStr = \"_parent\";\n        break;\n\n      case LinkTarget.TOP:\n        targetStr = \"_top\";\n        break;\n    }\n\n    link.target = targetStr;\n    link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n  }\n\n  function getFilenameFromUrl(url) {\n    const anchor = url.indexOf(\"#\");\n    const query = url.indexOf(\"?\");\n    const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n    return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n  }\n\n  class StatTimer {\n    constructor() {\n      this.started = Object.create(null);\n      this.times = [];\n    }\n\n    time(name) {\n      if (name in this.started) {\n        (0, _util.warn)(`Timer is already running for ${name}`);\n      }\n\n      this.started[name] = Date.now();\n    }\n\n    timeEnd(name) {\n      if (!(name in this.started)) {\n        (0, _util.warn)(`Timer has not been started for ${name}`);\n      }\n\n      this.times.push({\n        name,\n        start: this.started[name],\n        end: Date.now()\n      });\n      delete this.started[name];\n    }\n\n    toString() {\n      const outBuf = [];\n      let longest = 0;\n\n      for (const time of this.times) {\n        const name = time.name;\n\n        if (name.length > longest) {\n          longest = name.length;\n        }\n      }\n\n      for (const time of this.times) {\n        const duration = time.end - time.start;\n        outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n      }\n\n      return outBuf.join(\"\");\n    }\n\n  }\n\n  exports.StatTimer = StatTimer;\n\n  function isFetchSupported() {\n    return typeof fetch !== \"undefined\" && typeof Response !== \"undefined\" && \"body\" in Response.prototype && typeof ReadableStream !== \"undefined\";\n  }\n\n  function isValidFetchUrl(url, baseUrl) {\n    try {\n      const {\n        protocol\n      } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n      return protocol === \"http:\" || protocol === \"https:\";\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  function loadScript(src, removeScriptElement = false) {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n\n      script.onload = function (evt) {\n        if (removeScriptElement) {\n          script.remove();\n        }\n\n        resolve(evt);\n      };\n\n      script.onerror = function () {\n        reject(new Error(`Cannot load script at: ${script.src}`));\n      };\n\n      (document.head || document.documentElement).appendChild(script);\n    });\n  }\n\n  function deprecated(details) {\n    console.log(\"Deprecated API usage: \" + details);\n  }\n\n  let pdfDateStringRegex;\n\n  class PDFDateString {\n    static toDateObject(input) {\n      if (!input || !(0, _util.isString)(input)) {\n        return null;\n      }\n\n      if (!pdfDateStringRegex) {\n        pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n      }\n\n      const matches = pdfDateStringRegex.exec(input);\n\n      if (!matches) {\n        return null;\n      }\n\n      const year = parseInt(matches[1], 10);\n      let month = parseInt(matches[2], 10);\n      month = month >= 1 && month <= 12 ? month - 1 : 0;\n      let day = parseInt(matches[3], 10);\n      day = day >= 1 && day <= 31 ? day : 1;\n      let hour = parseInt(matches[4], 10);\n      hour = hour >= 0 && hour <= 23 ? hour : 0;\n      let minute = parseInt(matches[5], 10);\n      minute = minute >= 0 && minute <= 59 ? minute : 0;\n      let second = parseInt(matches[6], 10);\n      second = second >= 0 && second <= 59 ? second : 0;\n      const universalTimeRelation = matches[7] || \"Z\";\n      let offsetHour = parseInt(matches[8], 10);\n      offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n      let offsetMinute = parseInt(matches[9], 10) || 0;\n      offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n      if (universalTimeRelation === \"-\") {\n        hour += offsetHour;\n        minute += offsetMinute;\n      } else if (universalTimeRelation === \"+\") {\n        hour -= offsetHour;\n        minute -= offsetMinute;\n      }\n\n      return new Date(Date.UTC(year, month, day, hour, minute, second));\n    }\n\n  }\n\n  exports.PDFDateString = PDFDateString;\n\n  /***/ }),\n  /* 2 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.arrayByteLength = arrayByteLength;\n  exports.arraysToBytes = arraysToBytes;\n  exports.assert = assert;\n  exports.bytesToString = bytesToString;\n  exports.createPromiseCapability = createPromiseCapability;\n  exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n  exports.encodeToXmlString = encodeToXmlString;\n  exports.escapeString = escapeString;\n  exports.getModificationDate = getModificationDate;\n  exports.getVerbosityLevel = getVerbosityLevel;\n  exports.info = info;\n  exports.isArrayBuffer = isArrayBuffer;\n  exports.isArrayEqual = isArrayEqual;\n  exports.isAscii = isAscii;\n  exports.isBool = isBool;\n  exports.isNum = isNum;\n  exports.isSameOrigin = isSameOrigin;\n  exports.isString = isString;\n  exports.objectFromEntries = objectFromEntries;\n  exports.objectSize = objectSize;\n  exports.removeNullCharacters = removeNullCharacters;\n  exports.setVerbosityLevel = setVerbosityLevel;\n  exports.shadow = shadow;\n  exports.string32 = string32;\n  exports.stringToBytes = stringToBytes;\n  exports.stringToPDFString = stringToPDFString;\n  exports.stringToUTF16BEString = stringToUTF16BEString;\n  exports.stringToUTF8String = stringToUTF8String;\n  exports.unreachable = unreachable;\n  exports.utf8StringToString = utf8StringToString;\n  exports.warn = warn;\n  exports.VerbosityLevel = exports.Util = exports.UNSUPPORTED_FEATURES = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.IsLittleEndianCached = exports.IsEvalSupportedCached = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FontType = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.createObjectURL = exports.CMapCompressionType = exports.BaseException = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0;\n\n  __w_pdfjs_require__(3);\n\n  const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n  exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n  const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n  exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n  const PermissionFlag = {\n    PRINT: 0x04,\n    MODIFY_CONTENTS: 0x08,\n    COPY: 0x10,\n    MODIFY_ANNOTATIONS: 0x20,\n    FILL_INTERACTIVE_FORMS: 0x100,\n    COPY_FOR_ACCESSIBILITY: 0x200,\n    ASSEMBLE: 0x400,\n    PRINT_HIGH_QUALITY: 0x800\n  };\n  exports.PermissionFlag = PermissionFlag;\n  const TextRenderingMode = {\n    FILL: 0,\n    STROKE: 1,\n    FILL_STROKE: 2,\n    INVISIBLE: 3,\n    FILL_ADD_TO_PATH: 4,\n    STROKE_ADD_TO_PATH: 5,\n    FILL_STROKE_ADD_TO_PATH: 6,\n    ADD_TO_PATH: 7,\n    FILL_STROKE_MASK: 3,\n    ADD_TO_PATH_FLAG: 4\n  };\n  exports.TextRenderingMode = TextRenderingMode;\n  const ImageKind = {\n    GRAYSCALE_1BPP: 1,\n    RGB_24BPP: 2,\n    RGBA_32BPP: 3\n  };\n  exports.ImageKind = ImageKind;\n  const AnnotationType = {\n    TEXT: 1,\n    LINK: 2,\n    FREETEXT: 3,\n    LINE: 4,\n    SQUARE: 5,\n    CIRCLE: 6,\n    POLYGON: 7,\n    POLYLINE: 8,\n    HIGHLIGHT: 9,\n    UNDERLINE: 10,\n    SQUIGGLY: 11,\n    STRIKEOUT: 12,\n    STAMP: 13,\n    CARET: 14,\n    INK: 15,\n    POPUP: 16,\n    FILEATTACHMENT: 17,\n    SOUND: 18,\n    MOVIE: 19,\n    WIDGET: 20,\n    SCREEN: 21,\n    PRINTERMARK: 22,\n    TRAPNET: 23,\n    WATERMARK: 24,\n    THREED: 25,\n    REDACT: 26\n  };\n  exports.AnnotationType = AnnotationType;\n  const AnnotationStateModelType = {\n    MARKED: \"Marked\",\n    REVIEW: \"Review\"\n  };\n  exports.AnnotationStateModelType = AnnotationStateModelType;\n  const AnnotationMarkedState = {\n    MARKED: \"Marked\",\n    UNMARKED: \"Unmarked\"\n  };\n  exports.AnnotationMarkedState = AnnotationMarkedState;\n  const AnnotationReviewState = {\n    ACCEPTED: \"Accepted\",\n    REJECTED: \"Rejected\",\n    CANCELLED: \"Cancelled\",\n    COMPLETED: \"Completed\",\n    NONE: \"None\"\n  };\n  exports.AnnotationReviewState = AnnotationReviewState;\n  const AnnotationReplyType = {\n    GROUP: \"Group\",\n    REPLY: \"R\"\n  };\n  exports.AnnotationReplyType = AnnotationReplyType;\n  const AnnotationFlag = {\n    INVISIBLE: 0x01,\n    HIDDEN: 0x02,\n    PRINT: 0x04,\n    NOZOOM: 0x08,\n    NOROTATE: 0x10,\n    NOVIEW: 0x20,\n    READONLY: 0x40,\n    LOCKED: 0x80,\n    TOGGLENOVIEW: 0x100,\n    LOCKEDCONTENTS: 0x200\n  };\n  exports.AnnotationFlag = AnnotationFlag;\n  const AnnotationFieldFlag = {\n    READONLY: 0x0000001,\n    REQUIRED: 0x0000002,\n    NOEXPORT: 0x0000004,\n    MULTILINE: 0x0001000,\n    PASSWORD: 0x0002000,\n    NOTOGGLETOOFF: 0x0004000,\n    RADIO: 0x0008000,\n    PUSHBUTTON: 0x0010000,\n    COMBO: 0x0020000,\n    EDIT: 0x0040000,\n    SORT: 0x0080000,\n    FILESELECT: 0x0100000,\n    MULTISELECT: 0x0200000,\n    DONOTSPELLCHECK: 0x0400000,\n    DONOTSCROLL: 0x0800000,\n    COMB: 0x1000000,\n    RICHTEXT: 0x2000000,\n    RADIOSINUNISON: 0x2000000,\n    COMMITONSELCHANGE: 0x4000000\n  };\n  exports.AnnotationFieldFlag = AnnotationFieldFlag;\n  const AnnotationBorderStyleType = {\n    SOLID: 1,\n    DASHED: 2,\n    BEVELED: 3,\n    INSET: 4,\n    UNDERLINE: 5\n  };\n  exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n  const AnnotationActionEventType = {\n    E: \"Mouse Enter\",\n    X: \"Mouse Exit\",\n    D: \"Mouse Down\",\n    U: \"Mouse Up\",\n    Fo: \"Focus\",\n    Bl: \"Blur\",\n    PO: \"PageOpen\",\n    PC: \"PageClose\",\n    PV: \"PageVisible\",\n    PI: \"PageInvisible\",\n    K: \"Keystroke\",\n    F: \"Format\",\n    V: \"Validate\",\n    C: \"Calculate\"\n  };\n  exports.AnnotationActionEventType = AnnotationActionEventType;\n  const DocumentActionEventType = {\n    WC: \"WillClose\",\n    WS: \"WillSave\",\n    DS: \"DidSave\",\n    WP: \"WillPrint\",\n    DP: \"DidPrint\"\n  };\n  exports.DocumentActionEventType = DocumentActionEventType;\n  const PageActionEventType = {\n    O: \"PageOpen\",\n    C: \"PageClose\"\n  };\n  exports.PageActionEventType = PageActionEventType;\n  const StreamType = {\n    UNKNOWN: \"UNKNOWN\",\n    FLATE: \"FLATE\",\n    LZW: \"LZW\",\n    DCT: \"DCT\",\n    JPX: \"JPX\",\n    JBIG: \"JBIG\",\n    A85: \"A85\",\n    AHX: \"AHX\",\n    CCF: \"CCF\",\n    RLX: \"RLX\"\n  };\n  exports.StreamType = StreamType;\n  const FontType = {\n    UNKNOWN: \"UNKNOWN\",\n    TYPE1: \"TYPE1\",\n    TYPE1C: \"TYPE1C\",\n    CIDFONTTYPE0: \"CIDFONTTYPE0\",\n    CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n    TRUETYPE: \"TRUETYPE\",\n    CIDFONTTYPE2: \"CIDFONTTYPE2\",\n    TYPE3: \"TYPE3\",\n    OPENTYPE: \"OPENTYPE\",\n    TYPE0: \"TYPE0\",\n    MMTYPE1: \"MMTYPE1\"\n  };\n  exports.FontType = FontType;\n  const VerbosityLevel = {\n    ERRORS: 0,\n    WARNINGS: 1,\n    INFOS: 5\n  };\n  exports.VerbosityLevel = VerbosityLevel;\n  const CMapCompressionType = {\n    NONE: 0,\n    BINARY: 1,\n    STREAM: 2\n  };\n  exports.CMapCompressionType = CMapCompressionType;\n  const OPS = {\n    dependency: 1,\n    setLineWidth: 2,\n    setLineCap: 3,\n    setLineJoin: 4,\n    setMiterLimit: 5,\n    setDash: 6,\n    setRenderingIntent: 7,\n    setFlatness: 8,\n    setGState: 9,\n    save: 10,\n    restore: 11,\n    transform: 12,\n    moveTo: 13,\n    lineTo: 14,\n    curveTo: 15,\n    curveTo2: 16,\n    curveTo3: 17,\n    closePath: 18,\n    rectangle: 19,\n    stroke: 20,\n    closeStroke: 21,\n    fill: 22,\n    eoFill: 23,\n    fillStroke: 24,\n    eoFillStroke: 25,\n    closeFillStroke: 26,\n    closeEOFillStroke: 27,\n    endPath: 28,\n    clip: 29,\n    eoClip: 30,\n    beginText: 31,\n    endText: 32,\n    setCharSpacing: 33,\n    setWordSpacing: 34,\n    setHScale: 35,\n    setLeading: 36,\n    setFont: 37,\n    setTextRenderingMode: 38,\n    setTextRise: 39,\n    moveText: 40,\n    setLeadingMoveText: 41,\n    setTextMatrix: 42,\n    nextLine: 43,\n    showText: 44,\n    showSpacedText: 45,\n    nextLineShowText: 46,\n    nextLineSetSpacingShowText: 47,\n    setCharWidth: 48,\n    setCharWidthAndBounds: 49,\n    setStrokeColorSpace: 50,\n    setFillColorSpace: 51,\n    setStrokeColor: 52,\n    setStrokeColorN: 53,\n    setFillColor: 54,\n    setFillColorN: 55,\n    setStrokeGray: 56,\n    setFillGray: 57,\n    setStrokeRGBColor: 58,\n    setFillRGBColor: 59,\n    setStrokeCMYKColor: 60,\n    setFillCMYKColor: 61,\n    shadingFill: 62,\n    beginInlineImage: 63,\n    beginImageData: 64,\n    endInlineImage: 65,\n    paintXObject: 66,\n    markPoint: 67,\n    markPointProps: 68,\n    beginMarkedContent: 69,\n    beginMarkedContentProps: 70,\n    endMarkedContent: 71,\n    beginCompat: 72,\n    endCompat: 73,\n    paintFormXObjectBegin: 74,\n    paintFormXObjectEnd: 75,\n    beginGroup: 76,\n    endGroup: 77,\n    beginAnnotations: 78,\n    endAnnotations: 79,\n    beginAnnotation: 80,\n    endAnnotation: 81,\n    paintJpegXObject: 82,\n    paintImageMaskXObject: 83,\n    paintImageMaskXObjectGroup: 84,\n    paintImageXObject: 85,\n    paintInlineImageXObject: 86,\n    paintInlineImageXObjectGroup: 87,\n    paintImageXObjectRepeat: 88,\n    paintImageMaskXObjectRepeat: 89,\n    paintSolidColorImageMask: 90,\n    constructPath: 91\n  };\n  exports.OPS = OPS;\n  const UNSUPPORTED_FEATURES = {\n    unknown: \"unknown\",\n    forms: \"forms\",\n    javaScript: \"javaScript\",\n    smask: \"smask\",\n    shadingPattern: \"shadingPattern\",\n    font: \"font\",\n    errorTilingPattern: \"errorTilingPattern\",\n    errorExtGState: \"errorExtGState\",\n    errorXObject: \"errorXObject\",\n    errorFontLoadType3: \"errorFontLoadType3\",\n    errorFontState: \"errorFontState\",\n    errorFontMissing: \"errorFontMissing\",\n    errorFontTranslate: \"errorFontTranslate\",\n    errorColorSpace: \"errorColorSpace\",\n    errorOperatorList: \"errorOperatorList\",\n    errorFontToUnicode: \"errorFontToUnicode\",\n    errorFontLoadNative: \"errorFontLoadNative\",\n    errorFontGetPath: \"errorFontGetPath\",\n    errorMarkedContent: \"errorMarkedContent\"\n  };\n  exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n  const PasswordResponses = {\n    NEED_PASSWORD: 1,\n    INCORRECT_PASSWORD: 2\n  };\n  exports.PasswordResponses = PasswordResponses;\n  let verbosity = VerbosityLevel.WARNINGS;\n\n  function setVerbosityLevel(level) {\n    if (Number.isInteger(level)) {\n      verbosity = level;\n    }\n  }\n\n  function getVerbosityLevel() {\n    return verbosity;\n  }\n\n  function info(msg) {\n    if (verbosity >= VerbosityLevel.INFOS) {\n      console.log(`Info: ${msg}`);\n    }\n  }\n\n  function warn(msg) {\n    if (verbosity >= VerbosityLevel.WARNINGS) {\n      console.log(`Warning: ${msg}`);\n    }\n  }\n\n  function unreachable(msg) {\n    throw new Error(msg);\n  }\n\n  function assert(cond, msg) {\n    if (!cond) {\n      unreachable(msg);\n    }\n  }\n\n  function isSameOrigin(baseUrl, otherUrl) {\n    let base;\n\n    try {\n      base = new URL(baseUrl);\n\n      if (!base.origin || base.origin === \"null\") {\n        return false;\n      }\n    } catch (e) {\n      return false;\n    }\n\n    const other = new URL(otherUrl, base);\n    return base.origin === other.origin;\n  }\n\n  function _isValidProtocol(url) {\n    if (!url) {\n      return false;\n    }\n\n    switch (url.protocol) {\n      case \"http:\":\n      case \"https:\":\n      case \"ftp:\":\n      case \"mailto:\":\n      case \"tel:\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  function createValidAbsoluteUrl(url, baseUrl) {\n    if (!url) {\n      return null;\n    }\n\n    try {\n      const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\n      if (_isValidProtocol(absoluteUrl)) {\n        return absoluteUrl;\n      }\n    } catch (ex) {}\n\n    return null;\n  }\n\n  function shadow(obj, prop, value) {\n    Object.defineProperty(obj, prop, {\n      value,\n      enumerable: true,\n      configurable: true,\n      writable: false\n    });\n    return value;\n  }\n\n  const BaseException = function BaseExceptionClosure() {\n    function BaseException(message) {\n      if (this.constructor === BaseException) {\n        unreachable(\"Cannot initialize BaseException.\");\n      }\n\n      this.message = message;\n      this.name = this.constructor.name;\n    }\n\n    BaseException.prototype = new Error();\n    BaseException.constructor = BaseException;\n    return BaseException;\n  }();\n\n  exports.BaseException = BaseException;\n\n  class PasswordException extends BaseException {\n    constructor(msg, code) {\n      super(msg);\n      this.code = code;\n    }\n\n  }\n\n  exports.PasswordException = PasswordException;\n\n  class UnknownErrorException extends BaseException {\n    constructor(msg, details) {\n      super(msg);\n      this.details = details;\n    }\n\n  }\n\n  exports.UnknownErrorException = UnknownErrorException;\n\n  class InvalidPDFException extends BaseException {}\n\n  exports.InvalidPDFException = InvalidPDFException;\n\n  class MissingPDFException extends BaseException {}\n\n  exports.MissingPDFException = MissingPDFException;\n\n  class UnexpectedResponseException extends BaseException {\n    constructor(msg, status) {\n      super(msg);\n      this.status = status;\n    }\n\n  }\n\n  exports.UnexpectedResponseException = UnexpectedResponseException;\n\n  class FormatError extends BaseException {}\n\n  exports.FormatError = FormatError;\n\n  class AbortException extends BaseException {}\n\n  exports.AbortException = AbortException;\n  const NullCharactersRegExp = /\\x00/g;\n\n  function removeNullCharacters(str) {\n    if (typeof str !== \"string\") {\n      warn(\"The argument for removeNullCharacters must be a string.\");\n      return str;\n    }\n\n    return str.replace(NullCharactersRegExp, \"\");\n  }\n\n  function bytesToString(bytes) {\n    assert(bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined, \"Invalid argument for bytesToString\");\n    const length = bytes.length;\n    const MAX_ARGUMENT_COUNT = 8192;\n\n    if (length < MAX_ARGUMENT_COUNT) {\n      return String.fromCharCode.apply(null, bytes);\n    }\n\n    const strBuf = [];\n\n    for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n      const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n      const chunk = bytes.subarray(i, chunkEnd);\n      strBuf.push(String.fromCharCode.apply(null, chunk));\n    }\n\n    return strBuf.join(\"\");\n  }\n\n  function stringToBytes(str) {\n    assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n    const length = str.length;\n    const bytes = new Uint8Array(length);\n\n    for (let i = 0; i < length; ++i) {\n      bytes[i] = str.charCodeAt(i) & 0xff;\n    }\n\n    return bytes;\n  }\n\n  function arrayByteLength(arr) {\n    if (arr.length !== undefined) {\n      return arr.length;\n    }\n\n    assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n    return arr.byteLength;\n  }\n\n  function arraysToBytes(arr) {\n    const length = arr.length;\n\n    if (length === 1 && arr[0] instanceof Uint8Array) {\n      return arr[0];\n    }\n\n    let resultLength = 0;\n\n    for (let i = 0; i < length; i++) {\n      resultLength += arrayByteLength(arr[i]);\n    }\n\n    let pos = 0;\n    const data = new Uint8Array(resultLength);\n\n    for (let i = 0; i < length; i++) {\n      let item = arr[i];\n\n      if (!(item instanceof Uint8Array)) {\n        if (typeof item === \"string\") {\n          item = stringToBytes(item);\n        } else {\n          item = new Uint8Array(item);\n        }\n      }\n\n      const itemLength = item.byteLength;\n      data.set(item, pos);\n      pos += itemLength;\n    }\n\n    return data;\n  }\n\n  function string32(value) {\n    return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n  }\n\n  function objectSize(obj) {\n    return Object.keys(obj).length;\n  }\n\n  function objectFromEntries(iterable) {\n    return Object.assign(Object.create(null), Object.fromEntries(iterable));\n  }\n\n  function isLittleEndian() {\n    const buffer8 = new Uint8Array(4);\n    buffer8[0] = 1;\n    const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n    return view32[0] === 1;\n  }\n\n  const IsLittleEndianCached = {\n    get value() {\n      return shadow(this, \"value\", isLittleEndian());\n    }\n\n  };\n  exports.IsLittleEndianCached = IsLittleEndianCached;\n\n  function isEvalSupported() {\n    try {\n      new Function(\"\");\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const IsEvalSupportedCached = {\n    get value() {\n      return shadow(this, \"value\", isEvalSupported());\n    }\n\n  };\n  exports.IsEvalSupportedCached = IsEvalSupportedCached;\n  const hexNumbers = [...Array(256).keys()].map(n => n.toString(16).padStart(2, \"0\"));\n\n  class Util {\n    static makeHexColor(r, g, b) {\n      return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n    }\n\n    static transform(m1, m2) {\n      return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n    }\n\n    static applyTransform(p, m) {\n      const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n      const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n      return [xt, yt];\n    }\n\n    static applyInverseTransform(p, m) {\n      const d = m[0] * m[3] - m[1] * m[2];\n      const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n      const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n      return [xt, yt];\n    }\n\n    static getAxialAlignedBoundingBox(r, m) {\n      const p1 = Util.applyTransform(r, m);\n      const p2 = Util.applyTransform(r.slice(2, 4), m);\n      const p3 = Util.applyTransform([r[0], r[3]], m);\n      const p4 = Util.applyTransform([r[2], r[1]], m);\n      return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n    }\n\n    static inverseTransform(m) {\n      const d = m[0] * m[3] - m[1] * m[2];\n      return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n    }\n\n    static apply3dTransform(m, v) {\n      return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n    }\n\n    static singularValueDecompose2dScale(m) {\n      const transpose = [m[0], m[2], m[1], m[3]];\n      const a = m[0] * transpose[0] + m[1] * transpose[2];\n      const b = m[0] * transpose[1] + m[1] * transpose[3];\n      const c = m[2] * transpose[0] + m[3] * transpose[2];\n      const d = m[2] * transpose[1] + m[3] * transpose[3];\n      const first = (a + d) / 2;\n      const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n      const sx = first + second || 1;\n      const sy = first - second || 1;\n      return [Math.sqrt(sx), Math.sqrt(sy)];\n    }\n\n    static normalizeRect(rect) {\n      const r = rect.slice(0);\n\n      if (rect[0] > rect[2]) {\n        r[0] = rect[2];\n        r[2] = rect[0];\n      }\n\n      if (rect[1] > rect[3]) {\n        r[1] = rect[3];\n        r[3] = rect[1];\n      }\n\n      return r;\n    }\n\n    static intersect(rect1, rect2) {\n      function compare(a, b) {\n        return a - b;\n      }\n\n      const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n      const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n      const result = [];\n      rect1 = Util.normalizeRect(rect1);\n      rect2 = Util.normalizeRect(rect2);\n\n      if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n        result[0] = orderedX[1];\n        result[2] = orderedX[2];\n      } else {\n        return null;\n      }\n\n      if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n        result[1] = orderedY[1];\n        result[3] = orderedY[2];\n      } else {\n        return null;\n      }\n\n      return result;\n    }\n\n  }\n\n  exports.Util = Util;\n  const PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n\n  function stringToPDFString(str) {\n    const length = str.length,\n          strBuf = [];\n\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      for (let i = 2; i < length; i += 2) {\n        strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n      }\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      for (let i = 2; i < length; i += 2) {\n        strBuf.push(String.fromCharCode(str.charCodeAt(i + 1) << 8 | str.charCodeAt(i)));\n      }\n    } else {\n      for (let i = 0; i < length; ++i) {\n        const code = PDFStringTranslateTable[str.charCodeAt(i)];\n        strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n      }\n    }\n\n    return strBuf.join(\"\");\n  }\n\n  function escapeString(str) {\n    return str.replace(/([()\\\\\\n\\r])/g, match => {\n      if (match === \"\\n\") {\n        return \"\\\\n\";\n      } else if (match === \"\\r\") {\n        return \"\\\\r\";\n      }\n\n      return `\\\\${match}`;\n    });\n  }\n\n  function isAscii(str) {\n    return /^[\\x00-\\x7F]*$/.test(str);\n  }\n\n  function stringToUTF16BEString(str) {\n    const buf = [\"\\xFE\\xFF\"];\n\n    for (let i = 0, ii = str.length; i < ii; i++) {\n      const char = str.charCodeAt(i);\n      buf.push(String.fromCharCode(char >> 8 & 0xff));\n      buf.push(String.fromCharCode(char & 0xff));\n    }\n\n    return buf.join(\"\");\n  }\n\n  function stringToUTF8String(str) {\n    return decodeURIComponent(escape(str));\n  }\n\n  function utf8StringToString(str) {\n    return unescape(encodeURIComponent(str));\n  }\n\n  function isBool(v) {\n    return typeof v === \"boolean\";\n  }\n\n  function isNum(v) {\n    return typeof v === \"number\";\n  }\n\n  function isString(v) {\n    return typeof v === \"string\";\n  }\n\n  function isArrayBuffer(v) {\n    return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n  }\n\n  function isArrayEqual(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n      return false;\n    }\n\n    return arr1.every(function (element, index) {\n      return element === arr2[index];\n    });\n  }\n\n  function getModificationDate(date = new Date()) {\n    const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n    return buffer.join(\"\");\n  }\n\n  function createPromiseCapability() {\n    const capability = Object.create(null);\n    let isSettled = false;\n    Object.defineProperty(capability, \"settled\", {\n      get() {\n        return isSettled;\n      }\n\n    });\n    capability.promise = new Promise(function (resolve, reject) {\n      capability.resolve = function (data) {\n        isSettled = true;\n        resolve(data);\n      };\n\n      capability.reject = function (reason) {\n        isSettled = true;\n        reject(reason);\n      };\n    });\n    return capability;\n  }\n\n  const createObjectURL = function createObjectURLClosure() {\n    const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    return function createObjectURL(data, contentType, forceDataSchema = false) {\n      if (!forceDataSchema && URL.createObjectURL) {\n        const blob = new Blob([data], {\n          type: contentType\n        });\n        return URL.createObjectURL(blob);\n      }\n\n      let buffer = `data:${contentType};base64,`;\n\n      for (let i = 0, ii = data.length; i < ii; i += 3) {\n        const b1 = data[i] & 0xff;\n        const b2 = data[i + 1] & 0xff;\n        const b3 = data[i + 2] & 0xff;\n        const d1 = b1 >> 2,\n              d2 = (b1 & 3) << 4 | b2 >> 4;\n        const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n        const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n        buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n      }\n\n      return buffer;\n    };\n  }();\n\n  exports.createObjectURL = createObjectURL;\n  const XMLEntities = {\n    0x3c: \"&lt;\",\n    0x3e: \"&gt;\",\n    0x26: \"&amp;\",\n    0x22: \"&quot;\",\n    0x27: \"&apos;\"\n  };\n\n  function encodeToXmlString(str) {\n    const buffer = [];\n    let start = 0;\n\n    for (let i = 0, ii = str.length; i < ii; i++) {\n      const char = str.codePointAt(i);\n\n      if (0x20 <= char && char <= 0x7e) {\n        const entity = XMLEntities[char];\n\n        if (entity) {\n          if (start < i) {\n            buffer.push(str.substring(start, i));\n          }\n\n          buffer.push(entity);\n          start = i + 1;\n        }\n      } else {\n        if (start < i) {\n          buffer.push(str.substring(start, i));\n        }\n\n        buffer.push(`&#x${char.toString(16).toUpperCase()};`);\n\n        if (char > 0xd7ff && (char < 0xe000 || char > 0xfffd)) {\n          i++;\n        }\n\n        start = i + 1;\n      }\n    }\n\n    if (buffer.length === 0) {\n      return str;\n    }\n\n    if (start < str.length) {\n      buffer.push(str.substring(start, str.length));\n    }\n\n    return buffer.join(\"\");\n  }\n\n  /***/ }),\n  /* 3 */\n  /***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n\n\n  var _is_node = __w_pdfjs_require__(4);\n\n  ;\n\n  /***/ }),\n  /* 4 */\n  /***/ ((__unused_webpack_module, exports) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.isNodeJS = void 0;\n  const isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\n  exports.isNodeJS = isNodeJS;\n\n  /***/ }),\n  /* 5 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.getDocument = getDocument;\n  exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n  exports.version = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultCMapReaderFactory = exports.DefaultCanvasFactory = exports.build = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _display_utils = __w_pdfjs_require__(1);\n\n  var _font_loader = __w_pdfjs_require__(6);\n\n  var _node_utils = __w_pdfjs_require__(7);\n\n  var _annotation_storage = __w_pdfjs_require__(8);\n\n  var _api_compatibility = __w_pdfjs_require__(9);\n\n  var _canvas = __w_pdfjs_require__(10);\n\n  var _worker_options = __w_pdfjs_require__(12);\n\n  var _is_node = __w_pdfjs_require__(4);\n\n  var _message_handler = __w_pdfjs_require__(13);\n\n  var _metadata = __w_pdfjs_require__(14);\n\n  var _optional_content_config = __w_pdfjs_require__(16);\n\n  var _transport_stream = __w_pdfjs_require__(17);\n\n  var _webgl = __w_pdfjs_require__(18);\n\n  const DEFAULT_RANGE_CHUNK_SIZE = 65536;\n  const RENDERING_CANCELLED_TIMEOUT = 100;\n  const DefaultCanvasFactory = _is_node.isNodeJS ? _node_utils.NodeCanvasFactory : _display_utils.DOMCanvasFactory;\n  exports.DefaultCanvasFactory = DefaultCanvasFactory;\n  const DefaultCMapReaderFactory = _is_node.isNodeJS ? _node_utils.NodeCMapReaderFactory : _display_utils.DOMCMapReaderFactory;\n  exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;\n  let createPDFNetworkStream;\n\n  function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n    createPDFNetworkStream = pdfNetworkStreamFactory;\n  }\n\n  function getDocument(src) {\n    const task = new PDFDocumentLoadingTask();\n    let source;\n\n    if (typeof src === \"string\") {\n      source = {\n        url: src\n      };\n    } else if ((0, _util.isArrayBuffer)(src)) {\n      source = {\n        data: src\n      };\n    } else if (src instanceof PDFDataRangeTransport) {\n      source = {\n        range: src\n      };\n    } else {\n      if (typeof src !== \"object\") {\n        throw new Error(\"Invalid parameter in getDocument, \" + \"need either Uint8Array, string or a parameter object\");\n      }\n\n      if (!src.url && !src.data && !src.range) {\n        throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n      }\n\n      source = src;\n    }\n\n    const params = Object.create(null);\n    let rangeTransport = null,\n        worker = null;\n\n    for (const key in source) {\n      if (key === \"url\" && typeof window !== \"undefined\") {\n        params[key] = new URL(source[key], window.location).href;\n        continue;\n      } else if (key === \"range\") {\n        rangeTransport = source[key];\n        continue;\n      } else if (key === \"worker\") {\n        worker = source[key];\n        continue;\n      } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n        const pdfBytes = source[key];\n\n        if (typeof pdfBytes === \"string\") {\n          params[key] = (0, _util.stringToBytes)(pdfBytes);\n        } else if (typeof pdfBytes === \"object\" && pdfBytes !== null && !isNaN(pdfBytes.length)) {\n          params[key] = new Uint8Array(pdfBytes);\n        } else if ((0, _util.isArrayBuffer)(pdfBytes)) {\n          params[key] = new Uint8Array(pdfBytes);\n        } else {\n          throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string or array-like object is expected in the \" + \"data property.\");\n        }\n\n        continue;\n      }\n\n      params[key] = source[key];\n    }\n\n    params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n    params.CMapReaderFactory = params.CMapReaderFactory || DefaultCMapReaderFactory;\n    params.ignoreErrors = params.stopAtErrors !== true;\n    params.fontExtraProperties = params.fontExtraProperties === true;\n    params.pdfBug = params.pdfBug === true;\n\n    if (!Number.isInteger(params.maxImageSize)) {\n      params.maxImageSize = -1;\n    }\n\n    if (typeof params.isEvalSupported !== \"boolean\") {\n      params.isEvalSupported = true;\n    }\n\n    if (typeof params.disableFontFace !== \"boolean\") {\n      params.disableFontFace = _api_compatibility.apiCompatibilityParams.disableFontFace || false;\n    }\n\n    if (typeof params.ownerDocument === \"undefined\") {\n      params.ownerDocument = globalThis.document;\n    }\n\n    if (typeof params.disableRange !== \"boolean\") {\n      params.disableRange = false;\n    }\n\n    if (typeof params.disableStream !== \"boolean\") {\n      params.disableStream = false;\n    }\n\n    if (typeof params.disableAutoFetch !== \"boolean\") {\n      params.disableAutoFetch = false;\n    }\n\n    (0, _util.setVerbosityLevel)(params.verbosity);\n\n    if (!worker) {\n      const workerParams = {\n        verbosity: params.verbosity,\n        port: _worker_options.GlobalWorkerOptions.workerPort\n      };\n      worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n      task._worker = worker;\n    }\n\n    const docId = task.docId;\n    worker.promise.then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\n\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n\n        if (rangeTransport) {\n          networkStream = new _transport_stream.PDFDataTransportStream({\n            length: params.length,\n            initialData: params.initialData,\n            progressiveDone: params.progressiveDone,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream\n          }, rangeTransport);\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream\n          });\n        }\n\n        resolve(networkStream);\n      });\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(function ([workerId, networkStream]) {\n        if (task.destroyed) {\n          throw new Error(\"Loading aborted\");\n        }\n\n        const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n        messageHandler.postMessageTransfers = worker.postMessageTransfers;\n        const transport = new WorkerTransport(messageHandler, task, networkStream, params);\n        task._transport = transport;\n        messageHandler.send(\"Ready\", null);\n      });\n    }).catch(task._capability.reject);\n    return task;\n  }\n\n  function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n    if (worker.destroyed) {\n      return Promise.reject(new Error(\"Worker was destroyed\"));\n    }\n\n    if (pdfDataRangeTransport) {\n      source.length = pdfDataRangeTransport.length;\n      source.initialData = pdfDataRangeTransport.initialData;\n      source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    }\n\n    return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion: '2.7.570',\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties\n    }).then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n\n      return workerId;\n    });\n  }\n\n  const PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\n    let nextDocumentId = 0;\n\n    class PDFDocumentLoadingTask {\n      constructor() {\n        this._capability = (0, _util.createPromiseCapability)();\n        this._transport = null;\n        this._worker = null;\n        this.docId = \"d\" + nextDocumentId++;\n        this.destroyed = false;\n        this.onPassword = null;\n        this.onProgress = null;\n        this.onUnsupportedFeature = null;\n      }\n\n      get promise() {\n        return this._capability.promise;\n      }\n\n      destroy() {\n        this.destroyed = true;\n        const transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\n        return transportDestroyed.then(() => {\n          this._transport = null;\n\n          if (this._worker) {\n            this._worker.destroy();\n\n            this._worker = null;\n          }\n        });\n      }\n\n    }\n\n    return PDFDocumentLoadingTask;\n  }();\n\n  class PDFDataRangeTransport {\n    constructor(length, initialData, progressiveDone = false) {\n      this.length = length;\n      this.initialData = initialData;\n      this.progressiveDone = progressiveDone;\n      this._rangeListeners = [];\n      this._progressListeners = [];\n      this._progressiveReadListeners = [];\n      this._progressiveDoneListeners = [];\n      this._readyCapability = (0, _util.createPromiseCapability)();\n    }\n\n    addRangeListener(listener) {\n      this._rangeListeners.push(listener);\n    }\n\n    addProgressListener(listener) {\n      this._progressListeners.push(listener);\n    }\n\n    addProgressiveReadListener(listener) {\n      this._progressiveReadListeners.push(listener);\n    }\n\n    addProgressiveDoneListener(listener) {\n      this._progressiveDoneListeners.push(listener);\n    }\n\n    onDataRange(begin, chunk) {\n      for (const listener of this._rangeListeners) {\n        listener(begin, chunk);\n      }\n    }\n\n    onDataProgress(loaded, total) {\n      this._readyCapability.promise.then(() => {\n        for (const listener of this._progressListeners) {\n          listener(loaded, total);\n        }\n      });\n    }\n\n    onDataProgressiveRead(chunk) {\n      this._readyCapability.promise.then(() => {\n        for (const listener of this._progressiveReadListeners) {\n          listener(chunk);\n        }\n      });\n    }\n\n    onDataProgressiveDone() {\n      this._readyCapability.promise.then(() => {\n        for (const listener of this._progressiveDoneListeners) {\n          listener();\n        }\n      });\n    }\n\n    transportReady() {\n      this._readyCapability.resolve();\n    }\n\n    requestDataRange(begin, end) {\n      (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n    }\n\n    abort() {}\n\n  }\n\n  exports.PDFDataRangeTransport = PDFDataRangeTransport;\n\n  class PDFDocumentProxy {\n    constructor(pdfInfo, transport) {\n      this._pdfInfo = pdfInfo;\n      this._transport = transport;\n    }\n\n    get annotationStorage() {\n      return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n    }\n\n    get numPages() {\n      return this._pdfInfo.numPages;\n    }\n\n    get fingerprint() {\n      return this._pdfInfo.fingerprint;\n    }\n\n    getPage(pageNumber) {\n      return this._transport.getPage(pageNumber);\n    }\n\n    getPageIndex(ref) {\n      return this._transport.getPageIndex(ref);\n    }\n\n    getDestinations() {\n      return this._transport.getDestinations();\n    }\n\n    getDestination(id) {\n      return this._transport.getDestination(id);\n    }\n\n    getPageLabels() {\n      return this._transport.getPageLabels();\n    }\n\n    getPageLayout() {\n      return this._transport.getPageLayout();\n    }\n\n    getPageMode() {\n      return this._transport.getPageMode();\n    }\n\n    getViewerPreferences() {\n      return this._transport.getViewerPreferences();\n    }\n\n    getOpenAction() {\n      return this._transport.getOpenAction();\n    }\n\n    getAttachments() {\n      return this._transport.getAttachments();\n    }\n\n    getJavaScript() {\n      return this._transport.getJavaScript();\n    }\n\n    getJSActions() {\n      return this._transport.getDocJSActions();\n    }\n\n    getOutline() {\n      return this._transport.getOutline();\n    }\n\n    getOptionalContentConfig() {\n      return this._transport.getOptionalContentConfig();\n    }\n\n    getPermissions() {\n      return this._transport.getPermissions();\n    }\n\n    getMetadata() {\n      return this._transport.getMetadata();\n    }\n\n    getMarkInfo() {\n      return this._transport.getMarkInfo();\n    }\n\n    getData() {\n      return this._transport.getData();\n    }\n\n    getDownloadInfo() {\n      return this._transport.downloadInfoCapability.promise;\n    }\n\n    getStats() {\n      return this._transport.getStats();\n    }\n\n    cleanup() {\n      return this._transport.startCleanup();\n    }\n\n    destroy() {\n      return this.loadingTask.destroy();\n    }\n\n    get loadingParams() {\n      return this._transport.loadingParams;\n    }\n\n    get loadingTask() {\n      return this._transport.loadingTask;\n    }\n\n    saveDocument(annotationStorage) {\n      return this._transport.saveDocument(annotationStorage);\n    }\n\n    getFieldObjects() {\n      return this._transport.getFieldObjects();\n    }\n\n    hasJSActions() {\n      return this._transport.hasJSActions();\n    }\n\n    getCalculationOrderIds() {\n      return this._transport.getCalculationOrderIds();\n    }\n\n  }\n\n  exports.PDFDocumentProxy = PDFDocumentProxy;\n\n  class PDFPageProxy {\n    constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n      this._pageIndex = pageIndex;\n      this._pageInfo = pageInfo;\n      this._ownerDocument = ownerDocument;\n      this._transport = transport;\n      this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n      this._pdfBug = pdfBug;\n      this.commonObjs = transport.commonObjs;\n      this.objs = new PDFObjects();\n      this.cleanupAfterRender = false;\n      this.pendingCleanup = false;\n      this._intentStates = new Map();\n      this.destroyed = false;\n    }\n\n    get pageNumber() {\n      return this._pageIndex + 1;\n    }\n\n    get rotate() {\n      return this._pageInfo.rotate;\n    }\n\n    get ref() {\n      return this._pageInfo.ref;\n    }\n\n    get userUnit() {\n      return this._pageInfo.userUnit;\n    }\n\n    get view() {\n      return this._pageInfo.view;\n    }\n\n    getViewport({\n      scale,\n      rotation = this.rotate,\n      offsetX = 0,\n      offsetY = 0,\n      dontFlip = false\n    } = {}) {\n      return new _display_utils.PageViewport({\n        viewBox: this.view,\n        scale,\n        rotation,\n        offsetX,\n        offsetY,\n        dontFlip\n      });\n    }\n\n    getAnnotations({\n      intent = null\n    } = {}) {\n      if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n        this.annotationsPromise = this._transport.getAnnotations(this._pageIndex, intent);\n        this.annotationsIntent = intent;\n      }\n\n      return this.annotationsPromise;\n    }\n\n    getJSActions() {\n      return this._jsActionsPromise || (this._jsActionsPromise = this._transport.getPageJSActions(this._pageIndex));\n    }\n\n    render({\n      canvasContext,\n      viewport,\n      intent = \"display\",\n      enableWebGL = false,\n      renderInteractiveForms = false,\n      transform = null,\n      imageLayer = null,\n      canvasFactory = null,\n      background = null,\n      annotationStorage = null,\n      optionalContentConfigPromise = null\n    }) {\n      if (this._stats) {\n        this._stats.time(\"Overall\");\n      }\n\n      const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n      this.pendingCleanup = false;\n\n      if (!optionalContentConfigPromise) {\n        optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n      }\n\n      let intentState = this._intentStates.get(renderingIntent);\n\n      if (!intentState) {\n        intentState = Object.create(null);\n\n        this._intentStates.set(renderingIntent, intentState);\n      }\n\n      if (intentState.streamReaderCancelTimeout) {\n        clearTimeout(intentState.streamReaderCancelTimeout);\n        intentState.streamReaderCancelTimeout = null;\n      }\n\n      const canvasFactoryInstance = canvasFactory || new DefaultCanvasFactory({\n        ownerDocument: this._ownerDocument\n      });\n      const webGLContext = new _webgl.WebGLContext({\n        enable: enableWebGL\n      });\n\n      if (!intentState.displayReadyCapability) {\n        intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n        intentState.operatorList = {\n          fnArray: [],\n          argsArray: [],\n          lastChunk: false\n        };\n\n        if (this._stats) {\n          this._stats.time(\"Page Request\");\n        }\n\n        this._pumpOperatorList({\n          pageIndex: this._pageIndex,\n          intent: renderingIntent,\n          renderInteractiveForms: renderInteractiveForms === true,\n          annotationStorage: annotationStorage && annotationStorage.getAll() || null  // lwf\n        });\n      }\n\n      const complete = error => {\n        const i = intentState.renderTasks.indexOf(internalRenderTask);\n\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n\n        if (this.cleanupAfterRender || renderingIntent === \"print\") {\n          this.pendingCleanup = true;\n        }\n\n        this._tryCleanup();\n\n        if (error) {\n          internalRenderTask.capability.reject(error);\n\n          this._abortOperatorList({\n            intentState,\n            reason: error\n          });\n        } else {\n          internalRenderTask.capability.resolve();\n        }\n\n        if (this._stats) {\n          this._stats.timeEnd(\"Rendering\");\n\n          this._stats.timeEnd(\"Overall\");\n        }\n      };\n\n      const internalRenderTask = new InternalRenderTask({\n        callback: complete,\n        params: {\n          canvasContext,\n          viewport,\n          transform,\n          imageLayer,\n          background\n        },\n        objs: this.objs,\n        commonObjs: this.commonObjs,\n        operatorList: intentState.operatorList,\n        pageIndex: this._pageIndex,\n        canvasFactory: canvasFactoryInstance,\n        webGLContext,\n        useRequestAnimationFrame: renderingIntent !== \"print\",\n        pdfBug: this._pdfBug\n      });\n\n      if (!intentState.renderTasks) {\n        intentState.renderTasks = [];\n      }\n\n      intentState.renderTasks.push(internalRenderTask);\n      const renderTask = internalRenderTask.task;\n      Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig\n        });\n        internalRenderTask.operatorListChanged();\n      }).catch(complete);\n      return renderTask;\n    }\n\n    getOperatorList() {\n      function operatorListChanged() {\n        if (intentState.operatorList.lastChunk) {\n          intentState.opListReadCapability.resolve(intentState.operatorList);\n          const i = intentState.renderTasks.indexOf(opListTask);\n\n          if (i >= 0) {\n            intentState.renderTasks.splice(i, 1);\n          }\n        }\n      }\n\n      const renderingIntent = \"oplist\";\n\n      let intentState = this._intentStates.get(renderingIntent);\n\n      if (!intentState) {\n        intentState = Object.create(null);\n\n        this._intentStates.set(renderingIntent, intentState);\n      }\n\n      let opListTask;\n\n      if (!intentState.opListReadCapability) {\n        opListTask = Object.create(null);\n        opListTask.operatorListChanged = operatorListChanged;\n        intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n        intentState.renderTasks = [];\n        intentState.renderTasks.push(opListTask);\n        intentState.operatorList = {\n          fnArray: [],\n          argsArray: [],\n          lastChunk: false\n        };\n\n        if (this._stats) {\n          this._stats.time(\"Page Request\");\n        }\n\n        this._pumpOperatorList({\n          pageIndex: this._pageIndex,\n          intent: renderingIntent\n        });\n      }\n\n      return intentState.opListReadCapability.promise;\n    }\n\n    streamTextContent({\n      normalizeWhitespace = false,\n      disableCombineTextItems = false\n    } = {}) {\n      const TEXT_CONTENT_CHUNK_SIZE = 100;\n      return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true\n      }, {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n\n        size(textContent) {\n          return textContent.items.length;\n        }\n\n      });\n    }\n\n    getTextContent(params = {}) {\n      const readableStream = this.streamTextContent(params);\n      return new Promise(function (resolve, reject) {\n        function pump() {\n          reader.read().then(function ({\n            value,\n            done\n          }) {\n            if (done) {\n              resolve(textContent);\n              return;\n            }\n\n            Object.assign(textContent.styles, value.styles);\n            textContent.items.push(...value.items);\n            pump();\n          }, reject);\n        }\n\n        const reader = readableStream.getReader();\n        const textContent = {\n          items: [],\n          styles: Object.create(null)\n        };\n        pump();\n      });\n    }\n\n    _destroy() {\n      this.destroyed = true;\n      this._transport.pageCache[this._pageIndex] = null;\n      const waitOn = [];\n\n      for (const [intent, intentState] of this._intentStates) {\n        this._abortOperatorList({\n          intentState,\n          reason: new Error(\"Page was destroyed.\"),\n          force: true\n        });\n\n        if (intent === \"oplist\") {\n          continue;\n        }\n\n        for (const internalRenderTask of intentState.renderTasks) {\n          waitOn.push(internalRenderTask.completed);\n          internalRenderTask.cancel();\n        }\n      }\n\n      this.objs.clear();\n      this.annotationsPromise = null;\n      this._jsActionsPromise = null;\n      this.pendingCleanup = false;\n      return Promise.all(waitOn);\n    }\n\n    cleanup(resetStats = false) {\n      this.pendingCleanup = true;\n      return this._tryCleanup(resetStats);\n    }\n\n    _tryCleanup(resetStats = false) {\n      if (!this.pendingCleanup) {\n        return false;\n      }\n\n      for (const {\n        renderTasks,\n        operatorList\n      } of this._intentStates.values()) {\n        if (renderTasks.length !== 0 || !operatorList.lastChunk) {\n          return false;\n        }\n      }\n\n      this._intentStates.clear();\n\n      this.objs.clear();\n      this.annotationsPromise = null;\n      this._jsActionsPromise = null;\n\n      if (resetStats && this._stats) {\n        this._stats = new _display_utils.StatTimer();\n      }\n\n      this.pendingCleanup = false;\n      return true;\n    }\n\n    _startRenderPage(transparency, intent) {\n      const intentState = this._intentStates.get(intent);\n\n      if (!intentState) {\n        return;\n      }\n\n      if (this._stats) {\n        this._stats.timeEnd(\"Page Request\");\n      }\n\n      if (intentState.displayReadyCapability) {\n        intentState.displayReadyCapability.resolve(transparency);\n      }\n    }\n\n    _renderPageChunk(operatorListChunk, intentState) {\n      for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n        intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n        intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n      }\n\n      intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n      for (let i = 0; i < intentState.renderTasks.length; i++) {\n        intentState.renderTasks[i].operatorListChanged();\n      }\n\n      if (operatorListChunk.lastChunk) {\n        this._tryCleanup();\n      }\n    }\n\n    _pumpOperatorList(args) {\n      (0, _util.assert)(args.intent, 'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.');\n\n      const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", args);\n\n      const reader = readableStream.getReader();\n\n      const intentState = this._intentStates.get(args.intent);\n\n      intentState.streamReader = reader;\n\n      const pump = () => {\n        reader.read().then(({\n          value,\n          done\n        }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n\n          if (this._transport.destroyed) {\n            return;\n          }\n\n          this._renderPageChunk(value, intentState);\n\n          pump();\n        }, reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return;\n          }\n\n          if (intentState.operatorList) {\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        });\n      };\n\n      pump();\n    }\n\n    _abortOperatorList({\n      intentState,\n      reason,\n      force = false\n    }) {\n      (0, _util.assert)(reason instanceof Error || typeof reason === \"object\" && reason !== null, 'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.');\n\n      if (!intentState.streamReader) {\n        return;\n      }\n\n      if (!force) {\n        if (intentState.renderTasks.length !== 0) {\n          return;\n        }\n\n        if (reason instanceof _display_utils.RenderingCancelledException) {\n          intentState.streamReaderCancelTimeout = setTimeout(() => {\n            this._abortOperatorList({\n              intentState,\n              reason,\n              force: true\n            });\n\n            intentState.streamReaderCancelTimeout = null;\n          }, RENDERING_CANCELLED_TIMEOUT);\n          return;\n        }\n      }\n\n      intentState.streamReader.cancel(new _util.AbortException(reason && reason.message)); // lwf\n      intentState.streamReader = null;\n\n      if (this._transport.destroyed) {\n        return;\n      }\n\n      for (const [intent, curIntentState] of this._intentStates) {\n        if (curIntentState === intentState) {\n          this._intentStates.delete(intent);\n\n          break;\n        }\n      }\n\n      this.cleanup();\n    }\n\n    get stats() {\n      return this._stats;\n    }\n\n  }\n\n  exports.PDFPageProxy = PDFPageProxy;\n\n  class LoopbackPort {\n    constructor(defer = true) {\n      this._listeners = [];\n      this._defer = defer;\n      this._deferred = Promise.resolve(undefined);\n    }\n\n    postMessage(obj, transfers) {\n      function cloneValue(value) {\n        if (typeof value !== \"object\" || value === null) {\n          return value;\n        }\n\n        if (cloned.has(value)) {\n          return cloned.get(value);\n        }\n\n        let buffer, result;\n\n        if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {\n          if (transfers && transfers.includes(buffer)) { // lwf\n            result = new value.constructor(buffer, value.byteOffset, value.byteLength);\n          } else {\n            result = new value.constructor(value);\n          }\n\n          cloned.set(value, result);\n          return result;\n        }\n\n        result = Array.isArray(value) ? [] : {};\n        cloned.set(value, result);\n\n        for (const i in value) {\n          let desc,\n              p = value;\n\n          while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n            p = Object.getPrototypeOf(p);\n          }\n\n          if (typeof desc.value === \"undefined\") {\n            continue;\n          }\n\n          if (typeof desc.value === \"function\") {\n            if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n              throw new Error(`LoopbackPort.postMessage - cannot clone: ${value[i]}`);\n            }\n\n            continue;\n          }\n\n          result[i] = cloneValue(desc.value);\n        }\n\n        return result;\n      }\n\n      if (!this._defer) {\n        this._listeners.forEach(listener => {\n          listener.call(this, {\n            data: obj\n          });\n        });\n\n        return;\n      }\n\n      const cloned = new WeakMap();\n      const e = {\n        data: cloneValue(obj)\n      };\n\n      this._deferred.then(() => {\n        this._listeners.forEach(listener => {\n          listener.call(this, e);\n        });\n      });\n    }\n\n    addEventListener(name, listener) {\n      this._listeners.push(listener);\n    }\n\n    removeEventListener(name, listener) {\n      const i = this._listeners.indexOf(listener);\n\n      this._listeners.splice(i, 1);\n    }\n\n    terminate() {\n      this._listeners.length = 0;\n    }\n\n  }\n\n  exports.LoopbackPort = LoopbackPort;\n\n  const PDFWorker = function PDFWorkerClosure() {\n    const pdfWorkerPorts = new WeakMap();\n    let isWorkerDisabled = false;\n    let fallbackWorkerSrc;\n    let nextFakeWorkerId = 0;\n    let fakeWorkerCapability;\n\n    if (_is_node.isNodeJS && typeof require === \"function\") {\n      isWorkerDisabled = true;\n      fallbackWorkerSrc = \"./skylark-pdfjs-worker-all.js\"; //\"./pdf.worker.js\";\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath = document.currentScript && document.currentScript.src; // lwf\n\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n      }\n    }\n\n    function getWorkerSrc() {\n      if (_worker_options.GlobalWorkerOptions.workerSrc) {\n        return _worker_options.GlobalWorkerOptions.workerSrc;\n      }\n\n      if (typeof fallbackWorkerSrc !== \"undefined\") {\n        if (!_is_node.isNodeJS) {\n          (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n        }\n\n        return fallbackWorkerSrc;\n      }\n\n      throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n    }\n\n    function getMainThreadWorkerMessageHandler() {\n      let mainWorkerMessageHandler;\n\n      try {\n        mainWorkerMessageHandler = globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;  // lwf\n      } catch (ex) {}\n\n      return mainWorkerMessageHandler || null;\n    }\n\n    function setupFakeWorkerGlobal() {\n      if (fakeWorkerCapability) {\n        return fakeWorkerCapability.promise;\n      }\n\n      fakeWorkerCapability = (0, _util.createPromiseCapability)();\n\n      const loader = async function () {\n        const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n        if (mainWorkerMessageHandler) {\n          return mainWorkerMessageHandler;\n        }\n\n        if (_is_node.isNodeJS && typeof require === \"function\") {\n          const worker = eval(\"require\")(getWorkerSrc());\n          return worker.WorkerMessageHandler;\n        }\n\n        await (0, _display_utils.loadScript)(getWorkerSrc());\n        return window.pdfjsWorker.WorkerMessageHandler;\n      };\n\n      loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n      return fakeWorkerCapability.promise;\n    }\n\n    function createCDNWrapper(url) {\n      const wrapper = \"importScripts('\" + url + \"');\";\n      return URL.createObjectURL(new Blob([wrapper]));\n    }\n\n    class PDFWorker {\n      constructor({\n        name = null,\n        port = null,\n        verbosity = (0, _util.getVerbosityLevel)()\n      } = {}) {\n        if (port && pdfWorkerPorts.has(port)) {\n          throw new Error(\"Cannot use more than one PDFWorker per port\");\n        }\n\n        this.name = name;\n        this.destroyed = false;\n        this.postMessageTransfers = true;\n        this.verbosity = verbosity;\n        this._readyCapability = (0, _util.createPromiseCapability)();\n        this._port = null;\n        this._webWorker = null;\n        this._messageHandler = null;\n\n        if (port) {\n          pdfWorkerPorts.set(port, this);\n\n          this._initializeFromPort(port);\n\n          return;\n        }\n\n        this._initialize();\n      }\n\n      get promise() {\n        return this._readyCapability.promise;\n      }\n\n      get port() {\n        return this._port;\n      }\n\n      get messageHandler() {\n        return this._messageHandler;\n      }\n\n      _initializeFromPort(port) {\n        this._port = port;\n        this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n\n        this._messageHandler.on(\"ready\", function () {});\n\n        this._readyCapability.resolve();\n      }\n\n      _initialize() {\n        if (typeof Worker !== \"undefined\" && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {\n          let workerSrc = getWorkerSrc();\n\n          try {\n            if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n              workerSrc = createCDNWrapper(new URL(workerSrc, window.location).href);\n            }\n\n            const worker = new Worker(workerSrc);\n            const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n\n            const terminateEarly = () => {\n              worker.removeEventListener(\"error\", onWorkerError);\n              messageHandler.destroy();\n              worker.terminate();\n\n              if (this.destroyed) {\n                this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n              } else {\n                this._setupFakeWorker();\n              }\n            };\n\n            const onWorkerError = () => {\n              if (!this._webWorker) {\n                terminateEarly();\n              }\n            };\n\n            worker.addEventListener(\"error\", onWorkerError);\n            messageHandler.on(\"test\", data => {\n              worker.removeEventListener(\"error\", onWorkerError);\n\n              if (this.destroyed) {\n                terminateEarly();\n                return;\n              }\n\n              if (data) {\n                this._messageHandler = messageHandler;\n                this._port = worker;\n                this._webWorker = worker;\n\n                if (!data.supportTransfers) {\n                  this.postMessageTransfers = false;\n                }\n\n                this._readyCapability.resolve();\n\n                messageHandler.send(\"configure\", {\n                  verbosity: this.verbosity\n                });\n              } else {\n                this._setupFakeWorker();\n\n                messageHandler.destroy();\n                worker.terminate();\n              }\n            });\n            messageHandler.on(\"ready\", data => {\n              worker.removeEventListener(\"error\", onWorkerError);\n\n              if (this.destroyed) {\n                terminateEarly();\n                return;\n              }\n\n              try {\n                sendTest();\n              } catch (e) {\n                this._setupFakeWorker();\n              }\n            });\n\n            const sendTest = () => {\n              const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]);\n\n              try {\n                messageHandler.send(\"test\", testObj, [testObj.buffer]);\n              } catch (ex) {\n                (0, _util.warn)(\"Cannot use postMessage transfers.\");\n                testObj[0] = 0;\n                messageHandler.send(\"test\", testObj);\n              }\n            };\n\n            sendTest();\n            return;\n          } catch (e) {\n            (0, _util.info)(\"The worker has been disabled.\");\n          }\n        }\n\n        this._setupFakeWorker();\n      }\n\n      _setupFakeWorker() {\n        if (!isWorkerDisabled) {\n          (0, _util.warn)(\"Setting up fake worker.\");\n          isWorkerDisabled = true;\n        }\n\n        setupFakeWorkerGlobal().then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n\n            return;\n          }\n\n          const port = new LoopbackPort();\n          this._port = port;\n          const id = \"fake\" + nextFakeWorkerId++;\n          const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n          const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n\n          this._readyCapability.resolve();\n\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity\n          });\n        }).catch(reason => {\n          this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n        });\n      }\n\n      destroy() {\n        this.destroyed = true;\n\n        if (this._webWorker) {\n          this._webWorker.terminate();\n\n          this._webWorker = null;\n        }\n\n        pdfWorkerPorts.delete(this._port);\n        this._port = null;\n\n        if (this._messageHandler) {\n          this._messageHandler.destroy();\n\n          this._messageHandler = null;\n        }\n      }\n\n      static fromPort(params) {\n        if (!params || !params.port) {\n          throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n        }\n\n        if (pdfWorkerPorts.has(params.port)) {\n          return pdfWorkerPorts.get(params.port);\n        }\n\n        return new PDFWorker(params);\n      }\n\n      static getWorkerSrc() {\n        return getWorkerSrc();\n      }\n\n    }\n\n    return PDFWorker;\n  }();\n\n  exports.PDFWorker = PDFWorker;\n\n  class WorkerTransport {\n    constructor(messageHandler, loadingTask, networkStream, params) {\n      this.messageHandler = messageHandler;\n      this.loadingTask = loadingTask;\n      this.commonObjs = new PDFObjects();\n      this.fontLoader = new _font_loader.FontLoader({\n        docId: loadingTask.docId,\n        onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n        ownerDocument: params.ownerDocument\n      });\n      this._params = params;\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: params.cMapUrl,\n        isCompressed: params.cMapPacked\n      });\n      this.destroyed = false;\n      this.destroyCapability = null;\n      this._passwordCapability = null;\n      this._networkStream = networkStream;\n      this._fullReader = null;\n      this._lastProgress = null;\n      this.pageCache = [];\n      this.pagePromises = [];\n      this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n      this.setupMessageHandler();\n    }\n\n    get loadingTaskSettled() {\n      return this.loadingTask._capability.settled;\n    }\n\n    destroy() {\n      if (this.destroyCapability) {\n        return this.destroyCapability.promise;\n      }\n\n      this.destroyed = true;\n      this.destroyCapability = (0, _util.createPromiseCapability)();\n\n      if (this._passwordCapability) {\n        this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n      }\n\n      const waitOn = [];\n      this.pageCache.forEach(function (page) {\n        if (page) {\n          waitOn.push(page._destroy());\n        }\n      });\n      this.pageCache.length = 0;\n      this.pagePromises.length = 0;\n      const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n      waitOn.push(terminated);\n\n      if (this.loadingTaskSettled) {\n        const annotationStorageResetModified = this.loadingTask.promise.then(pdfDocument => {\n          if (pdfDocument.hasOwnProperty(\"annotationStorage\")) {\n            pdfDocument.annotationStorage.resetModified();\n          }\n        }).catch(() => {});\n        waitOn.push(annotationStorageResetModified);\n      }\n\n      Promise.all(waitOn).then(() => {\n        this.commonObjs.clear();\n        this.fontLoader.clear();\n        this._hasJSActionsPromise = null;\n\n        if (this._networkStream) {\n          this._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n        }\n\n        if (this.messageHandler) {\n          this.messageHandler.destroy();\n          this.messageHandler = null;\n        }\n\n        this.destroyCapability.resolve();\n      }, this.destroyCapability.reject);\n      return this.destroyCapability.promise;\n    }\n\n    setupMessageHandler() {\n      const {\n        messageHandler,\n        loadingTask\n      } = this;\n      messageHandler.on(\"GetReader\", (data, sink) => {\n        (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n        this._fullReader = this._networkStream.getFullReader();\n\n        this._fullReader.onProgress = evt => {\n          this._lastProgress = {\n            loaded: evt.loaded,\n            total: evt.total\n          };\n        };\n\n        sink.onPull = () => {\n          this._fullReader.read().then(function ({\n            value,\n            done\n          }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n\n            (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\");\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          }).catch(reason => {\n            sink.error(reason);\n          });\n        };\n\n        sink.onCancel = reason => {\n          this._fullReader.cancel(reason);\n\n          sink.ready.catch(readyReason => {\n            if (this.destroyed) {\n              return;\n            }\n\n            throw readyReason;\n          });\n        };\n      });\n      messageHandler.on(\"ReaderHeadersReady\", data => {\n        const headersCapability = (0, _util.createPromiseCapability)();\n        const fullReader = this._fullReader;\n        fullReader.headersReady.then(() => {\n          if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n            if (this._lastProgress && loadingTask.onProgress) {\n              loadingTask.onProgress(this._lastProgress);\n            }\n\n            fullReader.onProgress = evt => {\n              if (loadingTask.onProgress) {\n                loadingTask.onProgress({\n                  loaded: evt.loaded,\n                  total: evt.total\n                });\n              }\n            };\n          }\n\n          headersCapability.resolve({\n            isStreamingSupported: fullReader.isStreamingSupported,\n            isRangeSupported: fullReader.isRangeSupported,\n            contentLength: fullReader.contentLength\n          });\n        }, headersCapability.reject);\n        return headersCapability.promise;\n      });\n      messageHandler.on(\"GetRangeReader\", (data, sink) => {\n        (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n\n        const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n\n        if (!rangeReader) {\n          sink.close();\n          return;\n        }\n\n        sink.onPull = () => {\n          rangeReader.read().then(function ({\n            value,\n            done\n          }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n\n            (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\");\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          }).catch(reason => {\n            sink.error(reason);\n          });\n        };\n\n        sink.onCancel = reason => {\n          rangeReader.cancel(reason);\n          sink.ready.catch(readyReason => {\n            if (this.destroyed) {\n              return;\n            }\n\n            throw readyReason;\n          });\n        };\n      });\n      messageHandler.on(\"GetDoc\", ({\n        pdfInfo\n      }) => {\n        this._numPages = pdfInfo.numPages;\n\n        loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n      });\n      messageHandler.on(\"DocException\", function (ex) {\n        let reason;\n\n        switch (ex.name) {\n          case \"PasswordException\":\n            reason = new _util.PasswordException(ex.message, ex.code);\n            break;\n\n          case \"InvalidPDFException\":\n            reason = new _util.InvalidPDFException(ex.message);\n            break;\n\n          case \"MissingPDFException\":\n            reason = new _util.MissingPDFException(ex.message);\n            break;\n\n          case \"UnexpectedResponseException\":\n            reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n            break;\n\n          case \"UnknownErrorException\":\n            reason = new _util.UnknownErrorException(ex.message, ex.details);\n            break;\n        }\n\n        if (!(reason instanceof Error)) {\n          const msg = \"DocException - expected a valid Error.\";\n          (0, _util.warn)(msg);\n        }\n\n        loadingTask._capability.reject(reason);\n      });\n      messageHandler.on(\"PasswordRequest\", exception => {\n        this._passwordCapability = (0, _util.createPromiseCapability)();\n\n        if (loadingTask.onPassword) {\n          const updatePassword = password => {\n            this._passwordCapability.resolve({\n              password\n            });\n          };\n\n          try {\n            loadingTask.onPassword(updatePassword, exception.code);\n          } catch (ex) {\n            this._passwordCapability.reject(ex);\n          }\n        } else {\n          this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n        }\n\n        return this._passwordCapability.promise;\n      });\n      messageHandler.on(\"DataLoaded\", data => {\n        if (loadingTask.onProgress) {\n          loadingTask.onProgress({\n            loaded: data.length,\n            total: data.length\n          });\n        }\n\n        this.downloadInfoCapability.resolve(data);\n      });\n      messageHandler.on(\"StartRenderPage\", data => {\n        if (this.destroyed) {\n          return;\n        }\n\n        const page = this.pageCache[data.pageIndex];\n\n        page._startRenderPage(data.transparency, data.intent);\n      });\n      messageHandler.on(\"commonobj\", data => {\n        if (this.destroyed) {\n          return;\n        }\n\n        const [id, type, exportedData] = data;\n\n        if (this.commonObjs.has(id)) {\n          return;\n        }\n\n        switch (type) {\n          case \"Font\":\n            const params = this._params;\n\n            if (\"error\" in exportedData) {\n              const exportedError = exportedData.error;\n              (0, _util.warn)(`Error during font loading: ${exportedError}`);\n              this.commonObjs.resolve(id, exportedError);\n              break;\n            }\n\n            let fontRegistry = null;\n\n            if (params.pdfBug && globalThis.FontInspector && globalThis.FontInspector.enabled) { //lwf\n              fontRegistry = {\n                registerFont(font, url) {\n                  globalThis.FontInspector.fontAdded(font, url);\n                }\n\n              };\n            }\n\n            const font = new _font_loader.FontFaceObject(exportedData, {\n              isEvalSupported: params.isEvalSupported,\n              disableFontFace: params.disableFontFace,\n              ignoreErrors: params.ignoreErrors,\n              onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n              fontRegistry\n            });\n            this.fontLoader.bind(font).catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", {\n                id\n              });\n            }).finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                font.data = null;\n              }\n\n              this.commonObjs.resolve(id, font);\n            });\n            break;\n\n          case \"FontPath\":\n          case \"Image\":\n            this.commonObjs.resolve(id, exportedData);\n            break;\n\n          default:\n            throw new Error(`Got unknown common object type ${type}`);\n        }\n      });\n      messageHandler.on(\"obj\", data => {\n        if (this.destroyed) {\n          return undefined;\n        }\n\n        const [id, pageIndex, type, imageData] = data;\n        const pageProxy = this.pageCache[pageIndex];\n\n        if (pageProxy.objs.has(id)) {\n          return undefined;\n        }\n\n        switch (type) {\n          case \"Image\":\n            pageProxy.objs.resolve(id, imageData);\n            const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n\n            if (imageData && imageData.data && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) { //lwf\n              pageProxy.cleanupAfterRender = true;\n            }\n\n            break;\n\n          default:\n            throw new Error(`Got unknown object type ${type}`);\n        }\n\n        return undefined;\n      });\n      messageHandler.on(\"DocProgress\", data => {\n        if (this.destroyed) {\n          return;\n        }\n\n        if (loadingTask.onProgress) {\n          loadingTask.onProgress({\n            loaded: data.loaded,\n            total: data.total\n          });\n        }\n      });\n      messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n      messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n        if (this.destroyed) {\n          sink.error(new Error(\"Worker was destroyed\"));\n          return;\n        }\n\n        let fetched = false;\n\n        sink.onPull = () => {\n          if (fetched) {\n            sink.close();\n            return;\n          }\n\n          fetched = true;\n          this.CMapReaderFactory.fetch(data).then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          }).catch(function (reason) {\n            sink.error(reason);\n          });\n        };\n      });\n    }\n\n    _onUnsupportedFeature({\n      featureId\n    }) {\n      if (this.destroyed) {\n        return;\n      }\n\n      if (this.loadingTask.onUnsupportedFeature) {\n        this.loadingTask.onUnsupportedFeature(featureId);\n      }\n    }\n\n    getData() {\n      return this.messageHandler.sendWithPromise(\"GetData\", null);\n    }\n\n    getPage(pageNumber) {\n      if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n        return Promise.reject(new Error(\"Invalid page request\"));\n      }\n\n      const pageIndex = pageNumber - 1;\n\n      if (pageIndex in this.pagePromises) {\n        return this.pagePromises[pageIndex];\n      }\n\n      const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n        pageIndex\n      }).then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n\n        const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.ownerDocument, this._params.pdfBug);\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n      this.pagePromises[pageIndex] = promise;\n      return promise;\n    }\n\n    getPageIndex(ref) {\n      return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n        ref\n      }).catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n    }\n\n    getAnnotations(pageIndex, intent) {\n      return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n        pageIndex,\n        intent\n      });\n    }\n\n    saveDocument(annotationStorage) {\n      return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n        numPages: this._numPages,\n        annotationStorage: annotationStorage && annotationStorage.getAll() || null,  // lwf\n        filename: this._fullReader && this._fullReader.filename || null // lwf\n      }).finally(() => {\n        if (annotationStorage) {\n          annotationStorage.resetModified();\n        }\n      });\n    }\n\n    getFieldObjects() {\n      return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n    }\n\n    hasJSActions() {\n      return this._hasJSActionsPromise || (this._hasJSActionsPromise = this.messageHandler.sendWithPromise(\"HasJSActions\", null));\n    }\n\n    getCalculationOrderIds() {\n      return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n    }\n\n    getDestinations() {\n      return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n    }\n\n    getDestination(id) {\n      if (typeof id !== \"string\") {\n        return Promise.reject(new Error(\"Invalid destination request.\"));\n      }\n\n      return this.messageHandler.sendWithPromise(\"GetDestination\", {\n        id\n      });\n    }\n\n    getPageLabels() {\n      return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n    }\n\n    getPageLayout() {\n      return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n    }\n\n    getPageMode() {\n      return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n    }\n\n    getViewerPreferences() {\n      return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n    }\n\n    getOpenAction() {\n      return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n    }\n\n    getAttachments() {\n      return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n    }\n\n    getJavaScript() {\n      return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n    }\n\n    getDocJSActions() {\n      return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n    }\n\n    getPageJSActions(pageIndex) {\n      return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n        pageIndex\n      });\n    }\n\n    getOutline() {\n      return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n    }\n\n    getOptionalContentConfig() {\n      return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(results => {\n        return new _optional_content_config.OptionalContentConfig(results);\n      });\n    }\n\n    getPermissions() {\n      return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n    }\n\n    getMetadata() {\n      return this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader && this._fullReader.filename || null, // lwf\n          contentLength: this._fullReader && this._fullReader.contentLength || null  // lwf\n        };\n      });\n    }\n\n    getMarkInfo() {\n      return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n    }\n\n    getStats() {\n      return this.messageHandler.sendWithPromise(\"GetStats\", null);\n    }\n\n    startCleanup() {\n      return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n        for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n          const page = this.pageCache[i];\n\n          if (page) {\n            const cleanupSuccessful = page.cleanup();\n\n            if (!cleanupSuccessful) {\n              throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n            }\n          }\n        }\n\n        this.commonObjs.clear();\n        this.fontLoader.clear();\n        this._hasJSActionsPromise = null;\n      });\n    }\n\n    get loadingParams() {\n      const params = this._params;\n      return (0, _util.shadow)(this, \"loadingParams\", {\n        disableAutoFetch: params.disableAutoFetch,\n        disableFontFace: params.disableFontFace\n      });\n    }\n\n  }\n\n  class PDFObjects {\n    constructor() {\n      this._objs = Object.create(null);\n    }\n\n    _ensureObj(objId) {\n      if (this._objs[objId]) {\n        return this._objs[objId];\n      }\n\n      return this._objs[objId] = {\n        capability: (0, _util.createPromiseCapability)(),\n        data: null,\n        resolved: false\n      };\n    }\n\n    get(objId, callback = null) {\n      if (callback) {\n        this._ensureObj(objId).capability.promise.then(callback);\n\n        return null;\n      }\n\n      const obj = this._objs[objId];\n\n      if (!obj || !obj.resolved) {\n        throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n      }\n\n      return obj.data;\n    }\n\n    has(objId) {\n      const obj = this._objs[objId];\n      return obj && obj.resolved || false; // lwf\n    }\n\n    resolve(objId, data) {\n      const obj = this._ensureObj(objId);\n\n      obj.resolved = true;\n      obj.data = data;\n      obj.capability.resolve(data);\n    }\n\n    clear() {\n      this._objs = Object.create(null);\n    }\n\n  }\n\n  class RenderTask {\n    constructor(internalRenderTask) {\n      this._internalRenderTask = internalRenderTask;\n      this.onContinue = null;\n    }\n\n    get promise() {\n      return this._internalRenderTask.capability.promise;\n    }\n\n    cancel() {\n      this._internalRenderTask.cancel();\n    }\n\n  }\n\n  const InternalRenderTask = function InternalRenderTaskClosure() {\n    const canvasInRendering = new WeakSet();\n\n    class InternalRenderTask {\n      constructor({\n        callback,\n        params,\n        objs,\n        commonObjs,\n        operatorList,\n        pageIndex,\n        canvasFactory,\n        webGLContext,\n        useRequestAnimationFrame = false,\n        pdfBug = false\n      }) {\n        this.callback = callback;\n        this.params = params;\n        this.objs = objs;\n        this.commonObjs = commonObjs;\n        this.operatorListIdx = null;\n        this.operatorList = operatorList;\n        this._pageIndex = pageIndex;\n        this.canvasFactory = canvasFactory;\n        this.webGLContext = webGLContext;\n        this._pdfBug = pdfBug;\n        this.running = false;\n        this.graphicsReadyCallback = null;\n        this.graphicsReady = false;\n        this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n        this.cancelled = false;\n        this.capability = (0, _util.createPromiseCapability)();\n        this.task = new RenderTask(this);\n        this._continueBound = this._continue.bind(this);\n        this._scheduleNextBound = this._scheduleNext.bind(this);\n        this._nextBound = this._next.bind(this);\n        this._canvas = params.canvasContext.canvas;\n      }\n\n      get completed() {\n        return this.capability.promise.catch(function () {});\n      }\n\n      initializeGraphics({\n        transparency = false,\n        optionalContentConfig\n      }) {\n        if (this.cancelled) {\n          return;\n        }\n\n        if (this._canvas) {\n          if (canvasInRendering.has(this._canvas)) {\n            throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n          }\n\n          canvasInRendering.add(this._canvas);\n        }\n\n        if (this._pdfBug && globalThis.StepperManager && globalThis.StepperManager.enabled) { // lwf\n          this.stepper = globalThis.StepperManager.create(this._pageIndex);\n          this.stepper.init(this.operatorList);\n          this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n        }\n\n        const {\n          canvasContext,\n          viewport,\n          transform,\n          imageLayer,\n          background\n        } = this.params;\n        this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext, imageLayer, optionalContentConfig);\n        this.gfx.beginDrawing({\n          transform,\n          viewport,\n          transparency,\n          background\n        });\n        this.operatorListIdx = 0;\n        this.graphicsReady = true;\n\n        if (this.graphicsReadyCallback) {\n          this.graphicsReadyCallback();\n        }\n      }\n\n      cancel(error = null) {\n        this.running = false;\n        this.cancelled = true;\n\n        if (this.gfx) {\n          this.gfx.endDrawing();\n        }\n\n        if (this._canvas) {\n          canvasInRendering.delete(this._canvas);\n        }\n\n        this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, \"canvas\"));\n      }\n\n      operatorListChanged() {\n        if (!this.graphicsReady) {\n          if (!this.graphicsReadyCallback) {\n            this.graphicsReadyCallback = this._continueBound;\n          }\n\n          return;\n        }\n\n        if (this.stepper) {\n          this.stepper.updateOperatorList(this.operatorList);\n        }\n\n        if (this.running) {\n          return;\n        }\n\n        this._continue();\n      }\n\n      _continue() {\n        this.running = true;\n\n        if (this.cancelled) {\n          return;\n        }\n\n        if (this.task.onContinue) {\n          this.task.onContinue(this._scheduleNextBound);\n        } else {\n          this._scheduleNext();\n        }\n      }\n\n      _scheduleNext() {\n        if (this._useRequestAnimationFrame) {\n          window.requestAnimationFrame(() => {\n            this._nextBound().catch(this.cancel.bind(this));\n          });\n        } else {\n          Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n        }\n      }\n\n      async _next() {\n        if (this.cancelled) {\n          return;\n        }\n\n        this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n\n        if (this.operatorListIdx === this.operatorList.argsArray.length) {\n          this.running = false;\n\n          if (this.operatorList.lastChunk) {\n            this.gfx.endDrawing();\n\n            if (this._canvas) {\n              canvasInRendering.delete(this._canvas);\n            }\n\n            this.callback();\n          }\n        }\n      }\n\n    }\n\n    return InternalRenderTask;\n  }();\n\n  const version = '2.7.570';\n  exports.version = version;\n  const build = 'f2c7338b0';\n  exports.build = build;\n\n  /***/ }),\n  /* 6 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.FontLoader = exports.FontFaceObject = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  class BaseFontLoader {\n    constructor({\n      docId,\n      onUnsupportedFeature,\n      ownerDocument = globalThis.document\n    }) {\n      if (this.constructor === BaseFontLoader) {\n        (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n      }\n\n      this.docId = docId;\n      this._onUnsupportedFeature = onUnsupportedFeature;\n      this._document = ownerDocument;\n      this.nativeFontFaces = [];\n      this.styleElement = null;\n    }\n\n    addNativeFontFace(nativeFontFace) {\n      this.nativeFontFaces.push(nativeFontFace);\n\n      this._document.fonts.add(nativeFontFace);\n    }\n\n    insertRule(rule) {\n      let styleElement = this.styleElement;\n\n      if (!styleElement) {\n        styleElement = this.styleElement = this._document.createElement(\"style\");\n        styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n\n        this._document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n      }\n\n      const styleSheet = styleElement.sheet;\n      styleSheet.insertRule(rule, styleSheet.cssRules.length);\n    }\n\n    clear() {\n      this.nativeFontFaces.forEach(nativeFontFace => {\n        this._document.fonts.delete(nativeFontFace);\n      });\n      this.nativeFontFaces.length = 0;\n\n      if (this.styleElement) {\n        this.styleElement.remove();\n        this.styleElement = null;\n      }\n    }\n\n    async bind(font) {\n      if (font.attached || font.missingFile) {\n        return;\n      }\n\n      font.attached = true;\n\n      if (this.isFontLoadingAPISupported) {\n        const nativeFontFace = font.createNativeFontFace();\n\n        if (nativeFontFace) {\n          this.addNativeFontFace(nativeFontFace);\n\n          try {\n            await nativeFontFace.loaded;\n          } catch (ex) {\n            this._onUnsupportedFeature({\n              featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadNative\n            });\n\n            (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n            font.disableFontFace = true;\n            throw ex;\n          }\n        }\n\n        return;\n      }\n\n      const rule = font.createFontFaceRule();\n\n      if (rule) {\n        this.insertRule(rule);\n\n        if (this.isSyncFontLoadingSupported) {\n          return;\n        }\n\n        await new Promise(resolve => {\n          const request = this._queueLoadingCallback(resolve);\n\n          this._prepareFontLoadEvent([rule], [font], request);\n        });\n      }\n    }\n\n    _queueLoadingCallback(callback) {\n      (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n    }\n\n    get isFontLoadingAPISupported() {\n      return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", !!(this._document && this._document.fonts)); // lwf\n    }\n\n    get isSyncFontLoadingSupported() {\n      (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n    }\n\n    get _loadTestFont() {\n      (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n    }\n\n    _prepareFontLoadEvent(rules, fontsToLoad, request) {\n      (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n    }\n\n  }\n\n  let FontLoader;\n  exports.FontLoader = FontLoader;\n  {\n    exports.FontLoader = FontLoader = class GenericFontLoader extends BaseFontLoader {\n      constructor(params) {\n        super(params);\n        this.loadingContext = {\n          requests: [],\n          nextRequestId: 0\n        };\n        this.loadTestFontId = 0;\n      }\n\n      get isSyncFontLoadingSupported() {\n        let supported = false;\n\n        if (typeof navigator === \"undefined\") {\n          supported = true;\n        } else {\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n\n          if (m && m[1] >= 14) { // lwf\n            supported = true;\n          }\n        }\n\n        return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n      }\n\n      _queueLoadingCallback(callback) {\n        function completeRequest() {\n          (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n          request.done = true;\n\n          while (context.requests.length > 0 && context.requests[0].done) {\n            const otherRequest = context.requests.shift();\n            setTimeout(otherRequest.callback, 0);\n          }\n        }\n\n        const context = this.loadingContext;\n        const request = {\n          id: `pdfjs-font-loading-${context.nextRequestId++}`,\n          done: false,\n          complete: completeRequest,\n          callback\n        };\n        context.requests.push(request);\n        return request;\n      }\n\n      get _loadTestFont() {\n        const getLoadTestFont = function () {\n          return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n        };\n\n        return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n      }\n\n      _prepareFontLoadEvent(rules, fonts, request) {\n        function int32(data, offset) {\n          return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n        }\n\n        function spliceString(s, offset, remove, insert) {\n          const chunk1 = s.substring(0, offset);\n          const chunk2 = s.substring(offset + remove);\n          return chunk1 + insert + chunk2;\n        }\n\n        let i, ii;\n\n        const canvas = this._document.createElement(\"canvas\");\n\n        canvas.width = 1;\n        canvas.height = 1;\n        const ctx = canvas.getContext(\"2d\");\n        let called = 0;\n\n        function isFontReady(name, callback) {\n          called++;\n\n          if (called > 30) {\n            (0, _util.warn)(\"Load test font never loaded.\");\n            callback();\n            return;\n          }\n\n          ctx.font = \"30px \" + name;\n          ctx.fillText(\".\", 0, 20);\n          const imageData = ctx.getImageData(0, 0, 1, 1);\n\n          if (imageData.data[3] > 0) {\n            callback();\n            return;\n          }\n\n          setTimeout(isFontReady.bind(null, name, callback));\n        }\n\n        const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n        let data = this._loadTestFont;\n        const COMMENT_OFFSET = 976;\n        data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n        const CFF_CHECKSUM_OFFSET = 16;\n        const XXXX_VALUE = 0x58585858;\n        let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n\n        for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n          checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n        }\n\n        if (i < loadTestFontId.length) {\n          checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n        }\n\n        data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n        const url = `url(data:font/opentype;base64,${btoa(data)});`;\n        const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n        this.insertRule(rule);\n        const names = [];\n\n        for (i = 0, ii = fonts.length; i < ii; i++) {\n          names.push(fonts[i].loadedName);\n        }\n\n        names.push(loadTestFontId);\n\n        const div = this._document.createElement(\"div\");\n\n        div.style.visibility = \"hidden\";\n        div.style.width = div.style.height = \"10px\";\n        div.style.position = \"absolute\";\n        div.style.top = div.style.left = \"0px\";\n\n        for (i = 0, ii = names.length; i < ii; ++i) {\n          const span = this._document.createElement(\"span\");\n\n          span.textContent = \"Hi\";\n          span.style.fontFamily = names[i];\n          div.appendChild(span);\n        }\n\n        this._document.body.appendChild(div);\n\n        isFontReady(loadTestFontId, () => {\n          this._document.body.removeChild(div);\n\n          request.complete();\n        });\n      }\n\n    };\n  }\n\n  class FontFaceObject {\n    constructor(translatedData, {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null\n    }) {\n      this.compiledGlyphs = Object.create(null);\n\n      for (const i in translatedData) {\n        this[i] = translatedData[i];\n      }\n\n      this.isEvalSupported = isEvalSupported !== false;\n      this.disableFontFace = disableFontFace === true;\n      this.ignoreErrors = ignoreErrors === true;\n      this._onUnsupportedFeature = onUnsupportedFeature;\n      this.fontRegistry = fontRegistry;\n    }\n\n    createNativeFontFace() {\n      if (!this.data || this.disableFontFace) {\n        return null;\n      }\n\n      const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n      if (this.fontRegistry) {\n        this.fontRegistry.registerFont(this);\n      }\n\n      return nativeFontFace;\n    }\n\n    createFontFaceRule() {\n      if (!this.data || this.disableFontFace) {\n        return null;\n      }\n\n      const data = (0, _util.bytesToString)(new Uint8Array(this.data));\n      const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n      if (this.fontRegistry) {\n        this.fontRegistry.registerFont(this, url);\n      }\n\n      return rule;\n    }\n\n    getPathGenerator(objs, character) {\n      if (this.compiledGlyphs[character] !== undefined) {\n        return this.compiledGlyphs[character];\n      }\n\n      let cmds, current;\n\n      try {\n        cmds = objs.get(this.loadedName + \"_path_\" + character);\n      } catch (ex) {\n        if (!this.ignoreErrors) {\n          throw ex;\n        }\n\n        if (this._onUnsupportedFeature) {\n          this._onUnsupportedFeature({\n            featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath\n          });\n        }\n\n        (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n        return this.compiledGlyphs[character] = function (c, size) {};\n      }\n\n      if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n        let args,\n            js = \"\";\n\n        for (let i = 0, ii = cmds.length; i < ii; i++) {\n          current = cmds[i];\n\n          if (current.args !== undefined) {\n            args = current.args.join(\",\");\n          } else {\n            args = \"\";\n          }\n\n          js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n        }\n\n        return this.compiledGlyphs[character] = new Function(\"c\", \"size\", js);\n      }\n\n      return this.compiledGlyphs[character] = function (c, size) {\n        for (let i = 0, ii = cmds.length; i < ii; i++) {\n          current = cmds[i];\n\n          if (current.cmd === \"scale\") {\n            current.args = [size, -size];\n          }\n\n          c[current.cmd].apply(c, current.args);\n        }\n      };\n    }\n\n  }\n\n  exports.FontFaceObject = FontFaceObject;\n\n  /***/ }),\n  /* 7 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.NodeCMapReaderFactory = exports.NodeCanvasFactory = void 0;\n\n  var _display_utils = __w_pdfjs_require__(1);\n\n  var _is_node = __w_pdfjs_require__(4);\n\n  var _util = __w_pdfjs_require__(2);\n\n  let NodeCanvasFactory = class {\n    constructor() {\n      (0, _util.unreachable)(\"Not implemented: NodeCanvasFactory\");\n    }\n\n  };\n  exports.NodeCanvasFactory = NodeCanvasFactory;\n  let NodeCMapReaderFactory = class {\n    constructor() {\n      (0, _util.unreachable)(\"Not implemented: NodeCMapReaderFactory\");\n    }\n\n  };\n  exports.NodeCMapReaderFactory = NodeCMapReaderFactory;\n\n  if (_is_node.isNodeJS) {\n    exports.NodeCanvasFactory = NodeCanvasFactory = class extends _display_utils.BaseCanvasFactory {\n      create(width, height) {\n        if (width <= 0 || height <= 0) {\n          throw new Error(\"Invalid canvas size\");\n        }\n\n        const Canvas = require(\"canvas\");\n\n        const canvas = Canvas.createCanvas(width, height);\n        return {\n          canvas,\n          context: canvas.getContext(\"2d\")\n        };\n      }\n\n    };\n    exports.NodeCMapReaderFactory = NodeCMapReaderFactory = class extends _display_utils.BaseCMapReaderFactory {\n      _fetchData(url, compressionType) {\n        return new Promise((resolve, reject) => {\n          const fs = require(\"fs\");\n\n          fs.readFile(url, (error, data) => {\n            if (error || !data) {\n              reject(new Error(error));\n              return;\n            }\n\n            resolve({\n              cMapData: new Uint8Array(data),\n              compressionType\n            });\n          });\n        });\n      }\n\n    };\n  }\n\n  /***/ }),\n  /* 8 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.AnnotationStorage = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  class AnnotationStorage {\n    constructor() {\n      this._storage = new Map();\n      this._modified = false;\n      this.onSetModified = null;\n      this.onResetModified = null;\n    }\n\n    getOrCreateValue(key, defaultValue) {\n      if (this._storage.has(key)) {\n        return this._storage.get(key);\n      }\n\n      this._storage.set(key, defaultValue);\n\n      return defaultValue;\n    }\n\n    setValue(key, value) {\n      const obj = this._storage.get(key);\n\n      let modified = false;\n\n      if (obj !== undefined) {\n        for (const [entry, val] of Object.entries(value)) {\n          if (obj[entry] !== val) {\n            modified = true;\n            obj[entry] = val;\n          }\n        }\n      } else {\n        this._storage.set(key, value);\n\n        modified = true;\n      }\n\n      if (modified) {\n        this._setModified();\n      }\n    }\n\n    getAll() {\n      if (this._storage.size === 0) {\n        return null;\n      }\n\n      return (0, _util.objectFromEntries)(this._storage);\n    }\n\n    get size() {\n      return this._storage.size;\n    }\n\n    _setModified() {\n      if (!this._modified) {\n        this._modified = true;\n\n        if (typeof this.onSetModified === \"function\") {\n          this.onSetModified();\n        }\n      }\n    }\n\n    resetModified() {\n      if (this._modified) {\n        this._modified = false;\n\n        if (typeof this.onResetModified === \"function\") {\n          this.onResetModified();\n        }\n      }\n    }\n\n  }\n\n  exports.AnnotationStorage = AnnotationStorage;\n\n  /***/ }),\n  /* 9 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.apiCompatibilityParams = void 0;\n\n  var _is_node = __w_pdfjs_require__(4);\n\n  const compatibilityParams = Object.create(null);\n  {\n    (function checkFontFace() {\n      if (_is_node.isNodeJS) {\n        compatibilityParams.disableFontFace = true;\n      }\n    })();\n  }\n  const apiCompatibilityParams = Object.freeze(compatibilityParams);\n  exports.apiCompatibilityParams = apiCompatibilityParams;\n\n  /***/ }),\n  /* 10 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.CanvasGraphics = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _pattern_helper = __w_pdfjs_require__(11);\n\n  const MIN_FONT_SIZE = 16;\n  const MAX_FONT_SIZE = 100;\n  const MAX_GROUP_SIZE = 4096;\n  const COMPILE_TYPE3_GLYPHS = true;\n  const MAX_SIZE_TO_COMPILE = 1000;\n  const FULL_CHUNK_HEIGHT = 16;\n\n  function addContextCurrentTransform(ctx) {\n    if (!ctx.mozCurrentTransform) {\n      ctx._originalSave = ctx.save;\n      ctx._originalRestore = ctx.restore;\n      ctx._originalRotate = ctx.rotate;\n      ctx._originalScale = ctx.scale;\n      ctx._originalTranslate = ctx.translate;\n      ctx._originalTransform = ctx.transform;\n      ctx._originalSetTransform = ctx.setTransform;\n      ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n      ctx._transformStack = [];\n      Object.defineProperty(ctx, \"mozCurrentTransform\", {\n        get: function getCurrentTransform() {\n          return this._transformMatrix;\n        }\n      });\n      Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n        get: function getCurrentTransformInverse() {\n          const m = this._transformMatrix;\n          const a = m[0],\n                b = m[1],\n                c = m[2],\n                d = m[3],\n                e = m[4],\n                f = m[5];\n          const ad_bc = a * d - b * c;\n          const bc_ad = b * c - a * d;\n          return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n        }\n      });\n\n      ctx.save = function ctxSave() {\n        const old = this._transformMatrix;\n\n        this._transformStack.push(old);\n\n        this._transformMatrix = old.slice(0, 6);\n\n        this._originalSave();\n      };\n\n      ctx.restore = function ctxRestore() {\n        const prev = this._transformStack.pop();\n\n        if (prev) {\n          this._transformMatrix = prev;\n\n          this._originalRestore();\n        }\n      };\n\n      ctx.translate = function ctxTranslate(x, y) {\n        const m = this._transformMatrix;\n        m[4] = m[0] * x + m[2] * y + m[4];\n        m[5] = m[1] * x + m[3] * y + m[5];\n\n        this._originalTranslate(x, y);\n      };\n\n      ctx.scale = function ctxScale(x, y) {\n        const m = this._transformMatrix;\n        m[0] = m[0] * x;\n        m[1] = m[1] * x;\n        m[2] = m[2] * y;\n        m[3] = m[3] * y;\n\n        this._originalScale(x, y);\n      };\n\n      ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n        const m = this._transformMatrix;\n        this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n\n        ctx._originalTransform(a, b, c, d, e, f);\n      };\n\n      ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n        this._transformMatrix = [a, b, c, d, e, f];\n\n        ctx._originalSetTransform(a, b, c, d, e, f);\n      };\n\n      ctx.rotate = function ctxRotate(angle) {\n        const cosValue = Math.cos(angle);\n        const sinValue = Math.sin(angle);\n        const m = this._transformMatrix;\n        this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n\n        this._originalRotate(angle);\n      };\n    }\n  }\n\n  const CachedCanvases = function CachedCanvasesClosure() {\n    function CachedCanvases(canvasFactory) {\n      this.canvasFactory = canvasFactory;\n      this.cache = Object.create(null);\n    }\n\n    CachedCanvases.prototype = {\n      getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {\n        let canvasEntry;\n\n        if (this.cache[id] !== undefined) {\n          canvasEntry = this.cache[id];\n          this.canvasFactory.reset(canvasEntry, width, height);\n          canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n        } else {\n          canvasEntry = this.canvasFactory.create(width, height);\n          this.cache[id] = canvasEntry;\n        }\n\n        if (trackTransform) {\n          addContextCurrentTransform(canvasEntry.context);\n        }\n\n        return canvasEntry;\n      },\n\n      clear() {\n        for (const id in this.cache) {\n          const canvasEntry = this.cache[id];\n          this.canvasFactory.destroy(canvasEntry);\n          delete this.cache[id];\n        }\n      }\n\n    };\n    return CachedCanvases;\n  }();\n\n  function compileType3Glyph(imgData) {\n    const POINT_TO_PROCESS_LIMIT = 1000;\n    const width = imgData.width,\n          height = imgData.height,\n          width1 = width + 1;\n    let i, ii, j, j0;\n    const points = new Uint8Array(width1 * (height + 1));\n    const POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n    const lineSize = width + 7 & ~7,\n          data0 = imgData.data;\n    const data = new Uint8Array(lineSize * height);\n    let pos = 0;\n\n    for (i = 0, ii = data0.length; i < ii; i++) {\n      const elem = data0[i];\n      let mask = 128;\n\n      while (mask > 0) {\n        data[pos++] = elem & mask ? 0 : 255;\n        mask >>= 1;\n      }\n    }\n\n    let count = 0;\n    pos = 0;\n\n    if (data[pos] !== 0) {\n      points[0] = 1;\n      ++count;\n    }\n\n    for (j = 1; j < width; j++) {\n      if (data[pos] !== data[pos + 1]) {\n        points[j] = data[pos] ? 2 : 1;\n        ++count;\n      }\n\n      pos++;\n    }\n\n    if (data[pos] !== 0) {\n      points[j] = 2;\n      ++count;\n    }\n\n    for (i = 1; i < height; i++) {\n      pos = i * lineSize;\n      j0 = i * width1;\n\n      if (data[pos - lineSize] !== data[pos]) {\n        points[j0] = data[pos] ? 1 : 8;\n        ++count;\n      }\n\n      let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n\n      for (j = 1; j < width; j++) {\n        sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n\n        if (POINT_TYPES[sum]) {\n          points[j0 + j] = POINT_TYPES[sum];\n          ++count;\n        }\n\n        pos++;\n      }\n\n      if (data[pos - lineSize] !== data[pos]) {\n        points[j0 + j] = data[pos] ? 2 : 4;\n        ++count;\n      }\n\n      if (count > POINT_TO_PROCESS_LIMIT) {\n        return null;\n      }\n    }\n\n    pos = lineSize * (height - 1);\n    j0 = i * width1;\n\n    if (data[pos] !== 0) {\n      points[j0] = 8;\n      ++count;\n    }\n\n    for (j = 1; j < width; j++) {\n      if (data[pos] !== data[pos + 1]) {\n        points[j0 + j] = data[pos] ? 4 : 8;\n        ++count;\n      }\n\n      pos++;\n    }\n\n    if (data[pos] !== 0) {\n      points[j0 + j] = 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n\n    const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n    const outlines = [];\n\n    for (i = 0; count && i <= height; i++) {\n      let p = i * width1;\n      const end = p + width;\n\n      while (p < end && !points[p]) {\n        p++;\n      }\n\n      if (p === end) {\n        continue;\n      }\n\n      const coords = [p % width1, i];\n      const p0 = p;\n      let type = points[p];\n\n      do {\n        const step = steps[type];\n\n        do {\n          p += step;\n        } while (!points[p]);\n\n        const pp = points[p];\n\n        if (pp !== 5 && pp !== 10) {\n          type = pp;\n          points[p] = 0;\n        } else {\n          type = pp & 0x33 * type >> 4;\n          points[p] &= type >> 2 | type << 2;\n        }\n\n        coords.push(p % width1);\n        coords.push(p / width1 | 0);\n\n        if (!points[p]) {\n          --count;\n        }\n      } while (p0 !== p);\n\n      outlines.push(coords);\n      --i;\n    }\n\n    const drawOutline = function (c) {\n      c.save();\n      c.scale(1 / width, -1 / height);\n      c.translate(0, -height);\n      c.beginPath();\n\n      for (let k = 0, kk = outlines.length; k < kk; k++) {\n        const o = outlines[k];\n        c.moveTo(o[0], o[1]);\n\n        for (let l = 2, ll = o.length; l < ll; l += 2) {\n          c.lineTo(o[l], o[l + 1]);\n        }\n      }\n\n      c.fill();\n      c.beginPath();\n      c.restore();\n    };\n\n    return drawOutline;\n  }\n\n  const CanvasExtraState = function CanvasExtraStateClosure() {\n    function CanvasExtraState() {\n      this.alphaIsShape = false;\n      this.fontSize = 0;\n      this.fontSizeScale = 1;\n      this.textMatrix = _util.IDENTITY_MATRIX;\n      this.textMatrixScale = 1;\n      this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.x = 0;\n      this.y = 0;\n      this.lineX = 0;\n      this.lineY = 0;\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRenderingMode = _util.TextRenderingMode.FILL;\n      this.textRise = 0;\n      this.fillColor = \"#000000\";\n      this.strokeColor = \"#000000\";\n      this.patternFill = false;\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.activeSMask = null;\n      this.resumeSMaskCtx = null;\n      this.transferMaps = null;\n    }\n\n    CanvasExtraState.prototype = {\n      clone: function CanvasExtraState_clone() {\n        return Object.create(this);\n      },\n      setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n        this.x = x;\n        this.y = y;\n      }\n    };\n    return CanvasExtraState;\n  }();\n\n  const CanvasGraphics = function CanvasGraphicsClosure() {\n    const EXECUTION_TIME = 15;\n    const EXECUTION_STEPS = 10;\n\n    function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, webGLContext, imageLayer, optionalContentConfig) {\n      this.ctx = canvasCtx;\n      this.current = new CanvasExtraState();\n      this.stateStack = [];\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n      this.res = null;\n      this.xobjs = null;\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this.imageLayer = imageLayer;\n      this.groupStack = [];\n      this.processingType3 = null;\n      this.baseTransform = null;\n      this.baseTransformStack = [];\n      this.groupLevel = 0;\n      this.smaskStack = [];\n      this.smaskCounter = 0;\n      this.tempSMask = null;\n      this.contentVisible = true;\n      this.markedContentStack = [];\n      this.optionalContentConfig = optionalContentConfig;\n      this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n\n      if (canvasCtx) {\n        addContextCurrentTransform(canvasCtx);\n      }\n\n      this._cachedGetSinglePixelWidth = null;\n    }\n\n    function putBinaryImageData(ctx, imgData, transferMaps = null) {\n      if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n        ctx.putImageData(imgData, 0, 0);\n        return;\n      }\n\n      const height = imgData.height,\n            width = imgData.width;\n      const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n      const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n      const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n      const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n      let srcPos = 0,\n          destPos;\n      const src = imgData.data;\n      const dest = chunkImgData.data;\n      let i, j, thisChunkHeight, elemsInThisChunk;\n      let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n\n      if (transferMaps) {\n        switch (transferMaps.length) {\n          case 1:\n            transferMapRed = transferMaps[0];\n            transferMapGreen = transferMaps[0];\n            transferMapBlue = transferMaps[0];\n            transferMapGray = transferMaps[0];\n            break;\n\n          case 4:\n            transferMapRed = transferMaps[0];\n            transferMapGreen = transferMaps[1];\n            transferMapBlue = transferMaps[2];\n            transferMapGray = transferMaps[3];\n            break;\n        }\n      }\n\n      if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n        const srcLength = src.byteLength;\n        const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n        const dest32DataLength = dest32.length;\n        const fullSrcDiff = width + 7 >> 3;\n        let white = 0xffffffff;\n        let black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n        if (transferMapGray) {\n          if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n            [white, black] = [black, white];\n          }\n        }\n\n        for (i = 0; i < totalChunks; i++) {\n          thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n          destPos = 0;\n\n          for (j = 0; j < thisChunkHeight; j++) {\n            const srcDiff = srcLength - srcPos;\n            let k = 0;\n            const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n            const kEndUnrolled = kEnd & ~7;\n            let mask = 0;\n            let srcByte = 0;\n\n            for (; k < kEndUnrolled; k += 8) {\n              srcByte = src[srcPos++];\n              dest32[destPos++] = srcByte & 128 ? white : black;\n              dest32[destPos++] = srcByte & 64 ? white : black;\n              dest32[destPos++] = srcByte & 32 ? white : black;\n              dest32[destPos++] = srcByte & 16 ? white : black;\n              dest32[destPos++] = srcByte & 8 ? white : black;\n              dest32[destPos++] = srcByte & 4 ? white : black;\n              dest32[destPos++] = srcByte & 2 ? white : black;\n              dest32[destPos++] = srcByte & 1 ? white : black;\n            }\n\n            for (; k < kEnd; k++) {\n              if (mask === 0) {\n                srcByte = src[srcPos++];\n                mask = 128;\n              }\n\n              dest32[destPos++] = srcByte & mask ? white : black;\n              mask >>= 1;\n            }\n          }\n\n          while (destPos < dest32DataLength) {\n            dest32[destPos++] = 0;\n          }\n\n          ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n        }\n      } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n        const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n        j = 0;\n        elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n\n        for (i = 0; i < fullChunks; i++) {\n          dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n          srcPos += elemsInThisChunk;\n\n          if (hasTransferMaps) {\n            for (let k = 0; k < elemsInThisChunk; k += 4) {\n              if (transferMapRed) {\n                dest[k + 0] = transferMapRed[dest[k + 0]];\n              }\n\n              if (transferMapGreen) {\n                dest[k + 1] = transferMapGreen[dest[k + 1]];\n              }\n\n              if (transferMapBlue) {\n                dest[k + 2] = transferMapBlue[dest[k + 2]];\n              }\n            }\n          }\n\n          ctx.putImageData(chunkImgData, 0, j);\n          j += FULL_CHUNK_HEIGHT;\n        }\n\n        if (i < totalChunks) {\n          elemsInThisChunk = width * partialChunkHeight * 4;\n          dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n          if (hasTransferMaps) {\n            for (let k = 0; k < elemsInThisChunk; k += 4) {\n              if (transferMapRed) {\n                dest[k + 0] = transferMapRed[dest[k + 0]];\n              }\n\n              if (transferMapGreen) {\n                dest[k + 1] = transferMapGreen[dest[k + 1]];\n              }\n\n              if (transferMapBlue) {\n                dest[k + 2] = transferMapBlue[dest[k + 2]];\n              }\n            }\n          }\n\n          ctx.putImageData(chunkImgData, 0, j);\n        }\n      } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n        const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n        thisChunkHeight = FULL_CHUNK_HEIGHT;\n        elemsInThisChunk = width * thisChunkHeight;\n\n        for (i = 0; i < totalChunks; i++) {\n          if (i >= fullChunks) {\n            thisChunkHeight = partialChunkHeight;\n            elemsInThisChunk = width * thisChunkHeight;\n          }\n\n          destPos = 0;\n\n          for (j = elemsInThisChunk; j--;) {\n            dest[destPos++] = src[srcPos++];\n            dest[destPos++] = src[srcPos++];\n            dest[destPos++] = src[srcPos++];\n            dest[destPos++] = 255;\n          }\n\n          if (hasTransferMaps) {\n            for (let k = 0; k < destPos; k += 4) {\n              if (transferMapRed) {\n                dest[k + 0] = transferMapRed[dest[k + 0]];\n              }\n\n              if (transferMapGreen) {\n                dest[k + 1] = transferMapGreen[dest[k + 1]];\n              }\n\n              if (transferMapBlue) {\n                dest[k + 2] = transferMapBlue[dest[k + 2]];\n              }\n            }\n          }\n\n          ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n        }\n      } else {\n        throw new Error(`bad image kind: ${imgData.kind}`);\n      }\n    }\n\n    function putBinaryImageMask(ctx, imgData) {\n      const height = imgData.height,\n            width = imgData.width;\n      const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n      const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n      const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n      const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n      let srcPos = 0;\n      const src = imgData.data;\n      const dest = chunkImgData.data;\n\n      for (let i = 0; i < totalChunks; i++) {\n        const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        let destPos = 3;\n\n        for (let j = 0; j < thisChunkHeight; j++) {\n          let elem,\n              mask = 0;\n\n          for (let k = 0; k < width; k++) {\n            if (!mask) {\n              elem = src[srcPos++];\n              mask = 128;\n            }\n\n            dest[destPos] = elem & mask ? 0 : 255;\n            destPos += 4;\n            mask >>= 1;\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    }\n\n    function copyCtxState(sourceCtx, destCtx) {\n      const properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n\n      for (let i = 0, ii = properties.length; i < ii; i++) {\n        const property = properties[i];\n\n        if (sourceCtx[property] !== undefined) {\n          destCtx[property] = sourceCtx[property];\n        }\n      }\n\n      if (sourceCtx.setLineDash !== undefined) {\n        destCtx.setLineDash(sourceCtx.getLineDash());\n        destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n      }\n    }\n\n    function resetCtxToDefault(ctx) {\n      ctx.strokeStyle = \"#000000\";\n      ctx.fillStyle = \"#000000\";\n      ctx.fillRule = \"nonzero\";\n      ctx.globalAlpha = 1;\n      ctx.lineWidth = 1;\n      ctx.lineCap = \"butt\";\n      ctx.lineJoin = \"miter\";\n      ctx.miterLimit = 10;\n      ctx.globalCompositeOperation = \"source-over\";\n      ctx.font = \"10px sans-serif\";\n\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash([]);\n        ctx.lineDashOffset = 0;\n      }\n    }\n\n    function composeSMaskBackdrop(bytes, r0, g0, b0) {\n      const length = bytes.length;\n\n      for (let i = 3; i < length; i += 4) {\n        const alpha = bytes[i];\n\n        if (alpha === 0) {\n          bytes[i - 3] = r0;\n          bytes[i - 2] = g0;\n          bytes[i - 1] = b0;\n        } else if (alpha < 255) {\n          const alpha_ = 255 - alpha;\n          bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n          bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n          bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n        }\n      }\n    }\n\n    function composeSMaskAlpha(maskData, layerData, transferMap) {\n      const length = maskData.length;\n      const scale = 1 / 255;\n\n      for (let i = 3; i < length; i += 4) {\n        const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n        layerData[i] = layerData[i] * alpha * scale | 0;\n      }\n    }\n\n    function composeSMaskLuminosity(maskData, layerData, transferMap) {\n      const length = maskData.length;\n\n      for (let i = 3; i < length; i += 4) {\n        const y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n        layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n      }\n    }\n\n    function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\n      const hasBackdrop = !!backdrop;\n      const r0 = hasBackdrop ? backdrop[0] : 0;\n      const g0 = hasBackdrop ? backdrop[1] : 0;\n      const b0 = hasBackdrop ? backdrop[2] : 0;\n      let composeFn;\n\n      if (subtype === \"Luminosity\") {\n        composeFn = composeSMaskLuminosity;\n      } else {\n        composeFn = composeSMaskAlpha;\n      }\n\n      const PIXELS_TO_PROCESS = 1048576;\n      const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n\n      for (let row = 0; row < height; row += chunkSize) {\n        const chunkHeight = Math.min(chunkSize, height - row);\n        const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n        const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n        if (hasBackdrop) {\n          composeSMaskBackdrop(maskData.data, r0, g0, b0);\n        }\n\n        composeFn(maskData.data, layerData.data, transferMap);\n        maskCtx.putImageData(layerData, 0, row);\n      }\n    }\n\n    function composeSMask(ctx, smask, layerCtx, webGLContext) {\n      const mask = smask.canvas;\n      const maskCtx = smask.context;\n      ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\n      const backdrop = smask.backdrop || null;\n\n      if (!smask.transferMap && webGLContext.isEnabled) {\n        const composed = webGLContext.composeSMask({\n          layer: layerCtx.canvas,\n          mask,\n          properties: {\n            subtype: smask.subtype,\n            backdrop\n          }\n        });\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n        return;\n      }\n\n      genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);\n      ctx.drawImage(mask, 0, 0);\n    }\n\n    const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n    const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n    const NORMAL_CLIP = {};\n    const EO_CLIP = {};\n    CanvasGraphics.prototype = {\n      beginDrawing({\n        transform,\n        viewport,\n        transparency = false,\n        background = null\n      }) {\n        const width = this.ctx.canvas.width;\n        const height = this.ctx.canvas.height;\n        this.ctx.save();\n        this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.restore();\n\n        if (transparency) {\n          const transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n          this.compositeCtx = this.ctx;\n          this.transparentCanvas = transparentCanvas.canvas;\n          this.ctx = transparentCanvas.context;\n          this.ctx.save();\n          this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n        }\n\n        this.ctx.save();\n        resetCtxToDefault(this.ctx);\n\n        if (transform) {\n          this.ctx.transform.apply(this.ctx, transform);\n        }\n\n        this.ctx.transform.apply(this.ctx, viewport.transform);\n        this.baseTransform = this.ctx.mozCurrentTransform.slice();\n        this._combinedScaleFactor = Math.hypot(this.baseTransform[0], this.baseTransform[2]);\n\n        if (this.imageLayer) {\n          this.imageLayer.beginLayout();\n        }\n      },\n\n      executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n        const argsArray = operatorList.argsArray;\n        const fnArray = operatorList.fnArray;\n        let i = executionStartIdx || 0;\n        const argsArrayLen = argsArray.length;\n\n        if (argsArrayLen === i) {\n          return i;\n        }\n\n        const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n        const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n        let steps = 0;\n        const commonObjs = this.commonObjs;\n        const objs = this.objs;\n        let fnId;\n\n        while (true) {\n          if (stepper !== undefined && i === stepper.nextBreakPoint) {\n            stepper.breakIt(i, continueCallback);\n            return i;\n          }\n\n          fnId = fnArray[i];\n\n          if (fnId !== _util.OPS.dependency) {\n            this[fnId].apply(this, argsArray[i]);\n          } else {\n            for (const depObjId of argsArray[i]) {\n              const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n              if (!objsPool.has(depObjId)) {\n                objsPool.get(depObjId, continueCallback);\n                return i;\n              }\n            }\n          }\n\n          i++;\n\n          if (i === argsArrayLen) {\n            return i;\n          }\n\n          if (chunkOperations && ++steps > EXECUTION_STEPS) {\n            if (Date.now() > endTime) {\n              continueCallback();\n              return i;\n            }\n\n            steps = 0;\n          }\n        }\n      },\n      endDrawing: function CanvasGraphics_endDrawing() {\n        while (this.stateStack.length || this.current.activeSMask !== null) {\n          this.restore();\n        }\n\n        this.ctx.restore();\n\n        if (this.transparentCanvas) {\n          this.ctx = this.compositeCtx;\n          this.ctx.save();\n          this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n          this.ctx.drawImage(this.transparentCanvas, 0, 0);\n          this.ctx.restore();\n          this.transparentCanvas = null;\n        }\n\n        this.cachedCanvases.clear();\n        this.webGLContext.clear();\n\n        if (this.imageLayer) {\n          this.imageLayer.endLayout();\n        }\n      },\n      setLineWidth: function CanvasGraphics_setLineWidth(width) {\n        this.current.lineWidth = width;\n        this.ctx.lineWidth = width;\n      },\n      setLineCap: function CanvasGraphics_setLineCap(style) {\n        this.ctx.lineCap = LINE_CAP_STYLES[style];\n      },\n      setLineJoin: function CanvasGraphics_setLineJoin(style) {\n        this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n      },\n      setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n        this.ctx.miterLimit = limit;\n      },\n      setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n        const ctx = this.ctx;\n\n        if (ctx.setLineDash !== undefined) {\n          ctx.setLineDash(dashArray);\n          ctx.lineDashOffset = dashPhase;\n        }\n      },\n\n      setRenderingIntent(intent) {},\n\n      setFlatness(flatness) {},\n\n      setGState: function CanvasGraphics_setGState(states) {\n        for (let i = 0, ii = states.length; i < ii; i++) {\n          const state = states[i];\n          const key = state[0];\n          const value = state[1];\n\n          switch (key) {\n            case \"LW\":\n              this.setLineWidth(value);\n              break;\n\n            case \"LC\":\n              this.setLineCap(value);\n              break;\n\n            case \"LJ\":\n              this.setLineJoin(value);\n              break;\n\n            case \"ML\":\n              this.setMiterLimit(value);\n              break;\n\n            case \"D\":\n              this.setDash(value[0], value[1]);\n              break;\n\n            case \"RI\":\n              this.setRenderingIntent(value);\n              break;\n\n            case \"FL\":\n              this.setFlatness(value);\n              break;\n\n            case \"Font\":\n              this.setFont(value[0], value[1]);\n              break;\n\n            case \"CA\":\n              this.current.strokeAlpha = state[1];\n              break;\n\n            case \"ca\":\n              this.current.fillAlpha = state[1];\n              this.ctx.globalAlpha = state[1];\n              break;\n\n            case \"BM\":\n              this.ctx.globalCompositeOperation = value;\n              break;\n\n            case \"SMask\":\n              if (this.current.activeSMask) {\n                if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\n                  this.suspendSMaskGroup();\n                } else {\n                  this.endSMaskGroup();\n                }\n              }\n\n              this.current.activeSMask = value ? this.tempSMask : null;\n\n              if (this.current.activeSMask) {\n                this.beginSMaskGroup();\n              }\n\n              this.tempSMask = null;\n              break;\n\n            case \"TR\":\n              this.current.transferMaps = value;\n          }\n        }\n      },\n      beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n        const activeSMask = this.current.activeSMask;\n        const drawnWidth = activeSMask.canvas.width;\n        const drawnHeight = activeSMask.canvas.height;\n        const cacheId = \"smaskGroupAt\" + this.groupLevel;\n        const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n        const currentCtx = this.ctx;\n        const currentTransform = currentCtx.mozCurrentTransform;\n        this.ctx.save();\n        const groupCtx = scratchCanvas.context;\n        groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n        groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n        groupCtx.transform.apply(groupCtx, currentTransform);\n        activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n        copyCtxState(currentCtx, groupCtx);\n        this.ctx = groupCtx;\n        this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n        this.groupStack.push(currentCtx);\n        this.groupLevel++;\n      },\n      suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n        const groupCtx = this.ctx;\n        this.groupLevel--;\n        this.ctx = this.groupStack.pop();\n        composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n        this.ctx.restore();\n        this.ctx.save();\n        copyCtxState(groupCtx, this.ctx);\n        this.current.resumeSMaskCtx = groupCtx;\n\n        const deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n        this.ctx.transform.apply(this.ctx, deltaTransform);\n        groupCtx.save();\n        groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n        groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n        groupCtx.restore();\n      },\n      resumeSMaskGroup: function CanvasGraphics_resumeSMaskGroup() {\n        const groupCtx = this.current.resumeSMaskCtx;\n        const currentCtx = this.ctx;\n        this.ctx = groupCtx;\n        this.groupStack.push(currentCtx);\n        this.groupLevel++;\n      },\n      endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n        const groupCtx = this.ctx;\n        this.groupLevel--;\n        this.ctx = this.groupStack.pop();\n        composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n        this.ctx.restore();\n        copyCtxState(groupCtx, this.ctx);\n\n        const deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n        this.ctx.transform.apply(this.ctx, deltaTransform);\n      },\n      save: function CanvasGraphics_save() {\n        this.ctx.save();\n        const old = this.current;\n        this.stateStack.push(old);\n        this.current = old.clone();\n        this.current.resumeSMaskCtx = null;\n      },\n      restore: function CanvasGraphics_restore() {\n        if (this.current.resumeSMaskCtx) {\n          this.resumeSMaskGroup();\n        }\n\n        if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\n          this.endSMaskGroup();\n        }\n\n        if (this.stateStack.length !== 0) {\n          this.current = this.stateStack.pop();\n          this.ctx.restore();\n          this.pendingClip = null;\n          this._cachedGetSinglePixelWidth = null;\n        } else {\n          this.current.activeSMask = null;\n        }\n      },\n      transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n        this.ctx.transform(a, b, c, d, e, f);\n        this._cachedGetSinglePixelWidth = null;\n      },\n      constructPath: function CanvasGraphics_constructPath(ops, args) {\n        const ctx = this.ctx;\n        const current = this.current;\n        let x = current.x,\n            y = current.y;\n\n        for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n          switch (ops[i] | 0) {\n            case _util.OPS.rectangle:\n              x = args[j++];\n              y = args[j++];\n              const width = args[j++];\n              const height = args[j++];\n              const xw = x + width;\n              const yh = y + height;\n              ctx.moveTo(x, y);\n\n              if (width === 0 || height === 0) {\n                ctx.lineTo(xw, yh);\n              } else {\n                ctx.lineTo(xw, y);\n                ctx.lineTo(xw, yh);\n                ctx.lineTo(x, yh);\n              }\n\n              ctx.closePath();\n              break;\n\n            case _util.OPS.moveTo:\n              x = args[j++];\n              y = args[j++];\n              ctx.moveTo(x, y);\n              break;\n\n            case _util.OPS.lineTo:\n              x = args[j++];\n              y = args[j++];\n              ctx.lineTo(x, y);\n              break;\n\n            case _util.OPS.curveTo:\n              x = args[j + 4];\n              y = args[j + 5];\n              ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n              j += 6;\n              break;\n\n            case _util.OPS.curveTo2:\n              ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n              x = args[j + 2];\n              y = args[j + 3];\n              j += 4;\n              break;\n\n            case _util.OPS.curveTo3:\n              x = args[j + 2];\n              y = args[j + 3];\n              ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n              j += 4;\n              break;\n\n            case _util.OPS.closePath:\n              ctx.closePath();\n              break;\n          }\n        }\n\n        current.setCurrentPoint(x, y);\n      },\n      closePath: function CanvasGraphics_closePath() {\n        this.ctx.closePath();\n      },\n      stroke: function CanvasGraphics_stroke(consumePath) {\n        consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n        const ctx = this.ctx;\n        const strokeColor = this.current.strokeColor;\n        ctx.globalAlpha = this.current.strokeAlpha;\n\n        if (this.contentVisible) {\n          if (typeof strokeColor === \"object\" && strokeColor && strokeColor.getPattern) { // lwf\n            ctx.save();\n            const transform = ctx.mozCurrentTransform;\n\n            const scale = _util.Util.singularValueDecompose2dScale(transform)[0];\n\n            ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n            const lineWidth = this.getSinglePixelWidth();\n            const scaledLineWidth = this.current.lineWidth * scale;\n\n            if (lineWidth < 0 && -lineWidth >= scaledLineWidth) {\n              ctx.resetTransform();\n              ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            } else {\n              ctx.lineWidth = Math.max(lineWidth, scaledLineWidth);\n            }\n\n            ctx.stroke();\n            ctx.restore();\n          } else {\n            const lineWidth = this.getSinglePixelWidth();\n\n            if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n              ctx.save();\n              ctx.resetTransform();\n              ctx.lineWidth = Math.round(this._combinedScaleFactor);\n              ctx.stroke();\n              ctx.restore();\n            } else {\n              ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n              ctx.stroke();\n            }\n          }\n        }\n\n        if (consumePath) {\n          this.consumePath();\n        }\n\n        ctx.globalAlpha = this.current.fillAlpha;\n      },\n      closeStroke: function CanvasGraphics_closeStroke() {\n        this.closePath();\n        this.stroke();\n      },\n      fill: function CanvasGraphics_fill(consumePath) {\n        consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n        const ctx = this.ctx;\n        const fillColor = this.current.fillColor;\n        const isPatternFill = this.current.patternFill;\n        let needRestore = false;\n\n        if (isPatternFill) {\n          ctx.save();\n\n          if (this.baseTransform) {\n            ctx.setTransform.apply(ctx, this.baseTransform);\n          }\n\n          ctx.fillStyle = fillColor.getPattern(ctx, this);\n          needRestore = true;\n        }\n\n        if (this.contentVisible) {\n          if (this.pendingEOFill) {\n            ctx.fill(\"evenodd\");\n            this.pendingEOFill = false;\n          } else {\n            ctx.fill();\n          }\n        }\n\n        if (needRestore) {\n          ctx.restore();\n        }\n\n        if (consumePath) {\n          this.consumePath();\n        }\n      },\n      eoFill: function CanvasGraphics_eoFill() {\n        this.pendingEOFill = true;\n        this.fill();\n      },\n      fillStroke: function CanvasGraphics_fillStroke() {\n        this.fill(false);\n        this.stroke(false);\n        this.consumePath();\n      },\n      eoFillStroke: function CanvasGraphics_eoFillStroke() {\n        this.pendingEOFill = true;\n        this.fillStroke();\n      },\n      closeFillStroke: function CanvasGraphics_closeFillStroke() {\n        this.closePath();\n        this.fillStroke();\n      },\n      closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n        this.pendingEOFill = true;\n        this.closePath();\n        this.fillStroke();\n      },\n      endPath: function CanvasGraphics_endPath() {\n        this.consumePath();\n      },\n      clip: function CanvasGraphics_clip() {\n        this.pendingClip = NORMAL_CLIP;\n      },\n      eoClip: function CanvasGraphics_eoClip() {\n        this.pendingClip = EO_CLIP;\n      },\n      beginText: function CanvasGraphics_beginText() {\n        this.current.textMatrix = _util.IDENTITY_MATRIX;\n        this.current.textMatrixScale = 1;\n        this.current.x = this.current.lineX = 0;\n        this.current.y = this.current.lineY = 0;\n      },\n      endText: function CanvasGraphics_endText() {\n        const paths = this.pendingTextPaths;\n        const ctx = this.ctx;\n\n        if (paths === undefined) {\n          ctx.beginPath();\n          return;\n        }\n\n        ctx.save();\n        ctx.beginPath();\n\n        for (let i = 0; i < paths.length; i++) {\n          const path = paths[i];\n          ctx.setTransform.apply(ctx, path.transform);\n          ctx.translate(path.x, path.y);\n          path.addToPath(ctx, path.fontSize);\n        }\n\n        ctx.restore();\n        ctx.clip();\n        ctx.beginPath();\n        delete this.pendingTextPaths;\n      },\n      setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n        this.current.charSpacing = spacing;\n      },\n      setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n        this.current.wordSpacing = spacing;\n      },\n      setHScale: function CanvasGraphics_setHScale(scale) {\n        this.current.textHScale = scale / 100;\n      },\n      setLeading: function CanvasGraphics_setLeading(leading) {\n        this.current.leading = -leading;\n      },\n      setFont: function CanvasGraphics_setFont(fontRefName, size) {\n        const fontObj = this.commonObjs.get(fontRefName);\n        const current = this.current;\n\n        if (!fontObj) {\n          throw new Error(`Can't find font for ${fontRefName}`);\n        }\n\n        current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n\n        if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n          (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n        }\n\n        if (size < 0) {\n          size = -size;\n          current.fontDirection = -1;\n        } else {\n          current.fontDirection = 1;\n        }\n\n        this.current.font = fontObj;\n        this.current.fontSize = size;\n\n        if (fontObj.isType3Font) {\n          return;\n        }\n\n        const name = fontObj.loadedName || \"sans-serif\";\n        let bold = \"normal\";\n\n        if (fontObj.black) {\n          bold = \"900\";\n        } else if (fontObj.bold) {\n          bold = \"bold\";\n        }\n\n        const italic = fontObj.italic ? \"italic\" : \"normal\";\n        const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n        let browserFontSize = size;\n\n        if (size < MIN_FONT_SIZE) {\n          browserFontSize = MIN_FONT_SIZE;\n        } else if (size > MAX_FONT_SIZE) {\n          browserFontSize = MAX_FONT_SIZE;\n        }\n\n        this.current.fontSizeScale = size / browserFontSize;\n        this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n      },\n      setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n        this.current.textRenderingMode = mode;\n      },\n      setTextRise: function CanvasGraphics_setTextRise(rise) {\n        this.current.textRise = rise;\n      },\n      moveText: function CanvasGraphics_moveText(x, y) {\n        this.current.x = this.current.lineX += x;\n        this.current.y = this.current.lineY += y;\n      },\n      setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n        this.setLeading(-y);\n        this.moveText(x, y);\n      },\n      setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n        this.current.textMatrix = [a, b, c, d, e, f];\n        this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n        this.current.x = this.current.lineX = 0;\n        this.current.y = this.current.lineY = 0;\n      },\n      nextLine: function CanvasGraphics_nextLine() {\n        this.moveText(0, this.current.leading);\n      },\n\n      paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n        const ctx = this.ctx;\n        const current = this.current;\n        const font = current.font;\n        const textRenderingMode = current.textRenderingMode;\n        const fontSize = current.fontSize / current.fontSizeScale;\n        const fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n        const isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n        const patternFill = current.patternFill && !font.missingFile;\n        let addToPath;\n\n        if (font.disableFontFace || isAddToPathSet || patternFill) {\n          addToPath = font.getPathGenerator(this.commonObjs, character);\n        }\n\n        if (font.disableFontFace || patternFill) {\n          ctx.save();\n          ctx.translate(x, y);\n          ctx.beginPath();\n          addToPath(ctx, fontSize);\n\n          if (patternTransform) {\n            ctx.setTransform.apply(ctx, patternTransform);\n          }\n\n          if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            ctx.fill();\n          }\n\n          if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            if (resetLineWidthToOne) {\n              ctx.resetTransform();\n              ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            }\n\n            ctx.stroke();\n          }\n\n          ctx.restore();\n        } else {\n          if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            ctx.fillText(character, x, y);\n          }\n\n          if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            if (resetLineWidthToOne) {\n              ctx.save();\n              ctx.moveTo(x, y);\n              ctx.resetTransform();\n              ctx.lineWidth = Math.round(this._combinedScaleFactor);\n              ctx.strokeText(character, 0, 0);\n              ctx.restore();\n            } else {\n              ctx.strokeText(character, x, y);\n            }\n          }\n        }\n\n        if (isAddToPathSet) {\n          const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n          paths.push({\n            transform: ctx.mozCurrentTransform,\n            x,\n            y,\n            fontSize,\n            addToPath\n          });\n        }\n      },\n\n      get isFontSubpixelAAEnabled() {\n        const {\n          context: ctx\n        } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n        ctx.scale(1.5, 1);\n        ctx.fillText(\"I\", 0, 10);\n        const data = ctx.getImageData(0, 0, 10, 10).data;\n        let enabled = false;\n\n        for (let i = 3; i < data.length; i += 4) {\n          if (data[i] > 0 && data[i] < 255) {\n            enabled = true;\n            break;\n          }\n        }\n\n        return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n      },\n\n      showText: function CanvasGraphics_showText(glyphs) {\n        const current = this.current;\n        const font = current.font;\n\n        if (font.isType3Font) {\n          return this.showType3Text(glyphs);\n        }\n\n        const fontSize = current.fontSize;\n\n        if (fontSize === 0) {\n          return undefined;\n        }\n\n        const ctx = this.ctx;\n        const fontSizeScale = current.fontSizeScale;\n        const charSpacing = current.charSpacing;\n        const wordSpacing = current.wordSpacing;\n        const fontDirection = current.fontDirection;\n        const textHScale = current.textHScale * fontDirection;\n        const glyphsLength = glyphs.length;\n        const vertical = font.vertical;\n        const spacingDir = vertical ? 1 : -1;\n        const defaultVMetrics = font.defaultVMetrics;\n        const widthAdvanceScale = fontSize * current.fontMatrix[0];\n        const simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n        ctx.save();\n        let patternTransform;\n\n        if (current.patternFill) {\n          ctx.save();\n          const pattern = current.fillColor.getPattern(ctx, this);\n          patternTransform = ctx.mozCurrentTransform;\n          ctx.restore();\n          ctx.fillStyle = pattern;\n        }\n\n        ctx.transform.apply(ctx, current.textMatrix);\n        ctx.translate(current.x, current.y + current.textRise);\n\n        if (fontDirection > 0) {\n          ctx.scale(textHScale, -1);\n        } else {\n          ctx.scale(textHScale, 1);\n        }\n\n        let lineWidth = current.lineWidth;\n        let resetLineWidthToOne = false;\n        const scale = current.textMatrixScale;\n\n        if (scale === 0 || lineWidth === 0) {\n          const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n          if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n            this._cachedGetSinglePixelWidth = null;\n            lineWidth = this.getSinglePixelWidth();\n            resetLineWidthToOne = lineWidth < 0;\n          }\n        } else {\n          lineWidth /= scale;\n        }\n\n        if (fontSizeScale !== 1.0) {\n          ctx.scale(fontSizeScale, fontSizeScale);\n          lineWidth /= fontSizeScale;\n        }\n\n        ctx.lineWidth = lineWidth;\n        let x = 0,\n            i;\n\n        for (i = 0; i < glyphsLength; ++i) {\n          const glyph = glyphs[i];\n\n          if ((0, _util.isNum)(glyph)) {\n            x += spacingDir * glyph * fontSize / 1000;\n            continue;\n          }\n\n          let restoreNeeded = false;\n          const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n          const character = glyph.fontChar;\n          const accent = glyph.accent;\n          let scaledX, scaledY;\n          let width = glyph.width;\n\n          if (vertical) {\n            const vmetric = glyph.vmetric || defaultVMetrics;\n            const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n            const vy = vmetric[2] * widthAdvanceScale;\n            width = vmetric ? -vmetric[0] : width;\n            scaledX = vx / fontSizeScale;\n            scaledY = (x + vy) / fontSizeScale;\n          } else {\n            scaledX = x / fontSizeScale;\n            scaledY = 0;\n          }\n\n          if (font.remeasure && width > 0) {\n            const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n\n            if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n              const characterScaleX = width / measuredWidth;\n              restoreNeeded = true;\n              ctx.save();\n              ctx.scale(characterScaleX, 1);\n              scaledX /= characterScaleX;\n            } else if (width !== measuredWidth) {\n              scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n            }\n          }\n\n          if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n            if (simpleFillText && !accent) {\n              ctx.fillText(character, scaledX, scaledY);\n            } else {\n              this.paintChar(character, scaledX, scaledY, patternTransform, resetLineWidthToOne);\n\n              if (accent) {\n                const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n                const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n                this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform, resetLineWidthToOne);\n              }\n            }\n          }\n\n          let charWidth;\n\n          if (vertical) {\n            charWidth = width * widthAdvanceScale - spacing * fontDirection;\n          } else {\n            charWidth = width * widthAdvanceScale + spacing * fontDirection;\n          }\n\n          x += charWidth;\n\n          if (restoreNeeded) {\n            ctx.restore();\n          }\n        }\n\n        if (vertical) {\n          current.y -= x;\n        } else {\n          current.x += x * textHScale;\n        }\n\n        ctx.restore();\n      },\n      showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n        const ctx = this.ctx;\n        const current = this.current;\n        const font = current.font;\n        const fontSize = current.fontSize;\n        const fontDirection = current.fontDirection;\n        const spacingDir = font.vertical ? 1 : -1;\n        const charSpacing = current.charSpacing;\n        const wordSpacing = current.wordSpacing;\n        const textHScale = current.textHScale * fontDirection;\n        const fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        const glyphsLength = glyphs.length;\n        const isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n        let i, glyph, width, spacingLength;\n\n        if (isTextInvisible || fontSize === 0) {\n          return;\n        }\n\n        this._cachedGetSinglePixelWidth = null;\n        ctx.save();\n        ctx.transform.apply(ctx, current.textMatrix);\n        ctx.translate(current.x, current.y);\n        ctx.scale(textHScale, fontDirection);\n\n        for (i = 0; i < glyphsLength; ++i) {\n          glyph = glyphs[i];\n\n          if ((0, _util.isNum)(glyph)) {\n            spacingLength = spacingDir * glyph * fontSize / 1000;\n            this.ctx.translate(spacingLength, 0);\n            current.x += spacingLength * textHScale;\n            continue;\n          }\n\n          const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n          const operatorList = font.charProcOperatorList[glyph.operatorListId];\n\n          if (!operatorList) {\n            (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n            continue;\n          }\n\n          if (this.contentVisible) {\n            this.processingType3 = glyph;\n            this.save();\n            ctx.scale(fontSize, fontSize);\n            ctx.transform.apply(ctx, fontMatrix);\n            this.executeOperatorList(operatorList);\n            this.restore();\n          }\n\n          const transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n\n          width = transformed[0] * fontSize + spacing;\n          ctx.translate(width, 0);\n          current.x += width * textHScale;\n        }\n\n        ctx.restore();\n        this.processingType3 = null;\n      },\n      setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {},\n      setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n        this.ctx.rect(llx, lly, urx - llx, ury - lly);\n        this.clip();\n        this.endPath();\n      },\n      getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n        let pattern;\n\n        if (IR[0] === \"TilingPattern\") {\n          const color = IR[1];\n          const baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n          const canvasGraphicsFactory = {\n            createCanvasGraphics: ctx => {\n              return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext);\n            }\n          };\n          pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n        } else {\n          pattern = (0, _pattern_helper.getShadingPatternFromIR)(IR);\n        }\n\n        return pattern;\n      },\n      setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n        this.current.strokeColor = this.getColorN_Pattern(arguments);\n      },\n      setFillColorN: function CanvasGraphics_setFillColorN() {\n        this.current.fillColor = this.getColorN_Pattern(arguments);\n        this.current.patternFill = true;\n      },\n      setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n        const color = _util.Util.makeHexColor(r, g, b);\n\n        this.ctx.strokeStyle = color;\n        this.current.strokeColor = color;\n      },\n      setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n        const color = _util.Util.makeHexColor(r, g, b);\n\n        this.ctx.fillStyle = color;\n        this.current.fillColor = color;\n        this.current.patternFill = false;\n      },\n      shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const ctx = this.ctx;\n        this.save();\n        const pattern = (0, _pattern_helper.getShadingPatternFromIR)(patternIR);\n        ctx.fillStyle = pattern.getPattern(ctx, this, true);\n        const inv = ctx.mozCurrentTransformInverse;\n\n        if (inv) {\n          const canvas = ctx.canvas;\n          const width = canvas.width;\n          const height = canvas.height;\n\n          const bl = _util.Util.applyTransform([0, 0], inv);\n\n          const br = _util.Util.applyTransform([0, height], inv);\n\n          const ul = _util.Util.applyTransform([width, 0], inv);\n\n          const ur = _util.Util.applyTransform([width, height], inv);\n\n          const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n          const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n          const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n          const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n          this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n        } else {\n          this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n        }\n\n        this.restore();\n      },\n      beginInlineImage: function CanvasGraphics_beginInlineImage() {\n        (0, _util.unreachable)(\"Should not call beginInlineImage\");\n      },\n      beginImageData: function CanvasGraphics_beginImageData() {\n        (0, _util.unreachable)(\"Should not call beginImageData\");\n      },\n      paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        this.save();\n        this.baseTransformStack.push(this.baseTransform);\n\n        if (Array.isArray(matrix) && matrix.length === 6) {\n          this.transform.apply(this, matrix);\n        }\n\n        this.baseTransform = this.ctx.mozCurrentTransform;\n\n        if (bbox) {\n          const width = bbox[2] - bbox[0];\n          const height = bbox[3] - bbox[1];\n          this.ctx.rect(bbox[0], bbox[1], width, height);\n          this.clip();\n          this.endPath();\n        }\n      },\n      paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        this.restore();\n        this.baseTransform = this.baseTransformStack.pop();\n      },\n      beginGroup: function CanvasGraphics_beginGroup(group) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        this.save();\n        const currentCtx = this.ctx;\n\n        if (!group.isolated) {\n          (0, _util.info)(\"TODO: Support non-isolated groups.\");\n        }\n\n        if (group.knockout) {\n          (0, _util.warn)(\"Knockout groups not supported.\");\n        }\n\n        const currentTransform = currentCtx.mozCurrentTransform;\n\n        if (group.matrix) {\n          currentCtx.transform.apply(currentCtx, group.matrix);\n        }\n\n        if (!group.bbox) {\n          throw new Error(\"Bounding box is required.\");\n        }\n\n        let bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n\n        const canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n        bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n        const offsetX = Math.floor(bounds[0]);\n        const offsetY = Math.floor(bounds[1]);\n        let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n        let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n        let scaleX = 1,\n            scaleY = 1;\n\n        if (drawnWidth > MAX_GROUP_SIZE) {\n          scaleX = drawnWidth / MAX_GROUP_SIZE;\n          drawnWidth = MAX_GROUP_SIZE;\n        }\n\n        if (drawnHeight > MAX_GROUP_SIZE) {\n          scaleY = drawnHeight / MAX_GROUP_SIZE;\n          drawnHeight = MAX_GROUP_SIZE;\n        }\n\n        let cacheId = \"groupAt\" + this.groupLevel;\n\n        if (group.smask) {\n          cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n        }\n\n        const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n        const groupCtx = scratchCanvas.context;\n        groupCtx.scale(1 / scaleX, 1 / scaleY);\n        groupCtx.translate(-offsetX, -offsetY);\n        groupCtx.transform.apply(groupCtx, currentTransform);\n\n        if (group.smask) {\n          this.smaskStack.push({\n            canvas: scratchCanvas.canvas,\n            context: groupCtx,\n            offsetX,\n            offsetY,\n            scaleX,\n            scaleY,\n            subtype: group.smask.subtype,\n            backdrop: group.smask.backdrop,\n            transferMap: group.smask.transferMap || null,\n            startTransformInverse: null\n          });\n        } else {\n          currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n          currentCtx.translate(offsetX, offsetY);\n          currentCtx.scale(scaleX, scaleY);\n        }\n\n        copyCtxState(currentCtx, groupCtx);\n        this.ctx = groupCtx;\n        this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n        this.groupStack.push(currentCtx);\n        this.groupLevel++;\n        this.current.activeSMask = null;\n      },\n      endGroup: function CanvasGraphics_endGroup(group) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        this.groupLevel--;\n        const groupCtx = this.ctx;\n        this.ctx = this.groupStack.pop();\n\n        if (this.ctx.imageSmoothingEnabled !== undefined) {\n          this.ctx.imageSmoothingEnabled = false;\n        } else {\n          this.ctx.mozImageSmoothingEnabled = false;\n        }\n\n        if (group.smask) {\n          this.tempSMask = this.smaskStack.pop();\n        } else {\n          this.ctx.drawImage(groupCtx.canvas, 0, 0);\n        }\n\n        this.restore();\n      },\n      beginAnnotations: function CanvasGraphics_beginAnnotations() {\n        this.save();\n\n        if (this.baseTransform) {\n          this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n        }\n      },\n      endAnnotations: function CanvasGraphics_endAnnotations() {\n        this.restore();\n      },\n      beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {\n        this.save();\n        resetCtxToDefault(this.ctx);\n        this.current = new CanvasExtraState();\n\n        if (Array.isArray(rect) && rect.length === 4) {\n          const width = rect[2] - rect[0];\n          const height = rect[3] - rect[1];\n          this.ctx.rect(rect[0], rect[1], width, height);\n          this.clip();\n          this.endPath();\n        }\n\n        this.transform.apply(this, transform);\n        this.transform.apply(this, matrix);\n      },\n      endAnnotation: function CanvasGraphics_endAnnotation() {\n        this.restore();\n      },\n      paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const ctx = this.ctx;\n        const width = img.width,\n              height = img.height;\n        const fillColor = this.current.fillColor;\n        const isPatternFill = this.current.patternFill;\n        const glyph = this.processingType3;\n\n        if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n          if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n            glyph.compiled = compileType3Glyph({\n              data: img.data,\n              width,\n              height\n            });\n          } else {\n            glyph.compiled = null;\n          }\n        }\n\n        if (glyph && glyph.compiled) { // lwf\n          glyph.compiled(ctx);\n          return;\n        }\n\n        const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n        const maskCtx = maskCanvas.context;\n        maskCtx.save();\n        putBinaryImageMask(maskCtx, img);\n        maskCtx.globalCompositeOperation = \"source-in\";\n        maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n        maskCtx.restore();\n        this.paintInlineImageXObject(maskCanvas.canvas);\n      },\n\n      paintImageMaskXObjectRepeat(imgData, scaleX, skewX = 0, skewY = 0, scaleY, positions) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const width = imgData.width;\n        const height = imgData.height;\n        const fillColor = this.current.fillColor;\n        const isPatternFill = this.current.patternFill;\n        const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n        const maskCtx = maskCanvas.context;\n        maskCtx.save();\n        putBinaryImageMask(maskCtx, imgData);\n        maskCtx.globalCompositeOperation = \"source-in\";\n        maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n        maskCtx.restore();\n        const ctx = this.ctx;\n\n        for (let i = 0, ii = positions.length; i < ii; i += 2) {\n          ctx.save();\n          ctx.transform(scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]);\n          ctx.scale(1, -1);\n          ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n          ctx.restore();\n        }\n      },\n\n      paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const ctx = this.ctx;\n        const fillColor = this.current.fillColor;\n        const isPatternFill = this.current.patternFill;\n\n        for (let i = 0, ii = images.length; i < ii; i++) {\n          const image = images[i];\n          const width = image.width,\n                height = image.height;\n          const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n          const maskCtx = maskCanvas.context;\n          maskCtx.save();\n          putBinaryImageMask(maskCtx, image);\n          maskCtx.globalCompositeOperation = \"source-in\";\n          maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n          maskCtx.fillRect(0, 0, width, height);\n          maskCtx.restore();\n          ctx.save();\n          ctx.transform.apply(ctx, image.transform);\n          ctx.scale(1, -1);\n          ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n          ctx.restore();\n        }\n      },\n      paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n        if (!imgData) {\n          (0, _util.warn)(\"Dependent image isn't ready yet\");\n          return;\n        }\n\n        this.paintInlineImageXObject(imgData);\n      },\n      paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n        if (!imgData) {\n          (0, _util.warn)(\"Dependent image isn't ready yet\");\n          return;\n        }\n\n        const width = imgData.width;\n        const height = imgData.height;\n        const map = [];\n\n        for (let i = 0, ii = positions.length; i < ii; i += 2) {\n          map.push({\n            transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n            x: 0,\n            y: 0,\n            w: width,\n            h: height\n          });\n        }\n\n        this.paintInlineImageXObjectGroup(imgData, map);\n      },\n      paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const width = imgData.width;\n        const height = imgData.height;\n        const ctx = this.ctx;\n        this.save();\n        ctx.scale(1 / width, -1 / height);\n        const currentTransform = ctx.mozCurrentTransformInverse;\n        const a = currentTransform[0],\n              b = currentTransform[1];\n        let widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n        const c = currentTransform[2],\n              d = currentTransform[3];\n        let heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n        let imgToPaint, tmpCanvas, tmpCtx;\n\n        if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n          imgToPaint = imgData;\n        } else {\n          tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n          tmpCtx = tmpCanvas.context;\n          putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n          imgToPaint = tmpCanvas.canvas;\n        }\n\n        let paintWidth = width,\n            paintHeight = height;\n        let tmpCanvasId = \"prescale1\";\n\n        while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n          let newWidth = paintWidth,\n              newHeight = paintHeight;\n\n          if (widthScale > 2 && paintWidth > 1) {\n            newWidth = Math.ceil(paintWidth / 2);\n            widthScale /= paintWidth / newWidth;\n          }\n\n          if (heightScale > 2 && paintHeight > 1) {\n            newHeight = Math.ceil(paintHeight / 2);\n            heightScale /= paintHeight / newHeight;\n          }\n\n          tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n          tmpCtx = tmpCanvas.context;\n          tmpCtx.clearRect(0, 0, newWidth, newHeight);\n          tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n          imgToPaint = tmpCanvas.canvas;\n          paintWidth = newWidth;\n          paintHeight = newHeight;\n          tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n        }\n\n        ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);\n\n        if (this.imageLayer) {\n          const position = this.getCanvasPosition(0, -height);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: width / currentTransform[0],\n            height: height / currentTransform[3]\n          });\n        }\n\n        this.restore();\n      },\n      paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        const ctx = this.ctx;\n        const w = imgData.width;\n        const h = imgData.height;\n        const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n        const tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n        for (let i = 0, ii = map.length; i < ii; i++) {\n          const entry = map[i];\n          ctx.save();\n          ctx.transform.apply(ctx, entry.transform);\n          ctx.scale(1, -1);\n          ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n\n          if (this.imageLayer) {\n            const position = this.getCanvasPosition(entry.x, entry.y);\n            this.imageLayer.appendImage({\n              imgData,\n              left: position[0],\n              top: position[1],\n              width: w,\n              height: h\n            });\n          }\n\n          ctx.restore();\n        }\n      },\n      paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n        if (!this.contentVisible) {\n          return;\n        }\n\n        this.ctx.fillRect(0, 0, 1, 1);\n      },\n      markPoint: function CanvasGraphics_markPoint(tag) {},\n      markPointProps: function CanvasGraphics_markPointProps(tag, properties) {},\n      beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n        this.markedContentStack.push({\n          visible: true\n        });\n      },\n      beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {\n        if (tag === \"OC\") {\n          this.markedContentStack.push({\n            visible: this.optionalContentConfig.isVisible(properties)\n          });\n        } else {\n          this.markedContentStack.push({\n            visible: true\n          });\n        }\n\n        this.contentVisible = this.isContentVisible();\n      },\n      endMarkedContent: function CanvasGraphics_endMarkedContent() {\n        this.markedContentStack.pop();\n        this.contentVisible = this.isContentVisible();\n      },\n      beginCompat: function CanvasGraphics_beginCompat() {},\n      endCompat: function CanvasGraphics_endCompat() {},\n      consumePath: function CanvasGraphics_consumePath() {\n        const ctx = this.ctx;\n\n        if (this.pendingClip) {\n          if (this.pendingClip === EO_CLIP) {\n            ctx.clip(\"evenodd\");\n          } else {\n            ctx.clip();\n          }\n\n          this.pendingClip = null;\n        }\n\n        ctx.beginPath();\n      },\n\n      getSinglePixelWidth() {\n        if (this._cachedGetSinglePixelWidth === null) {\n          const m = this.ctx.mozCurrentTransform;\n          const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n          const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n          const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n          const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n\n          if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n            this._cachedGetSinglePixelWidth = -(this._combinedScaleFactor * pixelHeight);\n          } else if (absDet > Number.EPSILON) {\n            this._cachedGetSinglePixelWidth = pixelHeight * 1.0000001;\n          } else {\n            this._cachedGetSinglePixelWidth = 1;\n          }\n        }\n\n        return this._cachedGetSinglePixelWidth;\n      },\n\n      getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n        const transform = this.ctx.mozCurrentTransform;\n        return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n      },\n      isContentVisible: function CanvasGraphics_isContentVisible() {\n        for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n          if (!this.markedContentStack[i].visible) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    };\n\n    for (const op in _util.OPS) {\n      CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n    }\n\n    return CanvasGraphics;\n  }();\n\n  exports.CanvasGraphics = CanvasGraphics;\n\n  /***/ }),\n  /* 11 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.getShadingPatternFromIR = getShadingPatternFromIR;\n  exports.TilingPattern = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  const ShadingIRs = {};\n\n  function applyBoundingBox(ctx, bbox) {\n    if (!bbox || typeof Path2D === \"undefined\") {\n      return;\n    }\n\n    const width = bbox[2] - bbox[0];\n    const height = bbox[3] - bbox[1];\n    const region = new Path2D();\n    region.rect(bbox[0], bbox[1], width, height);\n    ctx.clip(region);\n  }\n\n  ShadingIRs.RadialAxial = {\n    fromIR: function RadialAxial_fromIR(raw) {\n      const type = raw[1];\n      const bbox = raw[2];\n      const colorStops = raw[3];\n      const p0 = raw[4];\n      const p1 = raw[5];\n      const r0 = raw[6];\n      const r1 = raw[7];\n      return {\n        getPattern: function RadialAxial_getPattern(ctx) {\n          applyBoundingBox(ctx, bbox);\n          let grad;\n\n          if (type === \"axial\") {\n            grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n          } else if (type === \"radial\") {\n            grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n          }\n\n          for (let i = 0, ii = colorStops.length; i < ii; ++i) {\n            const c = colorStops[i];\n            grad.addColorStop(c[0], c[1]);\n          }\n\n          return grad;\n        }\n      };\n    }\n  };\n\n  const createMeshCanvas = function createMeshCanvasClosure() {\n    function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n      const coords = context.coords,\n            colors = context.colors;\n      const bytes = data.data,\n            rowSize = data.width * 4;\n      let tmp;\n\n      if (coords[p1 + 1] > coords[p2 + 1]) {\n        tmp = p1;\n        p1 = p2;\n        p2 = tmp;\n        tmp = c1;\n        c1 = c2;\n        c2 = tmp;\n      }\n\n      if (coords[p2 + 1] > coords[p3 + 1]) {\n        tmp = p2;\n        p2 = p3;\n        p3 = tmp;\n        tmp = c2;\n        c2 = c3;\n        c3 = tmp;\n      }\n\n      if (coords[p1 + 1] > coords[p2 + 1]) {\n        tmp = p1;\n        p1 = p2;\n        p2 = tmp;\n        tmp = c1;\n        c1 = c2;\n        c2 = tmp;\n      }\n\n      const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n      const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n      const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n      const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n      const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n      const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n\n      if (y1 >= y3) {\n        return;\n      }\n\n      const c1r = colors[c1],\n            c1g = colors[c1 + 1],\n            c1b = colors[c1 + 2];\n      const c2r = colors[c2],\n            c2g = colors[c2 + 1],\n            c2b = colors[c2 + 2];\n      const c3r = colors[c3],\n            c3g = colors[c3 + 1],\n            c3b = colors[c3 + 2];\n      const minY = Math.round(y1),\n            maxY = Math.round(y3);\n      let xa, car, cag, cab;\n      let xb, cbr, cbg, cbb;\n\n      for (let y = minY; y <= maxY; y++) {\n        if (y < y2) {\n          let k;\n\n          if (y < y1) {\n            k = 0;\n          } else if (y1 === y2) {\n            k = 1;\n          } else {\n            k = (y1 - y) / (y1 - y2);\n          }\n\n          xa = x1 - (x1 - x2) * k;\n          car = c1r - (c1r - c2r) * k;\n          cag = c1g - (c1g - c2g) * k;\n          cab = c1b - (c1b - c2b) * k;\n        } else {\n          let k;\n\n          if (y > y3) {\n            k = 1;\n          } else if (y2 === y3) {\n            k = 0;\n          } else {\n            k = (y2 - y) / (y2 - y3);\n          }\n\n          xa = x2 - (x2 - x3) * k;\n          car = c2r - (c2r - c3r) * k;\n          cag = c2g - (c2g - c3g) * k;\n          cab = c2b - (c2b - c3b) * k;\n        }\n\n        let k;\n\n        if (y < y1) {\n          k = 0;\n        } else if (y > y3) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y3);\n        }\n\n        xb = x1 - (x1 - x3) * k;\n        cbr = c1r - (c1r - c3r) * k;\n        cbg = c1g - (c1g - c3g) * k;\n        cbb = c1b - (c1b - c3b) * k;\n        const x1_ = Math.round(Math.min(xa, xb));\n        const x2_ = Math.round(Math.max(xa, xb));\n        let j = rowSize * y + x1_ * 4;\n\n        for (let x = x1_; x <= x2_; x++) {\n          k = (xa - x) / (xa - xb);\n\n          if (k < 0) {\n            k = 0;\n          } else if (k > 1) {\n            k = 1;\n          }\n\n          bytes[j++] = car - (car - cbr) * k | 0;\n          bytes[j++] = cag - (cag - cbg) * k | 0;\n          bytes[j++] = cab - (cab - cbb) * k | 0;\n          bytes[j++] = 255;\n        }\n      }\n    }\n\n    function drawFigure(data, figure, context) {\n      const ps = figure.coords;\n      const cs = figure.colors;\n      let i, ii;\n\n      switch (figure.type) {\n        case \"lattice\":\n          const verticesPerRow = figure.verticesPerRow;\n          const rows = Math.floor(ps.length / verticesPerRow) - 1;\n          const cols = verticesPerRow - 1;\n\n          for (i = 0; i < rows; i++) {\n            let q = i * verticesPerRow;\n\n            for (let j = 0; j < cols; j++, q++) {\n              drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n              drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n            }\n          }\n\n          break;\n\n        case \"triangles\":\n          for (i = 0, ii = ps.length; i < ii; i += 3) {\n            drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n          }\n\n          break;\n\n        default:\n          throw new Error(\"illegal figure\");\n      }\n    }\n\n    function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases, webGLContext) {\n      const EXPECTED_SCALE = 1.1;\n      const MAX_PATTERN_SIZE = 3000;\n      const BORDER_SIZE = 2;\n      const offsetX = Math.floor(bounds[0]);\n      const offsetY = Math.floor(bounds[1]);\n      const boundsWidth = Math.ceil(bounds[2]) - offsetX;\n      const boundsHeight = Math.ceil(bounds[3]) - offsetY;\n      const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n      const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n      const scaleX = boundsWidth / width;\n      const scaleY = boundsHeight / height;\n      const context = {\n        coords,\n        colors,\n        offsetX: -offsetX,\n        offsetY: -offsetY,\n        scaleX: 1 / scaleX,\n        scaleY: 1 / scaleY\n      };\n      const paddedWidth = width + BORDER_SIZE * 2;\n      const paddedHeight = height + BORDER_SIZE * 2;\n      let canvas, tmpCanvas, i, ii;\n\n      if (webGLContext.isEnabled) {\n        canvas = webGLContext.drawFigures({\n          width,\n          height,\n          backgroundColor,\n          figures,\n          context\n        });\n        tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n        tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n        canvas = tmpCanvas.canvas;\n      } else {\n        tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n        const tmpCtx = tmpCanvas.context;\n        const data = tmpCtx.createImageData(width, height);\n\n        if (backgroundColor) {\n          const bytes = data.data;\n\n          for (i = 0, ii = bytes.length; i < ii; i += 4) {\n            bytes[i] = backgroundColor[0];\n            bytes[i + 1] = backgroundColor[1];\n            bytes[i + 2] = backgroundColor[2];\n            bytes[i + 3] = 255;\n          }\n        }\n\n        for (i = 0; i < figures.length; i++) {\n          drawFigure(data, figures[i], context);\n        }\n\n        tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n        canvas = tmpCanvas.canvas;\n      }\n\n      return {\n        canvas,\n        offsetX: offsetX - BORDER_SIZE * scaleX,\n        offsetY: offsetY - BORDER_SIZE * scaleY,\n        scaleX,\n        scaleY\n      };\n    }\n\n    return createMeshCanvas;\n  }();\n\n  ShadingIRs.Mesh = {\n    fromIR: function Mesh_fromIR(raw) {\n      const coords = raw[2];\n      const colors = raw[3];\n      const figures = raw[4];\n      const bounds = raw[5];\n      const matrix = raw[6];\n      const bbox = raw[7];\n      const background = raw[8];\n      return {\n        getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n          applyBoundingBox(ctx, bbox);\n          let scale;\n\n          if (shadingFill) {\n            scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n          } else {\n            scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n\n            if (matrix) {\n              const matrixScale = _util.Util.singularValueDecompose2dScale(matrix);\n\n              scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n            }\n          }\n\n          const temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases, owner.webGLContext);\n\n          if (!shadingFill) {\n            ctx.setTransform.apply(ctx, owner.baseTransform);\n\n            if (matrix) {\n              ctx.transform.apply(ctx, matrix);\n            }\n          }\n\n          ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n          ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n          return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n        }\n      };\n    }\n  };\n  ShadingIRs.Dummy = {\n    fromIR: function Dummy_fromIR() {\n      return {\n        getPattern: function Dummy_fromIR_getPattern() {\n          return \"hotpink\";\n        }\n      };\n    }\n  };\n\n  function getShadingPatternFromIR(raw) {\n    const shadingIR = ShadingIRs[raw[0]];\n\n    if (!shadingIR) {\n      throw new Error(`Unknown IR type: ${raw[0]}`);\n    }\n\n    return shadingIR.fromIR(raw);\n  }\n\n  const TilingPattern = function TilingPatternClosure() {\n    const PaintType = {\n      COLORED: 1,\n      UNCOLORED: 2\n    };\n    const MAX_PATTERN_SIZE = 3000;\n\n    function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n      this.operatorList = IR[2];\n      this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n      this.bbox = IR[4];\n      this.xstep = IR[5];\n      this.ystep = IR[6];\n      this.paintType = IR[7];\n      this.tilingType = IR[8];\n      this.color = color;\n      this.canvasGraphicsFactory = canvasGraphicsFactory;\n      this.baseTransform = baseTransform;\n      this.ctx = ctx;\n    }\n\n    TilingPattern.prototype = {\n      createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n        const operatorList = this.operatorList;\n        const bbox = this.bbox;\n        const xstep = this.xstep;\n        const ystep = this.ystep;\n        const paintType = this.paintType;\n        const tilingType = this.tilingType;\n        const color = this.color;\n        const canvasGraphicsFactory = this.canvasGraphicsFactory;\n        (0, _util.info)(\"TilingType: \" + tilingType);\n        const x0 = bbox[0],\n              y0 = bbox[1],\n              x1 = bbox[2],\n              y1 = bbox[3];\n\n        const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n        const curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n\n        const combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n        const dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n        const dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n        const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n        const tmpCtx = tmpCanvas.context;\n        const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n        graphics.groupLevel = owner.groupLevel;\n        this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n        graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n        graphics.transform(1, 0, 0, 1, -x0, -y0);\n        this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n        graphics.executeOperatorList(operatorList);\n        this.ctx.transform(1, 0, 0, 1, x0, y0);\n        this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n        return tmpCanvas.canvas;\n      },\n      getSizeAndScale: function TilingPattern_getSizeAndScale(step, realOutputSize, scale) {\n        step = Math.abs(step);\n        const maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n        let size = Math.ceil(step * scale);\n\n        if (size >= maxSize) {\n          size = maxSize;\n        } else {\n          scale = size / step;\n        }\n\n        return {\n          scale,\n          size\n        };\n      },\n      clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n        if (Array.isArray(bbox) && bbox.length === 4) {\n          const bboxWidth = x1 - x0;\n          const bboxHeight = y1 - y0;\n          graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n          graphics.clip();\n          graphics.endPath();\n        }\n      },\n      setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\n        const context = graphics.ctx,\n              current = graphics.current;\n\n        switch (paintType) {\n          case PaintType.COLORED:\n            const ctx = this.ctx;\n            context.fillStyle = ctx.fillStyle;\n            context.strokeStyle = ctx.strokeStyle;\n            current.fillColor = ctx.fillStyle;\n            current.strokeColor = ctx.strokeStyle;\n            break;\n\n          case PaintType.UNCOLORED:\n            const cssColor = _util.Util.makeHexColor(color[0], color[1], color[2]);\n\n            context.fillStyle = cssColor;\n            context.strokeStyle = cssColor;\n            current.fillColor = cssColor;\n            current.strokeColor = cssColor;\n            break;\n\n          default:\n            throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n        }\n      },\n      getPattern: function TilingPattern_getPattern(ctx, owner) {\n        ctx = this.ctx;\n        ctx.setTransform.apply(ctx, this.baseTransform);\n        ctx.transform.apply(ctx, this.matrix);\n        const temporaryPatternCanvas = this.createPatternCanvas(owner);\n        return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n      }\n    };\n    return TilingPattern;\n  }();\n\n  exports.TilingPattern = TilingPattern;\n\n  /***/ }),\n  /* 12 */\n  /***/ ((__unused_webpack_module, exports) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.GlobalWorkerOptions = void 0;\n  const GlobalWorkerOptions = Object.create(null);\n  exports.GlobalWorkerOptions = GlobalWorkerOptions;\n  GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n  GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n\n  /***/ }),\n  /* 13 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.MessageHandler = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  const CallbackKind = {\n    UNKNOWN: 0,\n    DATA: 1,\n    ERROR: 2\n  };\n  const StreamKind = {\n    UNKNOWN: 0,\n    CANCEL: 1,\n    CANCEL_COMPLETE: 2,\n    CLOSE: 3,\n    ENQUEUE: 4,\n    ERROR: 5,\n    PULL: 6,\n    PULL_COMPLETE: 7,\n    START_COMPLETE: 8\n  };\n\n  function wrapReason(reason) {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n\n    switch (reason.name) {\n      case \"AbortException\":\n        return new _util.AbortException(reason.message);\n\n      case \"MissingPDFException\":\n        return new _util.MissingPDFException(reason.message);\n\n      case \"UnexpectedResponseException\":\n        return new _util.UnexpectedResponseException(reason.message, reason.status);\n\n      case \"UnknownErrorException\":\n        return new _util.UnknownErrorException(reason.message, reason.details);\n\n      default:\n        return new _util.UnknownErrorException(reason.message, reason.toString());\n    }\n  }\n\n  class MessageHandler {\n    constructor(sourceName, targetName, comObj) {\n      this.sourceName = sourceName;\n      this.targetName = targetName;\n      this.comObj = comObj;\n      this.callbackId = 1;\n      this.streamId = 1;\n      this.postMessageTransfers = true;\n      this.streamSinks = Object.create(null);\n      this.streamControllers = Object.create(null);\n      this.callbackCapabilities = Object.create(null);\n      this.actionHandler = Object.create(null);\n\n      this._onComObjOnMessage = event => {\n        const data = event.data;\n\n        if (data.targetName !== this.sourceName) {\n          return;\n        }\n\n        if (data.stream) {\n          this._processStreamMessage(data);\n\n          return;\n        }\n\n        if (data.callback) {\n          const callbackId = data.callbackId;\n          const capability = this.callbackCapabilities[callbackId];\n\n          if (!capability) {\n            throw new Error(`Cannot resolve callback ${callbackId}`);\n          }\n\n          delete this.callbackCapabilities[callbackId];\n\n          if (data.callback === CallbackKind.DATA) {\n            capability.resolve(data.data);\n          } else if (data.callback === CallbackKind.ERROR) {\n            capability.reject(wrapReason(data.reason));\n          } else {\n            throw new Error(\"Unexpected callback case\");\n          }\n\n          return;\n        }\n\n        const action = this.actionHandler[data.action];\n\n        if (!action) {\n          throw new Error(`Unknown action from worker: ${data.action}`);\n        }\n\n        if (data.callbackId) {\n          const cbSourceName = this.sourceName;\n          const cbTargetName = data.sourceName;\n          new Promise(function (resolve) {\n            resolve(action(data.data));\n          }).then(function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result\n            });\n          }, function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason)\n            });\n          });\n          return;\n        }\n\n        if (data.streamId) {\n          this._createStreamSink(data);\n\n          return;\n        }\n\n        action(data.data);\n      };\n\n      comObj.addEventListener(\"message\", this._onComObjOnMessage);\n    }\n\n    on(actionName, handler) {\n      const ah = this.actionHandler;\n\n      if (ah[actionName]) {\n        throw new Error(`There is already an actionName called \"${actionName}\"`);\n      }\n\n      ah[actionName] = handler;\n    }\n\n    send(actionName, data, transfers) {\n      this._postMessage({\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data\n      }, transfers);\n    }\n\n    sendWithPromise(actionName, data, transfers) {\n      const callbackId = this.callbackId++;\n      const capability = (0, _util.createPromiseCapability)();\n      this.callbackCapabilities[callbackId] = capability;\n\n      try {\n        this._postMessage({\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data\n        }, transfers);\n      } catch (ex) {\n        capability.reject(ex);\n      }\n\n      return capability.promise;\n    }\n\n    sendWithStream(actionName, data, queueingStrategy, transfers) {\n      const streamId = this.streamId++;\n      const sourceName = this.sourceName;\n      const targetName = this.targetName;\n      const comObj = this.comObj;\n      return new ReadableStream({\n        start: controller => {\n          const startCapability = (0, _util.createPromiseCapability)();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false\n          };\n\n          this._postMessage({\n            sourceName,\n            targetName,\n            action: actionName,\n            streamId,\n            data,\n            desiredSize: controller.desiredSize\n          }, transfers);\n\n          return startCapability.promise;\n        },\n        pull: controller => {\n          const pullCapability = (0, _util.createPromiseCapability)();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize\n          });\n          return pullCapability.promise;\n        },\n        cancel: reason => {\n          (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = (0, _util.createPromiseCapability)();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason)\n          });\n          return cancelCapability.promise;\n        }\n      }, queueingStrategy);\n    }\n\n    _createStreamSink(data) {\n      const self = this;\n      const action = this.actionHandler[data.action];\n      const streamId = data.streamId;\n      const sourceName = this.sourceName;\n      const targetName = data.sourceName;\n      const comObj = this.comObj;\n      const streamSink = {\n        enqueue(chunk, size = 1, transfers) {\n          if (this.isCancelled) {\n            return;\n          }\n\n          const lastDesiredSize = this.desiredSize;\n          this.desiredSize -= size;\n\n          if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n            this.sinkCapability = (0, _util.createPromiseCapability)();\n            this.ready = this.sinkCapability.promise;\n          }\n\n          self._postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk\n          }, transfers);\n        },\n\n        close() {\n          if (this.isCancelled) {\n            return;\n          }\n\n          this.isCancelled = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CLOSE,\n            streamId\n          });\n          delete self.streamSinks[streamId];\n        },\n\n        error(reason) {\n          (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n\n          if (this.isCancelled) {\n            return;\n          }\n\n          this.isCancelled = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.ERROR,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        },\n\n        sinkCapability: (0, _util.createPromiseCapability)(),\n        onPull: null,\n        onCancel: null,\n        isCancelled: false,\n        desiredSize: data.desiredSize,\n        ready: null\n      };\n      streamSink.sinkCapability.resolve();\n      streamSink.ready = streamSink.sinkCapability.promise;\n      this.streamSinks[streamId] = streamSink;\n      new Promise(function (resolve) {\n        resolve(action(data.data, streamSink));\n      }).then(function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true\n        });\n      }, function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason)\n        });\n      });\n    }\n\n    _processStreamMessage(data) {\n      const streamId = data.streamId;\n      const sourceName = this.sourceName;\n      const targetName = data.sourceName;\n      const comObj = this.comObj;\n\n      switch (data.stream) {\n        case StreamKind.START_COMPLETE:\n          if (data.success) {\n            this.streamControllers[streamId].startCall.resolve();\n          } else {\n            this.streamControllers[streamId].startCall.reject(wrapReason(data.reason));\n          }\n\n          break;\n\n        case StreamKind.PULL_COMPLETE:\n          if (data.success) {\n            this.streamControllers[streamId].pullCall.resolve();\n          } else {\n            this.streamControllers[streamId].pullCall.reject(wrapReason(data.reason));\n          }\n\n          break;\n\n        case StreamKind.PULL:\n          if (!this.streamSinks[streamId]) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true\n            });\n            break;\n          }\n\n          if (this.streamSinks[streamId].desiredSize <= 0 && data.desiredSize > 0) {\n            this.streamSinks[streamId].sinkCapability.resolve();\n          }\n\n          this.streamSinks[streamId].desiredSize = data.desiredSize;\n          const {\n            onPull\n          } = this.streamSinks[data.streamId];\n          new Promise(function (resolve) {\n            resolve(onPull && onPull());\n          }).then(function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true\n            });\n          }, function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason)\n            });\n          });\n          break;\n\n        case StreamKind.ENQUEUE:\n          (0, _util.assert)(this.streamControllers[streamId], \"enqueue should have stream controller\");\n\n          if (this.streamControllers[streamId].isClosed) {\n            break;\n          }\n\n          this.streamControllers[streamId].controller.enqueue(data.chunk);\n          break;\n\n        case StreamKind.CLOSE:\n          (0, _util.assert)(this.streamControllers[streamId], \"close should have stream controller\");\n\n          if (this.streamControllers[streamId].isClosed) {\n            break;\n          }\n\n          this.streamControllers[streamId].isClosed = true;\n          this.streamControllers[streamId].controller.close();\n\n          this._deleteStreamController(streamId);\n\n          break;\n\n        case StreamKind.ERROR:\n          (0, _util.assert)(this.streamControllers[streamId], \"error should have stream controller\");\n          this.streamControllers[streamId].controller.error(wrapReason(data.reason));\n\n          this._deleteStreamController(streamId);\n\n          break;\n\n        case StreamKind.CANCEL_COMPLETE:\n          if (data.success) {\n            this.streamControllers[streamId].cancelCall.resolve();\n          } else {\n            this.streamControllers[streamId].cancelCall.reject(wrapReason(data.reason));\n          }\n\n          this._deleteStreamController(streamId);\n\n          break;\n\n        case StreamKind.CANCEL:\n          if (!this.streamSinks[streamId]) {\n            break;\n          }\n\n          const {\n            onCancel\n          } = this.streamSinks[data.streamId];\n          new Promise(function (resolve) {\n            resolve(onCancel && onCancel(wrapReason(data.reason)));\n          }).then(function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true\n            });\n          }, function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason)\n            });\n          });\n          this.streamSinks[streamId].sinkCapability.reject(wrapReason(data.reason));\n          this.streamSinks[streamId].isCancelled = true;\n          delete this.streamSinks[streamId];\n          break;\n\n        default:\n          throw new Error(\"Unexpected stream case\");\n      }\n    }\n\n    async _deleteStreamController(streamId) {\n      await Promise.allSettled([this.streamControllers[streamId].startCall, this.streamControllers[streamId].pullCall, this.streamControllers[streamId].cancelCall].map(function (capability) {\n        return capability && capability.promise;\n      }));\n      delete this.streamControllers[streamId];\n    }\n\n    _postMessage(message, transfers) {\n      if (transfers && this.postMessageTransfers) {\n        this.comObj.postMessage(message, transfers);\n      } else {\n        this.comObj.postMessage(message);\n      }\n    }\n\n    destroy() {\n      this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n    }\n\n  }\n\n  exports.MessageHandler = MessageHandler;\n\n  /***/ }),\n  /* 14 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.Metadata = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _xml_parser = __w_pdfjs_require__(15);\n\n  class Metadata {\n    constructor(data) {\n      (0, _util.assert)(typeof data === \"string\", \"Metadata: input is not a string\");\n      data = this._repair(data);\n      const parser = new _xml_parser.SimpleXMLParser({\n        lowerCaseName: true\n      });\n      const xmlDocument = parser.parseFromString(data);\n      this._metadataMap = new Map();\n\n      if (xmlDocument) {\n        this._parse(xmlDocument);\n      }\n\n      this._data = data;\n    }\n\n    _repair(data) {\n      return data.replace(/^[^<]+/, \"\").replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n        const bytes = codes.replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n          return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n        }).replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n          switch (name) {\n            case \"amp\":\n              return \"&\";\n\n            case \"apos\":\n              return \"'\";\n\n            case \"gt\":\n              return \">\";\n\n            case \"lt\":\n              return \"<\";\n\n            case \"quot\":\n              return '\"';\n          }\n\n          throw new Error(`_repair: ${name} isn't defined.`);\n        });\n        let chars = \"\";\n\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n\n          if (code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n    }\n\n    _getSequence(entry) {\n      const name = entry.nodeName;\n\n      if (name !== \"rdf:bag\" && name !== \"rdf:seq\" && name !== \"rdf:alt\") {\n        return null;\n      }\n\n      return entry.childNodes.filter(node => node.nodeName === \"rdf:li\");\n    }\n\n    _getCreators(entry) {\n      if (entry.nodeName !== \"dc:creator\") {\n        return false;\n      }\n\n      if (!entry.hasChildNodes()) {\n        return true;\n      }\n\n      const seqNode = entry.childNodes[0];\n      const authors = this._getSequence(seqNode) || [];\n\n      this._metadataMap.set(entry.nodeName, authors.map(node => node.textContent.trim()));\n\n      return true;\n    }\n\n    _parse(xmlDocument) {\n      let rdf = xmlDocument.documentElement;\n\n      if (rdf.nodeName !== \"rdf:rdf\") {\n        rdf = rdf.firstChild;\n\n        while (rdf && rdf.nodeName !== \"rdf:rdf\") {\n          rdf = rdf.nextSibling;\n        }\n      }\n\n      if (!rdf || rdf.nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n        return;\n      }\n\n      for (const desc of rdf.childNodes) {\n        if (desc.nodeName !== \"rdf:description\") {\n          continue;\n        }\n\n        for (const entry of desc.childNodes) {\n          const name = entry.nodeName;\n\n          if (name === \"#text\") {\n            continue;\n          }\n\n          if (this._getCreators(entry)) {\n            continue;\n          }\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n\n    getRaw() {\n      return this._data;\n    }\n\n    get(name) {\n      return this._metadataMap.get(name) || null; //lwf\n    }\n\n    getAll() {\n      return (0, _util.objectFromEntries)(this._metadataMap);\n    }\n\n    has(name) {\n      return this._metadataMap.has(name);\n    }\n\n  }\n\n  exports.Metadata = Metadata;\n\n  /***/ }),\n  /* 15 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.SimpleXMLParser = exports.SimpleDOMNode = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  const XMLParserErrorCode = {\n    NoError: 0,\n    EndOfDocument: -1,\n    UnterminatedCdat: -2,\n    UnterminatedXmlDeclaration: -3,\n    UnterminatedDoctypeDeclaration: -4,\n    UnterminatedComment: -5,\n    MalformedElement: -6,\n    OutOfMemory: -7,\n    UnterminatedAttributeValue: -8,\n    UnterminatedElement: -9,\n    ElementNeverBegun: -10\n  };\n\n  function isWhitespace(s, index) {\n    const ch = s[index];\n    return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n  }\n\n  function isWhitespaceString(s) {\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (!isWhitespace(s, i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  class XMLParserBase {\n    _resolveEntities(s) {\n      return s.replace(/&([^;]+);/g, (all, entity) => {\n        if (entity.substring(0, 2) === \"#x\") {\n          return String.fromCodePoint(parseInt(entity.substring(2), 16));\n        } else if (entity.substring(0, 1) === \"#\") {\n          return String.fromCodePoint(parseInt(entity.substring(1), 10));\n        }\n\n        switch (entity) {\n          case \"lt\":\n            return \"<\";\n\n          case \"gt\":\n            return \">\";\n\n          case \"amp\":\n            return \"&\";\n\n          case \"quot\":\n            return '\"';\n        }\n\n        return this.onResolveEntity(entity);\n      });\n    }\n\n    _parseContent(s, start) {\n      const attributes = [];\n      let pos = start;\n\n      function skipWs() {\n        while (pos < s.length && isWhitespace(s, pos)) {\n          ++pos;\n        }\n      }\n\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n        ++pos;\n      }\n\n      const name = s.substring(start, pos);\n      skipWs();\n\n      while (pos < s.length && s[pos] !== \">\" && s[pos] !== \"/\" && s[pos] !== \"?\") {\n        skipWs();\n        let attrName = \"\",\n            attrValue = \"\";\n\n        while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n          attrName += s[pos];\n          ++pos;\n        }\n\n        skipWs();\n\n        if (s[pos] !== \"=\") {\n          return null;\n        }\n\n        ++pos;\n        skipWs();\n        const attrEndChar = s[pos];\n\n        if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n          return null;\n        }\n\n        const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n\n        if (attrEndIndex < 0) {\n          return null;\n        }\n\n        attrValue = s.substring(pos, attrEndIndex);\n        attributes.push({\n          name: attrName,\n          value: this._resolveEntities(attrValue)\n        });\n        pos = attrEndIndex + 1;\n        skipWs();\n      }\n\n      return {\n        name,\n        attributes,\n        parsed: pos - start\n      };\n    }\n\n    _parseProcessingInstruction(s, start) {\n      let pos = start;\n\n      function skipWs() {\n        while (pos < s.length && isWhitespace(s, pos)) {\n          ++pos;\n        }\n      }\n\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n        ++pos;\n      }\n\n      const name = s.substring(start, pos);\n      skipWs();\n      const attrStart = pos;\n\n      while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n        ++pos;\n      }\n\n      const value = s.substring(attrStart, pos);\n      return {\n        name,\n        value,\n        parsed: pos - start\n      };\n    }\n\n    parseXml(s) {\n      let i = 0;\n\n      while (i < s.length) {\n        const ch = s[i];\n        let j = i;\n\n        if (ch === \"<\") {\n          ++j;\n          const ch2 = s[j];\n          let q;\n\n          switch (ch2) {\n            case \"/\":\n              ++j;\n              q = s.indexOf(\">\", j);\n\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedElement);\n                return;\n              }\n\n              this.onEndElement(s.substring(j, q));\n              j = q + 1;\n              break;\n\n            case \"?\":\n              ++j;\n\n              const pi = this._parseProcessingInstruction(s, j);\n\n              if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n                this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n                return;\n              }\n\n              this.onPi(pi.name, pi.value);\n              j += pi.parsed + 2;\n              break;\n\n            case \"!\":\n              if (s.substring(j + 1, j + 3) === \"--\") {\n                q = s.indexOf(\"-->\", j + 3);\n\n                if (q < 0) {\n                  this.onError(XMLParserErrorCode.UnterminatedComment);\n                  return;\n                }\n\n                this.onComment(s.substring(j + 3, q));\n                j = q + 3;\n              } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n                q = s.indexOf(\"]]>\", j + 8);\n\n                if (q < 0) {\n                  this.onError(XMLParserErrorCode.UnterminatedCdat);\n                  return;\n                }\n\n                this.onCdata(s.substring(j + 8, q));\n                j = q + 3;\n              } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n                const q2 = s.indexOf(\"[\", j + 8);\n                let complexDoctype = false;\n                q = s.indexOf(\">\", j + 8);\n\n                if (q < 0) {\n                  this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                  return;\n                }\n\n                if (q2 > 0 && q > q2) {\n                  q = s.indexOf(\"]>\", j + 8);\n\n                  if (q < 0) {\n                    this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                    return;\n                  }\n\n                  complexDoctype = true;\n                }\n\n                const doctypeContent = s.substring(j + 8, q + (complexDoctype ? 1 : 0));\n                this.onDoctype(doctypeContent);\n                j = q + (complexDoctype ? 2 : 1);\n              } else {\n                this.onError(XMLParserErrorCode.MalformedElement);\n                return;\n              }\n\n              break;\n\n            default:\n              const content = this._parseContent(s, j);\n\n              if (content === null) {\n                this.onError(XMLParserErrorCode.MalformedElement);\n                return;\n              }\n\n              let isClosed = false;\n\n              if (s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\") {\n                isClosed = true;\n              } else if (s.substring(j + content.parsed, j + content.parsed + 1) !== \">\") {\n                this.onError(XMLParserErrorCode.UnterminatedElement);\n                return;\n              }\n\n              this.onBeginElement(content.name, content.attributes, isClosed);\n              j += content.parsed + (isClosed ? 2 : 1);\n              break;\n          }\n        } else {\n          while (j < s.length && s[j] !== \"<\") {\n            j++;\n          }\n\n          const text = s.substring(i, j);\n          this.onText(this._resolveEntities(text));\n        }\n\n        i = j;\n      }\n    }\n\n    onResolveEntity(name) {\n      return `&${name};`;\n    }\n\n    onPi(name, value) {}\n\n    onComment(text) {}\n\n    onCdata(text) {}\n\n    onDoctype(doctypeContent) {}\n\n    onText(text) {}\n\n    onBeginElement(name, attributes, isEmpty) {}\n\n    onEndElement(name) {}\n\n    onError(code) {}\n\n  }\n\n  class SimpleDOMNode {\n    constructor(nodeName, nodeValue) {\n      this.nodeName = nodeName;\n      this.nodeValue = nodeValue;\n      Object.defineProperty(this, \"parentNode\", {\n        value: null,\n        writable: true\n      });\n    }\n\n    get firstChild() {\n      return this.childNodes && this.childNodes[0];\n    }\n\n    get nextSibling() {\n      const childNodes = this.parentNode.childNodes;\n\n      if (!childNodes) {\n        return undefined;\n      }\n\n      const index = childNodes.indexOf(this);\n\n      if (index === -1) {\n        return undefined;\n      }\n\n      return childNodes[index + 1];\n    }\n\n    get textContent() {\n      if (!this.childNodes) {\n        return this.nodeValue || \"\";\n      }\n\n      return this.childNodes.map(function (child) {\n        return child.textContent;\n      }).join(\"\");\n    }\n\n    hasChildNodes() {\n      return this.childNodes && this.childNodes.length > 0;\n    }\n\n    searchNode(paths, pos) {\n      if (pos >= paths.length) {\n        return this;\n      }\n\n      const component = paths[pos];\n      const stack = [];\n      let node = this;\n\n      while (true) {\n        if (component.name === node.nodeName) {\n          if (component.pos === 0) {\n            const res = node.searchNode(paths, pos + 1);\n\n            if (res !== null) {\n              return res;\n            }\n          } else if (stack.length === 0) {\n            return null;\n          } else {\n            const [parent] = stack.pop();\n            let siblingPos = 0;\n\n            for (const child of parent.childNodes) {\n              if (component.name === child.nodeName) {\n                if (siblingPos === component.pos) {\n                  return child.searchNode(paths, pos + 1);\n                }\n\n                siblingPos++;\n              }\n            }\n\n            return node.searchNode(paths, pos + 1);\n          }\n        }\n\n        if (node.childNodes && node.childNodes.length !== 0) {\n          stack.push([node, 0]);\n          node = node.childNodes[0];\n        } else if (stack.length === 0) {\n          return null;\n        } else {\n          while (stack.length !== 0) {\n            const [parent, currentPos] = stack.pop();\n            const newPos = currentPos + 1;\n\n            if (newPos < parent.childNodes.length) {\n              stack.push([parent, newPos]);\n              node = parent.childNodes[newPos];\n              break;\n            }\n          }\n\n          if (stack.length === 0) {\n            return null;\n          }\n        }\n      }\n    }\n\n    dump(buffer) {\n      if (this.nodeName === \"#text\") {\n        buffer.push((0, _util.encodeToXmlString)(this.nodeValue));\n        return;\n      }\n\n      buffer.push(`<${this.nodeName}`);\n\n      if (this.attributes) {\n        for (const attribute of this.attributes) {\n          buffer.push(` ${attribute.name}=\"${(0, _util.encodeToXmlString)(attribute.value)}\"`);\n        }\n      }\n\n      if (this.hasChildNodes()) {\n        buffer.push(\">\");\n\n        for (const child of this.childNodes) {\n          child.dump(buffer);\n        }\n\n        buffer.push(`</${this.nodeName}>`);\n      } else if (this.nodeValue) {\n        buffer.push(`>${(0, _util.encodeToXmlString)(this.nodeValue)}</${this.nodeName}>`);\n      } else {\n        buffer.push(\"/>\");\n      }\n    }\n\n  }\n\n  exports.SimpleDOMNode = SimpleDOMNode;\n\n  class SimpleXMLParser extends XMLParserBase {\n    constructor({\n      hasAttributes = false,\n      lowerCaseName = false\n    }) {\n      super();\n      this._currentFragment = null;\n      this._stack = null;\n      this._errorCode = XMLParserErrorCode.NoError;\n      this._hasAttributes = hasAttributes;\n      this._lowerCaseName = lowerCaseName;\n    }\n\n    parseFromString(data) {\n      this._currentFragment = [];\n      this._stack = [];\n      this._errorCode = XMLParserErrorCode.NoError;\n      this.parseXml(data);\n\n      if (this._errorCode !== XMLParserErrorCode.NoError) {\n        return undefined;\n      }\n\n      const [documentElement] = this._currentFragment;\n\n      if (!documentElement) {\n        return undefined;\n      }\n\n      return {\n        documentElement\n      };\n    }\n\n    onResolveEntity(name) {\n      switch (name) {\n        case \"apos\":\n          return \"'\";\n      }\n\n      return super.onResolveEntity(name);\n    }\n\n    onText(text) {\n      if (isWhitespaceString(text)) {\n        return;\n      }\n\n      const node = new SimpleDOMNode(\"#text\", text);\n\n      this._currentFragment.push(node);\n    }\n\n    onCdata(text) {\n      const node = new SimpleDOMNode(\"#text\", text);\n\n      this._currentFragment.push(node);\n    }\n\n    onBeginElement(name, attributes, isEmpty) {\n      if (this._lowerCaseName) {\n        name = name.toLowerCase();\n      }\n\n      const node = new SimpleDOMNode(name);\n      node.childNodes = [];\n\n      if (this._hasAttributes) {\n        node.attributes = attributes;\n      }\n\n      this._currentFragment.push(node);\n\n      if (isEmpty) {\n        return;\n      }\n\n      this._stack.push(this._currentFragment);\n\n      this._currentFragment = node.childNodes;\n    }\n\n    onEndElement(name) {\n      this._currentFragment = this._stack.pop() || [];\n      const lastElement = this._currentFragment[this._currentFragment.length - 1];\n\n      if (!lastElement) {\n        return;\n      }\n\n      for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n        lastElement.childNodes[i].parentNode = lastElement;\n      }\n    }\n\n    onError(code) {\n      this._errorCode = code;\n    }\n\n  }\n\n  exports.SimpleXMLParser = SimpleXMLParser;\n\n  /***/ }),\n  /* 16 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.OptionalContentConfig = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  class OptionalContentGroup {\n    constructor(name, intent) {\n      this.visible = true;\n      this.name = name;\n      this.intent = intent;\n    }\n\n  }\n\n  class OptionalContentConfig {\n    constructor(data) {\n      this.name = null;\n      this.creator = null;\n      this._order = null;\n      this._groups = new Map();\n\n      if (data === null) {\n        return;\n      }\n\n      this.name = data.name;\n      this.creator = data.creator;\n      this._order = data.order;\n\n      for (const group of data.groups) {\n        this._groups.set(group.id, new OptionalContentGroup(group.name, group.intent));\n      }\n\n      if (data.baseState === \"OFF\") {\n        for (const group of this._groups) {\n          group.visible = false;\n        }\n      }\n\n      for (const on of data.on) {\n        this._groups.get(on).visible = true;\n      }\n\n      for (const off of data.off) {\n        this._groups.get(off).visible = false;\n      }\n    }\n\n    isVisible(group) {\n      if (group.type === \"OCG\") {\n        if (!this._groups.has(group.id)) {\n          (0, _util.warn)(`Optional content group not found: ${group.id}`);\n          return true;\n        }\n\n        return this._groups.get(group.id).visible;\n      } else if (group.type === \"OCMD\") {\n        if (group.expression) {\n          (0, _util.warn)(\"Visibility expression not supported yet.\");\n        }\n\n        if (!group.policy || group.policy === \"AnyOn\") {\n          for (const id of group.ids) {\n            if (!this._groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return true;\n            }\n\n            if (this._groups.get(id).visible) {\n              return true;\n            }\n          }\n\n          return false;\n        } else if (group.policy === \"AllOn\") {\n          for (const id of group.ids) {\n            if (!this._groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return true;\n            }\n\n            if (!this._groups.get(id).visible) {\n              return false;\n            }\n          }\n\n          return true;\n        } else if (group.policy === \"AnyOff\") {\n          for (const id of group.ids) {\n            if (!this._groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return true;\n            }\n\n            if (!this._groups.get(id).visible) {\n              return true;\n            }\n          }\n\n          return false;\n        } else if (group.policy === \"AllOff\") {\n          for (const id of group.ids) {\n            if (!this._groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return true;\n            }\n\n            if (this._groups.get(id).visible) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        (0, _util.warn)(`Unknown optional content policy ${group.policy}.`);\n        return true;\n      }\n\n      (0, _util.warn)(`Unknown group type ${group.type}.`);\n      return true;\n    }\n\n    setVisibility(id, visible = true) {\n      if (!this._groups.has(id)) {\n        (0, _util.warn)(`Optional content group not found: ${id}`);\n        return;\n      }\n\n      this._groups.get(id).visible = !!visible;\n    }\n\n    getOrder() {\n      if (!this._groups.size) {\n        return null;\n      }\n\n      if (this._order) {\n        return this._order.slice();\n      }\n\n      return Array.from(this._groups.keys());\n    }\n\n    getGroups() {\n      if (!this._groups.size) {\n        return null;\n      }\n\n      return (0, _util.objectFromEntries)(this._groups);\n    }\n\n    getGroup(id) {\n      return this._groups.get(id) || null;\n    }\n\n  }\n\n  exports.OptionalContentConfig = OptionalContentConfig;\n\n  /***/ }),\n  /* 17 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.PDFDataTransportStream = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  class PDFDataTransportStream {\n    constructor(params, pdfDataRangeTransport) {\n      (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n      this._queuedChunks = [];\n      this._progressiveDone = params.progressiveDone || false;\n      const initialData = params.initialData;\n\n      if (initialData && initialData.length > 0) { // lwf\n        const buffer = new Uint8Array(initialData).buffer;\n\n        this._queuedChunks.push(buffer);\n      }\n\n      this._pdfDataRangeTransport = pdfDataRangeTransport;\n      this._isStreamingSupported = !params.disableStream;\n      this._isRangeSupported = !params.disableRange;\n      this._contentLength = params.length;\n      this._fullRequestReader = null;\n      this._rangeReaders = [];\n\n      this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n        this._onReceiveData({\n          begin,\n          chunk\n        });\n      });\n\n      this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n        this._onProgress({\n          loaded,\n          total\n        });\n      });\n\n      this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n        this._onReceiveData({\n          chunk\n        });\n      });\n\n      this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n        this._onProgressiveDone();\n      });\n\n      this._pdfDataRangeTransport.transportReady();\n    }\n\n    _onReceiveData(args) {\n      const buffer = new Uint8Array(args.chunk).buffer;\n\n      if (args.begin === undefined) {\n        if (this._fullRequestReader) {\n          this._fullRequestReader._enqueue(buffer);\n        } else {\n          this._queuedChunks.push(buffer);\n        }\n      } else {\n        const found = this._rangeReaders.some(function (rangeReader) {\n          if (rangeReader._begin !== args.begin) {\n            return false;\n          }\n\n          rangeReader._enqueue(buffer);\n\n          return true;\n        });\n\n        (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n      }\n    }\n\n    get _progressiveDataLength() {\n      return this._fullRequestReader && this._fullRequestReader._loaded || 0; // lwf\n    }\n\n    _onProgress(evt) {\n      if (evt.total === undefined) {\n        const firstReader = this._rangeReaders[0];\n\n        if (firstReader && firstReader.onProgress) { // lwf\n          firstReader.onProgress({\n            loaded: evt.loaded\n          });\n        }\n      } else {\n        const fullReader = this._fullRequestReader;\n\n        if (fullReader && fullReader.onProgress) { // lwf\n          fullReader.onProgress({\n            loaded: evt.loaded,\n            total: evt.total\n          });\n        }\n      }\n    }\n\n    _onProgressiveDone() {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.progressiveDone();\n      }\n\n      this._progressiveDone = true;\n    }\n\n    _removeRangeReader(reader) {\n      const i = this._rangeReaders.indexOf(reader);\n\n      if (i >= 0) {\n        this._rangeReaders.splice(i, 1);\n      }\n    }\n\n    getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n      const queuedChunks = this._queuedChunks;\n      this._queuedChunks = null;\n      return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone);\n    }\n\n    getRangeReader(begin, end) {\n      if (end <= this._progressiveDataLength) {\n        return null;\n      }\n\n      const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n\n      this._pdfDataRangeTransport.requestDataRange(begin, end);\n\n      this._rangeReaders.push(reader);\n\n      return reader;\n    }\n\n    cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n\n      const readers = this._rangeReaders.slice(0);\n\n      readers.forEach(function (rangeReader) {\n        rangeReader.cancel(reason);\n      });\n\n      this._pdfDataRangeTransport.abort();\n    }\n\n  }\n\n  exports.PDFDataTransportStream = PDFDataTransportStream;\n\n  class PDFDataTransportStreamReader {\n    constructor(stream, queuedChunks, progressiveDone = false) {\n      this._stream = stream;\n      this._done = progressiveDone || false;\n      this._filename = null;\n      this._queuedChunks = queuedChunks || [];\n      this._loaded = 0;\n\n      for (const chunk of this._queuedChunks) {\n        this._loaded += chunk.byteLength;\n      }\n\n      this._requests = [];\n      this._headersReady = Promise.resolve();\n      stream._fullRequestReader = this;\n      this.onProgress = null;\n    }\n\n    _enqueue(chunk) {\n      if (this._done) {\n        return;\n      }\n\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n\n        requestCapability.resolve({\n          value: chunk,\n          done: false\n        });\n      } else {\n        this._queuedChunks.push(chunk);\n      }\n\n      this._loaded += chunk.byteLength;\n    }\n\n    get headersReady() {\n      return this._headersReady;\n    }\n\n    get filename() {\n      return this._filename;\n    }\n\n    get isRangeSupported() {\n      return this._stream._isRangeSupported;\n    }\n\n    get isStreamingSupported() {\n      return this._stream._isStreamingSupported;\n    }\n\n    get contentLength() {\n      return this._stream._contentLength;\n    }\n\n    async read() {\n      if (this._queuedChunks.length > 0) {\n        const chunk = this._queuedChunks.shift();\n\n        return {\n          value: chunk,\n          done: false\n        };\n      }\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      const requestCapability = (0, _util.createPromiseCapability)();\n\n      this._requests.push(requestCapability);\n\n      return requestCapability.promise;\n    }\n\n    cancel(reason) {\n      this._done = true;\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n    }\n\n    progressiveDone() {\n      if (this._done) {\n        return;\n      }\n\n      this._done = true;\n    }\n\n  }\n\n  class PDFDataTransportStreamRangeReader {\n    constructor(stream, begin, end) {\n      this._stream = stream;\n      this._begin = begin;\n      this._end = end;\n      this._queuedChunk = null;\n      this._requests = [];\n      this._done = false;\n      this.onProgress = null;\n    }\n\n    _enqueue(chunk) {\n      if (this._done) {\n        return;\n      }\n\n      if (this._requests.length === 0) {\n        this._queuedChunk = chunk;\n      } else {\n        const requestsCapability = this._requests.shift();\n\n        requestsCapability.resolve({\n          value: chunk,\n          done: false\n        });\n\n        this._requests.forEach(function (requestCapability) {\n          requestCapability.resolve({\n            value: undefined,\n            done: true\n          });\n        });\n\n        this._requests = [];\n      }\n\n      this._done = true;\n\n      this._stream._removeRangeReader(this);\n    }\n\n    get isStreamingSupported() {\n      return false;\n    }\n\n    async read() {\n      if (this._queuedChunk) {\n        const chunk = this._queuedChunk;\n        this._queuedChunk = null;\n        return {\n          value: chunk,\n          done: false\n        };\n      }\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      const requestCapability = (0, _util.createPromiseCapability)();\n\n      this._requests.push(requestCapability);\n\n      return requestCapability.promise;\n    }\n\n    cancel(reason) {\n      this._done = true;\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n\n      this._stream._removeRangeReader(this);\n    }\n\n  }\n\n  /***/ }),\n  /* 18 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.WebGLContext = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  class WebGLContext {\n    constructor({\n      enable = false\n    }) {\n      this._enabled = enable === true;\n    }\n\n    get isEnabled() {\n      let enabled = this._enabled;\n\n      if (enabled) {\n        enabled = WebGLUtils.tryInitGL();\n      }\n\n      return (0, _util.shadow)(this, \"isEnabled\", enabled);\n    }\n\n    composeSMask({\n      layer,\n      mask,\n      properties\n    }) {\n      return WebGLUtils.composeSMask(layer, mask, properties);\n    }\n\n    drawFigures({\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    }) {\n      return WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);\n    }\n\n    clear() {\n      WebGLUtils.cleanup();\n    }\n\n  }\n\n  exports.WebGLContext = WebGLContext;\n\n  const WebGLUtils = function WebGLUtilsClosure() {\n    function loadShader(gl, code, shaderType) {\n      const shader = gl.createShader(shaderType);\n      gl.shaderSource(shader, code);\n      gl.compileShader(shader);\n      const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n      if (!compiled) {\n        const errorMsg = gl.getShaderInfoLog(shader);\n        throw new Error(\"Error during shader compilation: \" + errorMsg);\n      }\n\n      return shader;\n    }\n\n    function createVertexShader(gl, code) {\n      return loadShader(gl, code, gl.VERTEX_SHADER);\n    }\n\n    function createFragmentShader(gl, code) {\n      return loadShader(gl, code, gl.FRAGMENT_SHADER);\n    }\n\n    function createProgram(gl, shaders) {\n      const program = gl.createProgram();\n\n      for (let i = 0, ii = shaders.length; i < ii; ++i) {\n        gl.attachShader(program, shaders[i]);\n      }\n\n      gl.linkProgram(program);\n      const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n      if (!linked) {\n        const errorMsg = gl.getProgramInfoLog(program);\n        throw new Error(\"Error during program linking: \" + errorMsg);\n      }\n\n      return program;\n    }\n\n    function createTexture(gl, image, textureId) {\n      gl.activeTexture(textureId);\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n      return texture;\n    }\n\n    let currentGL, currentCanvas;\n\n    function generateGL() {\n      if (currentGL) {\n        return;\n      }\n\n      currentCanvas = document.createElement(\"canvas\");\n      currentGL = currentCanvas.getContext(\"webgl\", {\n        premultipliedalpha: false\n      });\n    }\n\n    const smaskVertexShaderCode = \"\\\n    attribute vec2 a_position;                                    \\\n    attribute vec2 a_texCoord;                                    \\\n                                                                  \\\n    uniform vec2 u_resolution;                                    \\\n                                                                  \\\n    varying vec2 v_texCoord;                                      \\\n                                                                  \\\n    void main() {                                                 \\\n      vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n      gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                  \\\n      v_texCoord = a_texCoord;                                    \\\n    }                                                             \";\n    const smaskFragmentShaderCode = \"\\\n    precision mediump float;                                      \\\n                                                                  \\\n    uniform vec4 u_backdrop;                                      \\\n    uniform int u_subtype;                                        \\\n    uniform sampler2D u_image;                                    \\\n    uniform sampler2D u_mask;                                     \\\n                                                                  \\\n    varying vec2 v_texCoord;                                      \\\n                                                                  \\\n    void main() {                                                 \\\n      vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n      vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n      if (u_backdrop.a > 0.0) {                                   \\\n        maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                        u_backdrop.rgb * (1.0 - maskColor.a);     \\\n      }                                                           \\\n      float lum;                                                  \\\n      if (u_subtype == 0) {                                       \\\n        lum = maskColor.a;                                        \\\n      } else {                                                    \\\n        lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n              maskColor.b * 0.11;                                 \\\n      }                                                           \\\n      imageColor.a *= lum;                                        \\\n      imageColor.rgb *= imageColor.a;                             \\\n      gl_FragColor = imageColor;                                  \\\n    }                                                             \";\n    let smaskCache = null;\n\n    function initSmaskGL() {\n      generateGL();\n      const canvas = currentCanvas;\n      currentCanvas = null;\n      const gl = currentGL;\n      currentGL = null;\n      const vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n      const fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n      const program = createProgram(gl, [vertexShader, fragmentShader]);\n      gl.useProgram(program);\n      const cache = {};\n      cache.gl = gl;\n      cache.canvas = canvas;\n      cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n      cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n      cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n      cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n      const texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n      const texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n      const texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n      const texCoordBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(texCoordLocation);\n      gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n      gl.uniform1i(texLayerLocation, 0);\n      gl.uniform1i(texMaskLocation, 1);\n      smaskCache = cache;\n    }\n\n    function composeSMask(layer, mask, properties) {\n      const width = layer.width,\n            height = layer.height;\n\n      if (!smaskCache) {\n        initSmaskGL();\n      }\n\n      const cache = smaskCache,\n            canvas = cache.canvas,\n            gl = cache.gl;\n      canvas.width = width;\n      canvas.height = height;\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n      gl.uniform2f(cache.resolutionLocation, width, height);\n\n      if (properties.backdrop) {\n        gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);\n      } else {\n        gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n      }\n\n      gl.uniform1i(cache.subtypeLocation, properties.subtype === \"Luminosity\" ? 1 : 0);\n      const texture = createTexture(gl, layer, gl.TEXTURE0);\n      const maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n      const buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, width, 0, 0, height, 0, height, width, 0, width, height]), gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(cache.positionLocation);\n      gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n      gl.clearColor(0, 0, 0, 0);\n      gl.enable(gl.BLEND);\n      gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n      gl.flush();\n      gl.deleteTexture(texture);\n      gl.deleteTexture(maskTexture);\n      gl.deleteBuffer(buffer);\n      return canvas;\n    }\n\n    const figuresVertexShaderCode = \"\\\n    attribute vec2 a_position;                                    \\\n    attribute vec3 a_color;                                       \\\n                                                                  \\\n    uniform vec2 u_resolution;                                    \\\n    uniform vec2 u_scale;                                         \\\n    uniform vec2 u_offset;                                        \\\n                                                                  \\\n    varying vec4 v_color;                                         \\\n                                                                  \\\n    void main() {                                                 \\\n      vec2 position = (a_position + u_offset) * u_scale;          \\\n      vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n      gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                  \\\n      v_color = vec4(a_color / 255.0, 1.0);                       \\\n    }                                                             \";\n    const figuresFragmentShaderCode = \"\\\n    precision mediump float;                                      \\\n                                                                  \\\n    varying vec4 v_color;                                         \\\n                                                                  \\\n    void main() {                                                 \\\n      gl_FragColor = v_color;                                     \\\n    }                                                             \";\n    let figuresCache = null;\n\n    function initFiguresGL() {\n      generateGL();\n      const canvas = currentCanvas;\n      currentCanvas = null;\n      const gl = currentGL;\n      currentGL = null;\n      const vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n      const fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n      const program = createProgram(gl, [vertexShader, fragmentShader]);\n      gl.useProgram(program);\n      const cache = {};\n      cache.gl = gl;\n      cache.canvas = canvas;\n      cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n      cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n      cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n      cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n      cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n      figuresCache = cache;\n    }\n\n    function drawFigures(width, height, backgroundColor, figures, context) {\n      if (!figuresCache) {\n        initFiguresGL();\n      }\n\n      const cache = figuresCache,\n            canvas = cache.canvas,\n            gl = cache.gl;\n      canvas.width = width;\n      canvas.height = height;\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n      gl.uniform2f(cache.resolutionLocation, width, height);\n      let count = 0;\n\n      for (let i = 0, ii = figures.length; i < ii; i++) {\n        switch (figures[i].type) {\n          case \"lattice\":\n            const rows = figures[i].coords.length / figures[i].verticesPerRow | 0;\n            count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n            break;\n\n          case \"triangles\":\n            count += figures[i].coords.length;\n            break;\n        }\n      }\n\n      const coords = new Float32Array(count * 2);\n      const colors = new Uint8Array(count * 3);\n      const coordsMap = context.coords,\n            colorsMap = context.colors;\n      let pIndex = 0,\n          cIndex = 0;\n\n      for (let i = 0, ii = figures.length; i < ii; i++) {\n        const figure = figures[i],\n              ps = figure.coords,\n              cs = figure.colors;\n\n        switch (figure.type) {\n          case \"lattice\":\n            const cols = figure.verticesPerRow;\n            const rows = ps.length / cols | 0;\n\n            for (let row = 1; row < rows; row++) {\n              let offset = row * cols + 1;\n\n              for (let col = 1; col < cols; col++, offset++) {\n                coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n                coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n                coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n                coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n                coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n                coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n                colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n                colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n                colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n                colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n                colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n                colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n                colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n                colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n                colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n                coords[pIndex + 6] = coords[pIndex + 2];\n                coords[pIndex + 7] = coords[pIndex + 3];\n                coords[pIndex + 8] = coords[pIndex + 4];\n                coords[pIndex + 9] = coords[pIndex + 5];\n                coords[pIndex + 10] = coordsMap[ps[offset]];\n                coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n                colors[cIndex + 9] = colors[cIndex + 3];\n                colors[cIndex + 10] = colors[cIndex + 4];\n                colors[cIndex + 11] = colors[cIndex + 5];\n                colors[cIndex + 12] = colors[cIndex + 6];\n                colors[cIndex + 13] = colors[cIndex + 7];\n                colors[cIndex + 14] = colors[cIndex + 8];\n                colors[cIndex + 15] = colorsMap[cs[offset]];\n                colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n                colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n                pIndex += 12;\n                cIndex += 18;\n              }\n            }\n\n            break;\n\n          case \"triangles\":\n            for (let j = 0, jj = ps.length; j < jj; j++) {\n              coords[pIndex] = coordsMap[ps[j]];\n              coords[pIndex + 1] = coordsMap[ps[j] + 1];\n              colors[cIndex] = colorsMap[cs[j]];\n              colors[cIndex + 1] = colorsMap[cs[j] + 1];\n              colors[cIndex + 2] = colorsMap[cs[j] + 2];\n              pIndex += 2;\n              cIndex += 3;\n            }\n\n            break;\n        }\n      }\n\n      if (backgroundColor) {\n        gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);\n      } else {\n        gl.clearColor(0, 0, 0, 0);\n      }\n\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      const coordsBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(cache.positionLocation);\n      gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n      const colorsBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n      gl.enableVertexAttribArray(cache.colorLocation);\n      gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);\n      gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n      gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n      gl.drawArrays(gl.TRIANGLES, 0, count);\n      gl.flush();\n      gl.deleteBuffer(coordsBuffer);\n      gl.deleteBuffer(colorsBuffer);\n      return canvas;\n    }\n\n    return {\n      tryInitGL() {\n        try {\n          generateGL();\n          return !!currentGL;\n        } catch (ex) {}\n\n        return false;\n      },\n\n      composeSMask,\n      drawFigures,\n\n      cleanup() {\n        if (smaskCache && smaskCache.canvas) { // lwf\n          smaskCache.canvas.width = 0;\n          smaskCache.canvas.height = 0;\n        }\n\n        if (figuresCache && figuresCache.canvas) { // lwf\n          figuresCache.canvas.width = 0;\n          figuresCache.canvas.height = 0;\n        }\n\n        smaskCache = null;\n        figuresCache = null;\n      }\n\n    };\n  }();\n\n  /***/ }),\n  /* 19 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.AnnotationLayer = void 0;\n\n  var _display_utils = __w_pdfjs_require__(1);\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _annotation_storage = __w_pdfjs_require__(8);\n\n  var _scripting_utils = __w_pdfjs_require__(20);\n\n  class AnnotationElementFactory {\n    static create(parameters) {\n      const subtype = parameters.data.annotationType;\n\n      switch (subtype) {\n        case _util.AnnotationType.LINK:\n          return new LinkAnnotationElement(parameters);\n\n        case _util.AnnotationType.TEXT:\n          return new TextAnnotationElement(parameters);\n\n        case _util.AnnotationType.WIDGET:\n          const fieldType = parameters.data.fieldType;\n\n          switch (fieldType) {\n            case \"Tx\":\n              return new TextWidgetAnnotationElement(parameters);\n\n            case \"Btn\":\n              if (parameters.data.radioButton) {\n                return new RadioButtonWidgetAnnotationElement(parameters);\n              } else if (parameters.data.checkBox) {\n                return new CheckboxWidgetAnnotationElement(parameters);\n              }\n\n              return new PushButtonWidgetAnnotationElement(parameters);\n\n            case \"Ch\":\n              return new ChoiceWidgetAnnotationElement(parameters);\n          }\n\n          return new WidgetAnnotationElement(parameters);\n\n        case _util.AnnotationType.POPUP:\n          return new PopupAnnotationElement(parameters);\n\n        case _util.AnnotationType.FREETEXT:\n          return new FreeTextAnnotationElement(parameters);\n\n        case _util.AnnotationType.LINE:\n          return new LineAnnotationElement(parameters);\n\n        case _util.AnnotationType.SQUARE:\n          return new SquareAnnotationElement(parameters);\n\n        case _util.AnnotationType.CIRCLE:\n          return new CircleAnnotationElement(parameters);\n\n        case _util.AnnotationType.POLYLINE:\n          return new PolylineAnnotationElement(parameters);\n\n        case _util.AnnotationType.CARET:\n          return new CaretAnnotationElement(parameters);\n\n        case _util.AnnotationType.INK:\n          return new InkAnnotationElement(parameters);\n\n        case _util.AnnotationType.POLYGON:\n          return new PolygonAnnotationElement(parameters);\n\n        case _util.AnnotationType.HIGHLIGHT:\n          return new HighlightAnnotationElement(parameters);\n\n        case _util.AnnotationType.UNDERLINE:\n          return new UnderlineAnnotationElement(parameters);\n\n        case _util.AnnotationType.SQUIGGLY:\n          return new SquigglyAnnotationElement(parameters);\n\n        case _util.AnnotationType.STRIKEOUT:\n          return new StrikeOutAnnotationElement(parameters);\n\n        case _util.AnnotationType.STAMP:\n          return new StampAnnotationElement(parameters);\n\n        case _util.AnnotationType.FILEATTACHMENT:\n          return new FileAttachmentAnnotationElement(parameters);\n\n        default:\n          return new AnnotationElement(parameters);\n      }\n    }\n\n  }\n\n  class AnnotationElement {\n    constructor(parameters, {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false\n    } = {}) {\n      this.isRenderable = isRenderable;\n      this.data = parameters.data;\n      this.layer = parameters.layer;\n      this.page = parameters.page;\n      this.viewport = parameters.viewport;\n      this.linkService = parameters.linkService;\n      this.downloadManager = parameters.downloadManager;\n      this.imageResourcesPath = parameters.imageResourcesPath;\n      this.renderInteractiveForms = parameters.renderInteractiveForms;\n      this.svgFactory = parameters.svgFactory;\n      this.annotationStorage = parameters.annotationStorage;\n      this.enableScripting = parameters.enableScripting;\n      this.hasJSActions = parameters.hasJSActions;\n      this._mouseState = parameters.mouseState;\n\n      if (isRenderable) {\n        this.container = this._createContainer(ignoreBorder);\n      }\n\n      if (createQuadrilaterals) {\n        this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n      }\n    }\n\n    _createContainer(ignoreBorder = false) {\n      const data = this.data,\n            page = this.page,\n            viewport = this.viewport;\n      const container = document.createElement(\"section\");\n      let width = data.rect[2] - data.rect[0];\n      let height = data.rect[3] - data.rect[1];\n      container.setAttribute(\"data-annotation-id\", data.id);\n\n      const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n      container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n      container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n      if (!ignoreBorder && data.borderStyle.width > 0) {\n        container.style.borderWidth = `${data.borderStyle.width}px`;\n\n        if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n          width = width - 2 * data.borderStyle.width;\n          height = height - 2 * data.borderStyle.width;\n        }\n\n        const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n        const verticalRadius = data.borderStyle.verticalCornerRadius;\n\n        if (horizontalRadius > 0 || verticalRadius > 0) {\n          const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n          container.style.borderRadius = radius;\n        }\n\n        switch (data.borderStyle.style) {\n          case _util.AnnotationBorderStyleType.SOLID:\n            container.style.borderStyle = \"solid\";\n            break;\n\n          case _util.AnnotationBorderStyleType.DASHED:\n            container.style.borderStyle = \"dashed\";\n            break;\n\n          case _util.AnnotationBorderStyleType.BEVELED:\n            (0, _util.warn)(\"Unimplemented border style: beveled\");\n            break;\n\n          case _util.AnnotationBorderStyleType.INSET:\n            (0, _util.warn)(\"Unimplemented border style: inset\");\n            break;\n\n          case _util.AnnotationBorderStyleType.UNDERLINE:\n            container.style.borderBottomStyle = \"solid\";\n            break;\n\n          default:\n            break;\n        }\n\n        if (data.color) {\n          container.style.borderColor = _util.Util.makeHexColor(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n        } else {\n          container.style.borderWidth = 0;\n        }\n      }\n\n      container.style.left = `${rect[0]}px`;\n      container.style.top = `${rect[1]}px`;\n      container.style.width = `${width}px`;\n      container.style.height = `${height}px`;\n      return container;\n    }\n\n    _createQuadrilaterals(ignoreBorder = false) {\n      if (!this.data.quadPoints) {\n        return null;\n      }\n\n      const quadrilaterals = [];\n      const savedRect = this.data.rect;\n\n      for (const quadPoint of this.data.quadPoints) {\n        this.data.rect = [quadPoint[2].x, quadPoint[2].y, quadPoint[1].x, quadPoint[1].y];\n        quadrilaterals.push(this._createContainer(ignoreBorder));\n      }\n\n      this.data.rect = savedRect;\n      return quadrilaterals;\n    }\n\n    _createPopup(trigger, data) {\n      let container = this.container;\n\n      if (this.quadrilaterals) {\n        trigger = trigger || this.quadrilaterals;\n        container = this.quadrilaterals[0];\n      }\n\n      if (!trigger) {\n        trigger = document.createElement(\"div\");\n        trigger.style.height = container.style.height;\n        trigger.style.width = container.style.width;\n        container.appendChild(trigger);\n      }\n\n      const popupElement = new PopupElement({\n        container,\n        trigger,\n        color: data.color,\n        title: data.title,\n        modificationDate: data.modificationDate,\n        contents: data.contents,\n        hideWrapper: true\n      });\n      const popup = popupElement.render();\n      popup.style.left = container.style.width;\n      container.appendChild(popup);\n    }\n\n    _renderQuadrilaterals(className) {\n      this.quadrilaterals.forEach(quadrilateral => {\n        quadrilateral.className = className;\n      });\n      return this.quadrilaterals;\n    }\n\n    render() {\n      (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n    }\n\n  }\n\n  class LinkAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action || parameters.data.isTooltipOnly || parameters.data.actions && (parameters.data.actions.Action || parameters.data.actions[\"Mouse Up\"] || parameters.data.actions[\"Mouse Down\"]));\n      super(parameters, {\n        isRenderable,\n        createQuadrilaterals: true\n      });\n    }\n\n    render() {\n      const {\n        data,\n        linkService\n      } = this;\n      const link = document.createElement(\"a\");\n\n      if (data.url) {\n        (0, _display_utils.addLinkAttributes)(link, {\n          url: data.url,\n          target: data.newWindow ? _display_utils.LinkTarget.BLANK : linkService.externalLinkTarget,\n          rel: linkService.externalLinkRel,\n          enabled: linkService.externalLinkEnabled\n        });\n      } else if (data.action) {\n        this._bindNamedAction(link, data.action);\n      } else if (data.dest) {\n        this._bindLink(link, data.dest);\n      } else if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n        this._bindJSAction(link, data);\n      } else {\n        this._bindLink(link, \"\");\n      }\n\n      if (this.quadrilaterals) {\n        return this._renderQuadrilaterals(\"linkAnnotation\").map((quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        });\n      }\n\n      this.container.className = \"linkAnnotation\";\n      this.container.appendChild(link);\n      return this.container;\n    }\n\n    _bindLink(link, destination) {\n      link.href = this.linkService.getDestinationHash(destination);\n\n      link.onclick = () => {\n        if (destination) {\n          this.linkService.goToDestination(destination);\n        }\n\n        return false;\n      };\n\n      if (destination || destination === \"\") {\n        link.className = \"internalLink\";\n      }\n    }\n\n    _bindNamedAction(link, action) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n\n      link.onclick = () => {\n        this.linkService.executeNamedAction(action);\n        return false;\n      };\n\n      link.className = \"internalLink\";\n    }\n\n    _bindJSAction(link, data) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n      const map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\n\n      for (const name of Object.keys(data.actions)) {\n        const jsName = map.get(name);\n\n        if (!jsName) {\n          continue;\n        }\n\n        link[jsName] = () => {\n          this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n            source: this,\n            detail: {\n              id: data.id,\n              name\n            }\n          });\n          return false;\n        };\n      }\n\n      link.className = \"internalLink\";\n    }\n\n  }\n\n  class TextAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable\n      });\n    }\n\n    render() {\n      this.container.className = \"textAnnotation\";\n      const image = document.createElement(\"img\");\n      image.style.height = this.container.style.height;\n      image.style.width = this.container.style.width;\n      image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n      image.alt = \"[{{type}} Annotation]\";\n      image.dataset.l10nId = \"text_annotation_type\";\n      image.dataset.l10nArgs = JSON.stringify({\n        type: this.data.name\n      });\n\n      if (!this.data.hasPopup) {\n        this._createPopup(image, this.data);\n      }\n\n      this.container.appendChild(image);\n      return this.container;\n    }\n\n  }\n\n  class WidgetAnnotationElement extends AnnotationElement {\n    render() {\n      if (this.data.alternativeText) {\n        this.container.title = this.data.alternativeText;\n      }\n\n      return this.container;\n    }\n\n    _getKeyModifier(event) {\n      return navigator.platform.includes(\"Win\") && event.ctrlKey || navigator.platform.includes(\"Mac\") && event.metaKey;\n    }\n\n    _setEventListener(element, baseName, eventName, valueGetter) {\n      if (baseName.includes(\"mouse\")) {\n        element.addEventListener(baseName, event => {\n          this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n            source: this,\n            detail: {\n              id: this.data.id,\n              name: eventName,\n              value: valueGetter(event),\n              shift: event.shiftKey,\n              modifier: this._getKeyModifier(event)\n            }\n          });\n        });\n      } else {\n        element.addEventListener(baseName, event => {\n          this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n            source: this,\n            detail: {\n              id: this.data.id,\n              name: eventName,\n              value: event.target.checked\n            }\n          });\n        });\n      }\n    }\n\n    _setEventListeners(element, names, getter) {\n      for (const [baseName, eventName] of names) {\n        if (eventName === \"Action\" || this.data.actions && this.data.actions[eventName]) { // lwf\n          this._setEventListener(element, baseName, eventName, getter);\n        }\n      }\n    }\n\n  }\n\n  class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n    constructor(parameters) {\n      const isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n      super(parameters, {\n        isRenderable\n      });\n    }\n\n    render() {\n      const storage = this.annotationStorage;\n      const id = this.data.id;\n      this.container.className = \"textWidgetAnnotation\";\n      let element = null;\n\n      if (this.renderInteractiveForms) {\n        const textContent = storage.getOrCreateValue(id, {\n          value: this.data.fieldValue\n        }).value;\n        const elementData = {\n          userValue: null,\n          formattedValue: null,\n          beforeInputSelectionRange: null,\n          beforeInputValue: null\n        };\n\n        if (this.data.multiLine) {\n          element = document.createElement(\"textarea\");\n          element.textContent = textContent;\n        } else {\n          element = document.createElement(\"input\");\n          element.type = \"text\";\n          element.setAttribute(\"value\", textContent);\n        }\n\n        elementData.userValue = textContent;\n        element.setAttribute(\"id\", id);\n        element.addEventListener(\"input\", function (event) {\n          storage.setValue(id, {\n            value: event.target.value\n          });\n        });\n\n        let blurListener = event => {\n          if (elementData.formattedValue) {\n            event.target.value = elementData.formattedValue;\n          }\n\n          event.target.setSelectionRange(0, 0);\n          elementData.beforeInputSelectionRange = null;\n        };\n\n        if (this.enableScripting && this.hasJSActions) {\n          element.addEventListener(\"focus\", event => {\n            if (elementData.userValue) {\n              event.target.value = elementData.userValue;\n            }\n          });\n          element.addEventListener(\"updatefromsandbox\", function (event) {\n            const {\n              detail\n            } = event;\n            const actions = {\n              value() {\n                elementData.userValue = detail.value || \"\";\n                storage.setValue(id, {\n                  value: elementData.userValue.toString()\n                });\n\n                if (!elementData.formattedValue) {\n                  event.target.value = elementData.userValue;\n                }\n              },\n\n              valueAsString() {\n                elementData.formattedValue = detail.valueAsString || \"\";\n\n                if (event.target !== document.activeElement) {\n                  event.target.value = elementData.formattedValue;\n                }\n\n                storage.setValue(id, {\n                  formattedValue: elementData.formattedValue\n                });\n              },\n\n              focus() {\n                setTimeout(() => event.target.focus({\n                  preventScroll: false\n                }), 0);\n              },\n\n              userName() {\n                event.target.title = detail.userName;\n              },\n\n              hidden() {\n                event.target.style.visibility = detail.hidden ? \"hidden\" : \"visible\";\n                storage.setValue(id, {\n                  hidden: detail.hidden\n                });\n              },\n\n              editable() {\n                event.target.disabled = !detail.editable;\n              },\n\n              selRange() {\n                const [selStart, selEnd] = detail.selRange;\n\n                if (selStart >= 0 && selEnd < event.target.value.length) {\n                  event.target.setSelectionRange(selStart, selEnd);\n                }\n              },\n\n              strokeColor() {\n                const color = detail.strokeColor;\n                event.target.style.color = _scripting_utils.ColorConverters[`${color[0]}_HTML`](color.slice(1));\n              }\n\n            };\n            Object.keys(detail).filter(name => name in actions).forEach(name => actions[name]());\n          });\n\n          if (this.data.actions) {\n            element.addEventListener(\"keydown\", event => {\n              elementData.beforeInputValue = event.target.value;\n              let commitKey = -1;\n\n              if (event.key === \"Escape\") {\n                commitKey = 0;\n              } else if (event.key === \"Enter\") {\n                commitKey = 2;\n              } else if (event.key === \"Tab\") {\n                commitKey = 3;\n              }\n\n              if (commitKey === -1) {\n                return;\n              }\n\n              elementData.userValue = event.target.value;\n              this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n                source: this,\n                detail: {\n                  id,\n                  name: \"Keystroke\",\n                  value: event.target.value,\n                  willCommit: true,\n                  commitKey,\n                  selStart: event.target.selectionStart,\n                  selEnd: event.target.selectionEnd\n                }\n              });\n            });\n            const _blurListener = blurListener;\n            blurListener = null;\n            element.addEventListener(\"blur\", event => {\n              if (this._mouseState.isDown) {\n                elementData.userValue = event.target.value;\n                this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n                  source: this,\n                  detail: {\n                    id,\n                    name: \"Keystroke\",\n                    value: event.target.value,\n                    willCommit: true,\n                    commitKey: 1,\n                    selStart: event.target.selectionStart,\n                    selEnd: event.target.selectionEnd\n                  }\n                });\n              }\n\n              _blurListener(event);\n            });\n            element.addEventListener(\"mousedown\", event => {\n              elementData.beforeInputValue = event.target.value;\n              elementData.beforeInputSelectionRange = null;\n            });\n            element.addEventListener(\"keyup\", event => {\n              if (event.target.selectionStart === event.target.selectionEnd) {\n                elementData.beforeInputSelectionRange = null;\n              }\n            });\n            element.addEventListener(\"select\", event => {\n              elementData.beforeInputSelectionRange = [event.target.selectionStart, event.target.selectionEnd];\n            });\n\n            if (\"Keystroke\" in this.data.actions) {\n              element.addEventListener(\"input\", event => {\n                let selStart = -1;\n                let selEnd = -1;\n\n                if (elementData.beforeInputSelectionRange) {\n                  [selStart, selEnd] = elementData.beforeInputSelectionRange;\n                }\n\n                this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { // lwf\n                  source: this,\n                  detail: {\n                    id,\n                    name: \"Keystroke\",\n                    value: elementData.beforeInputValue,\n                    change: event.data,\n                    willCommit: false,\n                    selStart,\n                    selEnd\n                  }\n                });\n              });\n            }\n\n            this._setEventListeners(element, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.value);\n          }\n        }\n\n        if (blurListener) {\n          element.addEventListener(\"blur\", blurListener);\n        }\n\n        element.disabled = this.data.readOnly;\n        element.name = this.data.fieldName;\n\n        if (this.data.maxLen !== null) {\n          element.maxLength = this.data.maxLen;\n        }\n\n        if (this.data.comb) {\n          const fieldWidth = this.data.rect[2] - this.data.rect[0];\n          const combWidth = fieldWidth / this.data.maxLen;\n          element.classList.add(\"comb\");\n          element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n        }\n      } else {\n        element = document.createElement(\"div\");\n        element.textContent = this.data.fieldValue;\n        element.style.verticalAlign = \"middle\";\n        element.style.display = \"table-cell\";\n      }\n\n      this._setTextStyle(element);\n\n      this.container.appendChild(element);\n      return this.container;\n    }\n\n    _setTextStyle(element) {\n      const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n      const {\n        fontSize,\n        fontColor\n      } = this.data.defaultAppearanceData;\n      const style = element.style;\n\n      if (fontSize) {\n        style.fontSize = `${fontSize}px`;\n      }\n\n      style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n      if (this.data.textAlignment !== null) {\n        style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n      }\n    }\n\n  }\n\n  class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n    constructor(parameters) {\n      super(parameters, {\n        isRenderable: parameters.renderInteractiveForms\n      });\n    }\n\n    render() {\n      const storage = this.annotationStorage;\n      const data = this.data;\n      const id = data.id;\n      const value = storage.getOrCreateValue(id, {\n        value: data.fieldValue && data.fieldValue !== \"Off\"\n      }).value;\n      this.container.className = \"buttonWidgetAnnotation checkBox\";\n      const element = document.createElement(\"input\");\n      element.disabled = data.readOnly;\n      element.type = \"checkbox\";\n      element.name = this.data.fieldName;\n\n      if (value) {\n        element.setAttribute(\"checked\", true);\n      }\n\n      element.setAttribute(\"id\", id);\n      element.addEventListener(\"change\", function (event) {\n        const name = event.target.name;\n\n        for (const checkbox of document.getElementsByName(name)) {\n          if (checkbox !== event.target) {\n            checkbox.checked = false;\n            storage.setValue(checkbox.parentNode.getAttribute(\"data-annotation-id\"), {\n              value: false\n            });\n          }\n        }\n\n        storage.setValue(id, {\n          value: event.target.checked\n        });\n      });\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"updatefromsandbox\", event => {\n          const {\n            detail\n          } = event;\n          const actions = {\n            value() {\n              event.target.checked = detail.value !== \"Off\";\n              storage.setValue(id, {\n                value: event.target.checked\n              });\n            },\n\n            focus() {\n              setTimeout(() => event.target.focus({\n                preventScroll: false\n              }), 0);\n            },\n\n            hidden() {\n              event.target.style.visibility = detail.hidden ? \"hidden\" : \"visible\";\n              storage.setValue(id, {\n                hidden: detail.hidden\n              });\n            },\n\n            editable() {\n              event.target.disabled = !detail.editable;\n            }\n\n          };\n          Object.keys(detail).filter(name => name in actions).forEach(name => actions[name]());\n        });\n\n        this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n      }\n\n      this.container.appendChild(element);\n      return this.container;\n    }\n\n  }\n\n  class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n    constructor(parameters) {\n      super(parameters, {\n        isRenderable: parameters.renderInteractiveForms\n      });\n    }\n\n    render() {\n      this.container.className = \"buttonWidgetAnnotation radioButton\";\n      const storage = this.annotationStorage;\n      const data = this.data;\n      const id = data.id;\n      const value = storage.getOrCreateValue(id, {\n        value: data.fieldValue === data.buttonValue\n      }).value;\n      const element = document.createElement(\"input\");\n      element.disabled = data.readOnly;\n      element.type = \"radio\";\n      element.name = data.fieldName;\n\n      if (value) {\n        element.setAttribute(\"checked\", true);\n      }\n\n      element.setAttribute(\"pdfButtonValue\", data.buttonValue);\n      element.setAttribute(\"id\", id);\n      element.addEventListener(\"change\", function (event) {\n        const {\n          target\n        } = event;\n\n        for (const radio of document.getElementsByName(target.name)) {\n          if (radio !== target) {\n            storage.setValue(radio.getAttribute(\"id\"), {\n              value: false\n            });\n          }\n        }\n\n        storage.setValue(id, {\n          value: target.checked\n        });\n      });\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"updatefromsandbox\", event => {\n          const {\n            detail\n          } = event;\n          const actions = {\n            value() {\n              const fieldValue = detail.value;\n\n              for (const radio of document.getElementsByName(event.target.name)) {\n                const radioId = radio.getAttribute(\"id\");\n\n                if (fieldValue === radio.getAttribute(\"pdfButtonValue\")) {\n                  radio.setAttribute(\"checked\", true);\n                  storage.setValue(radioId, {\n                    value: true\n                  });\n                } else {\n                  storage.setValue(radioId, {\n                    value: false\n                  });\n                }\n              }\n            },\n\n            focus() {\n              setTimeout(() => event.target.focus({\n                preventScroll: false\n              }), 0);\n            },\n\n            hidden() {\n              event.target.style.visibility = detail.hidden ? \"hidden\" : \"visible\";\n              storage.setValue(id, {\n                hidden: detail.hidden\n              });\n            },\n\n            editable() {\n              event.target.disabled = !detail.editable;\n            }\n\n          };\n          Object.keys(detail).filter(name => name in actions).forEach(name => actions[name]());\n        });\n\n        this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n      }\n\n      this.container.appendChild(element);\n      return this.container;\n    }\n\n  }\n\n  class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n    render() {\n      const container = super.render();\n      container.className = \"buttonWidgetAnnotation pushButton\";\n\n      if (this.data.alternativeText) {\n        container.title = this.data.alternativeText;\n      }\n\n      return container;\n    }\n\n  }\n\n  class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n    constructor(parameters) {\n      super(parameters, {\n        isRenderable: parameters.renderInteractiveForms\n      });\n    }\n\n    render() {\n      this.container.className = \"choiceWidgetAnnotation\";\n      const storage = this.annotationStorage;\n      const id = this.data.id;\n      storage.getOrCreateValue(id, {\n        value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined\n      });\n      const selectElement = document.createElement(\"select\");\n      selectElement.disabled = this.data.readOnly;\n      selectElement.name = this.data.fieldName;\n      selectElement.setAttribute(\"id\", id);\n\n      if (!this.data.combo) {\n        selectElement.size = this.data.options.length;\n\n        if (this.data.multiSelect) {\n          selectElement.multiple = true;\n        }\n      }\n\n      for (const option of this.data.options) {\n        const optionElement = document.createElement(\"option\");\n        optionElement.textContent = option.displayValue;\n        optionElement.value = option.exportValue;\n\n        if (this.data.fieldValue.includes(option.exportValue)) {\n          optionElement.setAttribute(\"selected\", true);\n        }\n\n        selectElement.appendChild(optionElement);\n      }\n\n      function getValue(event) {\n        const options = event.target.options;\n        return options[options.selectedIndex].value;\n      }\n\n      if (this.enableScripting && this.hasJSActions) {\n        selectElement.addEventListener(\"updatefromsandbox\", event => {\n          const {\n            detail\n          } = event;\n          const actions = {\n            value() {\n              const options = event.target.options;\n              const value = detail.value;\n              const i = options.indexOf(value);\n\n              if (i !== -1) {\n                options.selectedIndex = i;\n                storage.setValue(id, {\n                  value\n                });\n              }\n            },\n\n            focus() {\n              setTimeout(() => event.target.focus({\n                preventScroll: false\n              }), 0);\n            },\n\n            hidden() {\n              event.target.style.visibility = detail.hidden ? \"hidden\" : \"visible\";\n              storage.setValue(id, {\n                hidden: detail.hidden\n              });\n            },\n\n            editable() {\n              event.target.disabled = !detail.editable;\n            }\n\n          };\n          Object.keys(detail).filter(name => name in actions).forEach(name => actions[name]());\n        });\n        selectElement.addEventListener(\"input\", event => {\n          const value = getValue(event);\n          storage.setValue(id, {\n            value\n          });\n          this.linkService.eventBus && this.linkService.eventBus.dispatch(\"dispatcheventinsandbox\", { //lwf\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              changeEx: value,\n              willCommit: true,\n              commitKey: 1,\n              keyDown: false\n            }\n          });\n        });\n\n        this._setEventListeners(selectElement, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n      } else {\n        selectElement.addEventListener(\"input\", function (event) {\n          storage.setValue(id, {\n            value: getValue(event)\n          });\n        });\n      }\n\n      this.container.appendChild(selectElement);\n      return this.container;\n    }\n\n  }\n\n  class PopupAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable\n      });\n    }\n\n    render() {\n      const IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n      this.container.className = \"popupAnnotation\";\n\n      if (IGNORE_TYPES.includes(this.data.parentType)) {\n        return this.container;\n      }\n\n      const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n      const parentElements = this.layer.querySelectorAll(selector);\n\n      if (parentElements.length === 0) {\n        return this.container;\n      }\n\n      const popup = new PopupElement({\n        container: this.container,\n        trigger: Array.from(parentElements),\n        color: this.data.color,\n        title: this.data.title,\n        modificationDate: this.data.modificationDate,\n        contents: this.data.contents\n      });\n      const page = this.page;\n\n      const rect = _util.Util.normalizeRect([this.data.parentRect[0], page.view[3] - this.data.parentRect[1] + page.view[1], this.data.parentRect[2], page.view[3] - this.data.parentRect[3] + page.view[1]]);\n\n      const popupLeft = rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n      const popupTop = rect[1];\n      this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n      this.container.style.left = `${popupLeft}px`;\n      this.container.style.top = `${popupTop}px`;\n      this.container.appendChild(popup.render());\n      return this.container;\n    }\n\n  }\n\n  class PopupElement {\n    constructor(parameters) {\n      this.container = parameters.container;\n      this.trigger = parameters.trigger;\n      this.color = parameters.color;\n      this.title = parameters.title;\n      this.modificationDate = parameters.modificationDate;\n      this.contents = parameters.contents;\n      this.hideWrapper = parameters.hideWrapper || false;\n      this.pinned = false;\n    }\n\n    render() {\n      const BACKGROUND_ENLIGHT = 0.7;\n      const wrapper = document.createElement(\"div\");\n      wrapper.className = \"popupWrapper\";\n      this.hideElement = this.hideWrapper ? wrapper : this.container;\n      this.hideElement.setAttribute(\"hidden\", true);\n      const popup = document.createElement(\"div\");\n      popup.className = \"popup\";\n      const color = this.color;\n\n      if (color) {\n        const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n        const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n        const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n        popup.style.backgroundColor = _util.Util.makeHexColor(r | 0, g | 0, b | 0);\n      }\n\n      const title = document.createElement(\"h1\");\n      title.textContent = this.title;\n      popup.appendChild(title);\n\n      const dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n\n      if (dateObject) {\n        const modificationDate = document.createElement(\"span\");\n        modificationDate.textContent = \"{{date}}, {{time}}\";\n        modificationDate.dataset.l10nId = \"annotation_date_string\";\n        modificationDate.dataset.l10nArgs = JSON.stringify({\n          date: dateObject.toLocaleDateString(),\n          time: dateObject.toLocaleTimeString()\n        });\n        popup.appendChild(modificationDate);\n      }\n\n      const contents = this._formatContents(this.contents);\n\n      popup.appendChild(contents);\n\n      if (!Array.isArray(this.trigger)) {\n        this.trigger = [this.trigger];\n      }\n\n      this.trigger.forEach(element => {\n        element.addEventListener(\"click\", this._toggle.bind(this));\n        element.addEventListener(\"mouseover\", this._show.bind(this, false));\n        element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n      });\n      popup.addEventListener(\"click\", this._hide.bind(this, true));\n      wrapper.appendChild(popup);\n      return wrapper;\n    }\n\n    _formatContents(contents) {\n      const p = document.createElement(\"p\");\n      const lines = contents.split(/(?:\\r\\n?|\\n)/);\n\n      for (let i = 0, ii = lines.length; i < ii; ++i) {\n        const line = lines[i];\n        p.appendChild(document.createTextNode(line));\n\n        if (i < ii - 1) {\n          p.appendChild(document.createElement(\"br\"));\n        }\n      }\n\n      return p;\n    }\n\n    _toggle() {\n      if (this.pinned) {\n        this._hide(true);\n      } else {\n        this._show(true);\n      }\n    }\n\n    _show(pin = false) {\n      if (pin) {\n        this.pinned = true;\n      }\n\n      if (this.hideElement.hasAttribute(\"hidden\")) {\n        this.hideElement.removeAttribute(\"hidden\");\n        this.container.style.zIndex += 1;\n      }\n    }\n\n    _hide(unpin = true) {\n      if (unpin) {\n        this.pinned = false;\n      }\n\n      if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n        this.hideElement.setAttribute(\"hidden\", true);\n        this.container.style.zIndex -= 1;\n      }\n    }\n\n  }\n\n  class FreeTextAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"freeTextAnnotation\";\n\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      return this.container;\n    }\n\n  }\n\n  class LineAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"lineAnnotation\";\n      const data = this.data;\n      const width = data.rect[2] - data.rect[0];\n      const height = data.rect[3] - data.rect[1];\n      const svg = this.svgFactory.create(width, height);\n      const line = this.svgFactory.createElement(\"svg:line\");\n      line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n      line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n      line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n      line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n      line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      line.setAttribute(\"stroke\", \"transparent\");\n      svg.appendChild(line);\n      this.container.append(svg);\n\n      this._createPopup(line, data);\n\n      return this.container;\n    }\n\n  }\n\n  class SquareAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"squareAnnotation\";\n      const data = this.data;\n      const width = data.rect[2] - data.rect[0];\n      const height = data.rect[3] - data.rect[1];\n      const svg = this.svgFactory.create(width, height);\n      const borderWidth = data.borderStyle.width;\n      const square = this.svgFactory.createElement(\"svg:rect\");\n      square.setAttribute(\"x\", borderWidth / 2);\n      square.setAttribute(\"y\", borderWidth / 2);\n      square.setAttribute(\"width\", width - borderWidth);\n      square.setAttribute(\"height\", height - borderWidth);\n      square.setAttribute(\"stroke-width\", borderWidth || 1);\n      square.setAttribute(\"stroke\", \"transparent\");\n      square.setAttribute(\"fill\", \"none\");\n      svg.appendChild(square);\n      this.container.append(svg);\n\n      this._createPopup(square, data);\n\n      return this.container;\n    }\n\n  }\n\n  class CircleAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"circleAnnotation\";\n      const data = this.data;\n      const width = data.rect[2] - data.rect[0];\n      const height = data.rect[3] - data.rect[1];\n      const svg = this.svgFactory.create(width, height);\n      const borderWidth = data.borderStyle.width;\n      const circle = this.svgFactory.createElement(\"svg:ellipse\");\n      circle.setAttribute(\"cx\", width / 2);\n      circle.setAttribute(\"cy\", height / 2);\n      circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n      circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n      circle.setAttribute(\"stroke-width\", borderWidth || 1);\n      circle.setAttribute(\"stroke\", \"transparent\");\n      circle.setAttribute(\"fill\", \"none\");\n      svg.appendChild(circle);\n      this.container.append(svg);\n\n      this._createPopup(circle, data);\n\n      return this.container;\n    }\n\n  }\n\n  class PolylineAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n      this.containerClassName = \"polylineAnnotation\";\n      this.svgElementName = \"svg:polyline\";\n    }\n\n    render() {\n      this.container.className = this.containerClassName;\n      const data = this.data;\n      const width = data.rect[2] - data.rect[0];\n      const height = data.rect[3] - data.rect[1];\n      const svg = this.svgFactory.create(width, height);\n      let points = [];\n\n      for (const coordinate of data.vertices) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(x + \",\" + y);\n      }\n\n      points = points.join(\" \");\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n      svg.appendChild(polyline);\n      this.container.append(svg);\n\n      this._createPopup(polyline, data);\n\n      return this.container;\n    }\n\n  }\n\n  class PolygonAnnotationElement extends PolylineAnnotationElement {\n    constructor(parameters) {\n      super(parameters);\n      this.containerClassName = \"polygonAnnotation\";\n      this.svgElementName = \"svg:polygon\";\n    }\n\n  }\n\n  class CaretAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"caretAnnotation\";\n\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      return this.container;\n    }\n\n  }\n\n  class InkAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n      this.containerClassName = \"inkAnnotation\";\n      this.svgElementName = \"svg:polyline\";\n    }\n\n    render() {\n      this.container.className = this.containerClassName;\n      const data = this.data;\n      const width = data.rect[2] - data.rect[0];\n      const height = data.rect[3] - data.rect[1];\n      const svg = this.svgFactory.create(width, height);\n\n      for (const inkList of data.inkLists) {\n        let points = [];\n\n        for (const coordinate of inkList) {\n          const x = coordinate.x - data.rect[0];\n          const y = data.rect[3] - coordinate.y;\n          points.push(`${x},${y}`);\n        }\n\n        points = points.join(\" \");\n        const polyline = this.svgFactory.createElement(this.svgElementName);\n        polyline.setAttribute(\"points\", points);\n        polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n        polyline.setAttribute(\"stroke\", \"transparent\");\n        polyline.setAttribute(\"fill\", \"none\");\n\n        this._createPopup(polyline, data);\n\n        svg.appendChild(polyline);\n      }\n\n      this.container.append(svg);\n      return this.container;\n    }\n\n  }\n\n  class HighlightAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true,\n        createQuadrilaterals: true\n      });\n    }\n\n    render() {\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      if (this.quadrilaterals) {\n        return this._renderQuadrilaterals(\"highlightAnnotation\");\n      }\n\n      this.container.className = \"highlightAnnotation\";\n      return this.container;\n    }\n\n  }\n\n  class UnderlineAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true,\n        createQuadrilaterals: true\n      });\n    }\n\n    render() {\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      if (this.quadrilaterals) {\n        return this._renderQuadrilaterals(\"underlineAnnotation\");\n      }\n\n      this.container.className = \"underlineAnnotation\";\n      return this.container;\n    }\n\n  }\n\n  class SquigglyAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true,\n        createQuadrilaterals: true\n      });\n    }\n\n    render() {\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      if (this.quadrilaterals) {\n        return this._renderQuadrilaterals(\"squigglyAnnotation\");\n      }\n\n      this.container.className = \"squigglyAnnotation\";\n      return this.container;\n    }\n\n  }\n\n  class StrikeOutAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true,\n        createQuadrilaterals: true\n      });\n    }\n\n    render() {\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      if (this.quadrilaterals) {\n        return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n      }\n\n      this.container.className = \"strikeoutAnnotation\";\n      return this.container;\n    }\n\n  }\n\n  class StampAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n      super(parameters, {\n        isRenderable,\n        ignoreBorder: true\n      });\n    }\n\n    render() {\n      this.container.className = \"stampAnnotation\";\n\n      if (!this.data.hasPopup) {\n        this._createPopup(null, this.data);\n      }\n\n      return this.container;\n    }\n\n  }\n\n  class FileAttachmentAnnotationElement extends AnnotationElement {\n    constructor(parameters) {\n      super(parameters, {\n        isRenderable: true\n      });\n      const {\n        filename,\n        content\n      } = this.data.file;\n      this.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n      this.content = content;\n      this.linkService.eventBus && this.linkService.eventBus.dispatch(\"fileattachmentannotation\", { // lwf\n        source: this,\n        id: (0, _util.stringToPDFString)(filename),\n        filename,\n        content\n      });\n    }\n\n    render() {\n      this.container.className = \"fileAttachmentAnnotation\";\n      const trigger = document.createElement(\"div\");\n      trigger.style.height = this.container.style.height;\n      trigger.style.width = this.container.style.width;\n      trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n      if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n        this._createPopup(trigger, this.data);\n      }\n\n      this.container.appendChild(trigger);\n      return this.container;\n    }\n\n    _download() {\n      if (!this.downloadManager) {\n        (0, _util.warn)(\"Download cannot be started due to unavailable download manager\");\n        return;\n      }\n\n      this.downloadManager.downloadData(this.content, this.filename, \"\");\n    }\n\n  }\n\n  class AnnotationLayer {\n    static render(parameters) {\n      const sortedAnnotations = [],\n            popupAnnotations = [];\n\n      for (const data of parameters.annotations) {\n        if (!data) {\n          continue;\n        }\n\n        if (data.annotationType === _util.AnnotationType.POPUP) {\n          popupAnnotations.push(data);\n          continue;\n        }\n\n        sortedAnnotations.push(data);\n      }\n\n      if (popupAnnotations.length) {\n        sortedAnnotations.push(...popupAnnotations);\n      }\n\n      for (const data of sortedAnnotations) {\n        const element = AnnotationElementFactory.create({\n          data,\n          layer: parameters.div,\n          page: parameters.page,\n          viewport: parameters.viewport,\n          linkService: parameters.linkService,\n          downloadManager: parameters.downloadManager,\n          imageResourcesPath: parameters.imageResourcesPath || \"\",\n          renderInteractiveForms: typeof parameters.renderInteractiveForms === \"boolean\" ? parameters.renderInteractiveForms : true,\n          svgFactory: new _display_utils.DOMSVGFactory(),\n          annotationStorage: parameters.annotationStorage || new _annotation_storage.AnnotationStorage(),\n          enableScripting: parameters.enableScripting,\n          hasJSActions: parameters.hasJSActions,\n          mouseState: parameters.mouseState || {\n            isDown: false\n          }\n        });\n\n        if (element.isRenderable) {\n          const rendered = element.render();\n\n          if (data.hidden) {\n            rendered.style.visibility = \"hidden\";\n          }\n\n          if (Array.isArray(rendered)) {\n            for (const renderedElement of rendered) {\n              parameters.div.appendChild(renderedElement);\n            }\n          } else {\n            if (element instanceof PopupAnnotationElement) {\n              parameters.div.prepend(rendered);\n            } else {\n              parameters.div.appendChild(rendered);\n            }\n          }\n        }\n      }\n    }\n\n    static update(parameters) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n\n      for (const data of parameters.annotations) {\n        const elements = parameters.div.querySelectorAll(`[data-annotation-id=\"${data.id}\"]`);\n\n        if (elements) {\n          elements.forEach(element => {\n            element.style.transform = transform;\n          });\n        }\n      }\n\n      parameters.div.removeAttribute(\"hidden\");\n    }\n\n  }\n\n  exports.AnnotationLayer = AnnotationLayer;\n\n  /***/ }),\n  /* 20 */\n  /***/ ((__unused_webpack_module, exports) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.ColorConverters = void 0;\n\n  function makeColorComp(n) {\n    return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n  }\n\n  class ColorConverters {\n    static CMYK_G([c, y, m, k]) {\n      return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n    }\n\n    static G_CMYK([g]) {\n      return [\"CMYK\", 0, 0, 0, 1 - g];\n    }\n\n    static G_RGB([g]) {\n      return [\"RGB\", g, g, g];\n    }\n\n    static G_HTML([g]) {\n      const G = makeColorComp(g);\n      return `#${G}${G}${G}`;\n    }\n\n    static RGB_G([r, g, b]) {\n      return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n    }\n\n    static RGB_HTML([r, g, b]) {\n      const R = makeColorComp(r);\n      const G = makeColorComp(g);\n      const B = makeColorComp(b);\n      return `#${R}${G}${B}`;\n    }\n\n    static T_HTML() {\n      return \"#00000000\";\n    }\n\n    static CMYK_RGB([c, y, m, k]) {\n      return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n    }\n\n    static CMYK_HTML(components) {\n      return this.RGB_HTML(this.CMYK_RGB(components));\n    }\n\n    static RGB_CMYK([r, g, b]) {\n      const c = 1 - r;\n      const m = 1 - g;\n      const y = 1 - b;\n      const k = Math.min(c, m, y);\n      return [\"CMYK\", c, m, y, k];\n    }\n\n  }\n\n  exports.ColorConverters = ColorConverters;\n\n  /***/ }),\n  /* 21 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.renderTextLayer = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  const renderTextLayer = function renderTextLayerClosure() {\n    const MAX_TEXT_DIVS_TO_RENDER = 100000;\n    const NonWhitespaceRegexp = /\\S/;\n\n    function isAllWhitespace(str) {\n      return !NonWhitespaceRegexp.test(str);\n    }\n\n    function appendText(task, geom, styles) {\n      const textDiv = document.createElement(\"span\");\n      const textDivProperties = {\n        angle: 0,\n        canvasWidth: 0,\n        isWhitespace: false,\n        originalTransform: null,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        scale: 1\n      };\n\n      task._textDivs.push(textDiv);\n\n      if (isAllWhitespace(geom.str)) {\n        textDivProperties.isWhitespace = true;\n\n        task._textDivProperties.set(textDiv, textDivProperties);\n\n        return;\n      }\n\n      const tx = _util.Util.transform(task._viewport.transform, geom.transform);\n\n      let angle = Math.atan2(tx[1], tx[0]);\n      const style = styles[geom.fontName];\n\n      if (style.vertical) {\n        angle += Math.PI / 2;\n      }\n\n      const fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n      let fontAscent = fontHeight;\n\n      if (style.ascent) {\n        fontAscent = style.ascent * fontAscent;\n      } else if (style.descent) {\n        fontAscent = (1 + style.descent) * fontAscent;\n      }\n\n      let left, top;\n\n      if (angle === 0) {\n        left = tx[4];\n        top = tx[5] - fontAscent;\n      } else {\n        left = tx[4] + fontAscent * Math.sin(angle);\n        top = tx[5] - fontAscent * Math.cos(angle);\n      }\n\n      textDiv.style.left = `${left}px`;\n      textDiv.style.top = `${top}px`;\n      textDiv.style.fontSize = `${fontHeight}px`;\n      textDiv.style.fontFamily = style.fontFamily;\n      textDiv.textContent = geom.str;\n\n      if (task._fontInspectorEnabled) {\n        textDiv.dataset.fontName = geom.fontName;\n      }\n\n      if (angle !== 0) {\n        textDivProperties.angle = angle * (180 / Math.PI);\n      }\n\n      let shouldScaleText = false;\n\n      if (geom.str.length > 1) {\n        shouldScaleText = true;\n      } else if (geom.transform[0] !== geom.transform[3]) {\n        const absScaleX = Math.abs(geom.transform[0]),\n              absScaleY = Math.abs(geom.transform[3]);\n\n        if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n          shouldScaleText = true;\n        }\n      }\n\n      if (shouldScaleText) {\n        if (style.vertical) {\n          textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n        } else {\n          textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n        }\n      }\n\n      task._textDivProperties.set(textDiv, textDivProperties);\n\n      if (task._textContentStream) {\n        task._layoutText(textDiv);\n      }\n\n      if (task._enhanceTextSelection) {\n        let angleCos = 1,\n            angleSin = 0;\n\n        if (angle !== 0) {\n          angleCos = Math.cos(angle);\n          angleSin = Math.sin(angle);\n        }\n\n        const divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n        const divHeight = fontHeight;\n        let m, b;\n\n        if (angle !== 0) {\n          m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n          b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n        } else {\n          b = [left, top, left + divWidth, top + divHeight];\n        }\n\n        task._bounds.push({\n          left: b[0],\n          top: b[1],\n          right: b[2],\n          bottom: b[3],\n          div: textDiv,\n          size: [divWidth, divHeight],\n          m\n        });\n      }\n    }\n\n    function render(task) {\n      if (task._canceled) {\n        return;\n      }\n\n      const textDivs = task._textDivs;\n      const capability = task._capability;\n      const textDivsLength = textDivs.length;\n\n      if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n        task._renderingDone = true;\n        capability.resolve();\n        return;\n      }\n\n      if (!task._textContentStream) {\n        for (let i = 0; i < textDivsLength; i++) {\n          task._layoutText(textDivs[i]);\n        }\n      }\n\n      task._renderingDone = true;\n      capability.resolve();\n    }\n\n    function findPositiveMin(ts, offset, count) {\n      let result = 0;\n\n      for (let i = 0; i < count; i++) {\n        const t = ts[offset++];\n\n        if (t > 0) {\n          result = result ? Math.min(t, result) : t;\n        }\n      }\n\n      return result;\n    }\n\n    function expand(task) {\n      const bounds = task._bounds;\n      const viewport = task._viewport;\n      const expanded = expandBounds(viewport.width, viewport.height, bounds);\n\n      for (let i = 0; i < expanded.length; i++) {\n        const div = bounds[i].div;\n\n        const divProperties = task._textDivProperties.get(div);\n\n        if (divProperties.angle === 0) {\n          divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n          divProperties.paddingTop = bounds[i].top - expanded[i].top;\n          divProperties.paddingRight = expanded[i].right - bounds[i].right;\n          divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n\n          task._textDivProperties.set(div, divProperties);\n\n          continue;\n        }\n\n        const e = expanded[i],\n              b = bounds[i];\n        const m = b.m,\n              c = m[0],\n              s = m[1];\n        const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n        const ts = new Float64Array(64);\n        points.forEach(function (p, j) {\n          const t = _util.Util.applyTransform(p, m);\n\n          ts[j + 0] = c && (e.left - t[0]) / c;\n          ts[j + 4] = s && (e.top - t[1]) / s;\n          ts[j + 8] = c && (e.right - t[0]) / c;\n          ts[j + 12] = s && (e.bottom - t[1]) / s;\n          ts[j + 16] = s && (e.left - t[0]) / -s;\n          ts[j + 20] = c && (e.top - t[1]) / c;\n          ts[j + 24] = s && (e.right - t[0]) / -s;\n          ts[j + 28] = c && (e.bottom - t[1]) / c;\n          ts[j + 32] = c && (e.left - t[0]) / -c;\n          ts[j + 36] = s && (e.top - t[1]) / -s;\n          ts[j + 40] = c && (e.right - t[0]) / -c;\n          ts[j + 44] = s && (e.bottom - t[1]) / -s;\n          ts[j + 48] = s && (e.left - t[0]) / s;\n          ts[j + 52] = c && (e.top - t[1]) / -c;\n          ts[j + 56] = s && (e.right - t[0]) / s;\n          ts[j + 60] = c && (e.bottom - t[1]) / -c;\n        });\n        const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n        divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n        divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n        divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n        divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n\n        task._textDivProperties.set(div, divProperties);\n      }\n    }\n\n    function expandBounds(width, height, boxes) {\n      const bounds = boxes.map(function (box, i) {\n        return {\n          x1: box.left,\n          y1: box.top,\n          x2: box.right,\n          y2: box.bottom,\n          index: i,\n          x1New: undefined,\n          x2New: undefined\n        };\n      });\n      expandBoundsLTR(width, bounds);\n      const expanded = new Array(boxes.length);\n      bounds.forEach(function (b) {\n        const i = b.index;\n        expanded[i] = {\n          left: b.x1New,\n          top: 0,\n          right: b.x2New,\n          bottom: 0\n        };\n      });\n      boxes.map(function (box, i) {\n        const e = expanded[i],\n              b = bounds[i];\n        b.x1 = box.top;\n        b.y1 = width - e.right;\n        b.x2 = box.bottom;\n        b.y2 = width - e.left;\n        b.index = i;\n        b.x1New = undefined;\n        b.x2New = undefined;\n      });\n      expandBoundsLTR(height, bounds);\n      bounds.forEach(function (b) {\n        const i = b.index;\n        expanded[i].top = b.x1New;\n        expanded[i].bottom = b.x2New;\n      });\n      return expanded;\n    }\n\n    function expandBoundsLTR(width, bounds) {\n      bounds.sort(function (a, b) {\n        return a.x1 - b.x1 || a.index - b.index;\n      });\n      const fakeBoundary = {\n        x1: -Infinity,\n        y1: -Infinity,\n        x2: 0,\n        y2: Infinity,\n        index: -1,\n        x1New: 0,\n        x2New: 0\n      };\n      const horizon = [{\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary\n      }];\n      bounds.forEach(function (boundary) {\n        let i = 0;\n\n        while (i < horizon.length && horizon[i].end <= boundary.y1) {\n          i++;\n        }\n\n        let j = horizon.length - 1;\n\n        while (j >= 0 && horizon[j].start >= boundary.y2) {\n          j--;\n        }\n\n        let horizonPart, affectedBoundary;\n        let q,\n            k,\n            maxXNew = -Infinity;\n\n        for (q = i; q <= j; q++) {\n          horizonPart = horizon[q];\n          affectedBoundary = horizonPart.boundary;\n          let xNew;\n\n          if (affectedBoundary.x2 > boundary.x1) {\n            xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n          } else if (affectedBoundary.x2New === undefined) {\n            xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n          } else {\n            xNew = affectedBoundary.x2New;\n          }\n\n          if (xNew > maxXNew) {\n            maxXNew = xNew;\n          }\n        }\n\n        boundary.x1New = maxXNew;\n\n        for (q = i; q <= j; q++) {\n          horizonPart = horizon[q];\n          affectedBoundary = horizonPart.boundary;\n\n          if (affectedBoundary.x2New === undefined) {\n            if (affectedBoundary.x2 > boundary.x1) {\n              if (affectedBoundary.index > boundary.index) {\n                affectedBoundary.x2New = affectedBoundary.x2;\n              }\n            } else {\n              affectedBoundary.x2New = maxXNew;\n            }\n          } else if (affectedBoundary.x2New > maxXNew) {\n            affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n          }\n        }\n\n        const changedHorizon = [];\n        let lastBoundary = null;\n\n        for (q = i; q <= j; q++) {\n          horizonPart = horizon[q];\n          affectedBoundary = horizonPart.boundary;\n          const useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n\n          if (lastBoundary === useBoundary) {\n            changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n          } else {\n            changedHorizon.push({\n              start: horizonPart.start,\n              end: horizonPart.end,\n              boundary: useBoundary\n            });\n            lastBoundary = useBoundary;\n          }\n        }\n\n        if (horizon[i].start < boundary.y1) {\n          changedHorizon[0].start = boundary.y1;\n          changedHorizon.unshift({\n            start: horizon[i].start,\n            end: boundary.y1,\n            boundary: horizon[i].boundary\n          });\n        }\n\n        if (boundary.y2 < horizon[j].end) {\n          changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n          changedHorizon.push({\n            start: boundary.y2,\n            end: horizon[j].end,\n            boundary: horizon[j].boundary\n          });\n        }\n\n        for (q = i; q <= j; q++) {\n          horizonPart = horizon[q];\n          affectedBoundary = horizonPart.boundary;\n\n          if (affectedBoundary.x2New !== undefined) {\n            continue;\n          }\n\n          let used = false;\n\n          for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n            used = horizon[k].boundary === affectedBoundary;\n          }\n\n          for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n            used = horizon[k].boundary === affectedBoundary;\n          }\n\n          for (k = 0; !used && k < changedHorizon.length; k++) {\n            used = changedHorizon[k].boundary === affectedBoundary;\n          }\n\n          if (!used) {\n            affectedBoundary.x2New = maxXNew;\n          }\n        }\n\n        Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n      });\n      horizon.forEach(function (horizonPart) {\n        const affectedBoundary = horizonPart.boundary;\n\n        if (affectedBoundary.x2New === undefined) {\n          affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n        }\n      });\n    }\n\n    function TextLayerRenderTask({\n      textContent,\n      textContentStream,\n      container,\n      viewport,\n      textDivs,\n      textContentItemsStr,\n      enhanceTextSelection\n    }) {\n      this._textContent = textContent;\n      this._textContentStream = textContentStream;\n      this._container = container;\n      this._document = container.ownerDocument;\n      this._viewport = viewport;\n      this._textDivs = textDivs || [];\n      this._textContentItemsStr = textContentItemsStr || [];\n      this._enhanceTextSelection = !!enhanceTextSelection;\n      this._fontInspectorEnabled = !!(globalThis.FontInspector && globalThis.FontInspector.enabled); // lwf\n      this._reader = null;\n      this._layoutTextLastFontSize = null;\n      this._layoutTextLastFontFamily = null;\n      this._layoutTextCtx = null;\n      this._textDivProperties = new WeakMap();\n      this._renderingDone = false;\n      this._canceled = false;\n      this._capability = (0, _util.createPromiseCapability)();\n      this._renderTimer = null;\n      this._bounds = [];\n\n      this._capability.promise.finally(() => {\n        if (this._layoutTextCtx) {\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      }).catch(() => {});\n    }\n\n    TextLayerRenderTask.prototype = {\n      get promise() {\n        return this._capability.promise;\n      },\n\n      cancel: function TextLayer_cancel() {\n        this._canceled = true;\n\n        if (this._reader) {\n          this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\"));\n\n          this._reader = null;\n        }\n\n        if (this._renderTimer !== null) {\n          clearTimeout(this._renderTimer);\n          this._renderTimer = null;\n        }\n\n        this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n      },\n\n      _processItems(items, styleCache) {\n        for (let i = 0, len = items.length; i < len; i++) {\n          this._textContentItemsStr.push(items[i].str);\n\n          appendText(this, items[i], styleCache);\n        }\n      },\n\n      _layoutText(textDiv) {\n        const textDivProperties = this._textDivProperties.get(textDiv);\n\n        if (textDivProperties.isWhitespace) {\n          return;\n        }\n\n        let transform = \"\";\n\n        if (textDivProperties.canvasWidth !== 0) {\n          const {\n            fontSize,\n            fontFamily\n          } = textDiv.style;\n\n          if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n            this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n            this._layoutTextLastFontSize = fontSize;\n            this._layoutTextLastFontFamily = fontFamily;\n          }\n\n          const {\n            width\n          } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n          if (width > 0) {\n            textDivProperties.scale = textDivProperties.canvasWidth / width;\n            transform = `scaleX(${textDivProperties.scale})`;\n          }\n        }\n\n        if (textDivProperties.angle !== 0) {\n          transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n        }\n\n        if (transform.length > 0) {\n          if (this._enhanceTextSelection) {\n            textDivProperties.originalTransform = transform;\n          }\n\n          textDiv.style.transform = transform;\n        }\n\n        this._textDivProperties.set(textDiv, textDivProperties);\n\n        this._container.appendChild(textDiv);\n      },\n\n      _render: function TextLayer_render(timeout) {\n        const capability = (0, _util.createPromiseCapability)();\n        let styleCache = Object.create(null);\n\n        const canvas = this._document.createElement(\"canvas\");\n\n        canvas.mozOpaque = true;\n        this._layoutTextCtx = canvas.getContext(\"2d\", {\n          alpha: false\n        });\n\n        if (this._textContent) {\n          const textItems = this._textContent.items;\n          const textStyles = this._textContent.styles;\n\n          this._processItems(textItems, textStyles);\n\n          capability.resolve();\n        } else if (this._textContentStream) {\n          const pump = () => {\n            this._reader.read().then(({\n              value,\n              done\n            }) => {\n              if (done) {\n                capability.resolve();\n                return;\n              }\n\n              Object.assign(styleCache, value.styles);\n\n              this._processItems(value.items, styleCache);\n\n              pump();\n            }, capability.reject);\n          };\n\n          this._reader = this._textContentStream.getReader();\n          pump();\n        } else {\n          throw new Error('Neither \"textContent\" nor \"textContentStream\"' + \" parameters specified.\");\n        }\n\n        capability.promise.then(() => {\n          styleCache = null;\n\n          if (!timeout) {\n            render(this);\n          } else {\n            this._renderTimer = setTimeout(() => {\n              render(this);\n              this._renderTimer = null;\n            }, timeout);\n          }\n        }, this._capability.reject);\n      },\n      expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n        if (!this._enhanceTextSelection || !this._renderingDone) {\n          return;\n        }\n\n        if (this._bounds !== null) {\n          expand(this);\n          this._bounds = null;\n        }\n\n        const transformBuf = [],\n              paddingBuf = [];\n\n        for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n          const div = this._textDivs[i];\n\n          const divProps = this._textDivProperties.get(div);\n\n          if (divProps.isWhitespace) {\n            continue;\n          }\n\n          if (expandDivs) {\n            transformBuf.length = 0;\n            paddingBuf.length = 0;\n\n            if (divProps.originalTransform) {\n              transformBuf.push(divProps.originalTransform);\n            }\n\n            if (divProps.paddingTop > 0) {\n              paddingBuf.push(`${divProps.paddingTop}px`);\n              transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n            } else {\n              paddingBuf.push(0);\n            }\n\n            if (divProps.paddingRight > 0) {\n              paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n            } else {\n              paddingBuf.push(0);\n            }\n\n            if (divProps.paddingBottom > 0) {\n              paddingBuf.push(`${divProps.paddingBottom}px`);\n            } else {\n              paddingBuf.push(0);\n            }\n\n            if (divProps.paddingLeft > 0) {\n              paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n              transformBuf.push(`translateX(${-divProps.paddingLeft / divProps.scale}px)`);\n            } else {\n              paddingBuf.push(0);\n            }\n\n            div.style.padding = paddingBuf.join(\" \");\n\n            if (transformBuf.length) {\n              div.style.transform = transformBuf.join(\" \");\n            }\n          } else {\n            div.style.padding = null;\n            div.style.transform = divProps.originalTransform;\n          }\n        }\n      }\n    };\n\n    function renderTextLayer(renderParameters) {\n      const task = new TextLayerRenderTask({\n        textContent: renderParameters.textContent,\n        textContentStream: renderParameters.textContentStream,\n        container: renderParameters.container,\n        viewport: renderParameters.viewport,\n        textDivs: renderParameters.textDivs,\n        textContentItemsStr: renderParameters.textContentItemsStr,\n        enhanceTextSelection: renderParameters.enhanceTextSelection\n      });\n\n      task._render(renderParameters.timeout);\n\n      return task;\n    }\n\n    return renderTextLayer;\n  }();\n\n  exports.renderTextLayer = renderTextLayer;\n\n  /***/ }),\n  /* 22 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.SVGGraphics = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _display_utils = __w_pdfjs_require__(1);\n\n  var _is_node = __w_pdfjs_require__(4);\n\n  let SVGGraphics = function () {\n    throw new Error(\"Not implemented: SVGGraphics\");\n  };\n\n  exports.SVGGraphics = SVGGraphics;\n  {\n    const SVG_DEFAULTS = {\n      fontStyle: \"normal\",\n      fontWeight: \"normal\",\n      fillColor: \"#000000\"\n    };\n    const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n    const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n    const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n    const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n    const convertImgDataToPng = function () {\n      const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n      const CHUNK_WRAPPER_SIZE = 12;\n      const crcTable = new Int32Array(256);\n\n      for (let i = 0; i < 256; i++) {\n        let c = i;\n\n        for (let h = 0; h < 8; h++) {\n          if (c & 1) {\n            c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n          } else {\n            c = c >> 1 & 0x7fffffff;\n          }\n        }\n\n        crcTable[i] = c;\n      }\n\n      function crc32(data, start, end) {\n        let crc = -1;\n\n        for (let i = start; i < end; i++) {\n          const a = (crc ^ data[i]) & 0xff;\n          const b = crcTable[a];\n          crc = crc >>> 8 ^ b;\n        }\n\n        return crc ^ -1;\n      }\n\n      function writePngChunk(type, body, data, offset) {\n        let p = offset;\n        const len = body.length;\n        data[p] = len >> 24 & 0xff;\n        data[p + 1] = len >> 16 & 0xff;\n        data[p + 2] = len >> 8 & 0xff;\n        data[p + 3] = len & 0xff;\n        p += 4;\n        data[p] = type.charCodeAt(0) & 0xff;\n        data[p + 1] = type.charCodeAt(1) & 0xff;\n        data[p + 2] = type.charCodeAt(2) & 0xff;\n        data[p + 3] = type.charCodeAt(3) & 0xff;\n        p += 4;\n        data.set(body, p);\n        p += body.length;\n        const crc = crc32(data, offset + 4, p);\n        data[p] = crc >> 24 & 0xff;\n        data[p + 1] = crc >> 16 & 0xff;\n        data[p + 2] = crc >> 8 & 0xff;\n        data[p + 3] = crc & 0xff;\n      }\n\n      function adler32(data, start, end) {\n        let a = 1;\n        let b = 0;\n\n        for (let i = start; i < end; ++i) {\n          a = (a + (data[i] & 0xff)) % 65521;\n          b = (b + a) % 65521;\n        }\n\n        return b << 16 | a;\n      }\n\n      function deflateSync(literals) {\n        if (!_is_node.isNodeJS) {\n          return deflateSyncUncompressed(literals);\n        }\n\n        try {\n          let input;\n\n          if (parseInt(process.versions.node) >= 8) {\n            input = literals;\n          } else {\n            input = Buffer.from(literals);\n          }\n\n          const output = require(\"zlib\").deflateSync(input, {\n            level: 9\n          });\n\n          return output instanceof Uint8Array ? output : new Uint8Array(output);\n        } catch (e) {\n          (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n        }\n\n        return deflateSyncUncompressed(literals);\n      }\n\n      function deflateSyncUncompressed(literals) {\n        let len = literals.length;\n        const maxBlockLength = 0xffff;\n        const deflateBlocks = Math.ceil(len / maxBlockLength);\n        const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n        let pi = 0;\n        idat[pi++] = 0x78;\n        idat[pi++] = 0x9c;\n        let pos = 0;\n\n        while (len > maxBlockLength) {\n          idat[pi++] = 0x00;\n          idat[pi++] = 0xff;\n          idat[pi++] = 0xff;\n          idat[pi++] = 0x00;\n          idat[pi++] = 0x00;\n          idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n          pi += maxBlockLength;\n          pos += maxBlockLength;\n          len -= maxBlockLength;\n        }\n\n        idat[pi++] = 0x01;\n        idat[pi++] = len & 0xff;\n        idat[pi++] = len >> 8 & 0xff;\n        idat[pi++] = ~len & 0xffff & 0xff;\n        idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n        idat.set(literals.subarray(pos), pi);\n        pi += literals.length - pos;\n        const adler = adler32(literals, 0, literals.length);\n        idat[pi++] = adler >> 24 & 0xff;\n        idat[pi++] = adler >> 16 & 0xff;\n        idat[pi++] = adler >> 8 & 0xff;\n        idat[pi++] = adler & 0xff;\n        return idat;\n      }\n\n      function encode(imgData, kind, forceDataSchema, isMask) {\n        const width = imgData.width;\n        const height = imgData.height;\n        let bitDepth, colorType, lineSize;\n        const bytes = imgData.data;\n\n        switch (kind) {\n          case _util.ImageKind.GRAYSCALE_1BPP:\n            colorType = 0;\n            bitDepth = 1;\n            lineSize = width + 7 >> 3;\n            break;\n\n          case _util.ImageKind.RGB_24BPP:\n            colorType = 2;\n            bitDepth = 8;\n            lineSize = width * 3;\n            break;\n\n          case _util.ImageKind.RGBA_32BPP:\n            colorType = 6;\n            bitDepth = 8;\n            lineSize = width * 4;\n            break;\n\n          default:\n            throw new Error(\"invalid format\");\n        }\n\n        const literals = new Uint8Array((1 + lineSize) * height);\n        let offsetLiterals = 0,\n            offsetBytes = 0;\n\n        for (let y = 0; y < height; ++y) {\n          literals[offsetLiterals++] = 0;\n          literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n          offsetBytes += lineSize;\n          offsetLiterals += lineSize;\n        }\n\n        if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n          offsetLiterals = 0;\n\n          for (let y = 0; y < height; y++) {\n            offsetLiterals++;\n\n            for (let i = 0; i < lineSize; i++) {\n              literals[offsetLiterals++] ^= 0xff;\n            }\n          }\n        }\n\n        const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n        const idat = deflateSync(literals);\n        const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n        const data = new Uint8Array(pngLength);\n        let offset = 0;\n        data.set(PNG_HEADER, offset);\n        offset += PNG_HEADER.length;\n        writePngChunk(\"IHDR\", ihdr, data, offset);\n        offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n        writePngChunk(\"IDATA\", idat, data, offset);\n        offset += CHUNK_WRAPPER_SIZE + idat.length;\n        writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n        return (0, _util.createObjectURL)(data, \"image/png\", forceDataSchema);\n      }\n\n      return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n        const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n        return encode(imgData, kind, forceDataSchema, isMask);\n      };\n    }();\n\n    class SVGExtraState {\n      constructor() {\n        this.fontSizeScale = 1;\n        this.fontWeight = SVG_DEFAULTS.fontWeight;\n        this.fontSize = 0;\n        this.textMatrix = _util.IDENTITY_MATRIX;\n        this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n        this.leading = 0;\n        this.textRenderingMode = _util.TextRenderingMode.FILL;\n        this.textMatrixScale = 1;\n        this.x = 0;\n        this.y = 0;\n        this.lineX = 0;\n        this.lineY = 0;\n        this.charSpacing = 0;\n        this.wordSpacing = 0;\n        this.textHScale = 1;\n        this.textRise = 0;\n        this.fillColor = SVG_DEFAULTS.fillColor;\n        this.strokeColor = \"#000000\";\n        this.fillAlpha = 1;\n        this.strokeAlpha = 1;\n        this.lineWidth = 1;\n        this.lineJoin = \"\";\n        this.lineCap = \"\";\n        this.miterLimit = 0;\n        this.dashArray = [];\n        this.dashPhase = 0;\n        this.dependencies = [];\n        this.activeClipUrl = null;\n        this.clipGroup = null;\n        this.maskId = \"\";\n      }\n\n      clone() {\n        return Object.create(this);\n      }\n\n      setCurrentPoint(x, y) {\n        this.x = x;\n        this.y = y;\n      }\n\n    }\n\n    function opListToTree(opList) {\n      let opTree = [];\n      const tmp = [];\n\n      for (const opListElement of opList) {\n        if (opListElement.fn === \"save\") {\n          opTree.push({\n            fnId: 92,\n            fn: \"group\",\n            items: []\n          });\n          tmp.push(opTree);\n          opTree = opTree[opTree.length - 1].items;\n          continue;\n        }\n\n        if (opListElement.fn === \"restore\") {\n          opTree = tmp.pop();\n        } else {\n          opTree.push(opListElement);\n        }\n      }\n\n      return opTree;\n    }\n\n    function pf(value) {\n      if (Number.isInteger(value)) {\n        return value.toString();\n      }\n\n      const s = value.toFixed(10);\n      let i = s.length - 1;\n\n      if (s[i] !== \"0\") {\n        return s;\n      }\n\n      do {\n        i--;\n      } while (s[i] === \"0\");\n\n      return s.substring(0, s[i] === \".\" ? i : i + 1);\n    }\n\n    function pm(m) {\n      if (m[4] === 0 && m[5] === 0) {\n        if (m[1] === 0 && m[2] === 0) {\n          if (m[0] === 1 && m[3] === 1) {\n            return \"\";\n          }\n\n          return `scale(${pf(m[0])} ${pf(m[3])})`;\n        }\n\n        if (m[0] === m[3] && m[1] === -m[2]) {\n          const a = Math.acos(m[0]) * 180 / Math.PI;\n          return `rotate(${pf(a)})`;\n        }\n      } else {\n        if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n          return `translate(${pf(m[4])} ${pf(m[5])})`;\n        }\n      }\n\n      return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n    }\n\n    let clipCount = 0;\n    let maskCount = 0;\n    let shadingCount = 0;\n    exports.SVGGraphics = SVGGraphics = class SVGGraphics {\n      constructor(commonObjs, objs, forceDataSchema = false) {\n        this.svgFactory = new _display_utils.DOMSVGFactory();\n        this.current = new SVGExtraState();\n        this.transformMatrix = _util.IDENTITY_MATRIX;\n        this.transformStack = [];\n        this.extraStack = [];\n        this.commonObjs = commonObjs;\n        this.objs = objs;\n        this.pendingClip = null;\n        this.pendingEOFill = false;\n        this.embedFonts = false;\n        this.embeddedFonts = Object.create(null);\n        this.cssStyle = null;\n        this.forceDataSchema = !!forceDataSchema;\n        this._operatorIdMapping = [];\n\n        for (const op in _util.OPS) {\n          this._operatorIdMapping[_util.OPS[op]] = op;\n        }\n      }\n\n      save() {\n        this.transformStack.push(this.transformMatrix);\n        const old = this.current;\n        this.extraStack.push(old);\n        this.current = old.clone();\n      }\n\n      restore() {\n        this.transformMatrix = this.transformStack.pop();\n        this.current = this.extraStack.pop();\n        this.pendingClip = null;\n        this.tgrp = null;\n      }\n\n      group(items) {\n        this.save();\n        this.executeOpTree(items);\n        this.restore();\n      }\n\n      loadDependencies(operatorList) {\n        const fnArray = operatorList.fnArray;\n        const argsArray = operatorList.argsArray;\n\n        for (let i = 0, ii = fnArray.length; i < ii; i++) {\n          if (fnArray[i] !== _util.OPS.dependency) {\n            continue;\n          }\n\n          for (const obj of argsArray[i]) {\n            const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n            const promise = new Promise(resolve => {\n              objsPool.get(obj, resolve);\n            });\n            this.current.dependencies.push(promise);\n          }\n        }\n\n        return Promise.all(this.current.dependencies);\n      }\n\n      transform(a, b, c, d, e, f) {\n        const transformMatrix = [a, b, c, d, e, f];\n        this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n        this.tgrp = null;\n      }\n\n      getSVG(operatorList, viewport) {\n        this.viewport = viewport;\n\n        const svgElement = this._initialize(viewport);\n\n        return this.loadDependencies(operatorList).then(() => {\n          this.transformMatrix = _util.IDENTITY_MATRIX;\n          this.executeOpTree(this.convertOpList(operatorList));\n          return svgElement;\n        });\n      }\n\n      convertOpList(operatorList) {\n        const operatorIdMapping = this._operatorIdMapping;\n        const argsArray = operatorList.argsArray;\n        const fnArray = operatorList.fnArray;\n        const opList = [];\n\n        for (let i = 0, ii = fnArray.length; i < ii; i++) {\n          const fnId = fnArray[i];\n          opList.push({\n            fnId,\n            fn: operatorIdMapping[fnId],\n            args: argsArray[i]\n          });\n        }\n\n        return opListToTree(opList);\n      }\n\n      executeOpTree(opTree) {\n        for (const opTreeElement of opTree) {\n          const fn = opTreeElement.fn;\n          const fnId = opTreeElement.fnId;\n          const args = opTreeElement.args;\n\n          switch (fnId | 0) {\n            case _util.OPS.beginText:\n              this.beginText();\n              break;\n\n            case _util.OPS.dependency:\n              break;\n\n            case _util.OPS.setLeading:\n              this.setLeading(args);\n              break;\n\n            case _util.OPS.setLeadingMoveText:\n              this.setLeadingMoveText(args[0], args[1]);\n              break;\n\n            case _util.OPS.setFont:\n              this.setFont(args);\n              break;\n\n            case _util.OPS.showText:\n              this.showText(args[0]);\n              break;\n\n            case _util.OPS.showSpacedText:\n              this.showText(args[0]);\n              break;\n\n            case _util.OPS.endText:\n              this.endText();\n              break;\n\n            case _util.OPS.moveText:\n              this.moveText(args[0], args[1]);\n              break;\n\n            case _util.OPS.setCharSpacing:\n              this.setCharSpacing(args[0]);\n              break;\n\n            case _util.OPS.setWordSpacing:\n              this.setWordSpacing(args[0]);\n              break;\n\n            case _util.OPS.setHScale:\n              this.setHScale(args[0]);\n              break;\n\n            case _util.OPS.setTextMatrix:\n              this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n\n            case _util.OPS.setTextRise:\n              this.setTextRise(args[0]);\n              break;\n\n            case _util.OPS.setTextRenderingMode:\n              this.setTextRenderingMode(args[0]);\n              break;\n\n            case _util.OPS.setLineWidth:\n              this.setLineWidth(args[0]);\n              break;\n\n            case _util.OPS.setLineJoin:\n              this.setLineJoin(args[0]);\n              break;\n\n            case _util.OPS.setLineCap:\n              this.setLineCap(args[0]);\n              break;\n\n            case _util.OPS.setMiterLimit:\n              this.setMiterLimit(args[0]);\n              break;\n\n            case _util.OPS.setFillRGBColor:\n              this.setFillRGBColor(args[0], args[1], args[2]);\n              break;\n\n            case _util.OPS.setStrokeRGBColor:\n              this.setStrokeRGBColor(args[0], args[1], args[2]);\n              break;\n\n            case _util.OPS.setStrokeColorN:\n              this.setStrokeColorN(args);\n              break;\n\n            case _util.OPS.setFillColorN:\n              this.setFillColorN(args);\n              break;\n\n            case _util.OPS.shadingFill:\n              this.shadingFill(args[0]);\n              break;\n\n            case _util.OPS.setDash:\n              this.setDash(args[0], args[1]);\n              break;\n\n            case _util.OPS.setRenderingIntent:\n              this.setRenderingIntent(args[0]);\n              break;\n\n            case _util.OPS.setFlatness:\n              this.setFlatness(args[0]);\n              break;\n\n            case _util.OPS.setGState:\n              this.setGState(args[0]);\n              break;\n\n            case _util.OPS.fill:\n              this.fill();\n              break;\n\n            case _util.OPS.eoFill:\n              this.eoFill();\n              break;\n\n            case _util.OPS.stroke:\n              this.stroke();\n              break;\n\n            case _util.OPS.fillStroke:\n              this.fillStroke();\n              break;\n\n            case _util.OPS.eoFillStroke:\n              this.eoFillStroke();\n              break;\n\n            case _util.OPS.clip:\n              this.clip(\"nonzero\");\n              break;\n\n            case _util.OPS.eoClip:\n              this.clip(\"evenodd\");\n              break;\n\n            case _util.OPS.paintSolidColorImageMask:\n              this.paintSolidColorImageMask();\n              break;\n\n            case _util.OPS.paintImageXObject:\n              this.paintImageXObject(args[0]);\n              break;\n\n            case _util.OPS.paintInlineImageXObject:\n              this.paintInlineImageXObject(args[0]);\n              break;\n\n            case _util.OPS.paintImageMaskXObject:\n              this.paintImageMaskXObject(args[0]);\n              break;\n\n            case _util.OPS.paintFormXObjectBegin:\n              this.paintFormXObjectBegin(args[0], args[1]);\n              break;\n\n            case _util.OPS.paintFormXObjectEnd:\n              this.paintFormXObjectEnd();\n              break;\n\n            case _util.OPS.closePath:\n              this.closePath();\n              break;\n\n            case _util.OPS.closeStroke:\n              this.closeStroke();\n              break;\n\n            case _util.OPS.closeFillStroke:\n              this.closeFillStroke();\n              break;\n\n            case _util.OPS.closeEOFillStroke:\n              this.closeEOFillStroke();\n              break;\n\n            case _util.OPS.nextLine:\n              this.nextLine();\n              break;\n\n            case _util.OPS.transform:\n              this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n\n            case _util.OPS.constructPath:\n              this.constructPath(args[0], args[1]);\n              break;\n\n            case _util.OPS.endPath:\n              this.endPath();\n              break;\n\n            case 92:\n              this.group(opTreeElement.items);\n              break;\n\n            default:\n              (0, _util.warn)(`Unimplemented operator ${fn}`);\n              break;\n          }\n        }\n      }\n\n      setWordSpacing(wordSpacing) {\n        this.current.wordSpacing = wordSpacing;\n      }\n\n      setCharSpacing(charSpacing) {\n        this.current.charSpacing = charSpacing;\n      }\n\n      nextLine() {\n        this.moveText(0, this.current.leading);\n      }\n\n      setTextMatrix(a, b, c, d, e, f) {\n        const current = this.current;\n        current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n        current.textMatrixScale = Math.sqrt(a * a + b * b);\n        current.x = current.lineX = 0;\n        current.y = current.lineY = 0;\n        current.xcoords = [];\n        current.ycoords = [];\n        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n        current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n        current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n        current.txtElement = this.svgFactory.createElement(\"svg:text\");\n        current.txtElement.appendChild(current.tspan);\n      }\n\n      beginText() {\n        const current = this.current;\n        current.x = current.lineX = 0;\n        current.y = current.lineY = 0;\n        current.textMatrix = _util.IDENTITY_MATRIX;\n        current.lineMatrix = _util.IDENTITY_MATRIX;\n        current.textMatrixScale = 1;\n        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n        current.txtElement = this.svgFactory.createElement(\"svg:text\");\n        current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n        current.xcoords = [];\n        current.ycoords = [];\n      }\n\n      moveText(x, y) {\n        const current = this.current;\n        current.x = current.lineX += x;\n        current.y = current.lineY += y;\n        current.xcoords = [];\n        current.ycoords = [];\n        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n        current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n        current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      showText(glyphs) {\n        const current = this.current;\n        const font = current.font;\n        const fontSize = current.fontSize;\n\n        if (fontSize === 0) {\n          return;\n        }\n\n        const fontSizeScale = current.fontSizeScale;\n        const charSpacing = current.charSpacing;\n        const wordSpacing = current.wordSpacing;\n        const fontDirection = current.fontDirection;\n        const textHScale = current.textHScale * fontDirection;\n        const vertical = font.vertical;\n        const spacingDir = vertical ? 1 : -1;\n        const defaultVMetrics = font.defaultVMetrics;\n        const widthAdvanceScale = fontSize * current.fontMatrix[0];\n        let x = 0;\n\n        for (const glyph of glyphs) {\n          if (glyph === null) {\n            x += fontDirection * wordSpacing;\n            continue;\n          } else if ((0, _util.isNum)(glyph)) {\n            x += spacingDir * glyph * fontSize / 1000;\n            continue;\n          }\n\n          const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n          const character = glyph.fontChar;\n          let scaledX, scaledY;\n          let width = glyph.width;\n\n          if (vertical) {\n            let vx;\n            const vmetric = glyph.vmetric || defaultVMetrics;\n            vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n            vx = -vx * widthAdvanceScale;\n            const vy = vmetric[2] * widthAdvanceScale;\n            width = vmetric ? -vmetric[0] : width;\n            scaledX = vx / fontSizeScale;\n            scaledY = (x + vy) / fontSizeScale;\n          } else {\n            scaledX = x / fontSizeScale;\n            scaledY = 0;\n          }\n\n          if (glyph.isInFont || font.missingFile) {\n            current.xcoords.push(current.x + scaledX);\n\n            if (vertical) {\n              current.ycoords.push(-current.y + scaledY);\n            }\n\n            current.tspan.textContent += character;\n          } else {}\n\n          let charWidth;\n\n          if (vertical) {\n            charWidth = width * widthAdvanceScale - spacing * fontDirection;\n          } else {\n            charWidth = width * widthAdvanceScale + spacing * fontDirection;\n          }\n\n          x += charWidth;\n        }\n\n        current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n\n        if (vertical) {\n          current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n        } else {\n          current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n        }\n\n        if (vertical) {\n          current.y -= x;\n        } else {\n          current.x += x * textHScale;\n        }\n\n        current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n        current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n\n        if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n          current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n        }\n\n        if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n          current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n        }\n\n        const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n        if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n            current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n          }\n\n          if (current.fillAlpha < 1) {\n            current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n          }\n        } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n          current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n        } else {\n          current.tspan.setAttributeNS(null, \"fill\", \"none\");\n        }\n\n        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n          const lineWidthScale = 1 / (current.textMatrixScale || 1);\n\n          this._setStrokeAttributes(current.tspan, lineWidthScale);\n        }\n\n        let textMatrix = current.textMatrix;\n\n        if (current.textRise !== 0) {\n          textMatrix = textMatrix.slice();\n          textMatrix[5] += current.textRise;\n        }\n\n        current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n        current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n        current.txtElement.appendChild(current.tspan);\n        current.txtgrp.appendChild(current.txtElement);\n\n        this._ensureTransformGroup().appendChild(current.txtElement);\n      }\n\n      setLeadingMoveText(x, y) {\n        this.setLeading(-y);\n        this.moveText(x, y);\n      }\n\n      addFontStyle(fontObj) {\n        if (!fontObj.data) {\n          throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n        }\n\n        if (!this.cssStyle) {\n          this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n          this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n          this.defs.appendChild(this.cssStyle);\n        }\n\n        const url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n        this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n      }\n\n      setFont(details) {\n        const current = this.current;\n        const fontObj = this.commonObjs.get(details[0]);\n        let size = details[1];\n        current.font = fontObj;\n\n        if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n          this.addFontStyle(fontObj);\n          this.embeddedFonts[fontObj.loadedName] = fontObj;\n        }\n\n        current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        let bold = \"normal\";\n\n        if (fontObj.black) {\n          bold = \"900\";\n        } else if (fontObj.bold) {\n          bold = \"bold\";\n        }\n\n        const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n        if (size < 0) {\n          size = -size;\n          current.fontDirection = -1;\n        } else {\n          current.fontDirection = 1;\n        }\n\n        current.fontSize = size;\n        current.fontFamily = fontObj.loadedName;\n        current.fontWeight = bold;\n        current.fontStyle = italic;\n        current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n        current.xcoords = [];\n        current.ycoords = [];\n      }\n\n      endText() {\n        const current = this.current;\n\n        if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement && current.txtElement.hasChildNodes()) { // lwf\n          current.element = current.txtElement;\n          this.clip(\"nonzero\");\n          this.endPath();\n        }\n      }\n\n      setLineWidth(width) {\n        if (width > 0) {\n          this.current.lineWidth = width;\n        }\n      }\n\n      setLineCap(style) {\n        this.current.lineCap = LINE_CAP_STYLES[style];\n      }\n\n      setLineJoin(style) {\n        this.current.lineJoin = LINE_JOIN_STYLES[style];\n      }\n\n      setMiterLimit(limit) {\n        this.current.miterLimit = limit;\n      }\n\n      setStrokeAlpha(strokeAlpha) {\n        this.current.strokeAlpha = strokeAlpha;\n      }\n\n      setStrokeRGBColor(r, g, b) {\n        this.current.strokeColor = _util.Util.makeHexColor(r, g, b);\n      }\n\n      setFillAlpha(fillAlpha) {\n        this.current.fillAlpha = fillAlpha;\n      }\n\n      setFillRGBColor(r, g, b) {\n        this.current.fillColor = _util.Util.makeHexColor(r, g, b);\n        this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n        this.current.xcoords = [];\n        this.current.ycoords = [];\n      }\n\n      setStrokeColorN(args) {\n        this.current.strokeColor = this._makeColorN_Pattern(args);\n      }\n\n      setFillColorN(args) {\n        this.current.fillColor = this._makeColorN_Pattern(args);\n      }\n\n      shadingFill(args) {\n        const width = this.viewport.width;\n        const height = this.viewport.height;\n\n        const inv = _util.Util.inverseTransform(this.transformMatrix);\n\n        const bl = _util.Util.applyTransform([0, 0], inv);\n\n        const br = _util.Util.applyTransform([0, height], inv);\n\n        const ul = _util.Util.applyTransform([width, 0], inv);\n\n        const ur = _util.Util.applyTransform([width, height], inv);\n\n        const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n        const rect = this.svgFactory.createElement(\"svg:rect\");\n        rect.setAttributeNS(null, \"x\", x0);\n        rect.setAttributeNS(null, \"y\", y0);\n        rect.setAttributeNS(null, \"width\", x1 - x0);\n        rect.setAttributeNS(null, \"height\", y1 - y0);\n        rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n\n        if (this.current.fillAlpha < 1) {\n          rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n        }\n\n        this._ensureTransformGroup().appendChild(rect);\n      }\n\n      _makeColorN_Pattern(args) {\n        if (args[0] === \"TilingPattern\") {\n          return this._makeTilingPattern(args);\n        }\n\n        return this._makeShadingPattern(args);\n      }\n\n      _makeTilingPattern(args) {\n        const color = args[1];\n        const operatorList = args[2];\n        const matrix = args[3] || _util.IDENTITY_MATRIX;\n        const [x0, y0, x1, y1] = args[4];\n        const xstep = args[5];\n        const ystep = args[6];\n        const paintType = args[7];\n        const tilingId = `shading${shadingCount++}`;\n\n        const [tx0, ty0] = _util.Util.applyTransform([x0, y0], matrix);\n\n        const [tx1, ty1] = _util.Util.applyTransform([x1, y1], matrix);\n\n        const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n\n        const txstep = xstep * xscale;\n        const tystep = ystep * yscale;\n        const tiling = this.svgFactory.createElement(\"svg:pattern\");\n        tiling.setAttributeNS(null, \"id\", tilingId);\n        tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n        tiling.setAttributeNS(null, \"width\", txstep);\n        tiling.setAttributeNS(null, \"height\", tystep);\n        tiling.setAttributeNS(null, \"x\", `${tx0}`);\n        tiling.setAttributeNS(null, \"y\", `${ty0}`);\n        const svg = this.svg;\n        const transformMatrix = this.transformMatrix;\n        const fillColor = this.current.fillColor;\n        const strokeColor = this.current.strokeColor;\n        const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n        this.svg = bbox;\n        this.transformMatrix = matrix;\n\n        if (paintType === 2) {\n          const cssColor = _util.Util.makeHexColor(...color);\n\n          this.current.fillColor = cssColor;\n          this.current.strokeColor = cssColor;\n        }\n\n        this.executeOpTree(this.convertOpList(operatorList));\n        this.svg = svg;\n        this.transformMatrix = transformMatrix;\n        this.current.fillColor = fillColor;\n        this.current.strokeColor = strokeColor;\n        tiling.appendChild(bbox.childNodes[0]);\n        this.defs.appendChild(tiling);\n        return `url(#${tilingId})`;\n      }\n\n      _makeShadingPattern(args) {\n        switch (args[0]) {\n          case \"RadialAxial\":\n            const shadingId = `shading${shadingCount++}`;\n            const colorStops = args[3];\n            let gradient;\n\n            switch (args[1]) {\n              case \"axial\":\n                const point0 = args[4];\n                const point1 = args[5];\n                gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                gradient.setAttributeNS(null, \"id\", shadingId);\n                gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                gradient.setAttributeNS(null, \"x1\", point0[0]);\n                gradient.setAttributeNS(null, \"y1\", point0[1]);\n                gradient.setAttributeNS(null, \"x2\", point1[0]);\n                gradient.setAttributeNS(null, \"y2\", point1[1]);\n                break;\n\n              case \"radial\":\n                const focalPoint = args[4];\n                const circlePoint = args[5];\n                const focalRadius = args[6];\n                const circleRadius = args[7];\n                gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                gradient.setAttributeNS(null, \"id\", shadingId);\n                gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                gradient.setAttributeNS(null, \"r\", circleRadius);\n                gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                gradient.setAttributeNS(null, \"fr\", focalRadius);\n                break;\n\n              default:\n                throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n            }\n\n            for (const colorStop of colorStops) {\n              const stop = this.svgFactory.createElement(\"svg:stop\");\n              stop.setAttributeNS(null, \"offset\", colorStop[0]);\n              stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n              gradient.appendChild(stop);\n            }\n\n            this.defs.appendChild(gradient);\n            return `url(#${shadingId})`;\n\n          case \"Mesh\":\n            (0, _util.warn)(\"Unimplemented pattern Mesh\");\n            return null;\n\n          case \"Dummy\":\n            return \"hotpink\";\n\n          default:\n            throw new Error(`Unknown IR type: ${args[0]}`);\n        }\n      }\n\n      setDash(dashArray, dashPhase) {\n        this.current.dashArray = dashArray;\n        this.current.dashPhase = dashPhase;\n      }\n\n      constructPath(ops, args) {\n        const current = this.current;\n        let x = current.x,\n            y = current.y;\n        let d = [];\n        let j = 0;\n\n        for (const op of ops) {\n          switch (op | 0) {\n            case _util.OPS.rectangle:\n              x = args[j++];\n              y = args[j++];\n              const width = args[j++];\n              const height = args[j++];\n              const xw = x + width;\n              const yh = y + height;\n              d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n              break;\n\n            case _util.OPS.moveTo:\n              x = args[j++];\n              y = args[j++];\n              d.push(\"M\", pf(x), pf(y));\n              break;\n\n            case _util.OPS.lineTo:\n              x = args[j++];\n              y = args[j++];\n              d.push(\"L\", pf(x), pf(y));\n              break;\n\n            case _util.OPS.curveTo:\n              x = args[j + 4];\n              y = args[j + 5];\n              d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n              j += 6;\n              break;\n\n            case _util.OPS.curveTo2:\n              d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n              x = args[j + 2];\n              y = args[j + 3];\n              j += 4;\n              break;\n\n            case _util.OPS.curveTo3:\n              x = args[j + 2];\n              y = args[j + 3];\n              d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n              j += 4;\n              break;\n\n            case _util.OPS.closePath:\n              d.push(\"Z\");\n              break;\n          }\n        }\n\n        d = d.join(\" \");\n\n        if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n          d = current.path.getAttributeNS(null, \"d\") + d;\n        } else {\n          current.path = this.svgFactory.createElement(\"svg:path\");\n\n          this._ensureTransformGroup().appendChild(current.path);\n        }\n\n        current.path.setAttributeNS(null, \"d\", d);\n        current.path.setAttributeNS(null, \"fill\", \"none\");\n        current.element = current.path;\n        current.setCurrentPoint(x, y);\n      }\n\n      endPath() {\n        const current = this.current;\n        current.path = null;\n\n        if (!this.pendingClip) {\n          return;\n        }\n\n        if (!current.element) {\n          this.pendingClip = null;\n          return;\n        }\n\n        const clipId = `clippath${clipCount++}`;\n        const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n        clipPath.setAttributeNS(null, \"id\", clipId);\n        clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        const clipElement = current.element.cloneNode(true);\n\n        if (this.pendingClip === \"evenodd\") {\n          clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n        } else {\n          clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n        }\n\n        this.pendingClip = null;\n        clipPath.appendChild(clipElement);\n        this.defs.appendChild(clipPath);\n\n        if (current.activeClipUrl) {\n          current.clipGroup = null;\n          this.extraStack.forEach(function (prev) {\n            prev.clipGroup = null;\n          });\n          clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n        }\n\n        current.activeClipUrl = `url(#${clipId})`;\n        this.tgrp = null;\n      }\n\n      clip(type) {\n        this.pendingClip = type;\n      }\n\n      closePath() {\n        const current = this.current;\n\n        if (current.path) {\n          const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n          current.path.setAttributeNS(null, \"d\", d);\n        }\n      }\n\n      setLeading(leading) {\n        this.current.leading = -leading;\n      }\n\n      setTextRise(textRise) {\n        this.current.textRise = textRise;\n      }\n\n      setTextRenderingMode(textRenderingMode) {\n        this.current.textRenderingMode = textRenderingMode;\n      }\n\n      setHScale(scale) {\n        this.current.textHScale = scale / 100;\n      }\n\n      setRenderingIntent(intent) {}\n\n      setFlatness(flatness) {}\n\n      setGState(states) {\n        for (const [key, value] of states) {\n          switch (key) {\n            case \"LW\":\n              this.setLineWidth(value);\n              break;\n\n            case \"LC\":\n              this.setLineCap(value);\n              break;\n\n            case \"LJ\":\n              this.setLineJoin(value);\n              break;\n\n            case \"ML\":\n              this.setMiterLimit(value);\n              break;\n\n            case \"D\":\n              this.setDash(value[0], value[1]);\n              break;\n\n            case \"RI\":\n              this.setRenderingIntent(value);\n              break;\n\n            case \"FL\":\n              this.setFlatness(value);\n              break;\n\n            case \"Font\":\n              this.setFont(value);\n              break;\n\n            case \"CA\":\n              this.setStrokeAlpha(value);\n              break;\n\n            case \"ca\":\n              this.setFillAlpha(value);\n              break;\n\n            default:\n              (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n              break;\n          }\n        }\n      }\n\n      fill() {\n        const current = this.current;\n\n        if (current.element) {\n          current.element.setAttributeNS(null, \"fill\", current.fillColor);\n          current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n          this.endPath();\n        }\n      }\n\n      stroke() {\n        const current = this.current;\n\n        if (current.element) {\n          this._setStrokeAttributes(current.element);\n\n          current.element.setAttributeNS(null, \"fill\", \"none\");\n          this.endPath();\n        }\n      }\n\n      _setStrokeAttributes(element, lineWidthScale = 1) {\n        const current = this.current;\n        let dashArray = current.dashArray;\n\n        if (lineWidthScale !== 1 && dashArray.length > 0) {\n          dashArray = dashArray.map(function (value) {\n            return lineWidthScale * value;\n          });\n        }\n\n        element.setAttributeNS(null, \"stroke\", current.strokeColor);\n        element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n        element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n        element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n        element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n        element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n        element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n        element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n      }\n\n      eoFill() {\n        if (this.current.element) {\n          this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n        }\n\n        this.fill();\n      }\n\n      fillStroke() {\n        this.stroke();\n        this.fill();\n      }\n\n      eoFillStroke() {\n        if (this.current.element) {\n          this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n        }\n\n        this.fillStroke();\n      }\n\n      closeStroke() {\n        this.closePath();\n        this.stroke();\n      }\n\n      closeFillStroke() {\n        this.closePath();\n        this.fillStroke();\n      }\n\n      closeEOFillStroke() {\n        this.closePath();\n        this.eoFillStroke();\n      }\n\n      paintSolidColorImageMask() {\n        const rect = this.svgFactory.createElement(\"svg:rect\");\n        rect.setAttributeNS(null, \"x\", \"0\");\n        rect.setAttributeNS(null, \"y\", \"0\");\n        rect.setAttributeNS(null, \"width\", \"1px\");\n        rect.setAttributeNS(null, \"height\", \"1px\");\n        rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n        this._ensureTransformGroup().appendChild(rect);\n      }\n\n      paintImageXObject(objId) {\n        const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n        if (!imgData) {\n          (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n          return;\n        }\n\n        this.paintInlineImageXObject(imgData);\n      }\n\n      paintInlineImageXObject(imgData, mask) {\n        const width = imgData.width;\n        const height = imgData.height;\n        const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", \"0\");\n        cliprect.setAttributeNS(null, \"y\", \"0\");\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        const imgEl = this.svgFactory.createElement(\"svg:image\");\n        imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n        imgEl.setAttributeNS(null, \"x\", \"0\");\n        imgEl.setAttributeNS(null, \"y\", pf(-height));\n        imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n        imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n        imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n\n        if (mask) {\n          mask.appendChild(imgEl);\n        } else {\n          this._ensureTransformGroup().appendChild(imgEl);\n        }\n      }\n\n      paintImageMaskXObject(imgData) {\n        const current = this.current;\n        const width = imgData.width;\n        const height = imgData.height;\n        const fillColor = current.fillColor;\n        current.maskId = `mask${maskCount++}`;\n        const mask = this.svgFactory.createElement(\"svg:mask\");\n        mask.setAttributeNS(null, \"id\", current.maskId);\n        const rect = this.svgFactory.createElement(\"svg:rect\");\n        rect.setAttributeNS(null, \"x\", \"0\");\n        rect.setAttributeNS(null, \"y\", \"0\");\n        rect.setAttributeNS(null, \"width\", pf(width));\n        rect.setAttributeNS(null, \"height\", pf(height));\n        rect.setAttributeNS(null, \"fill\", fillColor);\n        rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n        this.defs.appendChild(mask);\n\n        this._ensureTransformGroup().appendChild(rect);\n\n        this.paintInlineImageXObject(imgData, mask);\n      }\n\n      paintFormXObjectBegin(matrix, bbox) {\n        if (Array.isArray(matrix) && matrix.length === 6) {\n          this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n        }\n\n        if (bbox) {\n          const width = bbox[2] - bbox[0];\n          const height = bbox[3] - bbox[1];\n          const cliprect = this.svgFactory.createElement(\"svg:rect\");\n          cliprect.setAttributeNS(null, \"x\", bbox[0]);\n          cliprect.setAttributeNS(null, \"y\", bbox[1]);\n          cliprect.setAttributeNS(null, \"width\", pf(width));\n          cliprect.setAttributeNS(null, \"height\", pf(height));\n          this.current.element = cliprect;\n          this.clip(\"nonzero\");\n          this.endPath();\n        }\n      }\n\n      paintFormXObjectEnd() {}\n\n      _initialize(viewport) {\n        const svg = this.svgFactory.create(viewport.width, viewport.height);\n        const definitions = this.svgFactory.createElement(\"svg:defs\");\n        svg.appendChild(definitions);\n        this.defs = definitions;\n        const rootGroup = this.svgFactory.createElement(\"svg:g\");\n        rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n        svg.appendChild(rootGroup);\n        this.svg = rootGroup;\n        return svg;\n      }\n\n      _ensureClipGroup() {\n        if (!this.current.clipGroup) {\n          const clipGroup = this.svgFactory.createElement(\"svg:g\");\n          clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n          this.svg.appendChild(clipGroup);\n          this.current.clipGroup = clipGroup;\n        }\n\n        return this.current.clipGroup;\n      }\n\n      _ensureTransformGroup() {\n        if (!this.tgrp) {\n          this.tgrp = this.svgFactory.createElement(\"svg:g\");\n          this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n          if (this.current.activeClipUrl) {\n            this._ensureClipGroup().appendChild(this.tgrp);\n          } else {\n            this.svg.appendChild(this.tgrp);\n          }\n        }\n\n        return this.tgrp;\n      }\n\n    };\n  }\n\n  /***/ }),\n  /* 23 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.PDFNodeStream = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _network_utils = __w_pdfjs_require__(24);\n\n  ;\n\n  const fs = require(\"fs\");\n\n  const http = require(\"http\");\n\n  const https = require(\"https\");\n\n  const url = require(\"url\");\n\n  const fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\n  function parseUrl(sourceUrl) {\n    const parsedUrl = url.parse(sourceUrl);\n\n    if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n      return parsedUrl;\n    }\n\n    if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n      return url.parse(`file:///${sourceUrl}`);\n    }\n\n    if (!parsedUrl.host) {\n      parsedUrl.protocol = \"file:\";\n    }\n\n    return parsedUrl;\n  }\n\n  class PDFNodeStream {\n    constructor(source) {\n      this.source = source;\n      this.url = parseUrl(source.url);\n      this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n      this.isFsUrl = this.url.protocol === \"file:\";\n      this.httpHeaders = this.isHttp && source.httpHeaders || {};\n      this._fullRequestReader = null;\n      this._rangeRequestReaders = [];\n    }\n\n    get _progressiveDataLength() {\n      return this._fullRequestReader && this._fullRequestReader._loaded || 0; // lwf\n    }\n\n    getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n      this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n      return this._fullRequestReader;\n    }\n\n    getRangeReader(start, end) {\n      if (end <= this._progressiveDataLength) {\n        return null;\n      }\n\n      const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n\n      this._rangeRequestReaders.push(rangeReader);\n\n      return rangeReader;\n    }\n\n    cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n\n      const readers = this._rangeRequestReaders.slice(0);\n\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n\n  }\n\n  exports.PDFNodeStream = PDFNodeStream;\n\n  class BaseFullReader {\n    constructor(stream) {\n      this._url = stream.url;\n      this._done = false;\n      this._storedError = null;\n      this.onProgress = null;\n      const source = stream.source;\n      this._contentLength = source.length;\n      this._loaded = 0;\n      this._filename = null;\n      this._disableRange = source.disableRange || false;\n      this._rangeChunkSize = source.rangeChunkSize;\n\n      if (!this._rangeChunkSize && !this._disableRange) {\n        this._disableRange = true;\n      }\n\n      this._isStreamingSupported = !source.disableStream;\n      this._isRangeSupported = !source.disableRange;\n      this._readableStream = null;\n      this._readCapability = (0, _util.createPromiseCapability)();\n      this._headersCapability = (0, _util.createPromiseCapability)();\n    }\n\n    get headersReady() {\n      return this._headersCapability.promise;\n    }\n\n    get filename() {\n      return this._filename;\n    }\n\n    get contentLength() {\n      return this._contentLength;\n    }\n\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    }\n\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    }\n\n    async read() {\n      await this._readCapability.promise;\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      if (this._storedError) {\n        throw this._storedError;\n      }\n\n      const chunk = this._readableStream.read();\n\n      if (chunk === null) {\n        this._readCapability = (0, _util.createPromiseCapability)();\n        return this.read();\n      }\n\n      this._loaded += chunk.length;\n\n      if (this.onProgress) {\n        this.onProgress({\n          loaded: this._loaded,\n          total: this._contentLength\n        });\n      }\n\n      const buffer = new Uint8Array(chunk).buffer;\n      return {\n        value: buffer,\n        done: false\n      };\n    }\n\n    cancel(reason) {\n      if (!this._readableStream) {\n        this._error(reason);\n\n        return;\n      }\n\n      this._readableStream.destroy(reason);\n    }\n\n    _error(reason) {\n      this._storedError = reason;\n\n      this._readCapability.resolve();\n    }\n\n    _setReadableStream(readableStream) {\n      this._readableStream = readableStream;\n      readableStream.on(\"readable\", () => {\n        this._readCapability.resolve();\n      });\n      readableStream.on(\"end\", () => {\n        readableStream.destroy();\n        this._done = true;\n\n        this._readCapability.resolve();\n      });\n      readableStream.on(\"error\", reason => {\n        this._error(reason);\n      });\n\n      if (!this._isStreamingSupported && this._isRangeSupported) {\n        this._error(new _util.AbortException(\"streaming is disabled\"));\n      }\n\n      if (this._storedError) {\n        this._readableStream.destroy(this._storedError);\n      }\n    }\n\n  }\n\n  class BaseRangeReader {\n    constructor(stream) {\n      this._url = stream.url;\n      this._done = false;\n      this._storedError = null;\n      this.onProgress = null;\n      this._loaded = 0;\n      this._readableStream = null;\n      this._readCapability = (0, _util.createPromiseCapability)();\n      const source = stream.source;\n      this._isStreamingSupported = !source.disableStream;\n    }\n\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    }\n\n    async read() {\n      await this._readCapability.promise;\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      if (this._storedError) {\n        throw this._storedError;\n      }\n\n      const chunk = this._readableStream.read();\n\n      if (chunk === null) {\n        this._readCapability = (0, _util.createPromiseCapability)();\n        return this.read();\n      }\n\n      this._loaded += chunk.length;\n\n      if (this.onProgress) {\n        this.onProgress({\n          loaded: this._loaded\n        });\n      }\n\n      const buffer = new Uint8Array(chunk).buffer;\n      return {\n        value: buffer,\n        done: false\n      };\n    }\n\n    cancel(reason) {\n      if (!this._readableStream) {\n        this._error(reason);\n\n        return;\n      }\n\n      this._readableStream.destroy(reason);\n    }\n\n    _error(reason) {\n      this._storedError = reason;\n\n      this._readCapability.resolve();\n    }\n\n    _setReadableStream(readableStream) {\n      this._readableStream = readableStream;\n      readableStream.on(\"readable\", () => {\n        this._readCapability.resolve();\n      });\n      readableStream.on(\"end\", () => {\n        readableStream.destroy();\n        this._done = true;\n\n        this._readCapability.resolve();\n      });\n      readableStream.on(\"error\", reason => {\n        this._error(reason);\n      });\n\n      if (this._storedError) {\n        this._readableStream.destroy(this._storedError);\n      }\n    }\n\n  }\n\n  function createRequestOptions(parsedUrl, headers) {\n    return {\n      protocol: parsedUrl.protocol,\n      auth: parsedUrl.auth,\n      host: parsedUrl.hostname,\n      port: parsedUrl.port,\n      path: parsedUrl.path,\n      method: \"GET\",\n      headers\n    };\n  }\n\n  class PDFNodeStreamFullReader extends BaseFullReader {\n    constructor(stream) {\n      super(stream);\n\n      const handleResponse = response => {\n        if (response.statusCode === 404) {\n          const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n          this._storedError = error;\n\n          this._headersCapability.reject(error);\n\n          return;\n        }\n\n        this._headersCapability.resolve();\n\n        this._setReadableStream(response);\n\n        const getResponseHeader = name => {\n          return this._readableStream.headers[name.toLowerCase()];\n        };\n\n        const {\n          allowRangeRequests,\n          suggestedLength\n        } = (0, _network_utils.validateRangeRequestCapabilities)({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange\n        });\n        this._isRangeSupported = allowRangeRequests;\n        this._contentLength = suggestedLength || this._contentLength;\n        this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n      };\n\n      this._request = null;\n\n      if (this._url.protocol === \"http:\") {\n        this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n      } else {\n        this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n      }\n\n      this._request.on(\"error\", reason => {\n        this._storedError = reason;\n\n        this._headersCapability.reject(reason);\n      });\n\n      this._request.end();\n    }\n\n  }\n\n  class PDFNodeStreamRangeReader extends BaseRangeReader {\n    constructor(stream, start, end) {\n      super(stream);\n      this._httpHeaders = {};\n\n      for (const property in stream.httpHeaders) {\n        const value = stream.httpHeaders[property];\n\n        if (typeof value === \"undefined\") {\n          continue;\n        }\n\n        this._httpHeaders[property] = value;\n      }\n\n      this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n      const handleResponse = response => {\n        if (response.statusCode === 404) {\n          const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n          this._storedError = error;\n          return;\n        }\n\n        this._setReadableStream(response);\n      };\n\n      this._request = null;\n\n      if (this._url.protocol === \"http:\") {\n        this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n      } else {\n        this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n      }\n\n      this._request.on(\"error\", reason => {\n        this._storedError = reason;\n      });\n\n      this._request.end();\n    }\n\n  }\n\n  class PDFNodeStreamFsFullReader extends BaseFullReader {\n    constructor(stream) {\n      super(stream);\n      let path = decodeURIComponent(this._url.path);\n\n      if (fileUriRegex.test(this._url.href)) {\n        path = path.replace(/^\\//, \"\");\n      }\n\n      fs.lstat(path, (error, stat) => {\n        if (error) {\n          if (error.code === \"ENOENT\") {\n            error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n          }\n\n          this._storedError = error;\n\n          this._headersCapability.reject(error);\n\n          return;\n        }\n\n        this._contentLength = stat.size;\n\n        this._setReadableStream(fs.createReadStream(path));\n\n        this._headersCapability.resolve();\n      });\n    }\n\n  }\n\n  class PDFNodeStreamFsRangeReader extends BaseRangeReader {\n    constructor(stream, start, end) {\n      super(stream);\n      let path = decodeURIComponent(this._url.path);\n\n      if (fileUriRegex.test(this._url.href)) {\n        path = path.replace(/^\\//, \"\");\n      }\n\n      this._setReadableStream(fs.createReadStream(path, {\n        start,\n        end: end - 1\n      }));\n    }\n\n  }\n\n  /***/ }),\n  /* 24 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.createResponseStatusError = createResponseStatusError;\n  exports.extractFilenameFromHeader = extractFilenameFromHeader;\n  exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n  exports.validateResponseStatus = validateResponseStatus;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _content_disposition = __w_pdfjs_require__(25);\n\n  function validateRangeRequestCapabilities({\n    getResponseHeader,\n    isHttp,\n    rangeChunkSize,\n    disableRange\n  }) {\n    (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n    const returnValues = {\n      allowRangeRequests: false,\n      suggestedLength: undefined\n    };\n    const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n\n    if (!Number.isInteger(length)) {\n      return returnValues;\n    }\n\n    returnValues.suggestedLength = length;\n\n    if (length <= 2 * rangeChunkSize) {\n      return returnValues;\n    }\n\n    if (disableRange || !isHttp) {\n      return returnValues;\n    }\n\n    if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n      return returnValues;\n    }\n\n    const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n\n    if (contentEncoding !== \"identity\") {\n      return returnValues;\n    }\n\n    returnValues.allowRangeRequests = true;\n    return returnValues;\n  }\n\n  function extractFilenameFromHeader(getResponseHeader) {\n    const contentDisposition = getResponseHeader(\"Content-Disposition\");\n\n    if (contentDisposition) {\n      let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n\n      if (filename.includes(\"%\")) {\n        try {\n          filename = decodeURIComponent(filename);\n        } catch (ex) {}\n      }\n\n      if (/\\.pdf$/i.test(filename)) {\n        return filename;\n      }\n    }\n\n    return null;\n  }\n\n  function createResponseStatusError(status, url) {\n    if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n      return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n    }\n\n    return new _util.UnexpectedResponseException(\"Unexpected server response (\" + status + ') while retrieving PDF \"' + url + '\".', status);\n  }\n\n  function validateResponseStatus(status) {\n    return status === 200 || status === 206;\n  }\n\n  /***/ }),\n  /* 25 */\n  /***/ ((__unused_webpack_module, exports) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n\n  function getFilenameFromContentDispositionHeader(contentDisposition) {\n    let needsEncodingFixup = true;\n    let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n\n    if (tmp) {\n      tmp = tmp[1];\n      let filename = rfc2616unquote(tmp);\n      filename = unescape(filename);\n      filename = rfc5987decode(filename);\n      filename = rfc2047decode(filename);\n      return fixupEncoding(filename);\n    }\n\n    tmp = rfc2231getparam(contentDisposition);\n\n    if (tmp) {\n      const filename = rfc2047decode(tmp);\n      return fixupEncoding(filename);\n    }\n\n    tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n\n    if (tmp) {\n      tmp = tmp[1];\n      let filename = rfc2616unquote(tmp);\n      filename = rfc2047decode(filename);\n      return fixupEncoding(filename);\n    }\n\n    function toParamRegExp(attributePattern, flags) {\n      return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n    }\n\n    function textdecode(encoding, value) {\n      if (encoding) {\n        if (!/^[\\x00-\\xFF]+$/.test(value)) {\n          return value;\n        }\n\n        try {\n          const decoder = new TextDecoder(encoding, {\n            fatal: true\n          });\n          const bytes = Array.from(value, function (ch) {\n            return ch.charCodeAt(0) & 0xff;\n          });\n          value = decoder.decode(new Uint8Array(bytes));\n          needsEncodingFixup = false;\n        } catch (e) {\n          if (/^utf-?8$/i.test(encoding)) {\n            try {\n              value = decodeURIComponent(escape(value));\n              needsEncodingFixup = false;\n            } catch (err) {}\n          }\n        }\n      }\n\n      return value;\n    }\n\n    function fixupEncoding(value) {\n      if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n        value = textdecode(\"utf-8\", value);\n\n        if (needsEncodingFixup) {\n          value = textdecode(\"iso-8859-1\", value);\n        }\n      }\n\n      return value;\n    }\n\n    function rfc2231getparam(contentDispositionStr) {\n      const matches = [];\n      let match;\n      const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n\n      while ((match = iter.exec(contentDispositionStr)) !== null) {\n        let [, n, quot, part] = match;\n        n = parseInt(n, 10);\n\n        if (n in matches) {\n          if (n === 0) {\n            break;\n          }\n\n          continue;\n        }\n\n        matches[n] = [quot, part];\n      }\n\n      const parts = [];\n\n      for (let n = 0; n < matches.length; ++n) {\n        if (!(n in matches)) {\n          break;\n        }\n\n        let [quot, part] = matches[n];\n        part = rfc2616unquote(part);\n\n        if (quot) {\n          part = unescape(part);\n\n          if (n === 0) {\n            part = rfc5987decode(part);\n          }\n        }\n\n        parts.push(part);\n      }\n\n      return parts.join(\"\");\n    }\n\n    function rfc2616unquote(value) {\n      if (value.startsWith('\"')) {\n        const parts = value.slice(1).split('\\\\\"');\n\n        for (let i = 0; i < parts.length; ++i) {\n          const quotindex = parts[i].indexOf('\"');\n\n          if (quotindex !== -1) {\n            parts[i] = parts[i].slice(0, quotindex);\n            parts.length = i + 1;\n          }\n\n          parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n        }\n\n        value = parts.join('\"');\n      }\n\n      return value;\n    }\n\n    function rfc5987decode(extvalue) {\n      const encodingend = extvalue.indexOf(\"'\");\n\n      if (encodingend === -1) {\n        return extvalue;\n      }\n\n      const encoding = extvalue.slice(0, encodingend);\n      const langvalue = extvalue.slice(encodingend + 1);\n      const value = langvalue.replace(/^[^']*'/, \"\");\n      return textdecode(encoding, value);\n    }\n\n    function rfc2047decode(value) {\n      if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n        return value;\n      }\n\n      return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        }\n\n        try {\n          text = atob(text);\n        } catch (e) {}\n\n        return textdecode(charset, text);\n      });\n    }\n\n    return \"\";\n  }\n\n  /***/ }),\n  /* 26 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.PDFNetworkStream = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _network_utils = __w_pdfjs_require__(24);\n\n  ;\n  const OK_RESPONSE = 200;\n  const PARTIAL_CONTENT_RESPONSE = 206;\n\n  function getArrayBuffer(xhr) {\n    const data = xhr.response;\n\n    if (typeof data !== \"string\") {\n      return data;\n    }\n\n    const array = (0, _util.stringToBytes)(data);\n    return array.buffer;\n  }\n\n  class NetworkManager {\n    constructor(url, args) {\n      this.url = url;\n      args = args || {};\n      this.isHttp = /^https?:/i.test(url);\n      this.httpHeaders = this.isHttp && args.httpHeaders || {};\n      this.withCredentials = args.withCredentials || false;\n\n      this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n      this.currXhrId = 0;\n      this.pendingRequests = Object.create(null);\n    }\n\n    requestRange(begin, end, listeners) {\n      const args = {\n        begin,\n        end\n      };\n\n      for (const prop in listeners) {\n        args[prop] = listeners[prop];\n      }\n\n      return this.request(args);\n    }\n\n    requestFull(listeners) {\n      return this.request(listeners);\n    }\n\n    request(args) {\n      const xhr = this.getXhr();\n      const xhrId = this.currXhrId++;\n      const pendingRequest = this.pendingRequests[xhrId] = {\n        xhr\n      };\n      xhr.open(\"GET\", this.url);\n      xhr.withCredentials = this.withCredentials;\n\n      for (const property in this.httpHeaders) {\n        const value = this.httpHeaders[property];\n\n        if (typeof value === \"undefined\") {\n          continue;\n        }\n\n        xhr.setRequestHeader(property, value);\n      }\n\n      if (this.isHttp && \"begin\" in args && \"end\" in args) {\n        xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n        pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n      } else {\n        pendingRequest.expectedStatus = OK_RESPONSE;\n      }\n\n      xhr.responseType = \"arraybuffer\";\n\n      if (args.onError) {\n        xhr.onerror = function (evt) {\n          args.onError(xhr.status);\n        };\n      }\n\n      xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n      xhr.onprogress = this.onProgress.bind(this, xhrId);\n      pendingRequest.onHeadersReceived = args.onHeadersReceived;\n      pendingRequest.onDone = args.onDone;\n      pendingRequest.onError = args.onError;\n      pendingRequest.onProgress = args.onProgress;\n      xhr.send(null);\n      return xhrId;\n    }\n\n    onProgress(xhrId, evt) {\n      const pendingRequest = this.pendingRequests[xhrId];\n\n      if (!pendingRequest) {\n        return;\n      }\n\n      if (pendingRequest.onProgress) {\n        pendingRequest.onProgress(evt);\n      }\n    }\n\n    onStateChange(xhrId, evt) {\n      const pendingRequest = this.pendingRequests[xhrId];\n\n      if (!pendingRequest) {\n        return;\n      }\n\n      const xhr = pendingRequest.xhr;\n\n      if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n        pendingRequest.onHeadersReceived();\n        delete pendingRequest.onHeadersReceived;\n      }\n\n      if (xhr.readyState !== 4) {\n        return;\n      }\n\n      if (!(xhrId in this.pendingRequests)) {\n        return;\n      }\n\n      delete this.pendingRequests[xhrId];\n\n      if (xhr.status === 0 && this.isHttp) {\n        if (pendingRequest.onError) {\n          pendingRequest.onError(xhr.status);\n        }\n\n        return;\n      }\n\n      const xhrStatus = xhr.status || OK_RESPONSE;\n      const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n      if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n        if (pendingRequest.onError) {\n          pendingRequest.onError(xhr.status);\n        }\n\n        return;\n      }\n\n      const chunk = getArrayBuffer(xhr);\n\n      if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n        const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n        const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n        pendingRequest.onDone({\n          begin: parseInt(matches[1], 10),\n          chunk\n        });\n      } else if (chunk) {\n        pendingRequest.onDone({\n          begin: 0,\n          chunk\n        });\n      } else if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n    }\n\n    getRequestXhr(xhrId) {\n      return this.pendingRequests[xhrId].xhr;\n    }\n\n    isPendingRequest(xhrId) {\n      return xhrId in this.pendingRequests;\n    }\n\n    abortRequest(xhrId) {\n      const xhr = this.pendingRequests[xhrId].xhr;\n      delete this.pendingRequests[xhrId];\n      xhr.abort();\n    }\n\n  }\n\n  class PDFNetworkStream {\n    constructor(source) {\n      this._source = source;\n      this._manager = new NetworkManager(source.url, {\n        httpHeaders: source.httpHeaders,\n        withCredentials: source.withCredentials\n      });\n      this._rangeChunkSize = source.rangeChunkSize;\n      this._fullRequestReader = null;\n      this._rangeRequestReaders = [];\n    }\n\n    _onRangeRequestReaderClosed(reader) {\n      const i = this._rangeRequestReaders.indexOf(reader);\n\n      if (i >= 0) {\n        this._rangeRequestReaders.splice(i, 1);\n      }\n    }\n\n    getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n      this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n      return this._fullRequestReader;\n    }\n\n    getRangeReader(begin, end) {\n      const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n      reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n\n      this._rangeRequestReaders.push(reader);\n\n      return reader;\n    }\n\n    cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n\n      const readers = this._rangeRequestReaders.slice(0);\n\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n\n  }\n\n  exports.PDFNetworkStream = PDFNetworkStream;\n\n  class PDFNetworkStreamFullRequestReader {\n    constructor(manager, source) {\n      this._manager = manager;\n      const args = {\n        onHeadersReceived: this._onHeadersReceived.bind(this),\n        onDone: this._onDone.bind(this),\n        onError: this._onError.bind(this),\n        onProgress: this._onProgress.bind(this)\n      };\n      this._url = source.url;\n      this._fullRequestId = manager.requestFull(args);\n      this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n      this._disableRange = source.disableRange || false;\n      this._contentLength = source.length;\n      this._rangeChunkSize = source.rangeChunkSize;\n\n      if (!this._rangeChunkSize && !this._disableRange) {\n        this._disableRange = true;\n      }\n\n      this._isStreamingSupported = false;\n      this._isRangeSupported = false;\n      this._cachedChunks = [];\n      this._requests = [];\n      this._done = false;\n      this._storedError = undefined;\n      this._filename = null;\n      this.onProgress = null;\n    }\n\n    _onHeadersReceived() {\n      const fullRequestXhrId = this._fullRequestId;\n\n      const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n      const getResponseHeader = name => {\n        return fullRequestXhr.getResponseHeader(name);\n      };\n\n      const {\n        allowRangeRequests,\n        suggestedLength\n      } = (0, _network_utils.validateRangeRequestCapabilities)({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange\n      });\n\n      if (allowRangeRequests) {\n        this._isRangeSupported = true;\n      }\n\n      this._contentLength = suggestedLength || this._contentLength;\n      this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n      if (this._isRangeSupported) {\n        this._manager.abortRequest(fullRequestXhrId);\n      }\n\n      this._headersReceivedCapability.resolve();\n    }\n\n    _onDone(args) {\n      if (args) {\n        if (this._requests.length > 0) {\n          const requestCapability = this._requests.shift();\n\n          requestCapability.resolve({\n            value: args.chunk,\n            done: false\n          });\n        } else {\n          this._cachedChunks.push(args.chunk);\n        }\n      }\n\n      this._done = true;\n\n      if (this._cachedChunks.length > 0) {\n        return;\n      }\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n    }\n\n    _onError(status) {\n      const url = this._url;\n      const exception = (0, _network_utils.createResponseStatusError)(status, url);\n      this._storedError = exception;\n\n      this._headersReceivedCapability.reject(exception);\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.reject(exception);\n      });\n\n      this._requests = [];\n      this._cachedChunks = [];\n    }\n\n    _onProgress(data) {\n      if (this.onProgress) {\n        this.onProgress({\n          loaded: data.loaded,\n          total: data.lengthComputable ? data.total : this._contentLength\n        });\n      }\n    }\n\n    get filename() {\n      return this._filename;\n    }\n\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    }\n\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    }\n\n    get contentLength() {\n      return this._contentLength;\n    }\n\n    get headersReady() {\n      return this._headersReceivedCapability.promise;\n    }\n\n    async read() {\n      if (this._storedError) {\n        throw this._storedError;\n      }\n\n      if (this._cachedChunks.length > 0) {\n        const chunk = this._cachedChunks.shift();\n\n        return {\n          value: chunk,\n          done: false\n        };\n      }\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      const requestCapability = (0, _util.createPromiseCapability)();\n\n      this._requests.push(requestCapability);\n\n      return requestCapability.promise;\n    }\n\n    cancel(reason) {\n      this._done = true;\n\n      this._headersReceivedCapability.reject(reason);\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n\n      if (this._manager.isPendingRequest(this._fullRequestId)) {\n        this._manager.abortRequest(this._fullRequestId);\n      }\n\n      this._fullRequestReader = null;\n    }\n\n  }\n\n  class PDFNetworkStreamRangeRequestReader {\n    constructor(manager, begin, end) {\n      this._manager = manager;\n      const args = {\n        onDone: this._onDone.bind(this),\n        onProgress: this._onProgress.bind(this)\n      };\n      this._requestId = manager.requestRange(begin, end, args);\n      this._requests = [];\n      this._queuedChunk = null;\n      this._done = false;\n      this.onProgress = null;\n      this.onClosed = null;\n    }\n\n    _close() {\n      if (this.onClosed) {\n        this.onClosed(this);\n      }\n    }\n\n    _onDone(data) {\n      const chunk = data.chunk;\n\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n\n        requestCapability.resolve({\n          value: chunk,\n          done: false\n        });\n      } else {\n        this._queuedChunk = chunk;\n      }\n\n      this._done = true;\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n\n      this._close();\n    }\n\n    _onProgress(evt) {\n      if (!this.isStreamingSupported && this.onProgress) {\n        this.onProgress({\n          loaded: evt.loaded\n        });\n      }\n    }\n\n    get isStreamingSupported() {\n      return false;\n    }\n\n    async read() {\n      if (this._queuedChunk !== null) {\n        const chunk = this._queuedChunk;\n        this._queuedChunk = null;\n        return {\n          value: chunk,\n          done: false\n        };\n      }\n\n      if (this._done) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      const requestCapability = (0, _util.createPromiseCapability)();\n\n      this._requests.push(requestCapability);\n\n      return requestCapability.promise;\n    }\n\n    cancel(reason) {\n      this._done = true;\n\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      });\n\n      this._requests = [];\n\n      if (this._manager.isPendingRequest(this._requestId)) {\n        this._manager.abortRequest(this._requestId);\n      }\n\n      this._close();\n    }\n\n  }\n\n  /***/ }),\n  /* 27 */\n  /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\n  Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n  }));\n  exports.PDFFetchStream = void 0;\n\n  var _util = __w_pdfjs_require__(2);\n\n  var _network_utils = __w_pdfjs_require__(24);\n\n  ;\n\n  function createFetchOptions(headers, withCredentials, abortController) {\n    return {\n      method: \"GET\",\n      headers,\n      signal: abortController && abortController.signal, // lwf\n      mode: \"cors\",\n      credentials: withCredentials ? \"include\" : \"same-origin\",\n      redirect: \"follow\"\n    };\n  }\n\n  function createHeaders(httpHeaders) {\n    const headers = new Headers();\n\n    for (const property in httpHeaders) {\n      const value = httpHeaders[property];\n\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n\n      headers.append(property, value);\n    }\n\n    return headers;\n  }\n\n  class PDFFetchStream {\n    constructor(source) {\n      this.source = source;\n      this.isHttp = /^https?:/i.test(source.url);\n      this.httpHeaders = this.isHttp && source.httpHeaders || {};\n      this._fullRequestReader = null;\n      this._rangeRequestReaders = [];\n    }\n\n    get _progressiveDataLength() {\n      return this._fullRequestReader && this._fullRequestReader._loaded || 0; // lwf\n    }\n\n    getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n      this._fullRequestReader = new PDFFetchStreamReader(this);\n      return this._fullRequestReader;\n    }\n\n    getRangeReader(begin, end) {\n      if (end <= this._progressiveDataLength) {\n        return null;\n      }\n\n      const reader = new PDFFetchStreamRangeReader(this, begin, end);\n\n      this._rangeRequestReaders.push(reader);\n\n      return reader;\n    }\n\n    cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n\n      const readers = this._rangeRequestReaders.slice(0);\n\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n\n  }\n\n  exports.PDFFetchStream = PDFFetchStream;\n\n  class PDFFetchStreamReader {\n    constructor(stream) {\n      this._stream = stream;\n      this._reader = null;\n      this._loaded = 0;\n      this._filename = null;\n      const source = stream.source;\n      this._withCredentials = source.withCredentials || false;\n      this._contentLength = source.length;\n      this._headersCapability = (0, _util.createPromiseCapability)();\n      this._disableRange = source.disableRange || false;\n      this._rangeChunkSize = source.rangeChunkSize;\n\n      if (!this._rangeChunkSize && !this._disableRange) {\n        this._disableRange = true;\n      }\n\n      if (typeof AbortController !== \"undefined\") {\n        this._abortController = new AbortController();\n      }\n\n      this._isStreamingSupported = !source.disableStream;\n      this._isRangeSupported = !source.disableRange;\n      this._headers = createHeaders(this._stream.httpHeaders);\n      const url = source.url;\n      fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n        if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n          throw (0, _network_utils.createResponseStatusError)(response.status, url);\n        }\n\n        this._reader = response.body.getReader();\n\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n\n        const {\n          allowRangeRequests,\n          suggestedLength\n        } = (0, _network_utils.validateRangeRequestCapabilities)({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange\n        });\n        this._isRangeSupported = allowRangeRequests;\n        this._contentLength = suggestedLength || this._contentLength;\n        this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n        }\n      }).catch(this._headersCapability.reject);\n      this.onProgress = null;\n    }\n\n    get headersReady() {\n      return this._headersCapability.promise;\n    }\n\n    get filename() {\n      return this._filename;\n    }\n\n    get contentLength() {\n      return this._contentLength;\n    }\n\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    }\n\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    }\n\n    async read() {\n      await this._headersCapability.promise;\n      const {\n        value,\n        done\n      } = await this._reader.read();\n\n      if (done) {\n        return {\n          value,\n          done\n        };\n      }\n\n      this._loaded += value.byteLength;\n\n      if (this.onProgress) {\n        this.onProgress({\n          loaded: this._loaded,\n          total: this._contentLength\n        });\n      }\n\n      const buffer = new Uint8Array(value).buffer;\n      return {\n        value: buffer,\n        done: false\n      };\n    }\n\n    cancel(reason) {\n      if (this._reader) {\n        this._reader.cancel(reason);\n      }\n\n      if (this._abortController) {\n        this._abortController.abort();\n      }\n    }\n\n  }\n\n  class PDFFetchStreamRangeReader {\n    constructor(stream, begin, end) {\n      this._stream = stream;\n      this._reader = null;\n      this._loaded = 0;\n      const source = stream.source;\n      this._withCredentials = source.withCredentials || false;\n      this._readCapability = (0, _util.createPromiseCapability)();\n      this._isStreamingSupported = !source.disableStream;\n\n      if (typeof AbortController !== \"undefined\") {\n        this._abortController = new AbortController();\n      }\n\n      this._headers = createHeaders(this._stream.httpHeaders);\n\n      this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n      const url = source.url;\n      fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n        if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n          throw (0, _network_utils.createResponseStatusError)(response.status, url);\n        }\n\n        this._readCapability.resolve();\n\n        this._reader = response.body.getReader();\n      }).catch(reason => {\n        if (reason && reason.name === \"AbortError\") { // lwf\n          return;\n        }\n\n        throw reason;\n      });\n      this.onProgress = null;\n    }\n\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    }\n\n    async read() {\n      await this._readCapability.promise;\n      const {\n        value,\n        done\n      } = await this._reader.read();\n\n      if (done) {\n        return {\n          value,\n          done\n        };\n      }\n\n      this._loaded += value.byteLength;\n\n      if (this.onProgress) {\n        this.onProgress({\n          loaded: this._loaded\n        });\n      }\n\n      const buffer = new Uint8Array(value).buffer;\n      return {\n        value: buffer,\n        done: false\n      };\n    }\n\n    cancel(reason) {\n      if (this._reader) {\n        this._reader.cancel(reason);\n      }\n\n      if (this._abortController) {\n        this._abortController.abort();\n      }\n    }\n\n  }\n/***/ })\n/******/  ]);\n/************************************************************************/\n/******/  // The module cache\n/******/  var __webpack_module_cache__ = {};\n/******/  \n/******/  // The require function\n/******/  function __w_pdfjs_require__(moduleId) {\n/******/    // Check if module is in cache\n/******/    if(__webpack_module_cache__[moduleId]) {\n/******/      return __webpack_module_cache__[moduleId].exports;\n/******/    }\n/******/    // Create a new module (and put it into the cache)\n/******/    var module = __webpack_module_cache__[moduleId] = {\n/******/      // no module.id needed\n/******/      // no module.loaded needed\n/******/      exports: {}\n/******/    };\n/******/  \n/******/    // Execute the module function\n/******/    __webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n/******/  \n/******/    // Return the exports of the module\n/******/    return module.exports;\n/******/  }\n/******/  \n/************************************************************************/\n/******/  // module exports must be returned from runtime so entry inlining is disabled\n/******/  // startup\n/******/  // Load entry module and return exports\n/******/  return __w_pdfjs_require__(0);\n/******/ })()\n;\n});\n\ndefine('skylark-pdfjs/main',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"./pdf\"\r\n],function(skylark,pdfjs) {\r\n\treturn skylark.attach(\"intg.pdfjs\",pdfjs);\r\n});\ndefine('skylark-pdfjs', ['skylark-pdfjs/main'], function (main) { return main; });\n\ndefine('skylark-pdfjs-viewer/viewer',[\n  \"skylark-pdfjs\"\n],function(pdfjsLib){\n\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"PDFViewerApplicationOptions\", ({\n  enumerable: true,\n  get: function () {\n    return _app_options.AppOptions;\n  }\n}));\nObject.defineProperty(exports, \"PDFViewerApplication\", ({\n  enumerable: true,\n  get: function () {\n    return _app.PDFViewerApplication;\n  }\n}));\n\nvar _app_options = __webpack_require__(1);\n\nvar _app = __webpack_require__(3);\n\nconst pdfjsVersion = '2.7.570';\nconst pdfjsBuild = 'f2c7338b0';\nwindow.PDFViewerApplication = _app.PDFViewerApplication;\nwindow.PDFViewerApplicationOptions = _app_options.AppOptions;\n;\n;\n{\n  __webpack_require__(35);\n}\n;\n{\n  __webpack_require__(41);\n}\n\nfunction getViewerConfiguration() {\n  return {\n    appContainer: document.body,\n    mainContainer: document.getElementById(\"viewerContainer\"),\n    viewerContainer: document.getElementById(\"viewer\"),\n    eventBus: null,\n    toolbar: {\n      container: document.getElementById(\"toolbarViewer\"),\n      numPages: document.getElementById(\"numPages\"),\n      pageNumber: document.getElementById(\"pageNumber\"),\n      scaleSelectContainer: document.getElementById(\"scaleSelectContainer\"),\n      scaleSelect: document.getElementById(\"scaleSelect\"),\n      customScaleOption: document.getElementById(\"customScaleOption\"),\n      previous: document.getElementById(\"previous\"),\n      next: document.getElementById(\"next\"),\n      zoomIn: document.getElementById(\"zoomIn\"),\n      zoomOut: document.getElementById(\"zoomOut\"),\n      viewFind: document.getElementById(\"viewFind\"),\n      openFile: document.getElementById(\"openFile\"),\n      print: document.getElementById(\"print\"),\n      presentationModeButton: document.getElementById(\"presentationMode\"),\n      download: document.getElementById(\"download\"),\n      viewBookmark: document.getElementById(\"viewBookmark\")\n    },\n    secondaryToolbar: {\n      toolbar: document.getElementById(\"secondaryToolbar\"),\n      toggleButton: document.getElementById(\"secondaryToolbarToggle\"),\n      toolbarButtonContainer: document.getElementById(\"secondaryToolbarButtonContainer\"),\n      presentationModeButton: document.getElementById(\"secondaryPresentationMode\"),\n      openFileButton: document.getElementById(\"secondaryOpenFile\"),\n      printButton: document.getElementById(\"secondaryPrint\"),\n      downloadButton: document.getElementById(\"secondaryDownload\"),\n      viewBookmarkButton: document.getElementById(\"secondaryViewBookmark\"),\n      firstPageButton: document.getElementById(\"firstPage\"),\n      lastPageButton: document.getElementById(\"lastPage\"),\n      pageRotateCwButton: document.getElementById(\"pageRotateCw\"),\n      pageRotateCcwButton: document.getElementById(\"pageRotateCcw\"),\n      cursorSelectToolButton: document.getElementById(\"cursorSelectTool\"),\n      cursorHandToolButton: document.getElementById(\"cursorHandTool\"),\n      scrollVerticalButton: document.getElementById(\"scrollVertical\"),\n      scrollHorizontalButton: document.getElementById(\"scrollHorizontal\"),\n      scrollWrappedButton: document.getElementById(\"scrollWrapped\"),\n      spreadNoneButton: document.getElementById(\"spreadNone\"),\n      spreadOddButton: document.getElementById(\"spreadOdd\"),\n      spreadEvenButton: document.getElementById(\"spreadEven\"),\n      documentPropertiesButton: document.getElementById(\"documentProperties\")\n    },\n    fullscreen: {\n      contextFirstPage: document.getElementById(\"contextFirstPage\"),\n      contextLastPage: document.getElementById(\"contextLastPage\"),\n      contextPageRotateCw: document.getElementById(\"contextPageRotateCw\"),\n      contextPageRotateCcw: document.getElementById(\"contextPageRotateCcw\")\n    },\n    sidebar: {\n      outerContainer: document.getElementById(\"outerContainer\"),\n      viewerContainer: document.getElementById(\"viewerContainer\"),\n      toggleButton: document.getElementById(\"sidebarToggle\"),\n      thumbnailButton: document.getElementById(\"viewThumbnail\"),\n      outlineButton: document.getElementById(\"viewOutline\"),\n      attachmentsButton: document.getElementById(\"viewAttachments\"),\n      layersButton: document.getElementById(\"viewLayers\"),\n      thumbnailView: document.getElementById(\"thumbnailView\"),\n      outlineView: document.getElementById(\"outlineView\"),\n      attachmentsView: document.getElementById(\"attachmentsView\"),\n      layersView: document.getElementById(\"layersView\"),\n      outlineOptionsContainer: document.getElementById(\"outlineOptionsContainer\"),\n      currentOutlineItemButton: document.getElementById(\"currentOutlineItem\")\n    },\n    sidebarResizer: {\n      outerContainer: document.getElementById(\"outerContainer\"),\n      resizer: document.getElementById(\"sidebarResizer\")\n    },\n    findBar: {\n      bar: document.getElementById(\"findbar\"),\n      toggleButton: document.getElementById(\"viewFind\"),\n      findField: document.getElementById(\"findInput\"),\n      highlightAllCheckbox: document.getElementById(\"findHighlightAll\"),\n      caseSensitiveCheckbox: document.getElementById(\"findMatchCase\"),\n      entireWordCheckbox: document.getElementById(\"findEntireWord\"),\n      findMsg: document.getElementById(\"findMsg\"),\n      findResultsCount: document.getElementById(\"findResultsCount\"),\n      findPreviousButton: document.getElementById(\"findPrevious\"),\n      findNextButton: document.getElementById(\"findNext\")\n    },\n    passwordOverlay: {\n      overlayName: \"passwordOverlay\",\n      container: document.getElementById(\"passwordOverlay\"),\n      label: document.getElementById(\"passwordText\"),\n      input: document.getElementById(\"password\"),\n      submitButton: document.getElementById(\"passwordSubmit\"),\n      cancelButton: document.getElementById(\"passwordCancel\")\n    },\n    documentProperties: {\n      overlayName: \"documentPropertiesOverlay\",\n      container: document.getElementById(\"documentPropertiesOverlay\"),\n      closeButton: document.getElementById(\"documentPropertiesClose\"),\n      fields: {\n        fileName: document.getElementById(\"fileNameField\"),\n        fileSize: document.getElementById(\"fileSizeField\"),\n        title: document.getElementById(\"titleField\"),\n        author: document.getElementById(\"authorField\"),\n        subject: document.getElementById(\"subjectField\"),\n        keywords: document.getElementById(\"keywordsField\"),\n        creationDate: document.getElementById(\"creationDateField\"),\n        modificationDate: document.getElementById(\"modificationDateField\"),\n        creator: document.getElementById(\"creatorField\"),\n        producer: document.getElementById(\"producerField\"),\n        version: document.getElementById(\"versionField\"),\n        pageCount: document.getElementById(\"pageCountField\"),\n        pageSize: document.getElementById(\"pageSizeField\"),\n        linearized: document.getElementById(\"linearizedField\")\n      }\n    },\n    errorWrapper: {\n      container: document.getElementById(\"errorWrapper\"),\n      errorMessage: document.getElementById(\"errorMessage\"),\n      closeButton: document.getElementById(\"errorClose\"),\n      errorMoreInfo: document.getElementById(\"errorMoreInfo\"),\n      moreInfoButton: document.getElementById(\"errorShowMore\"),\n      lessInfoButton: document.getElementById(\"errorShowLess\")\n    },\n    printContainer: document.getElementById(\"printContainer\"),\n    openFileInputName: \"fileInput\",\n    debuggerScriptPath: \"./debugger.js\"\n  };\n}\n\nfunction webViewerLoad() {\n  const config = getViewerConfiguration();\n  const event = document.createEvent(\"CustomEvent\");\n  event.initCustomEvent(\"webviewerloaded\", true, true, {\n    source: window\n  });\n\n  try {\n    parent.document.dispatchEvent(event);\n  } catch (ex) {\n    console.error(`webviewerloaded: ${ex}`);\n    document.dispatchEvent(event);\n  }\n\n  _app.PDFViewerApplication.run(config);\n}\n\nif (document.readyState === \"interactive\" || document.readyState === \"complete\") {\n  webViewerLoad();\n} else {\n  document.addEventListener(\"DOMContentLoaded\", webViewerLoad, true);\n}\n\n/***/ }),\n/* 1 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.OptionKind = exports.AppOptions = void 0;\n\nvar _viewer_compatibility = __webpack_require__(2);\n\nconst OptionKind = {\n  VIEWER: 0x02,\n  API: 0x04,\n  WORKER: 0x08,\n  PREFERENCE: 0x80\n};\nexports.OptionKind = OptionKind;\nconst defaultOptions = {\n  cursorToolOnLoad: {\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  defaultUrl: {\n    value: \"compressed.tracemonkey-pldi-09.pdf\",\n    kind: OptionKind.VIEWER\n  },\n  defaultZoomValue: {\n    value: \"\",\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  disableHistory: {\n    value: false,\n    kind: OptionKind.VIEWER\n  },\n  disablePageLabels: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enablePermissions: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enablePrintAutoRotate: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enableScripting: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  enableWebGL: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  externalLinkRel: {\n    value: \"noopener noreferrer nofollow\",\n    kind: OptionKind.VIEWER\n  },\n  externalLinkTarget: {\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  historyUpdateUrl: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  ignoreDestinationZoom: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  imageResourcesPath: {\n    value: \"./images/\",\n    kind: OptionKind.VIEWER\n  },\n  maxCanvasPixels: {\n    value: 16777216,\n    compatibility: _viewer_compatibility.viewerCompatibilityParams.maxCanvasPixels,\n    kind: OptionKind.VIEWER\n  },\n  pdfBugEnabled: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  printResolution: {\n    value: 150,\n    kind: OptionKind.VIEWER\n  },\n  renderer: {\n    value: \"canvas\",\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  renderInteractiveForms: {\n    value: true,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  sidebarViewOnLoad: {\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  scrollModeOnLoad: {\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  spreadModeOnLoad: {\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  textLayerMode: {\n    value: 1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  useOnlyCssZoom: {\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  viewerCssTheme: {\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  viewOnLoad: {\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE\n  },\n  cMapPacked: {\n    value: true,\n    kind: OptionKind.API\n  },\n  cMapUrl: {\n    value: \"../web/cmaps/\",\n    kind: OptionKind.API\n  },\n  disableAutoFetch: {\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  disableFontFace: {\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  disableRange: {\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  disableStream: {\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE\n  },\n  docBaseUrl: {\n    value: \"\",\n    kind: OptionKind.API\n  },\n  fontExtraProperties: {\n    value: false,\n    kind: OptionKind.API\n  },\n  isEvalSupported: {\n    value: true,\n    kind: OptionKind.API\n  },\n  maxImageSize: {\n    value: -1,\n    kind: OptionKind.API\n  },\n  pdfBug: {\n    value: false,\n    kind: OptionKind.API\n  },\n  verbosity: {\n    value: 1,\n    kind: OptionKind.API\n  },\n  workerPort: {\n    value: null,\n    kind: OptionKind.WORKER\n  },\n  workerSrc: {\n    value: \"skylark-pdfjs-worker-all.js\", //\"../build/pdf.worker.js\",\n    kind: OptionKind.WORKER\n  }\n};\n{\n  defaultOptions.disablePreferences = {\n    value: false,\n    kind: OptionKind.VIEWER\n  };\n  defaultOptions.locale = {\n    value: typeof navigator !== \"undefined\" ? navigator.language : \"en-US\",\n    kind: OptionKind.VIEWER\n  };\n  defaultOptions.sandboxBundleSrc = {\n    value: \"../build/pdf.sandbox.js\",\n    kind: OptionKind.VIEWER\n  };\n}\nconst userOptions = Object.create(null);\n\nclass AppOptions {\n  constructor() {\n    throw new Error(\"Cannot initialize AppOptions.\");\n  }\n\n  static get(name) {\n    const userOption = userOptions[name];\n\n    if (userOption !== undefined) {\n      return userOption;\n    }\n\n    const defaultOption = defaultOptions[name];\n\n    if (defaultOption !== undefined) {\n      return defaultOption.compatibility || defaultOption.value;\n    }\n\n    return undefined;\n  }\n\n  static getAll(kind = null) {\n    const options = Object.create(null);\n\n    for (const name in defaultOptions) {\n      const defaultOption = defaultOptions[name];\n\n      if (kind) {\n        if ((kind & defaultOption.kind) === 0) {\n          continue;\n        }\n\n        if (kind === OptionKind.PREFERENCE) {\n          const value = defaultOption.value,\n                valueType = typeof value;\n\n          if (valueType === \"boolean\" || valueType === \"string\" || valueType === \"number\" && Number.isInteger(value)) {\n            options[name] = value;\n            continue;\n          }\n\n          throw new Error(`Invalid type for preference: ${name}`);\n        }\n      }\n\n      const userOption = userOptions[name];\n      options[name] = userOption !== undefined ? userOption : defaultOption.compatibility || defaultOption.value;\n    }\n\n    return options;\n  }\n\n  static set(name, value) {\n    userOptions[name] = value;\n  }\n\n  static setAll(options) {\n    for (const name in options) {\n      userOptions[name] = options[name];\n    }\n  }\n\n  static remove(name) {\n    delete userOptions[name];\n  }\n\n}\n\nexports.AppOptions = AppOptions;\n\n/***/ }),\n/* 2 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.viewerCompatibilityParams = void 0;\nconst compatibilityParams = Object.create(null);\n{\n  const userAgent = typeof navigator !== \"undefined\" && navigator.userAgent || \"\";\n  const platform = typeof navigator !== \"undefined\" && navigator.platform || \"\";\n  const maxTouchPoints = typeof navigator !== \"undefined\" && navigator.maxTouchPoints || 1;\n  const isAndroid = /Android/.test(userAgent);\n  const isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent) || platform === \"MacIntel\" && maxTouchPoints > 1;\n  const isIOSChrome = /CriOS/.test(userAgent);\n\n  (function checkOnBlobSupport() {\n    if (isIOSChrome) {\n      compatibilityParams.disableCreateObjectURL = true;\n    }\n  })();\n\n  (function checkCanvasSizeLimitation() {\n    if (isIOS || isAndroid) {\n      compatibilityParams.maxCanvasPixels = 5242880;\n    }\n  })();\n}\nconst viewerCompatibilityParams = Object.freeze(compatibilityParams);\nexports.viewerCompatibilityParams = viewerCompatibilityParams;\n\n/***/ }),\n/* 3 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFViewerApplication = exports.PDFPrintServiceFactory = exports.DefaultExternalServices = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _app_options = __webpack_require__(1);\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _pdf_cursor_tools = __webpack_require__(6);\n\nvar _pdf_rendering_queue = __webpack_require__(8);\n\nvar _overlay_manager = __webpack_require__(9);\n\nvar _password_prompt = __webpack_require__(10);\n\nvar _pdf_attachment_viewer = __webpack_require__(11);\n\nvar _pdf_document_properties = __webpack_require__(13);\n\nvar _pdf_find_bar = __webpack_require__(14);\n\nvar _pdf_find_controller = __webpack_require__(15);\n\nvar _pdf_history = __webpack_require__(17);\n\nvar _pdf_layer_viewer = __webpack_require__(18);\n\nvar _pdf_link_service = __webpack_require__(19);\n\nvar _pdf_outline_viewer = __webpack_require__(20);\n\nvar _pdf_presentation_mode = __webpack_require__(21);\n\nvar _pdf_sidebar = __webpack_require__(22);\n\nvar _pdf_sidebar_resizer = __webpack_require__(23);\n\nvar _pdf_thumbnail_viewer = __webpack_require__(24);\n\nvar _pdf_viewer = __webpack_require__(26);\n\nvar _secondary_toolbar = __webpack_require__(31);\n\nvar _toolbar = __webpack_require__(33);\n\nvar _viewer_compatibility = __webpack_require__(2);\n\nvar _view_history = __webpack_require__(34);\n\nconst DEFAULT_SCALE_DELTA = 1.1;\nconst DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT = 5000;\nconst FORCE_PAGES_LOADED_TIMEOUT = 10000;\nconst WHEEL_ZOOM_DISABLED_TIMEOUT = 1000;\nconst ENABLE_PERMISSIONS_CLASS = \"enablePermissions\";\nconst ViewOnLoad = {\n  UNKNOWN: -1,\n  PREVIOUS: 0,\n  INITIAL: 1\n};\nconst ViewerCssTheme = {\n  AUTOMATIC: 0,\n  LIGHT: 1,\n  DARK: 2\n};\nconst KNOWN_VERSIONS = [\"1.0\", \"1.1\", \"1.2\", \"1.3\", \"1.4\", \"1.5\", \"1.6\", \"1.7\", \"1.8\", \"1.9\", \"2.0\", \"2.1\", \"2.2\", \"2.3\"];\nconst KNOWN_GENERATORS = [\"acrobat distiller\", \"acrobat pdfwriter\", \"adobe livecycle\", \"adobe pdf library\", \"adobe photoshop\", \"ghostscript\", \"tcpdf\", \"cairo\", \"dvipdfm\", \"dvips\", \"pdftex\", \"pdfkit\", \"itext\", \"prince\", \"quarkxpress\", \"mac os x\", \"microsoft\", \"openoffice\", \"oracle\", \"luradocument\", \"pdf-xchange\", \"antenna house\", \"aspose.cells\", \"fpdf\"];\n\nclass DefaultExternalServices {\n  constructor() {\n    throw new Error(\"Cannot initialize DefaultExternalServices.\");\n  }\n\n  static updateFindControlState(data) {}\n\n  static updateFindMatchesCount(data) {}\n\n  static initPassiveLoading(callbacks) {}\n\n  static async fallback(data) {}\n\n  static reportTelemetry(data) {}\n\n  static createDownloadManager(options) {\n    throw new Error(\"Not implemented: createDownloadManager\");\n  }\n\n  static createPreferences() {\n    throw new Error(\"Not implemented: createPreferences\");\n  }\n\n  static createL10n(options) {\n    throw new Error(\"Not implemented: createL10n\");\n  }\n\n  static createScripting(options) {\n    throw new Error(\"Not implemented: createScripting\");\n  }\n\n  static get supportsIntegratedFind() {\n    return (0, _pdfjsLib.shadow)(this, \"supportsIntegratedFind\", false);\n  }\n\n  static get supportsDocumentFonts() {\n    return (0, _pdfjsLib.shadow)(this, \"supportsDocumentFonts\", true);\n  }\n\n  static get supportedMouseWheelZoomModifierKeys() {\n    return (0, _pdfjsLib.shadow)(this, \"supportedMouseWheelZoomModifierKeys\", {\n      ctrlKey: true,\n      metaKey: true\n    });\n  }\n\n  static get isInAutomation() {\n    return (0, _pdfjsLib.shadow)(this, \"isInAutomation\", false);\n  }\n\n}\n\nexports.DefaultExternalServices = DefaultExternalServices;\nconst PDFViewerApplication = {\n  initialBookmark: document.location.hash.substring(1),\n  _initializedCapability: (0, _pdfjsLib.createPromiseCapability)(),\n  fellback: false,\n  appConfig: null,\n  pdfDocument: null,\n  pdfLoadingTask: null,\n  printService: null,\n  pdfViewer: null,\n  pdfThumbnailViewer: null,\n  pdfRenderingQueue: null,\n  pdfPresentationMode: null,\n  pdfDocumentProperties: null,\n  pdfLinkService: null,\n  pdfHistory: null,\n  pdfSidebar: null,\n  pdfSidebarResizer: null,\n  pdfOutlineViewer: null,\n  pdfAttachmentViewer: null,\n  pdfLayerViewer: null,\n  pdfCursorTools: null,\n  store: null,\n  downloadManager: null,\n  overlayManager: null,\n  preferences: null,\n  toolbar: null,\n  secondaryToolbar: null,\n  eventBus: null,\n  l10n: null,\n  isInitialViewSet: false,\n  downloadComplete: false,\n  isViewerEmbedded: window.parent !== window,\n  url: \"\",\n  baseUrl: \"\",\n  externalServices: DefaultExternalServices,\n  _boundEvents: Object.create(null),\n  documentInfo: null,\n  metadata: null,\n  _contentDispositionFilename: null,\n  _contentLength: null,\n  triggerDelayedFallback: null,\n  _saveInProgress: false,\n  _wheelUnusedTicks: 0,\n  _idleCallbacks: new Set(),\n  _scriptingInstance: null,\n  _mouseState: Object.create(null),\n\n  async initialize(appConfig) {\n    this.preferences = this.externalServices.createPreferences();\n    this.appConfig = appConfig;\n    await this._readPreferences();\n    await this._parseHashParameters();\n\n    this._forceCssTheme();\n\n    await this._initializeL10n();\n\n    if (this.isViewerEmbedded && _app_options.AppOptions.get(\"externalLinkTarget\") === _pdfjsLib.LinkTarget.NONE) {\n      _app_options.AppOptions.set(\"externalLinkTarget\", _pdfjsLib.LinkTarget.TOP);\n    }\n\n    await this._initializeViewerComponents();\n    this.bindEvents();\n    this.bindWindowEvents();\n    const appContainer = appConfig.appContainer || document.documentElement;\n    this.l10n.translate(appContainer).then(() => {\n      this.eventBus.dispatch(\"localized\", {\n        source: this\n      });\n    });\n\n    this._initializedCapability.resolve();\n  },\n\n  async _readPreferences() {\n    if (_app_options.AppOptions.get(\"disablePreferences\")) {\n      return;\n    }\n\n    try {\n      _app_options.AppOptions.setAll(await this.preferences.getAll());\n    } catch (reason) {\n      console.error(`_readPreferences: \"${reason && reason.message}\".`); // reason?.message // modified by lwf\n    }\n  },\n\n  async _parseHashParameters() {\n    if (!_app_options.AppOptions.get(\"pdfBugEnabled\")) {\n      return undefined;\n    }\n\n    const hash = document.location.hash.substring(1);\n\n    if (!hash) {\n      return undefined;\n    }\n\n    const hashParams = (0, _ui_utils.parseQueryString)(hash),\n          waitOn = [];\n\n    if (\"disableworker\" in hashParams && hashParams.disableworker === \"true\") {\n      waitOn.push(loadFakeWorker());\n    }\n\n    if (\"disablerange\" in hashParams) {\n      _app_options.AppOptions.set(\"disableRange\", hashParams.disablerange === \"true\");\n    }\n\n    if (\"disablestream\" in hashParams) {\n      _app_options.AppOptions.set(\"disableStream\", hashParams.disablestream === \"true\");\n    }\n\n    if (\"disableautofetch\" in hashParams) {\n      _app_options.AppOptions.set(\"disableAutoFetch\", hashParams.disableautofetch === \"true\");\n    }\n\n    if (\"disablefontface\" in hashParams) {\n      _app_options.AppOptions.set(\"disableFontFace\", hashParams.disablefontface === \"true\");\n    }\n\n    if (\"disablehistory\" in hashParams) {\n      _app_options.AppOptions.set(\"disableHistory\", hashParams.disablehistory === \"true\");\n    }\n\n    if (\"webgl\" in hashParams) {\n      _app_options.AppOptions.set(\"enableWebGL\", hashParams.webgl === \"true\");\n    }\n\n    if (\"verbosity\" in hashParams) {\n      _app_options.AppOptions.set(\"verbosity\", hashParams.verbosity | 0);\n    }\n\n    if (\"textlayer\" in hashParams) {\n      switch (hashParams.textlayer) {\n        case \"off\":\n          _app_options.AppOptions.set(\"textLayerMode\", _ui_utils.TextLayerMode.DISABLE);\n\n          break;\n\n        case \"visible\":\n        case \"shadow\":\n        case \"hover\":\n          const viewer = this.appConfig.viewerContainer;\n          viewer.classList.add(\"textLayer-\" + hashParams.textlayer);\n          break;\n      }\n    }\n\n    if (\"pdfbug\" in hashParams) {\n      _app_options.AppOptions.set(\"pdfBug\", true);\n\n      _app_options.AppOptions.set(\"fontExtraProperties\", true);\n\n      const enabled = hashParams.pdfbug.split(\",\");\n      waitOn.push(loadAndEnablePDFBug(enabled));\n    }\n\n    if (\"locale\" in hashParams) {\n      _app_options.AppOptions.set(\"locale\", hashParams.locale);\n    }\n\n    if (waitOn.length === 0) {\n      return undefined;\n    }\n\n    return Promise.all(waitOn).catch(reason => {\n      console.error(`_parseHashParameters: \"${reason.message}\".`);\n    });\n  },\n\n  async _initializeL10n() {\n    this.l10n = this.externalServices.createL10n({\n      locale: _app_options.AppOptions.get(\"locale\")\n    });\n    const dir = await this.l10n.getDirection();\n    document.getElementsByTagName(\"html\")[0].dir = dir;\n  },\n\n  _forceCssTheme() {\n    const cssTheme = _app_options.AppOptions.get(\"viewerCssTheme\");\n\n    if (cssTheme === ViewerCssTheme.AUTOMATIC || !Object.values(ViewerCssTheme).includes(cssTheme)) {\n      return;\n    }\n\n    try {\n      const styleSheet = document.styleSheets[0];\n      const cssRules = styleSheet && styleSheet.cssRules || []; //styleSheet?.cssRules modified by lwf\n\n      for (let i = 0, ii = cssRules.length; i < ii; i++) {\n        const rule = cssRules[i];\n\n        if (rule instanceof CSSMediaRule && rule.media && rule.media[0] === \"(prefers-color-scheme: dark)\") { //rule.media?.[0] modified by lwf\n          if (cssTheme === ViewerCssTheme.LIGHT) {\n            styleSheet.deleteRule(i);\n            return;\n          }\n\n          const darkRules = /^@media \\(prefers-color-scheme: dark\\) {\\n\\s*([\\w\\s-.,:;/\\\\{}()]+)\\n}$/.exec(rule.cssText);\n\n          if (darkRules && darkRule[1]) { //darkRules?.[1] modified by lwf\n            styleSheet.deleteRule(i);\n            styleSheet.insertRule(darkRules[1], i);\n          }\n\n          return;\n        }\n      }\n    } catch (reason) {\n      console.error(`_forceCssTheme: \"${reason && reason.message}\".`); //reason?.message  modified by lwf\n    }\n  },\n\n  async _initializeViewerComponents() {\n    const appConfig = this.appConfig;\n    const eventBus = appConfig.eventBus || new _ui_utils.EventBus({\n      isInAutomation: this.externalServices.isInAutomation\n    });\n    this.eventBus = eventBus;\n    this.overlayManager = new _overlay_manager.OverlayManager();\n    const pdfRenderingQueue = new _pdf_rendering_queue.PDFRenderingQueue();\n    pdfRenderingQueue.onIdle = this.cleanup.bind(this);\n    this.pdfRenderingQueue = pdfRenderingQueue;\n    const pdfLinkService = new _pdf_link_service.PDFLinkService({\n      eventBus,\n      externalLinkTarget: _app_options.AppOptions.get(\"externalLinkTarget\"),\n      externalLinkRel: _app_options.AppOptions.get(\"externalLinkRel\"),\n      ignoreDestinationZoom: _app_options.AppOptions.get(\"ignoreDestinationZoom\")\n    });\n    this.pdfLinkService = pdfLinkService;\n    const downloadManager = this.externalServices.createDownloadManager();\n    this.downloadManager = downloadManager;\n    const findController = new _pdf_find_controller.PDFFindController({\n      linkService: pdfLinkService,\n      eventBus\n    });\n    this.findController = findController;\n    const container = appConfig.mainContainer;\n    const viewer = appConfig.viewerContainer;\n    this.pdfViewer = new _pdf_viewer.PDFViewer({\n      container,\n      viewer,\n      eventBus,\n      renderingQueue: pdfRenderingQueue,\n      linkService: pdfLinkService,\n      downloadManager,\n      findController,\n      renderer: _app_options.AppOptions.get(\"renderer\"),\n      enableWebGL: _app_options.AppOptions.get(\"enableWebGL\"),\n      l10n: this.l10n,\n      textLayerMode: _app_options.AppOptions.get(\"textLayerMode\"),\n      imageResourcesPath: _app_options.AppOptions.get(\"imageResourcesPath\"),\n      renderInteractiveForms: _app_options.AppOptions.get(\"renderInteractiveForms\"),\n      enablePrintAutoRotate: _app_options.AppOptions.get(\"enablePrintAutoRotate\"),\n      useOnlyCssZoom: _app_options.AppOptions.get(\"useOnlyCssZoom\"),\n      maxCanvasPixels: _app_options.AppOptions.get(\"maxCanvasPixels\"),\n      enableScripting: _app_options.AppOptions.get(\"enableScripting\"),\n      mouseState: this._mouseState\n    });\n    pdfRenderingQueue.setViewer(this.pdfViewer);\n    pdfLinkService.setViewer(this.pdfViewer);\n    this.pdfThumbnailViewer = new _pdf_thumbnail_viewer.PDFThumbnailViewer({\n      container: appConfig.sidebar.thumbnailView,\n      eventBus,\n      renderingQueue: pdfRenderingQueue,\n      linkService: pdfLinkService,\n      l10n: this.l10n\n    });\n    pdfRenderingQueue.setThumbnailViewer(this.pdfThumbnailViewer);\n    this.pdfHistory = new _pdf_history.PDFHistory({\n      linkService: pdfLinkService,\n      eventBus\n    });\n    pdfLinkService.setHistory(this.pdfHistory);\n\n    if (!this.supportsIntegratedFind) {\n      this.findBar = new _pdf_find_bar.PDFFindBar(appConfig.findBar, eventBus, this.l10n);\n    }\n\n    this.pdfDocumentProperties = new _pdf_document_properties.PDFDocumentProperties(appConfig.documentProperties, this.overlayManager, eventBus, this.l10n);\n    this.pdfCursorTools = new _pdf_cursor_tools.PDFCursorTools({\n      container,\n      eventBus,\n      cursorToolOnLoad: _app_options.AppOptions.get(\"cursorToolOnLoad\")\n    });\n    this.toolbar = new _toolbar.Toolbar(appConfig.toolbar, eventBus, this.l10n);\n    this.secondaryToolbar = new _secondary_toolbar.SecondaryToolbar(appConfig.secondaryToolbar, container, eventBus);\n\n    if (this.supportsFullscreen) {\n      this.pdfPresentationMode = new _pdf_presentation_mode.PDFPresentationMode({\n        container,\n        pdfViewer: this.pdfViewer,\n        eventBus,\n        contextMenuItems: appConfig.fullscreen\n      });\n    }\n\n    this.passwordPrompt = new _password_prompt.PasswordPrompt(appConfig.passwordOverlay, this.overlayManager, this.l10n);\n    this.pdfOutlineViewer = new _pdf_outline_viewer.PDFOutlineViewer({\n      container: appConfig.sidebar.outlineView,\n      eventBus,\n      linkService: pdfLinkService\n    });\n    this.pdfAttachmentViewer = new _pdf_attachment_viewer.PDFAttachmentViewer({\n      container: appConfig.sidebar.attachmentsView,\n      eventBus,\n      downloadManager\n    });\n    this.pdfLayerViewer = new _pdf_layer_viewer.PDFLayerViewer({\n      container: appConfig.sidebar.layersView,\n      eventBus,\n      l10n: this.l10n\n    });\n    this.pdfSidebar = new _pdf_sidebar.PDFSidebar({\n      elements: appConfig.sidebar,\n      pdfViewer: this.pdfViewer,\n      pdfThumbnailViewer: this.pdfThumbnailViewer,\n      eventBus,\n      l10n: this.l10n\n    });\n    this.pdfSidebar.onToggled = this.forceRendering.bind(this);\n    this.pdfSidebarResizer = new _pdf_sidebar_resizer.PDFSidebarResizer(appConfig.sidebarResizer, eventBus, this.l10n);\n  },\n\n  run(config) {\n    this.initialize(config).then(webViewerInitialized);\n  },\n\n  get initialized() {\n    return this._initializedCapability.settled;\n  },\n\n  get initializedPromise() {\n    return this._initializedCapability.promise;\n  },\n\n  zoomIn(ticks) {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n\n    let newScale = this.pdfViewer.currentScale;\n\n    do {\n      newScale = (newScale * DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.ceil(newScale * 10) / 10;\n      newScale = Math.min(_ui_utils.MAX_SCALE, newScale);\n    } while (--ticks > 0 && newScale < _ui_utils.MAX_SCALE);\n\n    this.pdfViewer.currentScaleValue = newScale;\n  },\n\n  zoomOut(ticks) {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n\n    let newScale = this.pdfViewer.currentScale;\n\n    do {\n      newScale = (newScale / DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.floor(newScale * 10) / 10;\n      newScale = Math.max(_ui_utils.MIN_SCALE, newScale);\n    } while (--ticks > 0 && newScale > _ui_utils.MIN_SCALE);\n\n    this.pdfViewer.currentScaleValue = newScale;\n  },\n\n  zoomReset() {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n\n    this.pdfViewer.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n  },\n\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  },\n\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  },\n\n  set page(val) {\n    this.pdfViewer.currentPageNumber = val;\n  },\n\n  get supportsPrinting() {\n    return PDFPrintServiceFactory.instance.supportsPrinting;\n  },\n\n  get supportsFullscreen() {\n    let support;\n    const doc = document.documentElement;\n    support = !!(doc.requestFullscreen || doc.mozRequestFullScreen || doc.webkitRequestFullScreen);\n\n    if (document.fullscreenEnabled === false || document.mozFullScreenEnabled === false || document.webkitFullscreenEnabled === false) {\n      support = false;\n    }\n\n    return (0, _pdfjsLib.shadow)(this, \"supportsFullscreen\", support);\n  },\n\n  get supportsIntegratedFind() {\n    return this.externalServices.supportsIntegratedFind;\n  },\n\n  get supportsDocumentFonts() {\n    return this.externalServices.supportsDocumentFonts;\n  },\n\n  get loadingBar() {\n    const bar = new _ui_utils.ProgressBar(\"#loadingBar\");\n    return (0, _pdfjsLib.shadow)(this, \"loadingBar\", bar);\n  },\n\n  get supportedMouseWheelZoomModifierKeys() {\n    return this.externalServices.supportedMouseWheelZoomModifierKeys;\n  },\n\n  initPassiveLoading() {\n    throw new Error(\"Not implemented: initPassiveLoading\");\n  },\n\n  setTitleUsingUrl(url = \"\") {\n    this.url = url;\n    this.baseUrl = url.split(\"#\")[0];\n    let title = (0, _ui_utils.getPDFFileNameFromURL)(url, \"\");\n\n    if (!title) {\n      try {\n        title = decodeURIComponent((0, _pdfjsLib.getFilenameFromUrl)(url)) || url;\n      } catch (ex) {\n        title = url;\n      }\n    }\n\n    this.setTitle(title);\n  },\n\n  setTitle(title) {\n    if (this.isViewerEmbedded) {\n      return;\n    }\n\n    document.title = title;\n  },\n\n  get _docFilename() {\n    return this._contentDispositionFilename || (0, _ui_utils.getPDFFileNameFromURL)(this.url);\n  },\n\n  _cancelIdleCallbacks() {\n    if (!this._idleCallbacks.size) {\n      return;\n    }\n\n    for (const callback of this._idleCallbacks) {\n      window.cancelIdleCallback(callback);\n    }\n\n    this._idleCallbacks.clear();\n  },\n\n  async _destroyScriptingInstance() {\n    if (!this._scriptingInstance) {\n      return;\n    }\n\n    const {\n      scripting,\n      internalEvents,\n      domEvents\n    } = this._scriptingInstance;\n\n    try {\n      await scripting.destroySandbox();\n    } catch (ex) {}\n\n    for (const [name, listener] of internalEvents) {\n      this.eventBus._off(name, listener);\n    }\n\n    internalEvents.clear();\n\n    for (const [name, listener] of domEvents) {\n      window.removeEventListener(name, listener);\n    }\n\n    domEvents.clear();\n    delete this._mouseState.isDown;\n    this._scriptingInstance = null;\n  },\n\n  async close() {\n    const errorWrapper = this.appConfig.errorWrapper.container;\n    errorWrapper.setAttribute(\"hidden\", \"true\");\n\n    if (!this.pdfLoadingTask) {\n      return undefined;\n    }\n\n    const promises = [];\n    promises.push(this.pdfLoadingTask.destroy());\n    this.pdfLoadingTask = null;\n\n    if (this.pdfDocument) {\n      this.pdfDocument = null;\n      this.pdfThumbnailViewer.setDocument(null);\n      this.pdfViewer.setDocument(null);\n      this.pdfLinkService.setDocument(null);\n      this.pdfDocumentProperties.setDocument(null);\n    }\n\n    webViewerResetPermissions();\n    this.store = null;\n    this.isInitialViewSet = false;\n    this.downloadComplete = false;\n    this.url = \"\";\n    this.baseUrl = \"\";\n    this.documentInfo = null;\n    this.metadata = null;\n    this._contentDispositionFilename = null;\n    this._contentLength = null;\n    this.triggerDelayedFallback = null;\n    this._saveInProgress = false;\n\n    this._cancelIdleCallbacks();\n\n    promises.push(this._destroyScriptingInstance());\n    this.pdfSidebar.reset();\n    this.pdfOutlineViewer.reset();\n    this.pdfAttachmentViewer.reset();\n    this.pdfLayerViewer.reset();\n\n    if (this.pdfHistory) {\n      this.pdfHistory.reset();\n    }\n\n    if (this.findBar) {\n      this.findBar.reset();\n    }\n\n    this.toolbar.reset();\n    this.secondaryToolbar.reset();\n\n    if (typeof PDFBug !== \"undefined\") {\n      PDFBug.cleanup();\n    }\n\n    await Promise.all(promises);\n    return undefined;\n  },\n\n  async open(file, args) {\n    if (this.pdfLoadingTask) {\n      await this.close();\n    }\n\n    const workerParameters = _app_options.AppOptions.getAll(_app_options.OptionKind.WORKER);\n\n    for (const key in workerParameters) {\n      _pdfjsLib.GlobalWorkerOptions[key] = workerParameters[key];\n    }\n\n    const parameters = Object.create(null);\n\n    if (typeof file === \"string\") {\n      this.setTitleUsingUrl(file);\n      parameters.url = file;\n    } else if (file && \"byteLength\" in file) {\n      parameters.data = file;\n    } else if (file.url && file.originalUrl) {\n      this.setTitleUsingUrl(file.originalUrl);\n      parameters.url = file.url;\n    }\n\n    const apiParameters = _app_options.AppOptions.getAll(_app_options.OptionKind.API);\n\n    for (const key in apiParameters) {\n      let value = apiParameters[key];\n\n      if (key === \"docBaseUrl\" && !value) {}\n\n      parameters[key] = value;\n    }\n\n    if (args) {\n      for (const key in args) {\n        parameters[key] = args[key];\n      }\n    }\n\n    const loadingTask = (0, _pdfjsLib.getDocument)(parameters);\n    this.pdfLoadingTask = loadingTask;\n\n    loadingTask.onPassword = (updateCallback, reason) => {\n      this.pdfLinkService.externalLinkEnabled = false;\n      this.passwordPrompt.setUpdateCallback(updateCallback, reason);\n      this.passwordPrompt.open();\n    };\n\n    loadingTask.onProgress = ({\n      loaded,\n      total\n    }) => {\n      this.progress(loaded / total);\n    };\n\n    loadingTask.onUnsupportedFeature = this.fallback.bind(this);\n    return loadingTask.promise.then(pdfDocument => {\n      this.load(pdfDocument);\n    }, exception => {\n      if (loadingTask !== this.pdfLoadingTask) {\n        return undefined;\n      }\n\n      const message = exception && exception.message; // exception?.message modified by lwf\n      let loadingErrorMessage;\n\n      if (exception instanceof _pdfjsLib.InvalidPDFException) {\n        loadingErrorMessage = this.l10n.get(\"invalid_file_error\", null, \"Invalid or corrupted PDF file.\");\n      } else if (exception instanceof _pdfjsLib.MissingPDFException) {\n        loadingErrorMessage = this.l10n.get(\"missing_file_error\", null, \"Missing PDF file.\");\n      } else if (exception instanceof _pdfjsLib.UnexpectedResponseException) {\n        loadingErrorMessage = this.l10n.get(\"unexpected_response_error\", null, \"Unexpected server response.\");\n      } else {\n        loadingErrorMessage = this.l10n.get(\"loading_error\", null, \"An error occurred while loading the PDF.\");\n      }\n\n      return loadingErrorMessage.then(msg => {\n        this.error(msg, {\n          message\n        });\n        throw exception;\n      });\n    });\n  },\n\n  download({\n    sourceEventType = \"download\"\n  } = {}) {\n    function downloadByUrl() {\n      downloadManager.downloadUrl(url, filename);\n    }\n\n    const downloadManager = this.downloadManager,\n          url = this.baseUrl,\n          filename = this._docFilename;\n\n    if (!this.pdfDocument || !this.downloadComplete) {\n      downloadByUrl();\n      return;\n    }\n\n    this.pdfDocument.getData().then(function (data) {\n      const blob = new Blob([data], {\n        type: \"application/pdf\"\n      });\n      downloadManager.download(blob, url, filename, sourceEventType);\n    }).catch(downloadByUrl);\n  },\n\n  async save({\n    sourceEventType = \"download\"\n  } = {}) {\n    if (this._saveInProgress) {\n      return;\n    }\n\n    const downloadManager = this.downloadManager,\n          url = this.baseUrl,\n          filename = this._docFilename;\n\n    if (!this.pdfDocument || !this.downloadComplete) {\n      this.download({\n        sourceEventType\n      });\n      return;\n    }\n\n    this._saveInProgress = true;\n    await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({ // ?.\n      id: \"doc\",\n      name: \"WillSave\"\n    });\n    this.pdfDocument.saveDocument(this.pdfDocument.annotationStorage).then(data => {\n      const blob = new Blob([data], {\n        type: \"application/pdf\"\n      });\n      downloadManager.download(blob, url, filename, sourceEventType);\n    }).catch(() => {\n      this.download({\n        sourceEventType\n      });\n    }).finally(async () => {\n      await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({ //?.\n        id: \"doc\",\n        name: \"DidSave\"\n      });\n      this._saveInProgress = false;\n    });\n  },\n\n  downloadOrSave(options) {\n    if (this.pdfDocument && this.pdfDocument.annotationStorage.size > 0) { //?.\n      this.save(options);\n    } else {\n      this.download(options);\n    }\n  },\n\n  _delayedFallback(featureId) {\n    this.externalServices.reportTelemetry({\n      type: \"unsupportedFeature\",\n      featureId\n    });\n\n    if (!this.triggerDelayedFallback) {\n      this.triggerDelayedFallback = () => {\n        this.fallback(featureId);\n        this.triggerDelayedFallback = null;\n      };\n    }\n  },\n\n  fallback(featureId) {\n    this.externalServices.reportTelemetry({\n      type: \"unsupportedFeature\",\n      featureId\n    });\n\n    if (this.fellback) {\n      return;\n    }\n\n    this.fellback = true;\n    this.externalServices.fallback({\n      featureId,\n      url: this.baseUrl\n    }).then(download => {\n      if (!download) {\n        return;\n      }\n\n      this.download({\n        sourceEventType: \"download\"\n      });\n    });\n  },\n\n  error(message, moreInfo) {\n    const moreInfoText = [this.l10n.get(\"error_version_info\", {\n      version: _pdfjsLib.version || \"?\",\n      build: _pdfjsLib.build || \"?\"\n    }, \"PDF.js v{{version}} (build: {{build}})\")];\n\n    if (moreInfo) {\n      moreInfoText.push(this.l10n.get(\"error_message\", {\n        message: moreInfo.message\n      }, \"Message: {{message}}\"));\n\n      if (moreInfo.stack) {\n        moreInfoText.push(this.l10n.get(\"error_stack\", {\n          stack: moreInfo.stack\n        }, \"Stack: {{stack}}\"));\n      } else {\n        if (moreInfo.filename) {\n          moreInfoText.push(this.l10n.get(\"error_file\", {\n            file: moreInfo.filename\n          }, \"File: {{file}}\"));\n        }\n\n        if (moreInfo.lineNumber) {\n          moreInfoText.push(this.l10n.get(\"error_line\", {\n            line: moreInfo.lineNumber\n          }, \"Line: {{line}}\"));\n        }\n      }\n    }\n\n    const errorWrapperConfig = this.appConfig.errorWrapper;\n    const errorWrapper = errorWrapperConfig.container;\n    errorWrapper.removeAttribute(\"hidden\");\n    const errorMessage = errorWrapperConfig.errorMessage;\n    errorMessage.textContent = message;\n    const closeButton = errorWrapperConfig.closeButton;\n\n    closeButton.onclick = function () {\n      errorWrapper.setAttribute(\"hidden\", \"true\");\n    };\n\n    const errorMoreInfo = errorWrapperConfig.errorMoreInfo;\n    const moreInfoButton = errorWrapperConfig.moreInfoButton;\n    const lessInfoButton = errorWrapperConfig.lessInfoButton;\n\n    moreInfoButton.onclick = function () {\n      errorMoreInfo.removeAttribute(\"hidden\");\n      moreInfoButton.setAttribute(\"hidden\", \"true\");\n      lessInfoButton.removeAttribute(\"hidden\");\n      errorMoreInfo.style.height = errorMoreInfo.scrollHeight + \"px\";\n    };\n\n    lessInfoButton.onclick = function () {\n      errorMoreInfo.setAttribute(\"hidden\", \"true\");\n      moreInfoButton.removeAttribute(\"hidden\");\n      lessInfoButton.setAttribute(\"hidden\", \"true\");\n    };\n\n    moreInfoButton.oncontextmenu = _ui_utils.noContextMenuHandler;\n    lessInfoButton.oncontextmenu = _ui_utils.noContextMenuHandler;\n    closeButton.oncontextmenu = _ui_utils.noContextMenuHandler;\n    moreInfoButton.removeAttribute(\"hidden\");\n    lessInfoButton.setAttribute(\"hidden\", \"true\");\n    Promise.all(moreInfoText).then(parts => {\n      errorMoreInfo.value = parts.join(\"\\n\");\n    });\n  },\n\n  progress(level) {\n    if (this.downloadComplete) {\n      return;\n    }\n\n    const percent = Math.round(level * 100);\n\n    if (percent > this.loadingBar.percent || isNaN(percent)) {\n      this.loadingBar.percent = percent;\n      const disableAutoFetch = this.pdfDocument ? this.pdfDocument.loadingParams.disableAutoFetch : _app_options.AppOptions.get(\"disableAutoFetch\");\n\n      if (disableAutoFetch && percent) {\n        if (this.disableAutoFetchLoadingBarTimeout) {\n          clearTimeout(this.disableAutoFetchLoadingBarTimeout);\n          this.disableAutoFetchLoadingBarTimeout = null;\n        }\n\n        this.loadingBar.show();\n        this.disableAutoFetchLoadingBarTimeout = setTimeout(() => {\n          this.loadingBar.hide();\n          this.disableAutoFetchLoadingBarTimeout = null;\n        }, DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT);\n      }\n    }\n  },\n\n  load(pdfDocument) {\n    this.pdfDocument = pdfDocument;\n    pdfDocument.getDownloadInfo().then(({\n      length\n    }) => {\n      this._contentLength = length;\n      this.downloadComplete = true;\n      this.loadingBar.hide();\n      firstPagePromise.then(() => {\n        this.eventBus.dispatch(\"documentloaded\", {\n          source: this\n        });\n      });\n    });\n    const pageLayoutPromise = pdfDocument.getPageLayout().catch(function () {});\n    const pageModePromise = pdfDocument.getPageMode().catch(function () {});\n    const openActionPromise = pdfDocument.getOpenAction().catch(function () {});\n    this.toolbar.setPagesCount(pdfDocument.numPages, false);\n    this.secondaryToolbar.setPagesCount(pdfDocument.numPages);\n    let baseDocumentUrl;\n    baseDocumentUrl = null;\n    this.pdfLinkService.setDocument(pdfDocument, baseDocumentUrl);\n    this.pdfDocumentProperties.setDocument(pdfDocument, this.url);\n    const pdfViewer = this.pdfViewer;\n    pdfViewer.setDocument(pdfDocument);\n    const {\n      firstPagePromise,\n      onePageRendered,\n      pagesPromise\n    } = pdfViewer;\n    const pdfThumbnailViewer = this.pdfThumbnailViewer;\n    pdfThumbnailViewer.setDocument(pdfDocument);\n    const storedPromise = (this.store = new _view_history.ViewHistory(pdfDocument.fingerprint)).getMultiple({\n      page: null,\n      zoom: _ui_utils.DEFAULT_SCALE_VALUE,\n      scrollLeft: \"0\",\n      scrollTop: \"0\",\n      rotation: null,\n      sidebarView: _ui_utils.SidebarView.UNKNOWN,\n      scrollMode: _ui_utils.ScrollMode.UNKNOWN,\n      spreadMode: _ui_utils.SpreadMode.UNKNOWN\n    }).catch(() => {\n      return Object.create(null);\n    });\n    firstPagePromise.then(pdfPage => {\n      this.loadingBar.setWidth(this.appConfig.viewerContainer);\n\n      this._initializeAnnotationStorageCallbacks(pdfDocument);\n\n      Promise.all([_ui_utils.animationStarted, storedPromise, pageLayoutPromise, pageModePromise, openActionPromise]).then(async ([timeStamp, stored, pageLayout, pageMode, openAction]) => {\n        const viewOnLoad = _app_options.AppOptions.get(\"viewOnLoad\");\n\n        this._initializePdfHistory({\n          fingerprint: pdfDocument.fingerprint,\n          viewOnLoad,\n          initialDest: openAction && openAction.dest\n        });\n\n        const initialBookmark = this.initialBookmark;\n\n        const zoom = _app_options.AppOptions.get(\"defaultZoomValue\");\n\n        let hash = zoom ? `zoom=${zoom}` : null;\n        let rotation = null;\n\n        let sidebarView = _app_options.AppOptions.get(\"sidebarViewOnLoad\");\n\n        let scrollMode = _app_options.AppOptions.get(\"scrollModeOnLoad\");\n\n        let spreadMode = _app_options.AppOptions.get(\"spreadModeOnLoad\");\n\n        if (stored.page && viewOnLoad !== ViewOnLoad.INITIAL) {\n          hash = `page=${stored.page}&zoom=${zoom || stored.zoom},` + `${stored.scrollLeft},${stored.scrollTop}`;\n          rotation = parseInt(stored.rotation, 10);\n\n          if (sidebarView === _ui_utils.SidebarView.UNKNOWN) {\n            sidebarView = stored.sidebarView | 0;\n          }\n\n          if (scrollMode === _ui_utils.ScrollMode.UNKNOWN) {\n            scrollMode = stored.scrollMode | 0;\n          }\n\n          if (spreadMode === _ui_utils.SpreadMode.UNKNOWN) {\n            spreadMode = stored.spreadMode | 0;\n          }\n        }\n\n        if (pageMode && sidebarView === _ui_utils.SidebarView.UNKNOWN) {\n          sidebarView = apiPageModeToSidebarView(pageMode);\n        }\n\n        if (pageLayout && spreadMode === _ui_utils.SpreadMode.UNKNOWN) {\n          spreadMode = apiPageLayoutToSpreadMode(pageLayout);\n        }\n\n        this.setInitialView(hash, {\n          rotation,\n          sidebarView,\n          scrollMode,\n          spreadMode\n        });\n        this.eventBus.dispatch(\"documentinit\", {\n          source: this\n        });\n\n        if (!this.isViewerEmbedded) {\n          pdfViewer.focus();\n        }\n\n        this._initializePermissions(pdfDocument);\n\n        await Promise.race([pagesPromise, new Promise(resolve => {\n          setTimeout(resolve, FORCE_PAGES_LOADED_TIMEOUT);\n        })]);\n\n        if (!initialBookmark && !hash) {\n          return;\n        }\n\n        if (pdfViewer.hasEqualPageSizes) {\n          return;\n        }\n\n        this.initialBookmark = initialBookmark;\n        pdfViewer.currentScaleValue = pdfViewer.currentScaleValue;\n        this.setInitialView(hash);\n      }).catch(() => {\n        this.setInitialView();\n      }).then(function () {\n        pdfViewer.update();\n      });\n    });\n    pagesPromise.then(() => {\n      this._initializeAutoPrint(pdfDocument, openActionPromise);\n    });\n    onePageRendered.then(() => {\n      pdfDocument.getOutline().then(outline => {\n        this.pdfOutlineViewer.render({\n          outline,\n          pdfDocument\n        });\n      });\n      pdfDocument.getAttachments().then(attachments => {\n        this.pdfAttachmentViewer.render({\n          attachments\n        });\n      });\n      pdfViewer.optionalContentConfigPromise.then(optionalContentConfig => {\n        this.pdfLayerViewer.render({\n          optionalContentConfig,\n          pdfDocument\n        });\n      });\n\n      if (\"requestIdleCallback\" in window) {\n        const callback = window.requestIdleCallback(() => {\n          this._collectTelemetry(pdfDocument);\n\n          this._idleCallbacks.delete(callback);\n        }, {\n          timeout: 1000\n        });\n\n        this._idleCallbacks.add(callback);\n      }\n\n      this._initializeJavaScript(pdfDocument);\n    });\n\n    this._initializePageLabels(pdfDocument);\n\n    this._initializeMetadata(pdfDocument);\n  },\n\n  async _initializeJavaScript(pdfDocument) {\n    if (!_app_options.AppOptions.get(\"enableScripting\")) {\n      return;\n    }\n\n    const [objects, calculationOrder, docActions] = await Promise.all([pdfDocument.getFieldObjects(), pdfDocument.getCalculationOrderIds(), pdfDocument.getJSActions()]);\n\n    if (!objects && !docActions) {\n      return;\n    }\n\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n\n    const scripting = this.externalServices.createScripting({\n      sandboxBundleSrc: _app_options.AppOptions.get(\"sandboxBundleSrc\")\n    });\n    const internalEvents = new Map(),\n          domEvents = new Map();\n    this._scriptingInstance = {\n      scripting,\n      ready: false,\n      internalEvents,\n      domEvents\n    };\n\n    if (!this.documentInfo) {\n      await new Promise(resolve => {\n        this.eventBus._on(\"metadataloaded\", evt => {\n          resolve();\n        }, {\n          once: true\n        });\n      });\n\n      if (pdfDocument !== this.pdfDocument) {\n        return;\n      }\n    }\n\n    if (!this._contentLength) {\n      await new Promise(resolve => {\n        this.eventBus._on(\"documentloaded\", evt => {\n          resolve();\n        }, {\n          once: true\n        });\n      });\n\n      if (pdfDocument !== this.pdfDocument) {\n        return;\n      }\n    }\n\n    const updateFromSandbox = ({\n      detail\n    }) => {\n      const {\n        id,\n        command,\n        value\n      } = detail;\n\n      if (!id) {\n        switch (command) {\n          case \"clear\":\n            console.clear();\n            break;\n\n          case \"error\":\n            console.error(value);\n            break;\n\n          case \"layout\":\n            this.pdfViewer.spreadMode = apiPageLayoutToSpreadMode(value);\n            break;\n\n          case \"page-num\":\n            this.pdfViewer.currentPageNumber = value + 1;\n            break;\n\n          case \"print\":\n            this.pdfViewer.pagesPromise.then(() => {\n              this.triggerPrinting();\n            });\n            break;\n\n          case \"println\":\n            console.log(value);\n            break;\n\n          case \"zoom\":\n            this.pdfViewer.currentScaleValue = value;\n            break;\n        }\n\n        return;\n      }\n\n      const element = document.getElementById(id);\n\n      if (element) {\n        element.dispatchEvent(new CustomEvent(\"updatefromsandbox\", {\n          detail\n        }));\n      } else {\n        if (value !== undefined && value !== null) {\n          pdfDocument.annotationStorage.setValue(id, value);\n        }\n      }\n    };\n\n    internalEvents.set(\"updatefromsandbox\", updateFromSandbox);\n    const visitedPages = new Map();\n\n    const pageOpen = ({\n      pageNumber,\n      actionsPromise\n    }) => {\n      visitedPages.set(pageNumber, (async () => {\n        let actions = null;\n\n        if (!visitedPages.has(pageNumber)) {\n          actions = await actionsPromise;\n\n          if (pdfDocument !== this.pdfDocument) {\n            return;\n          }\n        }\n\n        await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({  //?.\n          id: \"page\",\n          name: \"PageOpen\",\n          pageNumber,\n          actions\n        });\n      })());\n    };\n\n    const pageClose = async ({\n      pageNumber\n    }) => {\n      const actionsPromise = visitedPages.get(pageNumber);\n\n      if (!actionsPromise) {\n        return;\n      }\n\n      visitedPages.set(pageNumber, null);\n      await actionsPromise;\n\n      if (pdfDocument !== this.pdfDocument) {\n        return;\n      }\n\n      await this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({ //?.\n        id: \"page\",\n        name: \"PageClose\",\n        pageNumber\n      });\n    };\n\n    internalEvents.set(\"pageopen\", pageOpen);\n    internalEvents.set(\"pageclose\", pageClose);\n\n    const dispatchEventInSandbox = ({\n      detail\n    }) => {\n      scripting.dispatchEventInSandbox(detail);\n    };\n\n    internalEvents.set(\"dispatcheventinsandbox\", dispatchEventInSandbox);\n\n    const mouseDown = event => {\n      this._mouseState.isDown = true;\n    };\n\n    domEvents.set(\"mousedown\", mouseDown);\n\n    const mouseUp = event => {\n      this._mouseState.isDown = false;\n    };\n\n    domEvents.set(\"mouseup\", mouseUp);\n\n    for (const [name, listener] of internalEvents) {\n      this.eventBus._on(name, listener);\n    }\n\n    for (const [name, listener] of domEvents) {\n      window.addEventListener(name, listener);\n    }\n\n    try {\n      await scripting.createSandbox({\n        objects,\n        calculationOrder,\n        appInfo: {\n          platform: navigator.platform,\n          language: navigator.language\n        },\n        docInfo: { ...this.documentInfo,\n          baseURL: this.baseUrl,\n          filesize: this._contentLength,\n          filename: this._docFilename,\n          metadata: this.metadata && this.metadata.getRaw(), //?.\n          authors: this.metadata && this.metadata.get(\"dc:creator\"), //?.\n          numPages: pdfDocument.numPages,\n          URL: this.url,\n          actions: docActions\n        }\n      });\n\n      if (this.externalServices.isInAutomation) {\n        this.eventBus.dispatch(\"sandboxcreated\", {\n          source: this\n        });\n      }\n    } catch (error) {\n      console.error(`_initializeJavaScript: \"${error && error.message}\".`); //?.\n\n      this._destroyScriptingInstance();\n\n      return;\n    }\n\n    await scripting.dispatchEventInSandbox({\n      id: \"doc\",\n      name: \"Open\"\n    });\n    await this.pdfViewer.initializeScriptingEvents();\n    Promise.resolve().then(() => {\n      if (this._scriptingInstance) {\n        this._scriptingInstance.ready = true;\n      }\n    });\n  },\n\n  async _collectTelemetry(pdfDocument) {\n    const markInfo = await this.pdfDocument.getMarkInfo();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n\n    const tagged =markInfo && markInfo.Marked || false;  //?.\n    this.externalServices.reportTelemetry({\n      type: \"tagged\",\n      tagged\n    });\n  },\n\n  async _initializeAutoPrint(pdfDocument, openActionPromise) {\n    const [openAction, javaScript] = await Promise.all([openActionPromise, !_app_options.AppOptions.get(\"enableScripting\") ? pdfDocument.getJavaScript() : null]);\n\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n\n    let triggerAutoPrint = false;\n\n    if (openAction && openAction.action === \"Print\") { //?.\n      triggerAutoPrint = true;\n    }\n\n    if (javaScript) {\n      javaScript.some(js => {\n        if (!js) {\n          return false;\n        }\n\n        console.warn(\"Warning: JavaScript is not supported\");\n\n        this._delayedFallback(_pdfjsLib.UNSUPPORTED_FEATURES.javaScript);\n\n        return true;\n      });\n\n      if (!triggerAutoPrint) {\n        for (const js of javaScript) {\n          if (js && _ui_utils.AutoPrintRegExp.test(js)) {\n            triggerAutoPrint = true;\n            break;\n          }\n        }\n      }\n    }\n\n    if (triggerAutoPrint) {\n      this.triggerPrinting();\n    }\n  },\n\n  async _initializeMetadata(pdfDocument) {\n    const {\n      info,\n      metadata,\n      contentDispositionFilename,\n      contentLength\n    } = await pdfDocument.getMetadata();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n\n    this.documentInfo = info;\n    this.metadata = metadata;\n    this._contentDispositionFilename = contentDispositionFilename;\n    this._contentLength ||  (this._contentLength = contentLength); // ??\n    console.log(`PDF ${pdfDocument.fingerprint} [${info.PDFFormatVersion} ` + `${(info.Producer || \"-\").trim()} / ${(info.Creator || \"-\").trim()}] ` + `(PDF.js: ${_pdfjsLib.version || \"-\"}` + `${this.pdfViewer.enableWebGL ? \" [WebGL]\" : \"\"})`);\n    let pdfTitle;\n    const infoTitle = info && info.Title;\n\n    if (infoTitle) {\n      pdfTitle = infoTitle;\n    }\n\n    const metadataTitle = metadata && metadata.get(\"dc:title\");\n\n    if (metadataTitle) {\n      if (metadataTitle !== \"Untitled\" && !/[\\uFFF0-\\uFFFF]/g.test(metadataTitle)) {\n        pdfTitle = metadataTitle;\n      }\n    }\n\n    if (pdfTitle) {\n      this.setTitle(`${pdfTitle} - ${contentDispositionFilename || document.title}`);\n    } else if (contentDispositionFilename) {\n      this.setTitle(contentDispositionFilename);\n    }\n\n    if (info.IsXFAPresent && !info.IsAcroFormPresent) {\n      console.warn(\"Warning: XFA is not supported\");\n\n      this._delayedFallback(_pdfjsLib.UNSUPPORTED_FEATURES.forms);\n    } else if ((info.IsAcroFormPresent || info.IsXFAPresent) && !this.pdfViewer.renderInteractiveForms) {\n      console.warn(\"Warning: Interactive form support is not enabled\");\n\n      this._delayedFallback(_pdfjsLib.UNSUPPORTED_FEATURES.forms);\n    }\n\n    let versionId = \"other\";\n\n    if (KNOWN_VERSIONS.includes(info.PDFFormatVersion)) {\n      versionId = `v${info.PDFFormatVersion.replace(\".\", \"_\")}`;\n    }\n\n    let generatorId = \"other\";\n\n    if (info.Producer) {\n      const producer = info.Producer.toLowerCase();\n      KNOWN_GENERATORS.some(function (generator) {\n        if (!producer.includes(generator)) {\n          return false;\n        }\n\n        generatorId = generator.replace(/[ .-]/g, \"_\");\n        return true;\n      });\n    }\n\n    let formType = null;\n\n    if (info.IsXFAPresent) {\n      formType = \"xfa\";\n    } else if (info.IsAcroFormPresent) {\n      formType = \"acroform\";\n    }\n\n    this.externalServices.reportTelemetry({\n      type: \"documentInfo\",\n      version: versionId,\n      generator: generatorId,\n      formType\n    });\n    this.eventBus.dispatch(\"metadataloaded\", {\n      source: this\n    });\n  },\n\n  async _initializePageLabels(pdfDocument) {\n    const labels = await pdfDocument.getPageLabels();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n\n    if (!labels || _app_options.AppOptions.get(\"disablePageLabels\")) {\n      return;\n    }\n\n    const numLabels = labels.length;\n\n    if (numLabels !== this.pagesCount) {\n      console.error(\"The number of Page Labels does not match the number of pages in the document.\");\n      return;\n    }\n\n    let i = 0;\n\n    while (i < numLabels && labels[i] === (i + 1).toString()) {\n      i++;\n    }\n\n    if (i === numLabels) {\n      return;\n    }\n\n    const {\n      pdfViewer,\n      pdfThumbnailViewer,\n      toolbar\n    } = this;\n    pdfViewer.setPageLabels(labels);\n    pdfThumbnailViewer.setPageLabels(labels);\n    toolbar.setPagesCount(numLabels, true);\n    toolbar.setPageNumber(pdfViewer.currentPageNumber, pdfViewer.currentPageLabel);\n  },\n\n  _initializePdfHistory({\n    fingerprint,\n    viewOnLoad,\n    initialDest = null\n  }) {\n    if (this.isViewerEmbedded || _app_options.AppOptions.get(\"disableHistory\")) {\n      return;\n    }\n\n    this.pdfHistory.initialize({\n      fingerprint,\n      resetHistory: viewOnLoad === ViewOnLoad.INITIAL,\n      updateUrl: _app_options.AppOptions.get(\"historyUpdateUrl\")\n    });\n\n    if (this.pdfHistory.initialBookmark) {\n      this.initialBookmark = this.pdfHistory.initialBookmark;\n      this.initialRotation = this.pdfHistory.initialRotation;\n    }\n\n    if (initialDest && !this.initialBookmark && viewOnLoad === ViewOnLoad.UNKNOWN) {\n      this.initialBookmark = JSON.stringify(initialDest);\n      this.pdfHistory.push({\n        explicitDest: initialDest,\n        pageNumber: null\n      });\n    }\n  },\n\n  async _initializePermissions(pdfDocument) {\n    const permissions = await pdfDocument.getPermissions();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n\n    if (!permissions || !_app_options.AppOptions.get(\"enablePermissions\")) {\n      return;\n    }\n\n    if (!permissions.includes(_pdfjsLib.PermissionFlag.COPY)) {\n      this.appConfig.viewerContainer.classList.add(ENABLE_PERMISSIONS_CLASS);\n    }\n  },\n\n  _initializeAnnotationStorageCallbacks(pdfDocument) {\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n\n    const {\n      annotationStorage\n    } = pdfDocument;\n\n    annotationStorage.onSetModified = function () {\n      window.addEventListener(\"beforeunload\", beforeUnload);\n    };\n\n    annotationStorage.onResetModified = function () {\n      window.removeEventListener(\"beforeunload\", beforeUnload);\n    };\n  },\n\n  setInitialView(storedHash, {\n    rotation,\n    sidebarView,\n    scrollMode,\n    spreadMode\n  } = {}) {\n    const setRotation = angle => {\n      if ((0, _ui_utils.isValidRotation)(angle)) {\n        this.pdfViewer.pagesRotation = angle;\n      }\n    };\n\n    const setViewerModes = (scroll, spread) => {\n      if ((0, _ui_utils.isValidScrollMode)(scroll)) {\n        this.pdfViewer.scrollMode = scroll;\n      }\n\n      if ((0, _ui_utils.isValidSpreadMode)(spread)) {\n        this.pdfViewer.spreadMode = spread;\n      }\n    };\n\n    this.isInitialViewSet = true;\n    this.pdfSidebar.setInitialView(sidebarView);\n    setViewerModes(scrollMode, spreadMode);\n\n    if (this.initialBookmark) {\n      setRotation(this.initialRotation);\n      delete this.initialRotation;\n      this.pdfLinkService.setHash(this.initialBookmark);\n      this.initialBookmark = null;\n    } else if (storedHash) {\n      setRotation(rotation);\n      this.pdfLinkService.setHash(storedHash);\n    }\n\n    this.toolbar.setPageNumber(this.pdfViewer.currentPageNumber, this.pdfViewer.currentPageLabel);\n    this.secondaryToolbar.setPageNumber(this.pdfViewer.currentPageNumber);\n\n    if (!this.pdfViewer.currentScaleValue) {\n      this.pdfViewer.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n    }\n  },\n\n  cleanup() {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    this.pdfViewer.cleanup();\n    this.pdfThumbnailViewer.cleanup();\n\n    if (this.pdfViewer.renderer !== _ui_utils.RendererType.SVG) {\n      this.pdfDocument.cleanup();\n    }\n  },\n\n  forceRendering() {\n    this.pdfRenderingQueue.printing = !!this.printService;\n    this.pdfRenderingQueue.isThumbnailViewEnabled = this.pdfSidebar.isThumbnailViewVisible;\n    this.pdfRenderingQueue.renderHighestPriority();\n  },\n\n  beforePrint() {\n    this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({  //?\n      id: \"doc\",\n      name: \"WillPrint\"\n    });\n\n    if (this.printService) {\n      return;\n    }\n\n    if (!this.supportsPrinting) {\n      this.l10n.get(\"printing_not_supported\", null, \"Warning: Printing is not fully supported by this browser.\").then(printMessage => {\n        this.error(printMessage);\n      });\n      return;\n    }\n\n    if (!this.pdfViewer.pageViewsReady) {\n      this.l10n.get(\"printing_not_ready\", null, \"Warning: The PDF is not fully loaded for printing.\").then(notReadyMessage => {\n        window.alert(notReadyMessage);\n      });\n      return;\n    }\n\n    const pagesOverview = this.pdfViewer.getPagesOverview();\n    const printContainer = this.appConfig.printContainer;\n\n    const printResolution = _app_options.AppOptions.get(\"printResolution\");\n\n    const optionalContentConfigPromise = this.pdfViewer.optionalContentConfigPromise;\n    const printService = PDFPrintServiceFactory.instance.createPrintService(this.pdfDocument, pagesOverview, printContainer, printResolution, optionalContentConfigPromise, this.l10n);\n    this.printService = printService;\n    this.forceRendering();\n    printService.layout();\n    this.externalServices.reportTelemetry({\n      type: \"print\"\n    });\n  },\n\n  afterPrint() {\n    this._scriptingInstance && this._scriptingInstance.scripting.dispatchEventInSandbox({ //?.\n      id: \"doc\",\n      name: \"DidPrint\"\n    });\n\n    if (this.printService) {\n      this.printService.destroy();\n      this.printService = null;\n\n      if (this.pdfDocument) {\n        this.pdfDocument.annotationStorage.resetModified();\n      }\n    }\n\n    this.forceRendering();\n  },\n\n  rotatePages(delta) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    const newRotation = (this.pdfViewer.pagesRotation + 360 + delta) % 360;\n    this.pdfViewer.pagesRotation = newRotation;\n  },\n\n  requestPresentationMode() {\n    if (!this.pdfPresentationMode) {\n      return;\n    }\n\n    this.pdfPresentationMode.request();\n  },\n\n  triggerPrinting() {\n    if (!this.supportsPrinting) {\n      return;\n    }\n\n    window.print();\n  },\n\n  bindEvents() {\n    const {\n      eventBus,\n      _boundEvents\n    } = this;\n    _boundEvents.beforePrint = this.beforePrint.bind(this);\n    _boundEvents.afterPrint = this.afterPrint.bind(this);\n\n    eventBus._on(\"resize\", webViewerResize);\n\n    eventBus._on(\"hashchange\", webViewerHashchange);\n\n    eventBus._on(\"beforeprint\", _boundEvents.beforePrint);\n\n    eventBus._on(\"afterprint\", _boundEvents.afterPrint);\n\n    eventBus._on(\"pagerendered\", webViewerPageRendered);\n\n    eventBus._on(\"updateviewarea\", webViewerUpdateViewarea);\n\n    eventBus._on(\"pagechanging\", webViewerPageChanging);\n\n    eventBus._on(\"scalechanging\", webViewerScaleChanging);\n\n    eventBus._on(\"rotationchanging\", webViewerRotationChanging);\n\n    eventBus._on(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n\n    eventBus._on(\"pagemode\", webViewerPageMode);\n\n    eventBus._on(\"namedaction\", webViewerNamedAction);\n\n    eventBus._on(\"presentationmodechanged\", webViewerPresentationModeChanged);\n\n    eventBus._on(\"presentationmode\", webViewerPresentationMode);\n\n    eventBus._on(\"print\", webViewerPrint);\n\n    eventBus._on(\"download\", webViewerDownload);\n\n    eventBus._on(\"save\", webViewerSave);\n\n    eventBus._on(\"firstpage\", webViewerFirstPage);\n\n    eventBus._on(\"lastpage\", webViewerLastPage);\n\n    eventBus._on(\"nextpage\", webViewerNextPage);\n\n    eventBus._on(\"previouspage\", webViewerPreviousPage);\n\n    eventBus._on(\"zoomin\", webViewerZoomIn);\n\n    eventBus._on(\"zoomout\", webViewerZoomOut);\n\n    eventBus._on(\"zoomreset\", webViewerZoomReset);\n\n    eventBus._on(\"pagenumberchanged\", webViewerPageNumberChanged);\n\n    eventBus._on(\"scalechanged\", webViewerScaleChanged);\n\n    eventBus._on(\"rotatecw\", webViewerRotateCw);\n\n    eventBus._on(\"rotateccw\", webViewerRotateCcw);\n\n    eventBus._on(\"optionalcontentconfig\", webViewerOptionalContentConfig);\n\n    eventBus._on(\"switchscrollmode\", webViewerSwitchScrollMode);\n\n    eventBus._on(\"scrollmodechanged\", webViewerScrollModeChanged);\n\n    eventBus._on(\"switchspreadmode\", webViewerSwitchSpreadMode);\n\n    eventBus._on(\"spreadmodechanged\", webViewerSpreadModeChanged);\n\n    eventBus._on(\"documentproperties\", webViewerDocumentProperties);\n\n    eventBus._on(\"find\", webViewerFind);\n\n    eventBus._on(\"findfromurlhash\", webViewerFindFromUrlHash);\n\n    eventBus._on(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n\n    eventBus._on(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n\n    if (_app_options.AppOptions.get(\"pdfBug\")) {\n      _boundEvents.reportPageStatsPDFBug = reportPageStatsPDFBug;\n\n      eventBus._on(\"pagerendered\", _boundEvents.reportPageStatsPDFBug);\n\n      eventBus._on(\"pagechanging\", _boundEvents.reportPageStatsPDFBug);\n    }\n\n    eventBus._on(\"fileinputchange\", webViewerFileInputChange);\n\n    eventBus._on(\"openfile\", webViewerOpenFile);\n  },\n\n  bindWindowEvents() {\n    const {\n      eventBus,\n      _boundEvents\n    } = this;\n\n    _boundEvents.windowResize = () => {\n      eventBus.dispatch(\"resize\", {\n        source: window\n      });\n    };\n\n    _boundEvents.windowHashChange = () => {\n      eventBus.dispatch(\"hashchange\", {\n        source: window,\n        hash: document.location.hash.substring(1)\n      });\n    };\n\n    _boundEvents.windowBeforePrint = () => {\n      eventBus.dispatch(\"beforeprint\", {\n        source: window\n      });\n    };\n\n    _boundEvents.windowAfterPrint = () => {\n      eventBus.dispatch(\"afterprint\", {\n        source: window\n      });\n    };\n\n    _boundEvents.windowUpdateFromSandbox = event => {\n      eventBus.dispatch(\"updatefromsandbox\", {\n        source: window,\n        detail: event.detail\n      });\n    };\n\n    window.addEventListener(\"visibilitychange\", webViewerVisibilityChange);\n    window.addEventListener(\"wheel\", webViewerWheel, {\n      passive: false\n    });\n    window.addEventListener(\"touchstart\", webViewerTouchStart, {\n      passive: false\n    });\n    window.addEventListener(\"click\", webViewerClick);\n    window.addEventListener(\"keydown\", webViewerKeyDown);\n    window.addEventListener(\"keyup\", webViewerKeyUp);\n    window.addEventListener(\"resize\", _boundEvents.windowResize);\n    window.addEventListener(\"hashchange\", _boundEvents.windowHashChange);\n    window.addEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n    window.addEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n    window.addEventListener(\"updatefromsandbox\", _boundEvents.windowUpdateFromSandbox);\n  },\n\n  unbindEvents() {\n    const {\n      eventBus,\n      _boundEvents\n    } = this;\n\n    eventBus._off(\"resize\", webViewerResize);\n\n    eventBus._off(\"hashchange\", webViewerHashchange);\n\n    eventBus._off(\"beforeprint\", _boundEvents.beforePrint);\n\n    eventBus._off(\"afterprint\", _boundEvents.afterPrint);\n\n    eventBus._off(\"pagerendered\", webViewerPageRendered);\n\n    eventBus._off(\"updateviewarea\", webViewerUpdateViewarea);\n\n    eventBus._off(\"pagechanging\", webViewerPageChanging);\n\n    eventBus._off(\"scalechanging\", webViewerScaleChanging);\n\n    eventBus._off(\"rotationchanging\", webViewerRotationChanging);\n\n    eventBus._off(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n\n    eventBus._off(\"pagemode\", webViewerPageMode);\n\n    eventBus._off(\"namedaction\", webViewerNamedAction);\n\n    eventBus._off(\"presentationmodechanged\", webViewerPresentationModeChanged);\n\n    eventBus._off(\"presentationmode\", webViewerPresentationMode);\n\n    eventBus._off(\"print\", webViewerPrint);\n\n    eventBus._off(\"download\", webViewerDownload);\n\n    eventBus._off(\"save\", webViewerSave);\n\n    eventBus._off(\"firstpage\", webViewerFirstPage);\n\n    eventBus._off(\"lastpage\", webViewerLastPage);\n\n    eventBus._off(\"nextpage\", webViewerNextPage);\n\n    eventBus._off(\"previouspage\", webViewerPreviousPage);\n\n    eventBus._off(\"zoomin\", webViewerZoomIn);\n\n    eventBus._off(\"zoomout\", webViewerZoomOut);\n\n    eventBus._off(\"zoomreset\", webViewerZoomReset);\n\n    eventBus._off(\"pagenumberchanged\", webViewerPageNumberChanged);\n\n    eventBus._off(\"scalechanged\", webViewerScaleChanged);\n\n    eventBus._off(\"rotatecw\", webViewerRotateCw);\n\n    eventBus._off(\"rotateccw\", webViewerRotateCcw);\n\n    eventBus._off(\"optionalcontentconfig\", webViewerOptionalContentConfig);\n\n    eventBus._off(\"switchscrollmode\", webViewerSwitchScrollMode);\n\n    eventBus._off(\"scrollmodechanged\", webViewerScrollModeChanged);\n\n    eventBus._off(\"switchspreadmode\", webViewerSwitchSpreadMode);\n\n    eventBus._off(\"spreadmodechanged\", webViewerSpreadModeChanged);\n\n    eventBus._off(\"documentproperties\", webViewerDocumentProperties);\n\n    eventBus._off(\"find\", webViewerFind);\n\n    eventBus._off(\"findfromurlhash\", webViewerFindFromUrlHash);\n\n    eventBus._off(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n\n    eventBus._off(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n\n    if (_boundEvents.reportPageStatsPDFBug) {\n      eventBus._off(\"pagerendered\", _boundEvents.reportPageStatsPDFBug);\n\n      eventBus._off(\"pagechanging\", _boundEvents.reportPageStatsPDFBug);\n\n      _boundEvents.reportPageStatsPDFBug = null;\n    }\n\n    eventBus._off(\"fileinputchange\", webViewerFileInputChange);\n\n    eventBus._off(\"openfile\", webViewerOpenFile);\n\n    _boundEvents.beforePrint = null;\n    _boundEvents.afterPrint = null;\n  },\n\n  unbindWindowEvents() {\n    const {\n      _boundEvents\n    } = this;\n    window.removeEventListener(\"visibilitychange\", webViewerVisibilityChange);\n    window.removeEventListener(\"wheel\", webViewerWheel, {\n      passive: false\n    });\n    window.removeEventListener(\"touchstart\", webViewerTouchStart, {\n      passive: false\n    });\n    window.removeEventListener(\"click\", webViewerClick);\n    window.removeEventListener(\"keydown\", webViewerKeyDown);\n    window.removeEventListener(\"keyup\", webViewerKeyUp);\n    window.removeEventListener(\"resize\", _boundEvents.windowResize);\n    window.removeEventListener(\"hashchange\", _boundEvents.windowHashChange);\n    window.removeEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n    window.removeEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n    window.removeEventListener(\"updatefromsandbox\", _boundEvents.windowUpdateFromSandbox);\n    _boundEvents.windowResize = null;\n    _boundEvents.windowHashChange = null;\n    _boundEvents.windowBeforePrint = null;\n    _boundEvents.windowAfterPrint = null;\n    _boundEvents.windowUpdateFromSandbox = null;\n  },\n\n  accumulateWheelTicks(ticks) {\n    if (this._wheelUnusedTicks > 0 && ticks < 0 || this._wheelUnusedTicks < 0 && ticks > 0) {\n      this._wheelUnusedTicks = 0;\n    }\n\n    this._wheelUnusedTicks += ticks;\n    const wholeTicks = Math.sign(this._wheelUnusedTicks) * Math.floor(Math.abs(this._wheelUnusedTicks));\n    this._wheelUnusedTicks -= wholeTicks;\n    return wholeTicks;\n  },\n\n  get scriptingReady() {\n    return this._scriptingInstance && this._scriptingInstance.ready || false;  //?.\n  }\n\n};\nexports.PDFViewerApplication = PDFViewerApplication;\nlet validateFileURL;\n{\n  const HOSTED_VIEWER_ORIGINS = [\"null\", \"http://mozilla.github.io\", \"https://mozilla.github.io\"];\n\n  validateFileURL = function (file) {\n    if (file === undefined) {\n      return;\n    }\n\n    try {\n      const viewerOrigin = new URL(window.location.href).origin || \"null\";\n\n      if (HOSTED_VIEWER_ORIGINS.includes(viewerOrigin)) {\n        return;\n      }\n\n      const {\n        origin,\n        protocol\n      } = new URL(file, window.location.href);\n\n      if (origin !== viewerOrigin && protocol !== \"blob:\") {\n        throw new Error(\"file origin does not match viewer's\");\n      }\n    } catch (ex) {\n      const message = ex && ex.message;\n      PDFViewerApplication.l10n.get(\"loading_error\", null, \"An error occurred while loading the PDF.\").then(loadingErrorMessage => {\n        PDFViewerApplication.error(loadingErrorMessage, {\n          message\n        });\n      });\n      throw ex;\n    }\n  };\n}\n\nasync function loadFakeWorker() {\n  if (!_pdfjsLib.GlobalWorkerOptions.workerSrc) {\n    _pdfjsLib.GlobalWorkerOptions.workerSrc = _app_options.AppOptions.get(\"workerSrc\");\n  }\n\n  return (0, _pdfjsLib.loadScript)(_pdfjsLib.PDFWorker.getWorkerSrc());\n}\n\nfunction loadAndEnablePDFBug(enabledTabs) {\n  const appConfig = PDFViewerApplication.appConfig;\n  return (0, _pdfjsLib.loadScript)(appConfig.debuggerScriptPath).then(function () {\n    PDFBug.enable(enabledTabs);\n    PDFBug.init({\n      OPS: _pdfjsLib.OPS\n    }, appConfig.mainContainer);\n  });\n}\n\nfunction reportPageStatsPDFBug({\n  pageNumber\n}) {\n  if (typeof Stats === \"undefined\" || !Stats.enabled) {\n    return;\n  }\n\n  const pageView = PDFViewerApplication.pdfViewer.getPageView(pageNumber - 1);\n  const pageStats = pageView && pageView.pdfPage && pageView.pdfPage.stats;\n\n  if (!pageStats) {\n    return;\n  }\n\n  Stats.add(pageNumber, pageStats);\n}\n\nfunction webViewerInitialized() {\n  const appConfig = PDFViewerApplication.appConfig;\n  let file;\n  const queryString = document.location.search.substring(1);\n  const params = (0, _ui_utils.parseQueryString)(queryString);\n  file = \"file\" in params ? params.file : _app_options.AppOptions.get(\"defaultUrl\");\n  validateFileURL(file);\n  const fileInput = document.createElement(\"input\");\n  fileInput.id = appConfig.openFileInputName;\n  fileInput.className = \"fileInput\";\n  fileInput.setAttribute(\"type\", \"file\");\n  fileInput.oncontextmenu = _ui_utils.noContextMenuHandler;\n  document.body.appendChild(fileInput);\n\n  if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {\n    appConfig.toolbar.openFile.setAttribute(\"hidden\", \"true\");\n    appConfig.secondaryToolbar.openFileButton.setAttribute(\"hidden\", \"true\");\n  } else {\n    fileInput.value = null;\n  }\n\n  fileInput.addEventListener(\"change\", function (evt) {\n    const files = evt.target.files;\n\n    if (!files || files.length === 0) {\n      return;\n    }\n\n    PDFViewerApplication.eventBus.dispatch(\"fileinputchange\", {\n      source: this,\n      fileInput: evt.target\n    });\n  });\n  appConfig.mainContainer.addEventListener(\"dragover\", function (evt) {\n    evt.preventDefault();\n    evt.dataTransfer.dropEffect = \"move\";\n  });\n  appConfig.mainContainer.addEventListener(\"drop\", function (evt) {\n    evt.preventDefault();\n    const files = evt.dataTransfer.files;\n\n    if (!files || files.length === 0) {\n      return;\n    }\n\n    PDFViewerApplication.eventBus.dispatch(\"fileinputchange\", {\n      source: this,\n      fileInput: evt.dataTransfer\n    });\n  });\n\n  if (!PDFViewerApplication.supportsDocumentFonts) {\n    _app_options.AppOptions.set(\"disableFontFace\", true);\n\n    PDFViewerApplication.l10n.get(\"web_fonts_disabled\", null, \"Web fonts are disabled: unable to use embedded PDF fonts.\").then(msg => {\n      console.warn(msg);\n    });\n  }\n\n  if (!PDFViewerApplication.supportsPrinting) {\n    appConfig.toolbar.print.classList.add(\"hidden\");\n    appConfig.secondaryToolbar.printButton.classList.add(\"hidden\");\n  }\n\n  if (!PDFViewerApplication.supportsFullscreen) {\n    appConfig.toolbar.presentationModeButton.classList.add(\"hidden\");\n    appConfig.secondaryToolbar.presentationModeButton.classList.add(\"hidden\");\n  }\n\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    appConfig.toolbar.viewFind.classList.add(\"hidden\");\n  }\n\n  appConfig.mainContainer.addEventListener(\"transitionend\", function (evt) {\n    if (evt.target === this) {\n      PDFViewerApplication.eventBus.dispatch(\"resize\", {\n        source: this\n      });\n    }\n  }, true);\n\n  try {\n    webViewerOpenFileViaURL(file);\n  } catch (reason) {\n    PDFViewerApplication.l10n.get(\"loading_error\", null, \"An error occurred while loading the PDF.\").then(msg => {\n      PDFViewerApplication.error(msg, reason);\n    });\n  }\n}\n\nlet webViewerOpenFileViaURL;\n{\n  webViewerOpenFileViaURL = function (file) {\n    if (file && file.lastIndexOf(\"file:\", 0) === 0) {\n      PDFViewerApplication.setTitleUsingUrl(file);\n      const xhr = new XMLHttpRequest();\n\n      xhr.onload = function () {\n        PDFViewerApplication.open(new Uint8Array(xhr.response));\n      };\n\n      xhr.open(\"GET\", file);\n      xhr.responseType = \"arraybuffer\";\n      xhr.send();\n      return;\n    }\n\n    if (file) {\n      PDFViewerApplication.open(file);\n    }\n  };\n}\n\nfunction webViewerResetPermissions() {\n  const {\n    appConfig\n  } = PDFViewerApplication;\n\n  if (!appConfig) {\n    return;\n  }\n\n  appConfig.viewerContainer.classList.remove(ENABLE_PERMISSIONS_CLASS);\n}\n\nfunction webViewerPageRendered({\n  pageNumber,\n  timestamp,\n  error\n}) {\n  if (pageNumber === PDFViewerApplication.page) {\n    PDFViewerApplication.toolbar.updateLoadingIndicatorState(false);\n  }\n\n  if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n    const pageView = PDFViewerApplication.pdfViewer.getPageView(pageNumber - 1);\n    const thumbnailView = PDFViewerApplication.pdfThumbnailViewer.getThumbnail(pageNumber - 1);\n\n    if (pageView && thumbnailView) {\n      thumbnailView.setImage(pageView);\n    }\n  }\n\n  if (error) {\n    PDFViewerApplication.l10n.get(\"rendering_error\", null, \"An error occurred while rendering the page.\").then(msg => {\n      PDFViewerApplication.error(msg, error);\n    });\n  }\n\n  PDFViewerApplication.externalServices.reportTelemetry({\n    type: \"pageInfo\",\n    timestamp\n  });\n  PDFViewerApplication.pdfDocument.getStats().then(function (stats) {\n    PDFViewerApplication.externalServices.reportTelemetry({\n      type: \"documentStats\",\n      stats\n    });\n  });\n}\n\nfunction webViewerPageMode({\n  mode\n}) {\n  let view;\n\n  switch (mode) {\n    case \"thumbs\":\n      view = _ui_utils.SidebarView.THUMBS;\n      break;\n\n    case \"bookmarks\":\n    case \"outline\":\n      view = _ui_utils.SidebarView.OUTLINE;\n      break;\n\n    case \"attachments\":\n      view = _ui_utils.SidebarView.ATTACHMENTS;\n      break;\n\n    case \"layers\":\n      view = _ui_utils.SidebarView.LAYERS;\n      break;\n\n    case \"none\":\n      view = _ui_utils.SidebarView.NONE;\n      break;\n\n    default:\n      console.error('Invalid \"pagemode\" hash parameter: ' + mode);\n      return;\n  }\n\n  PDFViewerApplication.pdfSidebar.switchView(view, true);\n}\n\nfunction webViewerNamedAction(evt) {\n  switch (evt.action) {\n    case \"GoToPage\":\n      PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n      break;\n\n    case \"Find\":\n      if (!PDFViewerApplication.supportsIntegratedFind) {\n        PDFViewerApplication.findBar.toggle();\n      }\n\n      break;\n\n    case \"Print\":\n      PDFViewerApplication.triggerPrinting();\n      break;\n\n    case \"SaveAs\":\n      webViewerSave();\n      break;\n  }\n}\n\nfunction webViewerPresentationModeChanged(evt) {\n  PDFViewerApplication.pdfViewer.presentationModeState = evt.state;\n}\n\nfunction webViewerSidebarViewChanged(evt) {\n  PDFViewerApplication.pdfRenderingQueue.isThumbnailViewEnabled = PDFViewerApplication.pdfSidebar.isThumbnailViewVisible;\n  const store = PDFViewerApplication.store;\n\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    store.set(\"sidebarView\", evt.view).catch(function () {});\n  }\n}\n\nfunction webViewerUpdateViewarea(evt) {\n  const location = evt.location,\n        store = PDFViewerApplication.store;\n\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    store.setMultiple({\n      page: location.pageNumber,\n      zoom: location.scale,\n      scrollLeft: location.left,\n      scrollTop: location.top,\n      rotation: location.rotation\n    }).catch(function () {});\n  }\n\n  const href = PDFViewerApplication.pdfLinkService.getAnchorUrl(location.pdfOpenParams);\n  PDFViewerApplication.appConfig.toolbar.viewBookmark.href = href;\n  PDFViewerApplication.appConfig.secondaryToolbar.viewBookmarkButton.href = href;\n  const currentPage = PDFViewerApplication.pdfViewer.getPageView(PDFViewerApplication.page - 1);\n  const loading = (currentPage && currentPage.renderingState) !== _pdf_rendering_queue.RenderingStates.FINISHED;\n  PDFViewerApplication.toolbar.updateLoadingIndicatorState(loading);\n}\n\nfunction webViewerScrollModeChanged(evt) {\n  const store = PDFViewerApplication.store;\n\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    store.set(\"scrollMode\", evt.mode).catch(function () {});\n  }\n}\n\nfunction webViewerSpreadModeChanged(evt) {\n  const store = PDFViewerApplication.store;\n\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    store.set(\"spreadMode\", evt.mode).catch(function () {});\n  }\n}\n\nfunction webViewerResize() {\n  const {\n    pdfDocument,\n    pdfViewer\n  } = PDFViewerApplication;\n\n  if (!pdfDocument) {\n    return;\n  }\n\n  const currentScaleValue = pdfViewer.currentScaleValue;\n\n  if (currentScaleValue === \"auto\" || currentScaleValue === \"page-fit\" || currentScaleValue === \"page-width\") {\n    pdfViewer.currentScaleValue = currentScaleValue;\n  }\n\n  pdfViewer.update();\n}\n\nfunction webViewerHashchange(evt) {\n  const hash = evt.hash;\n\n  if (!hash) {\n    return;\n  }\n\n  if (!PDFViewerApplication.isInitialViewSet) {\n    PDFViewerApplication.initialBookmark = hash;\n  } else if (!PDFViewerApplication.pdfHistory.popStateInProgress) {\n    PDFViewerApplication.pdfLinkService.setHash(hash);\n  }\n}\n\nlet webViewerFileInputChange, webViewerOpenFile;\n{\n  webViewerFileInputChange = function (evt) {\n    if (PDFViewerApplication.pdfViewer && PDFViewerApplication.pdfViewer.isInPresentationMode) {\n      return;\n    }\n\n    const file = evt.fileInput.files[0];\n\n    if (!_viewer_compatibility.viewerCompatibilityParams.disableCreateObjectURL) {\n      let url = URL.createObjectURL(file);\n\n      if (file.name) {\n        url = {\n          url,\n          originalUrl: file.name\n        };\n      }\n\n      PDFViewerApplication.open(url);\n    } else {\n      PDFViewerApplication.setTitleUsingUrl(file.name);\n      const fileReader = new FileReader();\n\n      fileReader.onload = function webViewerChangeFileReaderOnload(event) {\n        const buffer = event.target.result;\n        PDFViewerApplication.open(new Uint8Array(buffer));\n      };\n\n      fileReader.readAsArrayBuffer(file);\n    }\n\n    const appConfig = PDFViewerApplication.appConfig;\n    appConfig.toolbar.viewBookmark.setAttribute(\"hidden\", \"true\");\n    appConfig.secondaryToolbar.viewBookmarkButton.setAttribute(\"hidden\", \"true\");\n    appConfig.toolbar.download.setAttribute(\"hidden\", \"true\");\n    appConfig.secondaryToolbar.downloadButton.setAttribute(\"hidden\", \"true\");\n  };\n\n  webViewerOpenFile = function (evt) {\n    const openFileInputName = PDFViewerApplication.appConfig.openFileInputName;\n    document.getElementById(openFileInputName).click();\n  };\n}\n\nfunction webViewerPresentationMode() {\n  PDFViewerApplication.requestPresentationMode();\n}\n\nfunction webViewerPrint() {\n  PDFViewerApplication.triggerPrinting();\n}\n\nfunction webViewerDownload() {\n  PDFViewerApplication.downloadOrSave({\n    sourceEventType: \"download\"\n  });\n}\n\nfunction webViewerSave() {\n  PDFViewerApplication.downloadOrSave({\n    sourceEventType: \"save\"\n  });\n}\n\nfunction webViewerFirstPage() {\n  if (PDFViewerApplication.pdfDocument) {\n    PDFViewerApplication.page = 1;\n  }\n}\n\nfunction webViewerLastPage() {\n  if (PDFViewerApplication.pdfDocument) {\n    PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n  }\n}\n\nfunction webViewerNextPage() {\n  PDFViewerApplication.pdfViewer.nextPage();\n}\n\nfunction webViewerPreviousPage() {\n  PDFViewerApplication.pdfViewer.previousPage();\n}\n\nfunction webViewerZoomIn() {\n  PDFViewerApplication.zoomIn();\n}\n\nfunction webViewerZoomOut() {\n  PDFViewerApplication.zoomOut();\n}\n\nfunction webViewerZoomReset() {\n  PDFViewerApplication.zoomReset();\n}\n\nfunction webViewerPageNumberChanged(evt) {\n  const pdfViewer = PDFViewerApplication.pdfViewer;\n\n  if (evt.value !== \"\") {\n    PDFViewerApplication.pdfLinkService.goToPage(evt.value);\n  }\n\n  if (evt.value !== pdfViewer.currentPageNumber.toString() && evt.value !== pdfViewer.currentPageLabel) {\n    PDFViewerApplication.toolbar.setPageNumber(pdfViewer.currentPageNumber, pdfViewer.currentPageLabel);\n  }\n}\n\nfunction webViewerScaleChanged(evt) {\n  PDFViewerApplication.pdfViewer.currentScaleValue = evt.value;\n}\n\nfunction webViewerRotateCw() {\n  PDFViewerApplication.rotatePages(90);\n}\n\nfunction webViewerRotateCcw() {\n  PDFViewerApplication.rotatePages(-90);\n}\n\nfunction webViewerOptionalContentConfig(evt) {\n  PDFViewerApplication.pdfViewer.optionalContentConfigPromise = evt.promise;\n}\n\nfunction webViewerSwitchScrollMode(evt) {\n  PDFViewerApplication.pdfViewer.scrollMode = evt.mode;\n}\n\nfunction webViewerSwitchSpreadMode(evt) {\n  PDFViewerApplication.pdfViewer.spreadMode = evt.mode;\n}\n\nfunction webViewerDocumentProperties() {\n  PDFViewerApplication.pdfDocumentProperties.open();\n}\n\nfunction webViewerFind(evt) {\n  PDFViewerApplication.findController.executeCommand(\"find\" + evt.type, {\n    query: evt.query,\n    phraseSearch: evt.phraseSearch,\n    caseSensitive: evt.caseSensitive,\n    entireWord: evt.entireWord,\n    highlightAll: evt.highlightAll,\n    findPrevious: evt.findPrevious\n  });\n}\n\nfunction webViewerFindFromUrlHash(evt) {\n  PDFViewerApplication.findController.executeCommand(\"find\", {\n    query: evt.query,\n    phraseSearch: evt.phraseSearch,\n    caseSensitive: false,\n    entireWord: false,\n    highlightAll: true,\n    findPrevious: false\n  });\n}\n\nfunction webViewerUpdateFindMatchesCount({\n  matchesCount\n}) {\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    PDFViewerApplication.externalServices.updateFindMatchesCount(matchesCount);\n  } else {\n    PDFViewerApplication.findBar.updateResultsCount(matchesCount);\n  }\n}\n\nfunction webViewerUpdateFindControlState({\n  state,\n  previous,\n  matchesCount,\n  rawQuery\n}) {\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    PDFViewerApplication.externalServices.updateFindControlState({\n      result: state,\n      findPrevious: previous,\n      matchesCount,\n      rawQuery\n    });\n  } else {\n    PDFViewerApplication.findBar.updateUIState(state, previous, matchesCount);\n  }\n}\n\nfunction webViewerScaleChanging(evt) {\n  PDFViewerApplication.toolbar.setPageScale(evt.presetValue, evt.scale);\n  PDFViewerApplication.pdfViewer.update();\n}\n\nfunction webViewerRotationChanging(evt) {\n  PDFViewerApplication.pdfThumbnailViewer.pagesRotation = evt.pagesRotation;\n  PDFViewerApplication.forceRendering();\n  PDFViewerApplication.pdfViewer.currentPageNumber = evt.pageNumber;\n}\n\nfunction webViewerPageChanging({\n  pageNumber,\n  pageLabel\n}) {\n  PDFViewerApplication.toolbar.setPageNumber(pageNumber, pageLabel);\n  PDFViewerApplication.secondaryToolbar.setPageNumber(pageNumber);\n\n  if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n    PDFViewerApplication.pdfThumbnailViewer.scrollThumbnailIntoView(pageNumber);\n  }\n}\n\nfunction webViewerVisibilityChange(evt) {\n  if (document.visibilityState === \"visible\") {\n    setZoomDisabledTimeout();\n  }\n}\n\nlet zoomDisabledTimeout = null;\n\nfunction setZoomDisabledTimeout() {\n  if (zoomDisabledTimeout) {\n    clearTimeout(zoomDisabledTimeout);\n  }\n\n  zoomDisabledTimeout = setTimeout(function () {\n    zoomDisabledTimeout = null;\n  }, WHEEL_ZOOM_DISABLED_TIMEOUT);\n}\n\nfunction webViewerWheel(evt) {\n  const {\n    pdfViewer,\n    supportedMouseWheelZoomModifierKeys\n  } = PDFViewerApplication;\n\n  if (pdfViewer.isInPresentationMode) {\n    return;\n  }\n\n  if (evt.ctrlKey && supportedMouseWheelZoomModifierKeys.ctrlKey || evt.metaKey && supportedMouseWheelZoomModifierKeys.metaKey) {\n    evt.preventDefault();\n\n    if (zoomDisabledTimeout || document.visibilityState === \"hidden\") {\n      return;\n    }\n\n    const previousScale = pdfViewer.currentScale;\n    const delta = (0, _ui_utils.normalizeWheelEventDirection)(evt);\n    let ticks = 0;\n\n    if (evt.deltaMode === WheelEvent.DOM_DELTA_LINE || evt.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      if (Math.abs(delta) >= 1) {\n        ticks = Math.sign(delta);\n      } else {\n        ticks = PDFViewerApplication.accumulateWheelTicks(delta);\n      }\n    } else {\n      const PIXELS_PER_LINE_SCALE = 30;\n      ticks = PDFViewerApplication.accumulateWheelTicks(delta / PIXELS_PER_LINE_SCALE);\n    }\n\n    if (ticks < 0) {\n      PDFViewerApplication.zoomOut(-ticks);\n    } else if (ticks > 0) {\n      PDFViewerApplication.zoomIn(ticks);\n    }\n\n    const currentScale = pdfViewer.currentScale;\n\n    if (previousScale !== currentScale) {\n      const scaleCorrectionFactor = currentScale / previousScale - 1;\n      const rect = pdfViewer.container.getBoundingClientRect();\n      const dx = evt.clientX - rect.left;\n      const dy = evt.clientY - rect.top;\n      pdfViewer.container.scrollLeft += dx * scaleCorrectionFactor;\n      pdfViewer.container.scrollTop += dy * scaleCorrectionFactor;\n    }\n  } else {\n    setZoomDisabledTimeout();\n  }\n}\n\nfunction webViewerTouchStart(evt) {\n  if (evt.touches.length > 1) {\n    evt.preventDefault();\n  }\n}\n\nfunction webViewerClick(evt) {\n  if (PDFViewerApplication.triggerDelayedFallback && PDFViewerApplication.pdfViewer.containsElement(evt.target)) {\n    PDFViewerApplication.triggerDelayedFallback();\n  }\n\n  if (!PDFViewerApplication.secondaryToolbar.isOpen) {\n    return;\n  }\n\n  const appConfig = PDFViewerApplication.appConfig;\n\n  if (PDFViewerApplication.pdfViewer.containsElement(evt.target) || appConfig.toolbar.container.contains(evt.target) && evt.target !== appConfig.secondaryToolbar.toggleButton) {\n    PDFViewerApplication.secondaryToolbar.close();\n  }\n}\n\nfunction webViewerKeyUp(evt) {\n  if (evt.keyCode === 9) {\n    if (PDFViewerApplication.triggerDelayedFallback) {\n      PDFViewerApplication.triggerDelayedFallback();\n    }\n  }\n}\n\nfunction webViewerKeyDown(evt) {\n  if (PDFViewerApplication.overlayManager.active) {\n    return;\n  }\n\n  let handled = false,\n      ensureViewerFocused = false;\n  const cmd = (evt.ctrlKey ? 1 : 0) | (evt.altKey ? 2 : 0) | (evt.shiftKey ? 4 : 0) | (evt.metaKey ? 8 : 0);\n  const pdfViewer = PDFViewerApplication.pdfViewer;\n  const isViewerInPresentationMode = pdfViewer && pdfViewer.isInPresentationMode;\n\n  if (cmd === 1 || cmd === 8 || cmd === 5 || cmd === 12) {\n    switch (evt.keyCode) {\n      case 70:\n        if (!PDFViewerApplication.supportsIntegratedFind && !evt.shiftKey) {\n          PDFViewerApplication.findBar.open();\n          handled = true;\n        }\n\n        break;\n\n      case 71:\n        if (!PDFViewerApplication.supportsIntegratedFind) {\n          const findState = PDFViewerApplication.findController.state;\n\n          if (findState) {\n            PDFViewerApplication.findController.executeCommand(\"findagain\", {\n              query: findState.query,\n              phraseSearch: findState.phraseSearch,\n              caseSensitive: findState.caseSensitive,\n              entireWord: findState.entireWord,\n              highlightAll: findState.highlightAll,\n              findPrevious: cmd === 5 || cmd === 12\n            });\n          }\n\n          handled = true;\n        }\n\n        break;\n\n      case 61:\n      case 107:\n      case 187:\n      case 171:\n        if (!isViewerInPresentationMode) {\n          PDFViewerApplication.zoomIn();\n        }\n\n        handled = true;\n        break;\n\n      case 173:\n      case 109:\n      case 189:\n        if (!isViewerInPresentationMode) {\n          PDFViewerApplication.zoomOut();\n        }\n\n        handled = true;\n        break;\n\n      case 48:\n      case 96:\n        if (!isViewerInPresentationMode) {\n          setTimeout(function () {\n            PDFViewerApplication.zoomReset();\n          });\n          handled = false;\n        }\n\n        break;\n\n      case 38:\n        if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n\n        break;\n\n      case 40:\n        if (isViewerInPresentationMode || PDFViewerApplication.page < PDFViewerApplication.pagesCount) {\n          PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n\n        break;\n    }\n  }\n\n  const {\n    eventBus\n  } = PDFViewerApplication;\n\n  if (cmd === 1 || cmd === 8) {\n    switch (evt.keyCode) {\n      case 83:\n        eventBus.dispatch(\"download\", {\n          source: window\n        });\n        handled = true;\n        break;\n\n      case 79:\n        {\n          eventBus.dispatch(\"openfile\", {\n            source: window\n          });\n          handled = true;\n        }\n        break;\n    }\n  }\n\n  if (cmd === 3 || cmd === 10) {\n    switch (evt.keyCode) {\n      case 80:\n        PDFViewerApplication.requestPresentationMode();\n        handled = true;\n        break;\n\n      case 71:\n        PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n        handled = true;\n        break;\n    }\n  }\n\n  if (handled) {\n    if (ensureViewerFocused && !isViewerInPresentationMode) {\n      pdfViewer.focus();\n    }\n\n    evt.preventDefault();\n    return;\n  }\n\n  const curElement = (0, _ui_utils.getActiveOrFocusedElement)();\n  const curElementTagName = curElement && curElement.tagName.toUpperCase();\n\n  if (curElementTagName === \"INPUT\" || curElementTagName === \"TEXTAREA\" || curElementTagName === \"SELECT\" || curElement && curElement.isContentEditable) {\n    if (evt.keyCode !== 27) {\n      return;\n    }\n  }\n\n  if (cmd === 0) {\n    let turnPage = 0,\n        turnOnlyIfPageFit = false;\n\n    switch (evt.keyCode) {\n      case 38:\n      case 33:\n        if (pdfViewer.isVerticalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n\n        turnPage = -1;\n        break;\n\n      case 8:\n        if (!isViewerInPresentationMode) {\n          turnOnlyIfPageFit = true;\n        }\n\n        turnPage = -1;\n        break;\n\n      case 37:\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n\n      case 75:\n      case 80:\n        turnPage = -1;\n        break;\n\n      case 27:\n        if (PDFViewerApplication.secondaryToolbar.isOpen) {\n          PDFViewerApplication.secondaryToolbar.close();\n          handled = true;\n        }\n\n        if (!PDFViewerApplication.supportsIntegratedFind && PDFViewerApplication.findBar.opened) {\n          PDFViewerApplication.findBar.close();\n          handled = true;\n        }\n\n        break;\n\n      case 40:\n      case 34:\n        if (pdfViewer.isVerticalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n\n        turnPage = 1;\n        break;\n\n      case 13:\n      case 32:\n        if (!isViewerInPresentationMode) {\n          turnOnlyIfPageFit = true;\n        }\n\n        turnPage = 1;\n        break;\n\n      case 39:\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n\n      case 74:\n      case 78:\n        turnPage = 1;\n        break;\n\n      case 36:\n        if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n\n        break;\n\n      case 35:\n        if (isViewerInPresentationMode || PDFViewerApplication.page < PDFViewerApplication.pagesCount) {\n          PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n\n        break;\n\n      case 83:\n        PDFViewerApplication.pdfCursorTools.switchTool(_pdf_cursor_tools.CursorTool.SELECT);\n        break;\n\n      case 72:\n        PDFViewerApplication.pdfCursorTools.switchTool(_pdf_cursor_tools.CursorTool.HAND);\n        break;\n\n      case 82:\n        PDFViewerApplication.rotatePages(90);\n        break;\n\n      case 115:\n        PDFViewerApplication.pdfSidebar.toggle();\n        break;\n    }\n\n    if (turnPage !== 0 && (!turnOnlyIfPageFit || pdfViewer.currentScaleValue === \"page-fit\")) {\n      if (turnPage > 0) {\n        pdfViewer.nextPage();\n      } else {\n        pdfViewer.previousPage();\n      }\n\n      handled = true;\n    }\n  }\n\n  if (cmd === 4) {\n    switch (evt.keyCode) {\n      case 13:\n      case 32:\n        if (!isViewerInPresentationMode && pdfViewer.currentScaleValue !== \"page-fit\") {\n          break;\n        }\n\n        if (PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page--;\n        }\n\n        handled = true;\n        break;\n\n      case 82:\n        PDFViewerApplication.rotatePages(-90);\n        break;\n    }\n  }\n\n  if (!handled && !isViewerInPresentationMode) {\n    if (evt.keyCode >= 33 && evt.keyCode <= 40 || evt.keyCode === 32 && curElementTagName !== \"BUTTON\") {\n      ensureViewerFocused = true;\n    }\n  }\n\n  if (ensureViewerFocused && !pdfViewer.containsElement(curElement)) {\n    pdfViewer.focus();\n  }\n\n  if (handled) {\n    evt.preventDefault();\n  }\n}\n\nfunction beforeUnload(evt) {\n  evt.preventDefault();\n  evt.returnValue = \"\";\n  return false;\n}\n\nfunction apiPageLayoutToSpreadMode(layout) {\n  switch (layout) {\n    case \"SinglePage\":\n    case \"OneColumn\":\n      return _ui_utils.SpreadMode.NONE;\n\n    case \"TwoColumnLeft\":\n    case \"TwoPageLeft\":\n      return _ui_utils.SpreadMode.ODD;\n\n    case \"TwoColumnRight\":\n    case \"TwoPageRight\":\n      return _ui_utils.SpreadMode.EVEN;\n  }\n\n  return _ui_utils.SpreadMode.NONE;\n}\n\nfunction apiPageModeToSidebarView(mode) {\n  switch (mode) {\n    case \"UseNone\":\n      return _ui_utils.SidebarView.NONE;\n\n    case \"UseThumbs\":\n      return _ui_utils.SidebarView.THUMBS;\n\n    case \"UseOutlines\":\n      return _ui_utils.SidebarView.OUTLINE;\n\n    case \"UseAttachments\":\n      return _ui_utils.SidebarView.ATTACHMENTS;\n\n    case \"UseOC\":\n      return _ui_utils.SidebarView.LAYERS;\n  }\n\n  return _ui_utils.SidebarView.NONE;\n}\n\nconst PDFPrintServiceFactory = {\n  instance: {\n    supportsPrinting: false,\n\n    createPrintService() {\n      throw new Error(\"Not implemented: createPrintService\");\n    }\n\n  }\n};\nexports.PDFPrintServiceFactory = PDFPrintServiceFactory;\n\n/***/ }),\n/* 4 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.approximateFraction = approximateFraction;\nexports.backtrackBeforeAllVisibleElements = backtrackBeforeAllVisibleElements;\nexports.binarySearchFirstItem = binarySearchFirstItem;\nexports.getActiveOrFocusedElement = getActiveOrFocusedElement;\nexports.getOutputScale = getOutputScale;\nexports.getPageSizeInches = getPageSizeInches;\nexports.getPDFFileNameFromURL = getPDFFileNameFromURL;\nexports.getVisibleElements = getVisibleElements;\nexports.isPortraitOrientation = isPortraitOrientation;\nexports.isValidRotation = isValidRotation;\nexports.isValidScrollMode = isValidScrollMode;\nexports.isValidSpreadMode = isValidSpreadMode;\nexports.moveToEndOfArray = moveToEndOfArray;\nexports.noContextMenuHandler = noContextMenuHandler;\nexports.normalizeWheelEventDelta = normalizeWheelEventDelta;\nexports.normalizeWheelEventDirection = normalizeWheelEventDirection;\nexports.parseQueryString = parseQueryString;\nexports.roundToDivide = roundToDivide;\nexports.scrollIntoView = scrollIntoView;\nexports.waitOnEventOrTimeout = waitOnEventOrTimeout;\nexports.watchScroll = watchScroll;\nexports.WaitOnType = exports.VERTICAL_PADDING = exports.UNKNOWN_SCALE = exports.TextLayerMode = exports.SpreadMode = exports.SidebarView = exports.ScrollMode = exports.SCROLLBAR_PADDING = exports.RendererType = exports.ProgressBar = exports.PresentationModeState = exports.NullL10n = exports.MIN_SCALE = exports.MAX_SCALE = exports.MAX_AUTO_SCALE = exports.EventBus = exports.DEFAULT_SCALE_VALUE = exports.DEFAULT_SCALE = exports.CSS_UNITS = exports.AutoPrintRegExp = exports.animationStarted = void 0;\nconst CSS_UNITS = 96.0 / 72.0;\nexports.CSS_UNITS = CSS_UNITS;\nconst DEFAULT_SCALE_VALUE = \"auto\";\nexports.DEFAULT_SCALE_VALUE = DEFAULT_SCALE_VALUE;\nconst DEFAULT_SCALE = 1.0;\nexports.DEFAULT_SCALE = DEFAULT_SCALE;\nconst MIN_SCALE = 0.1;\nexports.MIN_SCALE = MIN_SCALE;\nconst MAX_SCALE = 10.0;\nexports.MAX_SCALE = MAX_SCALE;\nconst UNKNOWN_SCALE = 0;\nexports.UNKNOWN_SCALE = UNKNOWN_SCALE;\nconst MAX_AUTO_SCALE = 1.25;\nexports.MAX_AUTO_SCALE = MAX_AUTO_SCALE;\nconst SCROLLBAR_PADDING = 40;\nexports.SCROLLBAR_PADDING = SCROLLBAR_PADDING;\nconst VERTICAL_PADDING = 5;\nexports.VERTICAL_PADDING = VERTICAL_PADDING;\nconst LOADINGBAR_END_OFFSET_VAR = \"--loadingBar-end-offset\";\nconst PresentationModeState = {\n  UNKNOWN: 0,\n  NORMAL: 1,\n  CHANGING: 2,\n  FULLSCREEN: 3\n};\nexports.PresentationModeState = PresentationModeState;\nconst SidebarView = {\n  UNKNOWN: -1,\n  NONE: 0,\n  THUMBS: 1,\n  OUTLINE: 2,\n  ATTACHMENTS: 3,\n  LAYERS: 4\n};\nexports.SidebarView = SidebarView;\nconst RendererType = {\n  CANVAS: \"canvas\",\n  SVG: \"svg\"\n};\nexports.RendererType = RendererType;\nconst TextLayerMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_ENHANCE: 2\n};\nexports.TextLayerMode = TextLayerMode;\nconst ScrollMode = {\n  UNKNOWN: -1,\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n  WRAPPED: 2\n};\nexports.ScrollMode = ScrollMode;\nconst SpreadMode = {\n  UNKNOWN: -1,\n  NONE: 0,\n  ODD: 1,\n  EVEN: 2\n};\nexports.SpreadMode = SpreadMode;\nconst AutoPrintRegExp = /\\bprint\\s*\\(/;\nexports.AutoPrintRegExp = AutoPrintRegExp;\n\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n\n  return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\n  });\n}\n\nconst NullL10n = {\n  async getLanguage() {\n    return \"en-us\";\n  },\n\n  async getDirection() {\n    return \"ltr\";\n  },\n\n  async get(property, args, fallback) {\n    return formatL10nValue(fallback, args);\n  },\n\n  async translate(element) {}\n\n};\nexports.NullL10n = NullL10n;\n\nfunction getOutputScale(ctx) {\n  const devicePixelRatio = window.devicePixelRatio || 1;\n  const backingStoreRatio = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n  const pixelRatio = devicePixelRatio / backingStoreRatio;\n  return {\n    sx: pixelRatio,\n    sy: pixelRatio,\n    scaled: pixelRatio !== 1\n  };\n}\n\nfunction scrollIntoView(element, spot, skipOverflowHiddenElements = false) {\n  let parent = element.offsetParent;\n\n  if (!parent) {\n    console.error(\"offsetParent is not set -- cannot scroll\");\n    return;\n  }\n\n  let offsetY = element.offsetTop + element.clientTop;\n  let offsetX = element.offsetLeft + element.clientLeft;\n\n  while (parent.clientHeight === parent.scrollHeight && parent.clientWidth === parent.scrollWidth || skipOverflowHiddenElements && getComputedStyle(parent).overflow === \"hidden\") {\n    if (parent.dataset._scaleY) {\n      offsetY /= parent.dataset._scaleY;\n      offsetX /= parent.dataset._scaleX;\n    }\n\n    offsetY += parent.offsetTop;\n    offsetX += parent.offsetLeft;\n    parent = parent.offsetParent;\n\n    if (!parent) {\n      return;\n    }\n  }\n\n  if (spot) {\n    if (spot.top !== undefined) {\n      offsetY += spot.top;\n    }\n\n    if (spot.left !== undefined) {\n      offsetX += spot.left;\n      parent.scrollLeft = offsetX;\n    }\n  }\n\n  parent.scrollTop = offsetY;\n}\n\nfunction watchScroll(viewAreaElement, callback) {\n  const debounceScroll = function (evt) {\n    if (rAF) {\n      return;\n    }\n\n    rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n      rAF = null;\n      const currentX = viewAreaElement.scrollLeft;\n      const lastX = state.lastX;\n\n      if (currentX !== lastX) {\n        state.right = currentX > lastX;\n      }\n\n      state.lastX = currentX;\n      const currentY = viewAreaElement.scrollTop;\n      const lastY = state.lastY;\n\n      if (currentY !== lastY) {\n        state.down = currentY > lastY;\n      }\n\n      state.lastY = currentY;\n      callback(state);\n    });\n  };\n\n  const state = {\n    right: true,\n    down: true,\n    lastX: viewAreaElement.scrollLeft,\n    lastY: viewAreaElement.scrollTop,\n    _eventHandler: debounceScroll\n  };\n  let rAF = null;\n  viewAreaElement.addEventListener(\"scroll\", debounceScroll, true);\n  return state;\n}\n\nfunction parseQueryString(query) {\n  const parts = query.split(\"&\");\n  const params = Object.create(null);\n\n  for (let i = 0, ii = parts.length; i < ii; ++i) {\n    const param = parts[i].split(\"=\");\n    const key = param[0].toLowerCase();\n    const value = param.length > 1 ? param[1] : null;\n    params[decodeURIComponent(key)] = decodeURIComponent(value);\n  }\n\n  return params;\n}\n\nfunction binarySearchFirstItem(items, condition) {\n  let minIndex = 0;\n  let maxIndex = items.length - 1;\n\n  if (maxIndex < 0 || !condition(items[maxIndex])) {\n    return items.length;\n  }\n\n  if (condition(items[minIndex])) {\n    return minIndex;\n  }\n\n  while (minIndex < maxIndex) {\n    const currentIndex = minIndex + maxIndex >> 1;\n    const currentItem = items[currentIndex];\n\n    if (condition(currentItem)) {\n      maxIndex = currentIndex;\n    } else {\n      minIndex = currentIndex + 1;\n    }\n  }\n\n  return minIndex;\n}\n\nfunction approximateFraction(x) {\n  if (Math.floor(x) === x) {\n    return [x, 1];\n  }\n\n  const xinv = 1 / x;\n  const limit = 8;\n\n  if (xinv > limit) {\n    return [1, limit];\n  } else if (Math.floor(xinv) === xinv) {\n    return [1, xinv];\n  }\n\n  const x_ = x > 1 ? xinv : x;\n  let a = 0,\n      b = 1,\n      c = 1,\n      d = 1;\n\n  while (true) {\n    const p = a + c,\n          q = b + d;\n\n    if (q > limit) {\n      break;\n    }\n\n    if (x_ <= p / q) {\n      c = p;\n      d = q;\n    } else {\n      a = p;\n      b = q;\n    }\n  }\n\n  let result;\n\n  if (x_ - a / b < c / d - x_) {\n    result = x_ === x ? [a, b] : [b, a];\n  } else {\n    result = x_ === x ? [c, d] : [d, c];\n  }\n\n  return result;\n}\n\nfunction roundToDivide(x, div) {\n  const r = x % div;\n  return r === 0 ? x : Math.round(x - r + div);\n}\n\nfunction getPageSizeInches({\n  view,\n  userUnit,\n  rotate\n}) {\n  const [x1, y1, x2, y2] = view;\n  const changeOrientation = rotate % 180 !== 0;\n  const width = (x2 - x1) / 72 * userUnit;\n  const height = (y2 - y1) / 72 * userUnit;\n  return {\n    width: changeOrientation ? height : width,\n    height: changeOrientation ? width : height\n  };\n}\n\nfunction backtrackBeforeAllVisibleElements(index, views, top) {\n  if (index < 2) {\n    return index;\n  }\n\n  let elt = views[index].div;\n  let pageTop = elt.offsetTop + elt.clientTop;\n\n  if (pageTop >= top) {\n    elt = views[index - 1].div;\n    pageTop = elt.offsetTop + elt.clientTop;\n  }\n\n  for (let i = index - 2; i >= 0; --i) {\n    elt = views[i].div;\n\n    if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\n      break;\n    }\n\n    index = i;\n  }\n\n  return index;\n}\n\nfunction getVisibleElements({\n  scrollEl,\n  views,\n  sortByVisibility = false,\n  horizontal = false,\n  rtl = false\n}) {\n  const top = scrollEl.scrollTop,\n        bottom = top + scrollEl.clientHeight;\n  const left = scrollEl.scrollLeft,\n        right = left + scrollEl.clientWidth;\n\n  function isElementBottomAfterViewTop(view) {\n    const element = view.div;\n    const elementBottom = element.offsetTop + element.clientTop + element.clientHeight;\n    return elementBottom > top;\n  }\n\n  function isElementNextAfterViewHorizontally(view) {\n    const element = view.div;\n    const elementLeft = element.offsetLeft + element.clientLeft;\n    const elementRight = elementLeft + element.clientWidth;\n    return rtl ? elementLeft < right : elementRight > left;\n  }\n\n  const visible = [],\n        numViews = views.length;\n  let firstVisibleElementInd = binarySearchFirstItem(views, horizontal ? isElementNextAfterViewHorizontally : isElementBottomAfterViewTop);\n\n  if (firstVisibleElementInd > 0 && firstVisibleElementInd < numViews && !horizontal) {\n    firstVisibleElementInd = backtrackBeforeAllVisibleElements(firstVisibleElementInd, views, top);\n  }\n\n  let lastEdge = horizontal ? right : -1;\n\n  for (let i = firstVisibleElementInd; i < numViews; i++) {\n    const view = views[i],\n          element = view.div;\n    const currentWidth = element.offsetLeft + element.clientLeft;\n    const currentHeight = element.offsetTop + element.clientTop;\n    const viewWidth = element.clientWidth,\n          viewHeight = element.clientHeight;\n    const viewRight = currentWidth + viewWidth;\n    const viewBottom = currentHeight + viewHeight;\n\n    if (lastEdge === -1) {\n      if (viewBottom >= bottom) {\n        lastEdge = viewBottom;\n      }\n    } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\n      break;\n    }\n\n    if (viewBottom <= top || currentHeight >= bottom || viewRight <= left || currentWidth >= right) {\n      continue;\n    }\n\n    const hiddenHeight = Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\n    const hiddenWidth = Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\n    const fractionHeight = (viewHeight - hiddenHeight) / viewHeight,\n          fractionWidth = (viewWidth - hiddenWidth) / viewWidth;\n    const percent = fractionHeight * fractionWidth * 100 | 0;\n    visible.push({\n      id: view.id,\n      x: currentWidth,\n      y: currentHeight,\n      view,\n      percent,\n      widthPercent: fractionWidth * 100 | 0\n    });\n  }\n\n  const first = visible[0],\n        last = visible[visible.length - 1];\n\n  if (sortByVisibility) {\n    visible.sort(function (a, b) {\n      const pc = a.percent - b.percent;\n\n      if (Math.abs(pc) > 0.001) {\n        return -pc;\n      }\n\n      return a.id - b.id;\n    });\n  }\n\n  return {\n    first,\n    last,\n    views: visible\n  };\n}\n\nfunction noContextMenuHandler(evt) {\n  evt.preventDefault();\n}\n\nfunction isDataSchema(url) {\n  let i = 0;\n  const ii = url.length;\n\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction getPDFFileNameFromURL(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n\n  if (isDataSchema(url)) {\n    console.warn(\"getPDFFileNameFromURL: \" + 'ignoring \"data:\" URL for performance reasons.');\n    return defaultFilename;\n  }\n\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n\n    if (suggestedFilename.includes(\"%\")) {\n      try {\n        suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n      } catch (ex) {}\n    }\n  }\n\n  return suggestedFilename || defaultFilename;\n}\n\nfunction normalizeWheelEventDirection(evt) {\n  let delta = Math.sqrt(evt.deltaX * evt.deltaX + evt.deltaY * evt.deltaY);\n  const angle = Math.atan2(evt.deltaY, evt.deltaX);\n\n  if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\n    delta = -delta;\n  }\n\n  return delta;\n}\n\nfunction normalizeWheelEventDelta(evt) {\n  let delta = normalizeWheelEventDirection(evt);\n  const MOUSE_DOM_DELTA_PIXEL_MODE = 0;\n  const MOUSE_DOM_DELTA_LINE_MODE = 1;\n  const MOUSE_PIXELS_PER_LINE = 30;\n  const MOUSE_LINES_PER_PAGE = 30;\n\n  if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) {\n    delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\n  } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) {\n    delta /= MOUSE_LINES_PER_PAGE;\n  }\n\n  return delta;\n}\n\nfunction isValidRotation(angle) {\n  return Number.isInteger(angle) && angle % 90 === 0;\n}\n\nfunction isValidScrollMode(mode) {\n  return Number.isInteger(mode) && Object.values(ScrollMode).includes(mode) && mode !== ScrollMode.UNKNOWN;\n}\n\nfunction isValidSpreadMode(mode) {\n  return Number.isInteger(mode) && Object.values(SpreadMode).includes(mode) && mode !== SpreadMode.UNKNOWN;\n}\n\nfunction isPortraitOrientation(size) {\n  return size.width <= size.height;\n}\n\nconst WaitOnType = {\n  EVENT: \"event\",\n  TIMEOUT: \"timeout\"\n};\nexports.WaitOnType = WaitOnType;\n\nfunction waitOnEventOrTimeout({\n  target,\n  name,\n  delay = 0\n}) {\n  return new Promise(function (resolve, reject) {\n    if (typeof target !== \"object\" || !(name && typeof name === \"string\") || !(Number.isInteger(delay) && delay >= 0)) {\n      throw new Error(\"waitOnEventOrTimeout - invalid parameters.\");\n    }\n\n    function handler(type) {\n      if (target instanceof EventBus) {\n        target._off(name, eventHandler);\n      } else {\n        target.removeEventListener(name, eventHandler);\n      }\n\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n\n      resolve(type);\n    }\n\n    const eventHandler = handler.bind(null, WaitOnType.EVENT);\n\n    if (target instanceof EventBus) {\n      target._on(name, eventHandler);\n    } else {\n      target.addEventListener(name, eventHandler);\n    }\n\n    const timeoutHandler = handler.bind(null, WaitOnType.TIMEOUT);\n    const timeout = setTimeout(timeoutHandler, delay);\n  });\n}\n\nconst animationStarted = new Promise(function (resolve) {\n  window.requestAnimationFrame(resolve);\n});\nexports.animationStarted = animationStarted;\n\nfunction dispatchDOMEvent(eventName, args = null) {\n  throw new Error(\"Not implemented: dispatchDOMEvent\");\n}\n\nclass EventBus {\n  constructor(options) {\n    this._listeners = Object.create(null);\n  }\n\n  on(eventName, listener, options = null) {\n    this._on(eventName, listener, {\n      external: true,\n      once: options && options.once //?.\n    });\n  }\n\n  off(eventName, listener, options = null) {\n    this._off(eventName, listener, {\n      external: true,\n      once: options && options.once //?.\n    });\n  }\n\n  dispatch(eventName) {\n    const eventListeners = this._listeners[eventName];\n\n    if (!eventListeners || eventListeners.length === 0) {\n      return;\n    }\n\n    const args = Array.prototype.slice.call(arguments, 1);\n    let externalListeners;\n    eventListeners.slice(0).forEach(({\n      listener,\n      external,\n      once\n    }) => {\n      if (once) {\n        this._off(eventName, listener);\n      }\n\n      if (external) {\n        (externalListeners || (externalListeners = [])).push(listener);\n        return;\n      }\n\n      listener.apply(null, args);\n    });\n\n    if (externalListeners) {\n      externalListeners.forEach(listener => {\n        listener.apply(null, args);\n      });\n      externalListeners = null;\n    }\n  }\n\n  _on(eventName, listener, options = null) {\n    var _this$_listeners;\n\n    const eventListeners = (_this$_listeners = this._listeners)[eventName] || (_this$_listeners[eventName] = []);\n    eventListeners.push({\n      listener,\n      external: options && options.external === true, //?.\n      once: options && options.once === true //?.\n    });\n  }\n\n  _off(eventName, listener, options = null) {\n    const eventListeners = this._listeners[eventName];\n\n    if (!eventListeners) {\n      return;\n    }\n\n    for (let i = 0, ii = eventListeners.length; i < ii; i++) {\n      if (eventListeners[i].listener === listener) {\n        eventListeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n}\n\nexports.EventBus = EventBus;\n\nfunction clamp(v, min, max) {\n  return Math.min(Math.max(v, min), max);\n}\n\nclass ProgressBar {\n  constructor(id, {\n    height,\n    width,\n    units\n  } = {}) {\n    this.visible = true;\n    this.div = document.querySelector(id + \" .progress\");\n    this.bar = this.div.parentNode;\n    this.height = height || 100;\n    this.width = width || 100;\n    this.units = units || \"%\";\n    this.div.style.height = this.height + this.units;\n    this.percent = 0;\n  }\n\n  _updateBar() {\n    if (this._indeterminate) {\n      this.div.classList.add(\"indeterminate\");\n      this.div.style.width = this.width + this.units;\n      return;\n    }\n\n    this.div.classList.remove(\"indeterminate\");\n    const progressSize = this.width * this._percent / 100;\n    this.div.style.width = progressSize + this.units;\n  }\n\n  get percent() {\n    return this._percent;\n  }\n\n  set percent(val) {\n    this._indeterminate = isNaN(val);\n    this._percent = clamp(val, 0, 100);\n\n    this._updateBar();\n  }\n\n  setWidth(viewer) {\n    if (!viewer) {\n      return;\n    }\n\n    const container = viewer.parentNode;\n    const scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n\n    if (scrollbarWidth > 0) {\n      const doc = document.documentElement;\n      doc.style.setProperty(LOADINGBAR_END_OFFSET_VAR, `${scrollbarWidth}px`);\n    }\n  }\n\n  hide() {\n    if (!this.visible) {\n      return;\n    }\n\n    this.visible = false;\n    this.bar.classList.add(\"hidden\");\n  }\n\n  show() {\n    if (this.visible) {\n      return;\n    }\n\n    this.visible = true;\n    this.bar.classList.remove(\"hidden\");\n  }\n\n}\n\nexports.ProgressBar = ProgressBar;\n\nfunction moveToEndOfArray(arr, condition) {\n  const moved = [],\n        len = arr.length;\n  let write = 0;\n\n  for (let read = 0; read < len; ++read) {\n    if (condition(arr[read])) {\n      moved.push(arr[read]);\n    } else {\n      arr[write] = arr[read];\n      ++write;\n    }\n  }\n\n  for (let read = 0; write < len; ++read, ++write) {\n    arr[write] = moved[read];\n  }\n}\n\nfunction getActiveOrFocusedElement() {\n  let curRoot = document;\n  let curActiveOrFocused = curRoot.activeElement || curRoot.querySelector(\":focus\");\n\n  while (curActiveOrFocused && curActiveOrFocused.shadowRoot) {\n    curRoot = curActiveOrFocused.shadowRoot;\n    curActiveOrFocused = curRoot.activeElement || curRoot.querySelector(\":focus\");\n  }\n\n  return curActiveOrFocused;\n}\n\n/***/ }),\n/* 5 */\n/***/ ((module) => {\n\n\nmodule.exports = pdfjsLib;\n\n/***/ }),\n/* 6 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFCursorTools = exports.CursorTool = void 0;\n\nvar _grab_to_pan = __webpack_require__(7);\n\nvar _ui_utils = __webpack_require__(4);\n\nconst CursorTool = {\n  SELECT: 0,\n  HAND: 1,\n  ZOOM: 2\n};\nexports.CursorTool = CursorTool;\n\nclass PDFCursorTools {\n  constructor({\n    container,\n    eventBus,\n    cursorToolOnLoad = CursorTool.SELECT\n  }) {\n    this.container = container;\n    this.eventBus = eventBus;\n    this.active = CursorTool.SELECT;\n    this.activeBeforePresentationMode = null;\n    this.handTool = new _grab_to_pan.GrabToPan({\n      element: this.container\n    });\n\n    this._addEventListeners();\n\n    Promise.resolve().then(() => {\n      this.switchTool(cursorToolOnLoad);\n    });\n  }\n\n  get activeTool() {\n    return this.active;\n  }\n\n  switchTool(tool) {\n    if (this.activeBeforePresentationMode !== null) {\n      return;\n    }\n\n    if (tool === this.active) {\n      return;\n    }\n\n    const disableActiveTool = () => {\n      switch (this.active) {\n        case CursorTool.SELECT:\n          break;\n\n        case CursorTool.HAND:\n          this.handTool.deactivate();\n          break;\n\n        case CursorTool.ZOOM:\n      }\n    };\n\n    switch (tool) {\n      case CursorTool.SELECT:\n        disableActiveTool();\n        break;\n\n      case CursorTool.HAND:\n        disableActiveTool();\n        this.handTool.activate();\n        break;\n\n      case CursorTool.ZOOM:\n      default:\n        console.error(`switchTool: \"${tool}\" is an unsupported value.`);\n        return;\n    }\n\n    this.active = tool;\n\n    this._dispatchEvent();\n  }\n\n  _dispatchEvent() {\n    this.eventBus.dispatch(\"cursortoolchanged\", {\n      source: this,\n      tool: this.active\n    });\n  }\n\n  _addEventListeners() {\n    this.eventBus._on(\"switchcursortool\", evt => {\n      this.switchTool(evt.tool);\n    });\n\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      switch (evt.state) {\n        case _ui_utils.PresentationModeState.CHANGING:\n          break;\n\n        case _ui_utils.PresentationModeState.FULLSCREEN:\n          {\n            const previouslyActive = this.active;\n            this.switchTool(CursorTool.SELECT);\n            this.activeBeforePresentationMode = previouslyActive;\n            break;\n          }\n\n        case _ui_utils.PresentationModeState.NORMAL:\n          {\n            const previouslyActive = this.activeBeforePresentationMode;\n            this.activeBeforePresentationMode = null;\n            this.switchTool(previouslyActive);\n            break;\n          }\n      }\n    });\n  }\n\n}\n\nexports.PDFCursorTools = PDFCursorTools;\n\n/***/ }),\n/* 7 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.GrabToPan = GrabToPan;\n\nfunction GrabToPan(options) {\n  this.element = options.element;\n  this.document = options.element.ownerDocument;\n\n  if (typeof options.ignoreTarget === \"function\") {\n    this.ignoreTarget = options.ignoreTarget;\n  }\n\n  this.onActiveChanged = options.onActiveChanged;\n  this.activate = this.activate.bind(this);\n  this.deactivate = this.deactivate.bind(this);\n  this.toggle = this.toggle.bind(this);\n  this._onmousedown = this._onmousedown.bind(this);\n  this._onmousemove = this._onmousemove.bind(this);\n  this._endPan = this._endPan.bind(this);\n  const overlay = this.overlay = document.createElement(\"div\");\n  overlay.className = \"grab-to-pan-grabbing\";\n}\n\nGrabToPan.prototype = {\n  CSS_CLASS_GRAB: \"grab-to-pan-grab\",\n  activate: function GrabToPan_activate() {\n    if (!this.active) {\n      this.active = true;\n      this.element.addEventListener(\"mousedown\", this._onmousedown, true);\n      this.element.classList.add(this.CSS_CLASS_GRAB);\n\n      if (this.onActiveChanged) {\n        this.onActiveChanged(true);\n      }\n    }\n  },\n  deactivate: function GrabToPan_deactivate() {\n    if (this.active) {\n      this.active = false;\n      this.element.removeEventListener(\"mousedown\", this._onmousedown, true);\n\n      this._endPan();\n\n      this.element.classList.remove(this.CSS_CLASS_GRAB);\n\n      if (this.onActiveChanged) {\n        this.onActiveChanged(false);\n      }\n    }\n  },\n  toggle: function GrabToPan_toggle() {\n    if (this.active) {\n      this.deactivate();\n    } else {\n      this.activate();\n    }\n  },\n  ignoreTarget: function GrabToPan_ignoreTarget(node) {\n    return node[matchesSelector](\"a[href], a[href] *, input, textarea, button, button *, select, option\");\n  },\n  _onmousedown: function GrabToPan__onmousedown(event) {\n    if (event.button !== 0 || this.ignoreTarget(event.target)) {\n      return;\n    }\n\n    if (event.originalTarget) {\n      try {\n        event.originalTarget.tagName;\n      } catch (e) {\n        return;\n      }\n    }\n\n    this.scrollLeftStart = this.element.scrollLeft;\n    this.scrollTopStart = this.element.scrollTop;\n    this.clientXStart = event.clientX;\n    this.clientYStart = event.clientY;\n    this.document.addEventListener(\"mousemove\", this._onmousemove, true);\n    this.document.addEventListener(\"mouseup\", this._endPan, true);\n    this.element.addEventListener(\"scroll\", this._endPan, true);\n    event.preventDefault();\n    event.stopPropagation();\n    const focusedElement = document.activeElement;\n\n    if (focusedElement && !focusedElement.contains(event.target)) {\n      focusedElement.blur();\n    }\n  },\n  _onmousemove: function GrabToPan__onmousemove(event) {\n    this.element.removeEventListener(\"scroll\", this._endPan, true);\n\n    if (isLeftMouseReleased(event)) {\n      this._endPan();\n\n      return;\n    }\n\n    const xDiff = event.clientX - this.clientXStart;\n    const yDiff = event.clientY - this.clientYStart;\n    const scrollTop = this.scrollTopStart - yDiff;\n    const scrollLeft = this.scrollLeftStart - xDiff;\n\n    if (this.element.scrollTo) {\n      this.element.scrollTo({\n        top: scrollTop,\n        left: scrollLeft,\n        behavior: \"instant\"\n      });\n    } else {\n      this.element.scrollTop = scrollTop;\n      this.element.scrollLeft = scrollLeft;\n    }\n\n    if (!this.overlay.parentNode) {\n      document.body.appendChild(this.overlay);\n    }\n  },\n  _endPan: function GrabToPan__endPan() {\n    this.element.removeEventListener(\"scroll\", this._endPan, true);\n    this.document.removeEventListener(\"mousemove\", this._onmousemove, true);\n    this.document.removeEventListener(\"mouseup\", this._endPan, true);\n    this.overlay.remove();\n  }\n};\nlet matchesSelector;\n[\"webkitM\", \"mozM\", \"m\"].some(function (prefix) {\n  let name = prefix + \"atches\";\n\n  if (name in document.documentElement) {\n    matchesSelector = name;\n  }\n\n  name += \"Selector\";\n\n  if (name in document.documentElement) {\n    matchesSelector = name;\n  }\n\n  return matchesSelector;\n});\nconst isNotIEorIsIE10plus = !document.documentMode || document.documentMode > 9;\nconst chrome = window.chrome;\nconst isChrome15OrOpera15plus = chrome && (chrome.webstore || chrome.app);\nconst isSafari6plus = /Apple/.test(navigator.vendor) && /Version\\/([6-9]\\d*|[1-5]\\d+)/.test(navigator.userAgent);\n\nfunction isLeftMouseReleased(event) {\n  if (\"buttons\" in event && isNotIEorIsIE10plus) {\n    return !(event.buttons & 1);\n  }\n\n  if (isChrome15OrOpera15plus || isSafari6plus) {\n    return event.which === 0;\n  }\n\n  return false;\n}\n\n/***/ }),\n/* 8 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.RenderingStates = exports.PDFRenderingQueue = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nconst CLEANUP_TIMEOUT = 30000;\nconst RenderingStates = {\n  INITIAL: 0,\n  RUNNING: 1,\n  PAUSED: 2,\n  FINISHED: 3\n};\nexports.RenderingStates = RenderingStates;\n\nclass PDFRenderingQueue {\n  constructor() {\n    this.pdfViewer = null;\n    this.pdfThumbnailViewer = null;\n    this.onIdle = null;\n    this.highestPriorityPage = null;\n    this.idleTimeout = null;\n    this.printing = false;\n    this.isThumbnailViewEnabled = false;\n  }\n\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  setThumbnailViewer(pdfThumbnailViewer) {\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n  }\n\n  isHighestPriority(view) {\n    return this.highestPriorityPage === view.renderingId;\n  }\n\n  renderHighestPriority(currentlyVisiblePages) {\n    if (this.idleTimeout) {\n      clearTimeout(this.idleTimeout);\n      this.idleTimeout = null;\n    }\n\n    if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n      return;\n    }\n\n    if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n      if (this.pdfThumbnailViewer.forceRendering()) {\n        return;\n      }\n    }\n\n    if (this.printing) {\n      return;\n    }\n\n    if (this.onIdle) {\n      this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\n    }\n  }\n\n  getHighestPriority(visible, views, scrolledDown) {\n    const visibleViews = visible.views;\n    const numVisible = visibleViews.length;\n\n    if (numVisible === 0) {\n      return null;\n    }\n\n    for (let i = 0; i < numVisible; ++i) {\n      const view = visibleViews[i].view;\n\n      if (!this.isViewFinished(view)) {\n        return view;\n      }\n    }\n\n    if (scrolledDown) {\n      const nextPageIndex = visible.last.id;\n\n      if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n        return views[nextPageIndex];\n      }\n    } else {\n      const previousPageIndex = visible.first.id - 2;\n\n      if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\n        return views[previousPageIndex];\n      }\n    }\n\n    return null;\n  }\n\n  isViewFinished(view) {\n    return view.renderingState === RenderingStates.FINISHED;\n  }\n\n  renderView(view) {\n    switch (view.renderingState) {\n      case RenderingStates.FINISHED:\n        return false;\n\n      case RenderingStates.PAUSED:\n        this.highestPriorityPage = view.renderingId;\n        view.resume();\n        break;\n\n      case RenderingStates.RUNNING:\n        this.highestPriorityPage = view.renderingId;\n        break;\n\n      case RenderingStates.INITIAL:\n        this.highestPriorityPage = view.renderingId;\n        view.draw().finally(() => {\n          this.renderHighestPriority();\n        }).catch(reason => {\n          if (reason instanceof _pdfjsLib.RenderingCancelledException) {\n            return;\n          }\n\n          console.error(`renderView: \"${reason}\"`);\n        });\n        break;\n    }\n\n    return true;\n  }\n\n}\n\nexports.PDFRenderingQueue = PDFRenderingQueue;\n\n/***/ }),\n/* 9 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.OverlayManager = void 0;\n\nclass OverlayManager {\n  constructor() {\n    this._overlays = {};\n    this._active = null;\n    this._keyDownBound = this._keyDown.bind(this);\n  }\n\n  get active() {\n    return this._active;\n  }\n\n  async register(name, element, callerCloseMethod = null, canForceClose = false) {\n    let container;\n\n    if (!name || !element || !(container = element.parentNode)) {\n      throw new Error(\"Not enough parameters.\");\n    } else if (this._overlays[name]) {\n      throw new Error(\"The overlay is already registered.\");\n    }\n\n    this._overlays[name] = {\n      element,\n      container,\n      callerCloseMethod,\n      canForceClose\n    };\n  }\n\n  async unregister(name) {\n    if (!this._overlays[name]) {\n      throw new Error(\"The overlay does not exist.\");\n    } else if (this._active === name) {\n      throw new Error(\"The overlay cannot be removed while it is active.\");\n    }\n\n    delete this._overlays[name];\n  }\n\n  async open(name) {\n    if (!this._overlays[name]) {\n      throw new Error(\"The overlay does not exist.\");\n    } else if (this._active) {\n      if (this._overlays[name].canForceClose) {\n        this._closeThroughCaller();\n      } else if (this._active === name) {\n        throw new Error(\"The overlay is already active.\");\n      } else {\n        throw new Error(\"Another overlay is currently active.\");\n      }\n    }\n\n    this._active = name;\n\n    this._overlays[this._active].element.classList.remove(\"hidden\");\n\n    this._overlays[this._active].container.classList.remove(\"hidden\");\n\n    window.addEventListener(\"keydown\", this._keyDownBound);\n  }\n\n  async close(name) {\n    if (!this._overlays[name]) {\n      throw new Error(\"The overlay does not exist.\");\n    } else if (!this._active) {\n      throw new Error(\"The overlay is currently not active.\");\n    } else if (this._active !== name) {\n      throw new Error(\"Another overlay is currently active.\");\n    }\n\n    this._overlays[this._active].container.classList.add(\"hidden\");\n\n    this._overlays[this._active].element.classList.add(\"hidden\");\n\n    this._active = null;\n    window.removeEventListener(\"keydown\", this._keyDownBound);\n  }\n\n  _keyDown(evt) {\n    if (this._active && evt.keyCode === 27) {\n      this._closeThroughCaller();\n\n      evt.preventDefault();\n    }\n  }\n\n  _closeThroughCaller() {\n    if (this._overlays[this._active].callerCloseMethod) {\n      this._overlays[this._active].callerCloseMethod();\n    }\n\n    if (this._active) {\n      this.close(this._active);\n    }\n  }\n\n}\n\nexports.OverlayManager = OverlayManager;\n\n/***/ }),\n/* 10 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PasswordPrompt = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdfjsLib = __webpack_require__(5);\n\nclass PasswordPrompt {\n  constructor(options, overlayManager, l10n = _ui_utils.NullL10n) {\n    this.overlayName = options.overlayName;\n    this.container = options.container;\n    this.label = options.label;\n    this.input = options.input;\n    this.submitButton = options.submitButton;\n    this.cancelButton = options.cancelButton;\n    this.overlayManager = overlayManager;\n    this.l10n = l10n;\n    this.updateCallback = null;\n    this.reason = null;\n    this.submitButton.addEventListener(\"click\", this.verify.bind(this));\n    this.cancelButton.addEventListener(\"click\", this.close.bind(this));\n    this.input.addEventListener(\"keydown\", e => {\n      if (e.keyCode === 13) {\n        this.verify();\n      }\n    });\n    this.overlayManager.register(this.overlayName, this.container, this.close.bind(this), true);\n  }\n\n  open() {\n    this.overlayManager.open(this.overlayName).then(() => {\n      this.input.focus();\n      let promptString;\n\n      if (this.reason === _pdfjsLib.PasswordResponses.INCORRECT_PASSWORD) {\n        promptString = this.l10n.get(\"password_invalid\", null, \"Invalid password. Please try again.\");\n      } else {\n        promptString = this.l10n.get(\"password_label\", null, \"Enter the password to open this PDF file.\");\n      }\n\n      promptString.then(msg => {\n        this.label.textContent = msg;\n      });\n    });\n  }\n\n  close() {\n    this.overlayManager.close(this.overlayName).then(() => {\n      this.input.value = \"\";\n    });\n  }\n\n  verify() {\n    const password = this.input.value;\n\n    if (password && password.length > 0) {\n      this.close();\n      this.updateCallback(password);\n    }\n  }\n\n  setUpdateCallback(updateCallback, reason) {\n    this.updateCallback = updateCallback;\n    this.reason = reason;\n  }\n\n}\n\nexports.PasswordPrompt = PasswordPrompt;\n\n/***/ }),\n/* 11 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFAttachmentViewer = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _base_tree_viewer = __webpack_require__(12);\n\nvar _viewer_compatibility = __webpack_require__(2);\n\nconst PdfFileRegExp = /\\.pdf$/i;\n\nclass PDFAttachmentViewer extends _base_tree_viewer.BaseTreeViewer {\n  constructor(options) {\n    super(options);\n    this.downloadManager = options.downloadManager;\n\n    this.eventBus._on(\"fileattachmentannotation\", this._appendAttachment.bind(this));\n  }\n\n  reset(keepRenderedCapability = false) {\n    super.reset();\n    this._attachments = null;\n\n    if (!keepRenderedCapability) {\n      this._renderedCapability = (0, _pdfjsLib.createPromiseCapability)();\n    }\n\n    if (this._pendingDispatchEvent) {\n      clearTimeout(this._pendingDispatchEvent);\n    }\n\n    this._pendingDispatchEvent = null;\n  }\n\n  _dispatchEvent(attachmentsCount) {\n    this._renderedCapability.resolve();\n\n    if (this._pendingDispatchEvent) {\n      clearTimeout(this._pendingDispatchEvent);\n      this._pendingDispatchEvent = null;\n    }\n\n    if (attachmentsCount === 0) {\n      this._pendingDispatchEvent = setTimeout(() => {\n        this.eventBus.dispatch(\"attachmentsloaded\", {\n          source: this,\n          attachmentsCount: 0\n        });\n        this._pendingDispatchEvent = null;\n      });\n      return;\n    }\n\n    this.eventBus.dispatch(\"attachmentsloaded\", {\n      source: this,\n      attachmentsCount\n    });\n  }\n\n  _bindPdfLink(element, {\n    content,\n    filename\n  }) {\n    let blobUrl;\n\n    element.onclick = () => {\n      if (!blobUrl) {\n        blobUrl = URL.createObjectURL(new Blob([content], {\n          type: \"application/pdf\"\n        }));\n      }\n\n      let viewerUrl;\n      viewerUrl = \"?file=\" + encodeURIComponent(blobUrl + \"#\" + filename);\n\n      try {\n        window.open(viewerUrl);\n      } catch (ex) {\n        console.error(`_bindPdfLink: ${ex}`);\n        URL.revokeObjectURL(blobUrl);\n        blobUrl = null;\n        this.downloadManager.downloadData(content, filename, \"application/pdf\");\n      }\n\n      return false;\n    };\n  }\n\n  _bindLink(element, {\n    content,\n    filename\n  }) {\n    element.onclick = () => {\n      const contentType = PdfFileRegExp.test(filename) ? \"application/pdf\" : \"\";\n      this.downloadManager.downloadData(content, filename, contentType);\n      return false;\n    };\n  }\n\n  render({\n    attachments,\n    keepRenderedCapability = false\n  }) {\n    if (this._attachments) {\n      this.reset(keepRenderedCapability);\n    }\n\n    this._attachments = attachments || null;\n\n    if (!attachments) {\n      this._dispatchEvent(0);\n\n      return;\n    }\n\n    const names = Object.keys(attachments).sort(function (a, b) {\n      return a.toLowerCase().localeCompare(b.toLowerCase());\n    });\n    const fragment = document.createDocumentFragment();\n    let attachmentsCount = 0;\n\n    for (const name of names) {\n      const item = attachments[name];\n      const filename = (0, _pdfjsLib.getFilenameFromUrl)(item.filename);\n      const div = document.createElement(\"div\");\n      div.className = \"treeItem\";\n      const element = document.createElement(\"a\");\n\n      if (PdfFileRegExp.test(filename) && !_viewer_compatibility.viewerCompatibilityParams.disableCreateObjectURL) {\n        this._bindPdfLink(element, {\n          content: item.content,\n          filename\n        });\n      } else {\n        this._bindLink(element, {\n          content: item.content,\n          filename\n        });\n      }\n\n      element.textContent = this._normalizeTextContent(filename);\n      div.appendChild(element);\n      fragment.appendChild(div);\n      attachmentsCount++;\n    }\n\n    this._finishRendering(fragment, attachmentsCount);\n  }\n\n  _appendAttachment({\n    id,\n    filename,\n    content\n  }) {\n    const renderedPromise = this._renderedCapability.promise;\n    renderedPromise.then(() => {\n      if (renderedPromise !== this._renderedCapability.promise) {\n        return;\n      }\n\n      let attachments = this._attachments;\n\n      if (!attachments) {\n        attachments = Object.create(null);\n      } else {\n        for (const name in attachments) {\n          if (id === name) {\n            return;\n          }\n        }\n      }\n\n      attachments[id] = {\n        filename,\n        content\n      };\n      this.render({\n        attachments,\n        keepRenderedCapability: true\n      });\n    });\n  }\n\n}\n\nexports.PDFAttachmentViewer = PDFAttachmentViewer;\n\n/***/ }),\n/* 12 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.BaseTreeViewer = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nconst TREEITEM_OFFSET_TOP = -100;\nconst TREEITEM_SELECTED_CLASS = \"selected\";\n\nclass BaseTreeViewer {\n  constructor(options) {\n    if (this.constructor === BaseTreeViewer) {\n      throw new Error(\"Cannot initialize BaseTreeViewer.\");\n    }\n\n    this.container = options.container;\n    this.eventBus = options.eventBus;\n    this.reset();\n  }\n\n  reset() {\n    this._pdfDocument = null;\n    this._lastToggleIsShow = true;\n    this._currentTreeItem = null;\n    this.container.textContent = \"\";\n    this.container.classList.remove(\"treeWithDeepNesting\");\n  }\n\n  _dispatchEvent(count) {\n    throw new Error(\"Not implemented: _dispatchEvent\");\n  }\n\n  _bindLink(element, params) {\n    throw new Error(\"Not implemented: _bindLink\");\n  }\n\n  _normalizeTextContent(str) {\n    return (0, _pdfjsLib.removeNullCharacters)(str) || \"\\u2013\";\n  }\n\n  _addToggleButton(div, hidden = false) {\n    const toggler = document.createElement(\"div\");\n    toggler.className = \"treeItemToggler\";\n\n    if (hidden) {\n      toggler.classList.add(\"treeItemsHidden\");\n    }\n\n    toggler.onclick = evt => {\n      evt.stopPropagation();\n      toggler.classList.toggle(\"treeItemsHidden\");\n\n      if (evt.shiftKey) {\n        const shouldShowAll = !toggler.classList.contains(\"treeItemsHidden\");\n\n        this._toggleTreeItem(div, shouldShowAll);\n      }\n    };\n\n    div.insertBefore(toggler, div.firstChild);\n  }\n\n  _toggleTreeItem(root, show = false) {\n    this._lastToggleIsShow = show;\n\n    for (const toggler of root.querySelectorAll(\".treeItemToggler\")) {\n      toggler.classList.toggle(\"treeItemsHidden\", !show);\n    }\n  }\n\n  _toggleAllTreeItems() {\n    this._toggleTreeItem(this.container, !this._lastToggleIsShow);\n  }\n\n  _finishRendering(fragment, count, hasAnyNesting = false) {\n    if (hasAnyNesting) {\n      this.container.classList.add(\"treeWithDeepNesting\");\n      this._lastToggleIsShow = !fragment.querySelector(\".treeItemsHidden\");\n    }\n\n    this.container.appendChild(fragment);\n\n    this._dispatchEvent(count);\n  }\n\n  render(params) {\n    throw new Error(\"Not implemented: render\");\n  }\n\n  _updateCurrentTreeItem(treeItem = null) {\n    if (this._currentTreeItem) {\n      this._currentTreeItem.classList.remove(TREEITEM_SELECTED_CLASS);\n\n      this._currentTreeItem = null;\n    }\n\n    if (treeItem) {\n      treeItem.classList.add(TREEITEM_SELECTED_CLASS);\n      this._currentTreeItem = treeItem;\n    }\n  }\n\n  _scrollToCurrentTreeItem(treeItem) {\n    if (!treeItem) {\n      return;\n    }\n\n    let currentNode = treeItem.parentNode;\n\n    while (currentNode && currentNode !== this.container) {\n      if (currentNode.classList.contains(\"treeItem\")) {\n        const toggler = currentNode.firstElementChild;\n        toggler && toggler.classList.remove(\"treeItemsHidden\"); //?.\n      }\n\n      currentNode = currentNode.parentNode;\n    }\n\n    this._updateCurrentTreeItem(treeItem);\n\n    this.container.scrollTo(treeItem.offsetLeft, treeItem.offsetTop + TREEITEM_OFFSET_TOP);\n  }\n\n}\n\nexports.BaseTreeViewer = BaseTreeViewer;\n\n/***/ }),\n/* 13 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFDocumentProperties = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _ui_utils = __webpack_require__(4);\n\nconst DEFAULT_FIELD_CONTENT = \"-\";\nconst NON_METRIC_LOCALES = [\"en-us\", \"en-lr\", \"my\"];\nconst US_PAGE_NAMES = {\n  \"8.5x11\": \"Letter\",\n  \"8.5x14\": \"Legal\"\n};\nconst METRIC_PAGE_NAMES = {\n  \"297x420\": \"A3\",\n  \"210x297\": \"A4\"\n};\n\nfunction getPageName(size, isPortrait, pageNames) {\n  const width = isPortrait ? size.width : size.height;\n  const height = isPortrait ? size.height : size.width;\n  return pageNames[`${width}x${height}`];\n}\n\nclass PDFDocumentProperties {\n  constructor({\n    overlayName,\n    fields,\n    container,\n    closeButton\n  }, overlayManager, eventBus, l10n = _ui_utils.NullL10n) {\n    this.overlayName = overlayName;\n    this.fields = fields;\n    this.container = container;\n    this.overlayManager = overlayManager;\n    this.l10n = l10n;\n\n    this._reset();\n\n    closeButton.addEventListener(\"click\", this.close.bind(this));\n    this.overlayManager.register(this.overlayName, this.container, this.close.bind(this));\n\n    eventBus._on(\"pagechanging\", evt => {\n      this._currentPageNumber = evt.pageNumber;\n    });\n\n    eventBus._on(\"rotationchanging\", evt => {\n      this._pagesRotation = evt.pagesRotation;\n    });\n\n    this._isNonMetricLocale = true;\n    l10n.getLanguage().then(locale => {\n      this._isNonMetricLocale = NON_METRIC_LOCALES.includes(locale);\n    });\n  }\n\n  async open() {\n    const freezeFieldData = data => {\n      Object.defineProperty(this, \"fieldData\", {\n        value: Object.freeze(data),\n        writable: false,\n        enumerable: true,\n        configurable: true\n      });\n    };\n\n    await Promise.all([this.overlayManager.open(this.overlayName), this._dataAvailableCapability.promise]);\n    const currentPageNumber = this._currentPageNumber;\n    const pagesRotation = this._pagesRotation;\n\n    if (this.fieldData && currentPageNumber === this.fieldData._currentPageNumber && pagesRotation === this.fieldData._pagesRotation) {\n      this._updateUI();\n\n      return;\n    }\n\n    const {\n      info,\n      contentDispositionFilename,\n      contentLength\n    } = await this.pdfDocument.getMetadata();\n    const [fileName, fileSize, creationDate, modificationDate, pageSize, isLinearized] = await Promise.all([contentDispositionFilename || (0, _ui_utils.getPDFFileNameFromURL)(this.url), this._parseFileSize(contentLength), this._parseDate(info.CreationDate), this._parseDate(info.ModDate), this.pdfDocument.getPage(currentPageNumber).then(pdfPage => {\n      return this._parsePageSize((0, _ui_utils.getPageSizeInches)(pdfPage), pagesRotation);\n    }), this._parseLinearization(info.IsLinearized)]);\n    freezeFieldData({\n      fileName,\n      fileSize,\n      title: info.Title,\n      author: info.Author,\n      subject: info.Subject,\n      keywords: info.Keywords,\n      creationDate,\n      modificationDate,\n      creator: info.Creator,\n      producer: info.Producer,\n      version: info.PDFFormatVersion,\n      pageCount: this.pdfDocument.numPages,\n      pageSize,\n      linearized: isLinearized,\n      _currentPageNumber: currentPageNumber,\n      _pagesRotation: pagesRotation\n    });\n\n    this._updateUI();\n\n    const {\n      length\n    } = await this.pdfDocument.getDownloadInfo();\n\n    if (contentLength === length) {\n      return;\n    }\n\n    const data = Object.assign(Object.create(null), this.fieldData);\n    data.fileSize = await this._parseFileSize(length);\n    freezeFieldData(data);\n\n    this._updateUI();\n  }\n\n  close() {\n    this.overlayManager.close(this.overlayName);\n  }\n\n  setDocument(pdfDocument, url = null) {\n    if (this.pdfDocument) {\n      this._reset();\n\n      this._updateUI(true);\n    }\n\n    if (!pdfDocument) {\n      return;\n    }\n\n    this.pdfDocument = pdfDocument;\n    this.url = url;\n\n    this._dataAvailableCapability.resolve();\n  }\n\n  _reset() {\n    this.pdfDocument = null;\n    this.url = null;\n    delete this.fieldData;\n    this._dataAvailableCapability = (0, _pdfjsLib.createPromiseCapability)();\n    this._currentPageNumber = 1;\n    this._pagesRotation = 0;\n  }\n\n  _updateUI(reset = false) {\n    if (reset || !this.fieldData) {\n      for (const id in this.fields) {\n        this.fields[id].textContent = DEFAULT_FIELD_CONTENT;\n      }\n\n      return;\n    }\n\n    if (this.overlayManager.active !== this.overlayName) {\n      return;\n    }\n\n    for (const id in this.fields) {\n      const content = this.fieldData[id];\n      this.fields[id].textContent = content || content === 0 ? content : DEFAULT_FIELD_CONTENT;\n    }\n  }\n\n  async _parseFileSize(fileSize = 0) {\n    const kb = fileSize / 1024;\n\n    if (!kb) {\n      return undefined;\n    } else if (kb < 1024) {\n      return this.l10n.get(\"document_properties_kb\", {\n        size_kb: (+kb.toPrecision(3)).toLocaleString(),\n        size_b: fileSize.toLocaleString()\n      }, \"{{size_kb}} KB ({{size_b}} bytes)\");\n    }\n\n    return this.l10n.get(\"document_properties_mb\", {\n      size_mb: (+(kb / 1024).toPrecision(3)).toLocaleString(),\n      size_b: fileSize.toLocaleString()\n    }, \"{{size_mb}} MB ({{size_b}} bytes)\");\n  }\n\n  async _parsePageSize(pageSizeInches, pagesRotation) {\n    if (!pageSizeInches) {\n      return undefined;\n    }\n\n    if (pagesRotation % 180 !== 0) {\n      pageSizeInches = {\n        width: pageSizeInches.height,\n        height: pageSizeInches.width\n      };\n    }\n\n    const isPortrait = (0, _ui_utils.isPortraitOrientation)(pageSizeInches);\n    let sizeInches = {\n      width: Math.round(pageSizeInches.width * 100) / 100,\n      height: Math.round(pageSizeInches.height * 100) / 100\n    };\n    let sizeMillimeters = {\n      width: Math.round(pageSizeInches.width * 25.4 * 10) / 10,\n      height: Math.round(pageSizeInches.height * 25.4 * 10) / 10\n    };\n    let pageName = null;\n    let rawName = getPageName(sizeInches, isPortrait, US_PAGE_NAMES) || getPageName(sizeMillimeters, isPortrait, METRIC_PAGE_NAMES);\n\n    if (!rawName && !(Number.isInteger(sizeMillimeters.width) && Number.isInteger(sizeMillimeters.height))) {\n      const exactMillimeters = {\n        width: pageSizeInches.width * 25.4,\n        height: pageSizeInches.height * 25.4\n      };\n      const intMillimeters = {\n        width: Math.round(sizeMillimeters.width),\n        height: Math.round(sizeMillimeters.height)\n      };\n\n      if (Math.abs(exactMillimeters.width - intMillimeters.width) < 0.1 && Math.abs(exactMillimeters.height - intMillimeters.height) < 0.1) {\n        rawName = getPageName(intMillimeters, isPortrait, METRIC_PAGE_NAMES);\n\n        if (rawName) {\n          sizeInches = {\n            width: Math.round(intMillimeters.width / 25.4 * 100) / 100,\n            height: Math.round(intMillimeters.height / 25.4 * 100) / 100\n          };\n          sizeMillimeters = intMillimeters;\n        }\n      }\n    }\n\n    if (rawName) {\n      pageName = this.l10n.get(\"document_properties_page_size_name_\" + rawName.toLowerCase(), null, rawName);\n    }\n\n    return Promise.all([this._isNonMetricLocale ? sizeInches : sizeMillimeters, this.l10n.get(\"document_properties_page_size_unit_\" + (this._isNonMetricLocale ? \"inches\" : \"millimeters\"), null, this._isNonMetricLocale ? \"in\" : \"mm\"), pageName, this.l10n.get(\"document_properties_page_size_orientation_\" + (isPortrait ? \"portrait\" : \"landscape\"), null, isPortrait ? \"portrait\" : \"landscape\")]).then(([{\n      width,\n      height\n    }, unit, name, orientation]) => {\n      return this.l10n.get(\"document_properties_page_size_dimension_\" + (name ? \"name_\" : \"\") + \"string\", {\n        width: width.toLocaleString(),\n        height: height.toLocaleString(),\n        unit,\n        name,\n        orientation\n      }, \"{{width}} × {{height}} {{unit}} (\" + (name ? \"{{name}}, \" : \"\") + \"{{orientation}})\");\n    });\n  }\n\n  async _parseDate(inputDate) {\n    const dateObject = _pdfjsLib.PDFDateString.toDateObject(inputDate);\n\n    if (!dateObject) {\n      return undefined;\n    }\n\n    return this.l10n.get(\"document_properties_date_string\", {\n      date: dateObject.toLocaleDateString(),\n      time: dateObject.toLocaleTimeString()\n    }, \"{{date}}, {{time}}\");\n  }\n\n  _parseLinearization(isLinearized) {\n    return this.l10n.get(\"document_properties_linearized_\" + (isLinearized ? \"yes\" : \"no\"), null, isLinearized ? \"Yes\" : \"No\");\n  }\n\n}\n\nexports.PDFDocumentProperties = PDFDocumentProperties;\n\n/***/ }),\n/* 14 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFFindBar = void 0;\n\nvar _pdf_find_controller = __webpack_require__(15);\n\nvar _ui_utils = __webpack_require__(4);\n\nconst MATCHES_COUNT_LIMIT = 1000;\n\nclass PDFFindBar {\n  constructor(options, eventBus, l10n = _ui_utils.NullL10n) {\n    this.opened = false;\n    this.bar = options.bar || null;\n    this.toggleButton = options.toggleButton || null;\n    this.findField = options.findField || null;\n    this.highlightAll = options.highlightAllCheckbox || null;\n    this.caseSensitive = options.caseSensitiveCheckbox || null;\n    this.entireWord = options.entireWordCheckbox || null;\n    this.findMsg = options.findMsg || null;\n    this.findResultsCount = options.findResultsCount || null;\n    this.findPreviousButton = options.findPreviousButton || null;\n    this.findNextButton = options.findNextButton || null;\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n    this.toggleButton.addEventListener(\"click\", () => {\n      this.toggle();\n    });\n    this.findField.addEventListener(\"input\", () => {\n      this.dispatchEvent(\"\");\n    });\n    this.bar.addEventListener(\"keydown\", e => {\n      switch (e.keyCode) {\n        case 13:\n          if (e.target === this.findField) {\n            this.dispatchEvent(\"again\", e.shiftKey);\n          }\n\n          break;\n\n        case 27:\n          this.close();\n          break;\n      }\n    });\n    this.findPreviousButton.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"again\", true);\n    });\n    this.findNextButton.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"again\", false);\n    });\n    this.highlightAll.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"highlightallchange\");\n    });\n    this.caseSensitive.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"casesensitivitychange\");\n    });\n    this.entireWord.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"entirewordchange\");\n    });\n\n    this.eventBus._on(\"resize\", this._adjustWidth.bind(this));\n  }\n\n  reset() {\n    this.updateUIState();\n  }\n\n  dispatchEvent(type, findPrev) {\n    this.eventBus.dispatch(\"find\", {\n      source: this,\n      type,\n      query: this.findField.value,\n      phraseSearch: true,\n      caseSensitive: this.caseSensitive.checked,\n      entireWord: this.entireWord.checked,\n      highlightAll: this.highlightAll.checked,\n      findPrevious: findPrev\n    });\n  }\n\n  updateUIState(state, previous, matchesCount) {\n    let findMsg = \"\";\n    let status = \"\";\n\n    switch (state) {\n      case _pdf_find_controller.FindState.FOUND:\n        break;\n\n      case _pdf_find_controller.FindState.PENDING:\n        status = \"pending\";\n        break;\n\n      case _pdf_find_controller.FindState.NOT_FOUND:\n        findMsg = this.l10n.get(\"find_not_found\", null, \"Phrase not found\");\n        status = \"notFound\";\n        break;\n\n      case _pdf_find_controller.FindState.WRAPPED:\n        if (previous) {\n          findMsg = this.l10n.get(\"find_reached_top\", null, \"Reached top of document, continued from bottom\");\n        } else {\n          findMsg = this.l10n.get(\"find_reached_bottom\", null, \"Reached end of document, continued from top\");\n        }\n\n        break;\n    }\n\n    this.findField.setAttribute(\"data-status\", status);\n    Promise.resolve(findMsg).then(msg => {\n      this.findMsg.textContent = msg;\n\n      this._adjustWidth();\n    });\n    this.updateResultsCount(matchesCount);\n  }\n\n  updateResultsCount({\n    current = 0,\n    total = 0\n  } = {}) {\n    if (!this.findResultsCount) {\n      return;\n    }\n\n    const limit = MATCHES_COUNT_LIMIT;\n    let matchesCountMsg = \"\";\n\n    if (total > 0) {\n      if (total > limit) {\n        matchesCountMsg = this.l10n.get(\"find_match_count_limit\", {\n          limit\n        }, \"More than {{limit}} match\" + (limit !== 1 ? \"es\" : \"\"));\n      } else {\n        matchesCountMsg = this.l10n.get(\"find_match_count\", {\n          current,\n          total\n        }, \"{{current}} of {{total}} match\" + (total !== 1 ? \"es\" : \"\"));\n      }\n    }\n\n    Promise.resolve(matchesCountMsg).then(msg => {\n      this.findResultsCount.textContent = msg;\n      this.findResultsCount.classList.toggle(\"hidden\", !total);\n\n      this._adjustWidth();\n    });\n  }\n\n  open() {\n    if (!this.opened) {\n      this.opened = true;\n      this.toggleButton.classList.add(\"toggled\");\n      this.bar.classList.remove(\"hidden\");\n    }\n\n    this.findField.select();\n    this.findField.focus();\n\n    this._adjustWidth();\n  }\n\n  close() {\n    if (!this.opened) {\n      return;\n    }\n\n    this.opened = false;\n    this.toggleButton.classList.remove(\"toggled\");\n    this.bar.classList.add(\"hidden\");\n    this.eventBus.dispatch(\"findbarclose\", {\n      source: this\n    });\n  }\n\n  toggle() {\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  _adjustWidth() {\n    if (!this.opened) {\n      return;\n    }\n\n    this.bar.classList.remove(\"wrapContainers\");\n    const findbarHeight = this.bar.clientHeight;\n    const inputContainerHeight = this.bar.firstElementChild.clientHeight;\n\n    if (findbarHeight > inputContainerHeight) {\n      this.bar.classList.add(\"wrapContainers\");\n    }\n  }\n\n}\n\nexports.PDFFindBar = PDFFindBar;\n\n/***/ }),\n/* 15 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFFindController = exports.FindState = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _pdf_find_utils = __webpack_require__(16);\n\nvar _ui_utils = __webpack_require__(4);\n\nconst FindState = {\n  FOUND: 0,\n  NOT_FOUND: 1,\n  WRAPPED: 2,\n  PENDING: 3\n};\nexports.FindState = FindState;\nconst FIND_TIMEOUT = 250;\nconst MATCH_SCROLL_OFFSET_TOP = -50;\nconst MATCH_SCROLL_OFFSET_LEFT = -400;\nconst CHARACTERS_TO_NORMALIZE = {\n  \"\\u2018\": \"'\",\n  \"\\u2019\": \"'\",\n  \"\\u201A\": \"'\",\n  \"\\u201B\": \"'\",\n  \"\\u201C\": '\"',\n  \"\\u201D\": '\"',\n  \"\\u201E\": '\"',\n  \"\\u201F\": '\"',\n  \"\\u00BC\": \"1/4\",\n  \"\\u00BD\": \"1/2\",\n  \"\\u00BE\": \"3/4\"\n};\nlet normalizationRegex = null;\n\nfunction normalize(text) {\n  if (!normalizationRegex) {\n    const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join(\"\");\n    normalizationRegex = new RegExp(`[${replace}]`, \"g\");\n  }\n\n  let diffs = null;\n  const normalizedText = text.replace(normalizationRegex, function (ch, index) {\n    const normalizedCh = CHARACTERS_TO_NORMALIZE[ch],\n          diff = normalizedCh.length - ch.length;\n\n    if (diff !== 0) {\n      (diffs || (diffs = [])).push([index, diff]);\n    }\n\n    return normalizedCh;\n  });\n  return [normalizedText, diffs];\n}\n\nfunction getOriginalIndex(matchIndex, diffs = null) {\n  if (!diffs) {\n    return matchIndex;\n  }\n\n  let totalDiff = 0;\n\n  for (const [index, diff] of diffs) {\n    const currentIndex = index + totalDiff;\n\n    if (currentIndex >= matchIndex) {\n      break;\n    }\n\n    if (currentIndex + diff > matchIndex) {\n      totalDiff += matchIndex - currentIndex;\n      break;\n    }\n\n    totalDiff += diff;\n  }\n\n  return matchIndex - totalDiff;\n}\n\nclass PDFFindController {\n  constructor({\n    linkService,\n    eventBus\n  }) {\n    this._linkService = linkService;\n    this._eventBus = eventBus;\n\n    this._reset();\n\n    eventBus._on(\"findbarclose\", this._onFindBarClose.bind(this));\n  }\n\n  get highlightMatches() {\n    return this._highlightMatches;\n  }\n\n  get pageMatches() {\n    return this._pageMatches;\n  }\n\n  get pageMatchesLength() {\n    return this._pageMatchesLength;\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  setDocument(pdfDocument) {\n    if (this._pdfDocument) {\n      this._reset();\n    }\n\n    if (!pdfDocument) {\n      return;\n    }\n\n    this._pdfDocument = pdfDocument;\n\n    this._firstPageCapability.resolve();\n  }\n\n  executeCommand(cmd, state) {\n    if (!state) {\n      return;\n    }\n\n    const pdfDocument = this._pdfDocument;\n\n    if (this._state === null || this._shouldDirtyMatch(cmd, state)) {\n      this._dirtyMatch = true;\n    }\n\n    this._state = state;\n\n    if (cmd !== \"findhighlightallchange\") {\n      this._updateUIState(FindState.PENDING);\n    }\n\n    this._firstPageCapability.promise.then(() => {\n      if (!this._pdfDocument || pdfDocument && this._pdfDocument !== pdfDocument) {\n        return;\n      }\n\n      this._extractText();\n\n      const findbarClosed = !this._highlightMatches;\n      const pendingTimeout = !!this._findTimeout;\n\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n\n      if (cmd === \"find\") {\n        this._findTimeout = setTimeout(() => {\n          this._nextMatch();\n\n          this._findTimeout = null;\n        }, FIND_TIMEOUT);\n      } else if (this._dirtyMatch) {\n        this._nextMatch();\n      } else if (cmd === \"findagain\") {\n        this._nextMatch();\n\n        if (findbarClosed && this._state.highlightAll) {\n          this._updateAllPages();\n        }\n      } else if (cmd === \"findhighlightallchange\") {\n        if (pendingTimeout) {\n          this._nextMatch();\n        } else {\n          this._highlightMatches = true;\n        }\n\n        this._updateAllPages();\n      } else {\n        this._nextMatch();\n      }\n    });\n  }\n\n  scrollMatchIntoView({\n    element = null,\n    pageIndex = -1,\n    matchIndex = -1\n  }) {\n    if (!this._scrollMatches || !element) {\n      return;\n    } else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) {\n      return;\n    } else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) {\n      return;\n    }\n\n    this._scrollMatches = false;\n    const spot = {\n      top: MATCH_SCROLL_OFFSET_TOP,\n      left: MATCH_SCROLL_OFFSET_LEFT\n    };\n    (0, _ui_utils.scrollIntoView)(element, spot, true);\n  }\n\n  _reset() {\n    this._highlightMatches = false;\n    this._scrollMatches = false;\n    this._pdfDocument = null;\n    this._pageMatches = [];\n    this._pageMatchesLength = [];\n    this._state = null;\n    this._selected = {\n      pageIdx: -1,\n      matchIdx: -1\n    };\n    this._offset = {\n      pageIdx: null,\n      matchIdx: null,\n      wrapped: false\n    };\n    this._extractTextPromises = [];\n    this._pageContents = [];\n    this._pageDiffs = [];\n    this._matchesCountTotal = 0;\n    this._pagesToSearch = null;\n    this._pendingFindMatches = Object.create(null);\n    this._resumePageIdx = null;\n    this._dirtyMatch = false;\n    clearTimeout(this._findTimeout);\n    this._findTimeout = null;\n    this._firstPageCapability = (0, _pdfjsLib.createPromiseCapability)();\n  }\n\n  get _query() {\n    if (this._state.query !== this._rawQuery) {\n      this._rawQuery = this._state.query;\n      [this._normalizedQuery] = normalize(this._state.query);\n    }\n\n    return this._normalizedQuery;\n  }\n\n  _shouldDirtyMatch(cmd, state) {\n    if (state.query !== this._state.query) {\n      return true;\n    }\n\n    switch (cmd) {\n      case \"findagain\":\n        const pageNumber = this._selected.pageIdx + 1;\n        const linkService = this._linkService;\n\n        if (pageNumber >= 1 && pageNumber <= linkService.pagesCount && pageNumber !== linkService.page && !linkService.isPageVisible(pageNumber)) {\n          return true;\n        }\n\n        return false;\n\n      case \"findhighlightallchange\":\n        return false;\n    }\n\n    return true;\n  }\n\n  _prepareMatches(matchesWithLength, matches, matchesLength) {\n    function isSubTerm(currentIndex) {\n      const currentElem = matchesWithLength[currentIndex];\n      const nextElem = matchesWithLength[currentIndex + 1];\n\n      if (currentIndex < matchesWithLength.length - 1 && currentElem.match === nextElem.match) {\n        currentElem.skipped = true;\n        return true;\n      }\n\n      for (let i = currentIndex - 1; i >= 0; i--) {\n        const prevElem = matchesWithLength[i];\n\n        if (prevElem.skipped) {\n          continue;\n        }\n\n        if (prevElem.match + prevElem.matchLength < currentElem.match) {\n          break;\n        }\n\n        if (prevElem.match + prevElem.matchLength >= currentElem.match + currentElem.matchLength) {\n          currentElem.skipped = true;\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    matchesWithLength.sort(function (a, b) {\n      return a.match === b.match ? a.matchLength - b.matchLength : a.match - b.match;\n    });\n\n    for (let i = 0, len = matchesWithLength.length; i < len; i++) {\n      if (isSubTerm(i)) {\n        continue;\n      }\n\n      matches.push(matchesWithLength[i].match);\n      matchesLength.push(matchesWithLength[i].matchLength);\n    }\n  }\n\n  _isEntireWord(content, startIdx, length) {\n    if (startIdx > 0) {\n      const first = content.charCodeAt(startIdx);\n      const limit = content.charCodeAt(startIdx - 1);\n\n      if ((0, _pdf_find_utils.getCharacterType)(first) === (0, _pdf_find_utils.getCharacterType)(limit)) {\n        return false;\n      }\n    }\n\n    const endIdx = startIdx + length - 1;\n\n    if (endIdx < content.length - 1) {\n      const last = content.charCodeAt(endIdx);\n      const limit = content.charCodeAt(endIdx + 1);\n\n      if ((0, _pdf_find_utils.getCharacterType)(last) === (0, _pdf_find_utils.getCharacterType)(limit)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  _calculatePhraseMatch(query, pageIndex, pageContent, pageDiffs, entireWord) {\n    const matches = [],\n          matchesLength = [];\n    const queryLen = query.length;\n    let matchIdx = -queryLen;\n\n    while (true) {\n      matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n\n      if (matchIdx === -1) {\n        break;\n      }\n\n      if (entireWord && !this._isEntireWord(pageContent, matchIdx, queryLen)) {\n        continue;\n      }\n\n      const originalMatchIdx = getOriginalIndex(matchIdx, pageDiffs),\n            matchEnd = matchIdx + queryLen - 1,\n            originalQueryLen = getOriginalIndex(matchEnd, pageDiffs) - originalMatchIdx + 1;\n      matches.push(originalMatchIdx);\n      matchesLength.push(originalQueryLen);\n    }\n\n    this._pageMatches[pageIndex] = matches;\n    this._pageMatchesLength[pageIndex] = matchesLength;\n  }\n\n  _calculateWordMatch(query, pageIndex, pageContent, pageDiffs, entireWord) {\n    const matchesWithLength = [];\n    const queryArray = query.match(/\\S+/g);\n\n    for (let i = 0, len = queryArray.length; i < len; i++) {\n      const subquery = queryArray[i];\n      const subqueryLen = subquery.length;\n      let matchIdx = -subqueryLen;\n\n      while (true) {\n        matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n\n        if (matchIdx === -1) {\n          break;\n        }\n\n        if (entireWord && !this._isEntireWord(pageContent, matchIdx, subqueryLen)) {\n          continue;\n        }\n\n        const originalMatchIdx = getOriginalIndex(matchIdx, pageDiffs),\n              matchEnd = matchIdx + subqueryLen - 1,\n              originalQueryLen = getOriginalIndex(matchEnd, pageDiffs) - originalMatchIdx + 1;\n        matchesWithLength.push({\n          match: originalMatchIdx,\n          matchLength: originalQueryLen,\n          skipped: false\n        });\n      }\n    }\n\n    this._pageMatchesLength[pageIndex] = [];\n    this._pageMatches[pageIndex] = [];\n\n    this._prepareMatches(matchesWithLength, this._pageMatches[pageIndex], this._pageMatchesLength[pageIndex]);\n  }\n\n  _calculateMatch(pageIndex) {\n    let pageContent = this._pageContents[pageIndex];\n    const pageDiffs = this._pageDiffs[pageIndex];\n    let query = this._query;\n    const {\n      caseSensitive,\n      entireWord,\n      phraseSearch\n    } = this._state;\n\n    if (query.length === 0) {\n      return;\n    }\n\n    if (!caseSensitive) {\n      pageContent = pageContent.toLowerCase();\n      query = query.toLowerCase();\n    }\n\n    if (phraseSearch) {\n      this._calculatePhraseMatch(query, pageIndex, pageContent, pageDiffs, entireWord);\n    } else {\n      this._calculateWordMatch(query, pageIndex, pageContent, pageDiffs, entireWord);\n    }\n\n    if (this._state.highlightAll) {\n      this._updatePage(pageIndex);\n    }\n\n    if (this._resumePageIdx === pageIndex) {\n      this._resumePageIdx = null;\n\n      this._nextPageMatch();\n    }\n\n    const pageMatchesCount = this._pageMatches[pageIndex].length;\n\n    if (pageMatchesCount > 0) {\n      this._matchesCountTotal += pageMatchesCount;\n\n      this._updateUIResultsCount();\n    }\n  }\n\n  _extractText() {\n    if (this._extractTextPromises.length > 0) {\n      return;\n    }\n\n    let promise = Promise.resolve();\n\n    for (let i = 0, ii = this._linkService.pagesCount; i < ii; i++) {\n      const extractTextCapability = (0, _pdfjsLib.createPromiseCapability)();\n      this._extractTextPromises[i] = extractTextCapability.promise;\n      promise = promise.then(() => {\n        return this._pdfDocument.getPage(i + 1).then(pdfPage => {\n          return pdfPage.getTextContent({\n            normalizeWhitespace: true\n          });\n        }).then(textContent => {\n          const textItems = textContent.items;\n          const strBuf = [];\n\n          for (let j = 0, jj = textItems.length; j < jj; j++) {\n            strBuf.push(textItems[j].str);\n          }\n\n          [this._pageContents[i], this._pageDiffs[i]] = normalize(strBuf.join(\"\"));\n          extractTextCapability.resolve(i);\n        }, reason => {\n          console.error(`Unable to get text content for page ${i + 1}`, reason);\n          this._pageContents[i] = \"\";\n          this._pageDiffs[i] = null;\n          extractTextCapability.resolve(i);\n        });\n      });\n    }\n  }\n\n  _updatePage(index) {\n    if (this._scrollMatches && this._selected.pageIdx === index) {\n      this._linkService.page = index + 1;\n    }\n\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: index\n    });\n  }\n\n  _updateAllPages() {\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: -1\n    });\n  }\n\n  _nextMatch() {\n    const previous = this._state.findPrevious;\n    const currentPageIndex = this._linkService.page - 1;\n    const numPages = this._linkService.pagesCount;\n    this._highlightMatches = true;\n\n    if (this._dirtyMatch) {\n      this._dirtyMatch = false;\n      this._selected.pageIdx = this._selected.matchIdx = -1;\n      this._offset.pageIdx = currentPageIndex;\n      this._offset.matchIdx = null;\n      this._offset.wrapped = false;\n      this._resumePageIdx = null;\n      this._pageMatches.length = 0;\n      this._pageMatchesLength.length = 0;\n      this._matchesCountTotal = 0;\n\n      this._updateAllPages();\n\n      for (let i = 0; i < numPages; i++) {\n        if (this._pendingFindMatches[i] === true) {\n          continue;\n        }\n\n        this._pendingFindMatches[i] = true;\n\n        this._extractTextPromises[i].then(pageIdx => {\n          delete this._pendingFindMatches[pageIdx];\n\n          this._calculateMatch(pageIdx);\n        });\n      }\n    }\n\n    if (this._query === \"\") {\n      this._updateUIState(FindState.FOUND);\n\n      return;\n    }\n\n    if (this._resumePageIdx) {\n      return;\n    }\n\n    const offset = this._offset;\n    this._pagesToSearch = numPages;\n\n    if (offset.matchIdx !== null) {\n      const numPageMatches = this._pageMatches[offset.pageIdx].length;\n\n      if (!previous && offset.matchIdx + 1 < numPageMatches || previous && offset.matchIdx > 0) {\n        offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n\n        this._updateMatch(true);\n\n        return;\n      }\n\n      this._advanceOffsetPage(previous);\n    }\n\n    this._nextPageMatch();\n  }\n\n  _matchesReady(matches) {\n    const offset = this._offset;\n    const numMatches = matches.length;\n    const previous = this._state.findPrevious;\n\n    if (numMatches) {\n      offset.matchIdx = previous ? numMatches - 1 : 0;\n\n      this._updateMatch(true);\n\n      return true;\n    }\n\n    this._advanceOffsetPage(previous);\n\n    if (offset.wrapped) {\n      offset.matchIdx = null;\n\n      if (this._pagesToSearch < 0) {\n        this._updateMatch(false);\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _nextPageMatch() {\n    if (this._resumePageIdx !== null) {\n      console.error(\"There can only be one pending page.\");\n    }\n\n    let matches = null;\n\n    do {\n      const pageIdx = this._offset.pageIdx;\n      matches = this._pageMatches[pageIdx];\n\n      if (!matches) {\n        this._resumePageIdx = pageIdx;\n        break;\n      }\n    } while (!this._matchesReady(matches));\n  }\n\n  _advanceOffsetPage(previous) {\n    const offset = this._offset;\n    const numPages = this._linkService.pagesCount;\n    offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n    offset.matchIdx = null;\n    this._pagesToSearch--;\n\n    if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n      offset.pageIdx = previous ? numPages - 1 : 0;\n      offset.wrapped = true;\n    }\n  }\n\n  _updateMatch(found = false) {\n    let state = FindState.NOT_FOUND;\n    const wrapped = this._offset.wrapped;\n    this._offset.wrapped = false;\n\n    if (found) {\n      const previousPage = this._selected.pageIdx;\n      this._selected.pageIdx = this._offset.pageIdx;\n      this._selected.matchIdx = this._offset.matchIdx;\n      state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n\n      if (previousPage !== -1 && previousPage !== this._selected.pageIdx) {\n        this._updatePage(previousPage);\n      }\n    }\n\n    this._updateUIState(state, this._state.findPrevious);\n\n    if (this._selected.pageIdx !== -1) {\n      this._scrollMatches = true;\n\n      this._updatePage(this._selected.pageIdx);\n    }\n  }\n\n  _onFindBarClose(evt) {\n    const pdfDocument = this._pdfDocument;\n\n    this._firstPageCapability.promise.then(() => {\n      if (!this._pdfDocument || pdfDocument && this._pdfDocument !== pdfDocument) {\n        return;\n      }\n\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n\n      if (this._resumePageIdx) {\n        this._resumePageIdx = null;\n        this._dirtyMatch = true;\n      }\n\n      this._updateUIState(FindState.FOUND);\n\n      this._highlightMatches = false;\n\n      this._updateAllPages();\n    });\n  }\n\n  _requestMatchesCount() {\n    const {\n      pageIdx,\n      matchIdx\n    } = this._selected;\n    let current = 0,\n        total = this._matchesCountTotal;\n\n    if (matchIdx !== -1) {\n      for (let i = 0; i < pageIdx; i++) {\n        current += this._pageMatches[i] && this._pageMatches[i].length || 0;\n      }\n\n      current += matchIdx + 1;\n    }\n\n    if (current < 1 || current > total) {\n      current = total = 0;\n    }\n\n    return {\n      current,\n      total\n    };\n  }\n\n  _updateUIResultsCount() {\n    this._eventBus.dispatch(\"updatefindmatchescount\", {\n      source: this,\n      matchesCount: this._requestMatchesCount()\n    });\n  }\n\n  _updateUIState(state, previous) {\n    this._eventBus.dispatch(\"updatefindcontrolstate\", {\n      source: this,\n      state,\n      previous,\n      matchesCount: this._requestMatchesCount(),\n      rawQuery: this._state ? this._state.query : null\n    });\n  }\n\n}\n\nexports.PDFFindController = PDFFindController;\n\n/***/ }),\n/* 16 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getCharacterType = getCharacterType;\nexports.CharacterType = void 0;\nconst CharacterType = {\n  SPACE: 0,\n  ALPHA_LETTER: 1,\n  PUNCT: 2,\n  HAN_LETTER: 3,\n  KATAKANA_LETTER: 4,\n  HIRAGANA_LETTER: 5,\n  HALFWIDTH_KATAKANA_LETTER: 6,\n  THAI_LETTER: 7\n};\nexports.CharacterType = CharacterType;\n\nfunction isAlphabeticalScript(charCode) {\n  return charCode < 0x2e80;\n}\n\nfunction isAscii(charCode) {\n  return (charCode & 0xff80) === 0;\n}\n\nfunction isAsciiAlpha(charCode) {\n  return charCode >= 0x61 && charCode <= 0x7a || charCode >= 0x41 && charCode <= 0x5a;\n}\n\nfunction isAsciiDigit(charCode) {\n  return charCode >= 0x30 && charCode <= 0x39;\n}\n\nfunction isAsciiSpace(charCode) {\n  return charCode === 0x20 || charCode === 0x09 || charCode === 0x0d || charCode === 0x0a;\n}\n\nfunction isHan(charCode) {\n  return charCode >= 0x3400 && charCode <= 0x9fff || charCode >= 0xf900 && charCode <= 0xfaff;\n}\n\nfunction isKatakana(charCode) {\n  return charCode >= 0x30a0 && charCode <= 0x30ff;\n}\n\nfunction isHiragana(charCode) {\n  return charCode >= 0x3040 && charCode <= 0x309f;\n}\n\nfunction isHalfwidthKatakana(charCode) {\n  return charCode >= 0xff60 && charCode <= 0xff9f;\n}\n\nfunction isThai(charCode) {\n  return (charCode & 0xff80) === 0x0e00;\n}\n\nfunction getCharacterType(charCode) {\n  if (isAlphabeticalScript(charCode)) {\n    if (isAscii(charCode)) {\n      if (isAsciiSpace(charCode)) {\n        return CharacterType.SPACE;\n      } else if (isAsciiAlpha(charCode) || isAsciiDigit(charCode) || charCode === 0x5f) {\n        return CharacterType.ALPHA_LETTER;\n      }\n\n      return CharacterType.PUNCT;\n    } else if (isThai(charCode)) {\n      return CharacterType.THAI_LETTER;\n    } else if (charCode === 0xa0) {\n      return CharacterType.SPACE;\n    }\n\n    return CharacterType.ALPHA_LETTER;\n  }\n\n  if (isHan(charCode)) {\n    return CharacterType.HAN_LETTER;\n  } else if (isKatakana(charCode)) {\n    return CharacterType.KATAKANA_LETTER;\n  } else if (isHiragana(charCode)) {\n    return CharacterType.HIRAGANA_LETTER;\n  } else if (isHalfwidthKatakana(charCode)) {\n    return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n  }\n\n  return CharacterType.ALPHA_LETTER;\n}\n\n/***/ }),\n/* 17 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.isDestArraysEqual = isDestArraysEqual;\nexports.isDestHashesEqual = isDestHashesEqual;\nexports.PDFHistory = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nconst HASH_CHANGE_TIMEOUT = 1000;\nconst POSITION_UPDATED_THRESHOLD = 50;\nconst UPDATE_VIEWAREA_TIMEOUT = 1000;\n\nfunction getCurrentHash() {\n  return document.location.hash;\n}\n\nclass PDFHistory {\n  constructor({\n    linkService,\n    eventBus\n  }) {\n    this.linkService = linkService;\n    this.eventBus = eventBus;\n    this._initialized = false;\n    this._fingerprint = \"\";\n    this.reset();\n    this._boundEvents = null;\n    this._isViewerInPresentationMode = false;\n\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      this._isViewerInPresentationMode = evt.state !== _ui_utils.PresentationModeState.NORMAL;\n    });\n\n    this.eventBus._on(\"pagesinit\", () => {\n      this._isPagesLoaded = false;\n\n      this.eventBus._on(\"pagesloaded\", evt => {\n        this._isPagesLoaded = !!evt.pagesCount;\n      }, {\n        once: true\n      });\n    });\n  }\n\n  initialize({\n    fingerprint,\n    resetHistory = false,\n    updateUrl = false\n  }) {\n    if (!fingerprint || typeof fingerprint !== \"string\") {\n      console.error('PDFHistory.initialize: The \"fingerprint\" must be a non-empty string.');\n      return;\n    }\n\n    if (this._initialized) {\n      this.reset();\n    }\n\n    const reInitialized = this._fingerprint !== \"\" && this._fingerprint !== fingerprint;\n    this._fingerprint = fingerprint;\n    this._updateUrl = updateUrl === true;\n    this._initialized = true;\n\n    this._bindEvents();\n\n    const state = window.history.state;\n    this._popStateInProgress = false;\n    this._blockHashChange = 0;\n    this._currentHash = getCurrentHash();\n    this._numPositionUpdates = 0;\n    this._uid = this._maxUid = 0;\n    this._destination = null;\n    this._position = null;\n\n    if (!this._isValidState(state, true) || resetHistory) {\n      const {\n        hash,\n        page,\n        rotation\n      } = this._parseCurrentHash(true);\n\n      if (!hash || reInitialized || resetHistory) {\n        this._pushOrReplaceState(null, true);\n\n        return;\n      }\n\n      this._pushOrReplaceState({\n        hash,\n        page,\n        rotation\n      }, true);\n\n      return;\n    }\n\n    const destination = state.destination;\n\n    this._updateInternalState(destination, state.uid, true);\n\n    if (destination.rotation !== undefined) {\n      this._initialRotation = destination.rotation;\n    }\n\n    if (destination.dest) {\n      this._initialBookmark = JSON.stringify(destination.dest);\n      this._destination.page = null;\n    } else if (destination.hash) {\n      this._initialBookmark = destination.hash;\n    } else if (destination.page) {\n      this._initialBookmark = `page=${destination.page}`;\n    }\n  }\n\n  reset() {\n    if (this._initialized) {\n      this._pageHide();\n\n      this._initialized = false;\n\n      this._unbindEvents();\n    }\n\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n\n    this._initialBookmark = null;\n    this._initialRotation = null;\n  }\n\n  push({\n    namedDest = null,\n    explicitDest,\n    pageNumber\n  }) {\n    if (!this._initialized) {\n      return;\n    }\n\n    if (namedDest && typeof namedDest !== \"string\") {\n      console.error(\"PDFHistory.push: \" + `\"${namedDest}\" is not a valid namedDest parameter.`);\n      return;\n    } else if (!Array.isArray(explicitDest)) {\n      console.error(\"PDFHistory.push: \" + `\"${explicitDest}\" is not a valid explicitDest parameter.`);\n      return;\n    } else if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.linkService.pagesCount)) {\n      if (pageNumber !== null || this._destination) {\n        console.error(\"PDFHistory.push: \" + `\"${pageNumber}\" is not a valid pageNumber parameter.`);\n        return;\n      }\n    }\n\n    const hash = namedDest || JSON.stringify(explicitDest);\n\n    if (!hash) {\n      return;\n    }\n\n    let forceReplace = false;\n\n    if (this._destination && (isDestHashesEqual(this._destination.hash, hash) || isDestArraysEqual(this._destination.dest, explicitDest))) {\n      if (this._destination.page) {\n        return;\n      }\n\n      forceReplace = true;\n    }\n\n    if (this._popStateInProgress && !forceReplace) {\n      return;\n    }\n\n    this._pushOrReplaceState({\n      dest: explicitDest,\n      hash,\n      page: pageNumber,\n      rotation: this.linkService.rotation\n    }, forceReplace);\n\n    if (!this._popStateInProgress) {\n      this._popStateInProgress = true;\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n\n  pushPage(pageNumber) {\n    if (!this._initialized) {\n      return;\n    }\n\n    if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.linkService.pagesCount)) {\n      console.error(`PDFHistory.pushPage: \"${pageNumber}\" is not a valid page number.`);\n      return;\n    }\n\n    if (this._destination && this._destination.page === pageNumber) { //?.\n      return;\n    }\n\n    if (this._popStateInProgress) {\n      return;\n    }\n\n    this._pushOrReplaceState({\n      hash: `page=${pageNumber}`,\n      page: pageNumber,\n      rotation: this.linkService.rotation\n    });\n\n    if (!this._popStateInProgress) {\n      this._popStateInProgress = true;\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n\n  pushCurrentPosition() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n\n    this._tryPushCurrentPosition();\n  }\n\n  back() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n\n    const state = window.history.state;\n\n    if (this._isValidState(state) && state.uid > 0) {\n      window.history.back();\n    }\n  }\n\n  forward() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n\n    const state = window.history.state;\n\n    if (this._isValidState(state) && state.uid < this._maxUid) {\n      window.history.forward();\n    }\n  }\n\n  get popStateInProgress() {\n    return this._initialized && (this._popStateInProgress || this._blockHashChange > 0);\n  }\n\n  get initialBookmark() {\n    return this._initialized ? this._initialBookmark : null;\n  }\n\n  get initialRotation() {\n    return this._initialized ? this._initialRotation : null;\n  }\n\n  _pushOrReplaceState(destination, forceReplace = false) {\n    const shouldReplace = forceReplace || !this._destination;\n    const newState = {\n      fingerprint: this._fingerprint,\n      uid: shouldReplace ? this._uid : this._uid + 1,\n      destination\n    };\n\n    this._updateInternalState(destination, newState.uid);\n\n    let newUrl;\n\n    if (this._updateUrl && destination && destination.hash) { //?.\n      const baseUrl = document.location.href.split(\"#\")[0];\n\n      if (!baseUrl.startsWith(\"file://\")) {\n        newUrl = `${baseUrl}#${destination.hash}`;\n      }\n    }\n\n    if (shouldReplace) {\n      window.history.replaceState(newState, \"\", newUrl);\n    } else {\n      window.history.pushState(newState, \"\", newUrl);\n    }\n  }\n\n  _tryPushCurrentPosition(temporary = false) {\n    if (!this._position) {\n      return;\n    }\n\n    let position = this._position;\n\n    if (temporary) {\n      position = Object.assign(Object.create(null), this._position);\n      position.temporary = true;\n    }\n\n    if (!this._destination) {\n      this._pushOrReplaceState(position);\n\n      return;\n    }\n\n    if (this._destination.temporary) {\n      this._pushOrReplaceState(position, true);\n\n      return;\n    }\n\n    if (this._destination.hash === position.hash) {\n      return;\n    }\n\n    if (!this._destination.page && (POSITION_UPDATED_THRESHOLD <= 0 || this._numPositionUpdates <= POSITION_UPDATED_THRESHOLD)) {\n      return;\n    }\n\n    let forceReplace = false;\n\n    if (this._destination.page >= position.first && this._destination.page <= position.page) {\n      if (this._destination.dest || !this._destination.first) {\n        return;\n      }\n\n      forceReplace = true;\n    }\n\n    this._pushOrReplaceState(position, forceReplace);\n  }\n\n  _isValidState(state, checkReload = false) {\n    if (!state) {\n      return false;\n    }\n\n    if (state.fingerprint !== this._fingerprint) {\n      if (checkReload) {\n        if (typeof state.fingerprint !== \"string\" || state.fingerprint.length !== this._fingerprint.length) {\n          return false;\n        }\n\n        const [perfEntry] = performance.getEntriesByType(\"navigation\");\n\n        if (perfEntry && perfEntry.type !== \"reload\") { //?.\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n\n    if (!Number.isInteger(state.uid) || state.uid < 0) {\n      return false;\n    }\n\n    if (state.destination === null || typeof state.destination !== \"object\") {\n      return false;\n    }\n\n    return true;\n  }\n\n  _updateInternalState(destination, uid, removeTemporary = false) {\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n\n    if (removeTemporary && destination && destination.temporary) { //?.\n      delete destination.temporary;\n    }\n\n    this._destination = destination;\n    this._uid = uid;\n    this._maxUid = Math.max(this._maxUid, uid);\n    this._numPositionUpdates = 0;\n  }\n\n  _parseCurrentHash(checkNameddest = false) {\n    const hash = unescape(getCurrentHash()).substring(1);\n    const params = (0, _ui_utils.parseQueryString)(hash);\n    const nameddest = params.nameddest || \"\";\n    let page = params.page | 0;\n\n    if (!(Number.isInteger(page) && page > 0 && page <= this.linkService.pagesCount) || checkNameddest && nameddest.length > 0) {\n      page = null;\n    }\n\n    return {\n      hash,\n      page,\n      rotation: this.linkService.rotation\n    };\n  }\n\n  _updateViewarea({\n    location\n  }) {\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n\n    this._position = {\n      hash: this._isViewerInPresentationMode ? `page=${location.pageNumber}` : location.pdfOpenParams.substring(1),\n      page: this.linkService.page,\n      first: location.pageNumber,\n      rotation: location.rotation\n    };\n\n    if (this._popStateInProgress) {\n      return;\n    }\n\n    if (POSITION_UPDATED_THRESHOLD > 0 && this._isPagesLoaded && this._destination && !this._destination.page) {\n      this._numPositionUpdates++;\n    }\n\n    if (UPDATE_VIEWAREA_TIMEOUT > 0) {\n      this._updateViewareaTimeout = setTimeout(() => {\n        if (!this._popStateInProgress) {\n          this._tryPushCurrentPosition(true);\n        }\n\n        this._updateViewareaTimeout = null;\n      }, UPDATE_VIEWAREA_TIMEOUT);\n    }\n  }\n\n  _popState({\n    state\n  }) {\n    const newHash = getCurrentHash(),\n          hashChanged = this._currentHash !== newHash;\n    this._currentHash = newHash;\n\n    if (!state) {\n      this._uid++;\n\n      const {\n        hash,\n        page,\n        rotation\n      } = this._parseCurrentHash();\n\n      this._pushOrReplaceState({\n        hash,\n        page,\n        rotation\n      }, true);\n\n      return;\n    }\n\n    if (!this._isValidState(state)) {\n      return;\n    }\n\n    this._popStateInProgress = true;\n\n    if (hashChanged) {\n      this._blockHashChange++;\n      (0, _ui_utils.waitOnEventOrTimeout)({\n        target: window,\n        name: \"hashchange\",\n        delay: HASH_CHANGE_TIMEOUT\n      }).then(() => {\n        this._blockHashChange--;\n      });\n    }\n\n    const destination = state.destination;\n\n    this._updateInternalState(destination, state.uid, true);\n\n    if ((0, _ui_utils.isValidRotation)(destination.rotation)) {\n      this.linkService.rotation = destination.rotation;\n    }\n\n    if (destination.dest) {\n      this.linkService.goToDestination(destination.dest);\n    } else if (destination.hash) {\n      this.linkService.setHash(destination.hash);\n    } else if (destination.page) {\n      this.linkService.page = destination.page;\n    }\n\n    Promise.resolve().then(() => {\n      this._popStateInProgress = false;\n    });\n  }\n\n  _pageHide() {\n    if (!this._destination || this._destination.temporary) {\n      this._tryPushCurrentPosition();\n    }\n  }\n\n  _bindEvents() {\n    if (this._boundEvents) {\n      return;\n    }\n\n    this._boundEvents = {\n      updateViewarea: this._updateViewarea.bind(this),\n      popState: this._popState.bind(this),\n      pageHide: this._pageHide.bind(this)\n    };\n\n    this.eventBus._on(\"updateviewarea\", this._boundEvents.updateViewarea);\n\n    window.addEventListener(\"popstate\", this._boundEvents.popState);\n    window.addEventListener(\"pagehide\", this._boundEvents.pageHide);\n  }\n\n  _unbindEvents() {\n    if (!this._boundEvents) {\n      return;\n    }\n\n    this.eventBus._off(\"updateviewarea\", this._boundEvents.updateViewarea);\n\n    window.removeEventListener(\"popstate\", this._boundEvents.popState);\n    window.removeEventListener(\"pagehide\", this._boundEvents.pageHide);\n    this._boundEvents = null;\n  }\n\n}\n\nexports.PDFHistory = PDFHistory;\n\nfunction isDestHashesEqual(destHash, pushHash) {\n  if (typeof destHash !== \"string\" || typeof pushHash !== \"string\") {\n    return false;\n  }\n\n  if (destHash === pushHash) {\n    return true;\n  }\n\n  const {\n    nameddest\n  } = (0, _ui_utils.parseQueryString)(destHash);\n\n  if (nameddest === pushHash) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isDestArraysEqual(firstDest, secondDest) {\n  function isEntryEqual(first, second) {\n    if (typeof first !== typeof second) {\n      return false;\n    }\n\n    if (Array.isArray(first) || Array.isArray(second)) {\n      return false;\n    }\n\n    if (first !== null && typeof first === \"object\" && second !== null) {\n      if (Object.keys(first).length !== Object.keys(second).length) {\n        return false;\n      }\n\n      for (const key in first) {\n        if (!isEntryEqual(first[key], second[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return first === second || Number.isNaN(first) && Number.isNaN(second);\n  }\n\n  if (!(Array.isArray(firstDest) && Array.isArray(secondDest))) {\n    return false;\n  }\n\n  if (firstDest.length !== secondDest.length) {\n    return false;\n  }\n\n  for (let i = 0, ii = firstDest.length; i < ii; i++) {\n    if (!isEntryEqual(firstDest[i], secondDest[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/***/ }),\n/* 18 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFLayerViewer = void 0;\n\nvar _base_tree_viewer = __webpack_require__(12);\n\nclass PDFLayerViewer extends _base_tree_viewer.BaseTreeViewer {\n  constructor(options) {\n    super(options);\n    this.l10n = options.l10n;\n\n    this.eventBus._on(\"resetlayers\", this._resetLayers.bind(this));\n\n    this.eventBus._on(\"togglelayerstree\", this._toggleAllTreeItems.bind(this));\n  }\n\n  reset() {\n    super.reset();\n    this._optionalContentConfig = null;\n  }\n\n  _dispatchEvent(layersCount) {\n    this.eventBus.dispatch(\"layersloaded\", {\n      source: this,\n      layersCount\n    });\n  }\n\n  _bindLink(element, {\n    groupId,\n    input\n  }) {\n    const setVisibility = () => {\n      this._optionalContentConfig.setVisibility(groupId, input.checked);\n\n      this.eventBus.dispatch(\"optionalcontentconfig\", {\n        source: this,\n        promise: Promise.resolve(this._optionalContentConfig)\n      });\n    };\n\n    element.onclick = evt => {\n      if (evt.target === input) {\n        setVisibility();\n        return true;\n      } else if (evt.target !== element) {\n        return true;\n      }\n\n      input.checked = !input.checked;\n      setVisibility();\n      return false;\n    };\n  }\n\n  async _setNestedName(element, {\n    name = null\n  }) {\n    if (typeof name === \"string\") {\n      element.textContent = this._normalizeTextContent(name);\n      return;\n    }\n\n    element.textContent = await this.l10n.get(\"additional_layers\", null, \"Additional Layers\");\n    element.style.fontStyle = \"italic\";\n  }\n\n  _addToggleButton(div, {\n    name = null\n  }) {\n    super._addToggleButton(div, name === null);\n  }\n\n  _toggleAllTreeItems() {\n    if (!this._optionalContentConfig) {\n      return;\n    }\n\n    super._toggleAllTreeItems();\n  }\n\n  render({\n    optionalContentConfig,\n    pdfDocument\n  }) {\n    if (this._optionalContentConfig) {\n      this.reset();\n    }\n\n    this._optionalContentConfig = optionalContentConfig || null;\n    this._pdfDocument = pdfDocument || null;\n    const groups = optionalContentConfig && optionalContentConfig.getOrder();\n\n    if (!groups) {\n      this._dispatchEvent(0);\n\n      return;\n    }\n\n    const fragment = document.createDocumentFragment(),\n          queue = [{\n      parent: fragment,\n      groups\n    }];\n    let layersCount = 0,\n        hasAnyNesting = false;\n\n    while (queue.length > 0) {\n      const levelData = queue.shift();\n\n      for (const groupId of levelData.groups) {\n        const div = document.createElement(\"div\");\n        div.className = \"treeItem\";\n        const element = document.createElement(\"a\");\n        div.appendChild(element);\n\n        if (typeof groupId === \"object\") {\n          hasAnyNesting = true;\n\n          this._addToggleButton(div, groupId);\n\n          this._setNestedName(element, groupId);\n\n          const itemsDiv = document.createElement(\"div\");\n          itemsDiv.className = \"treeItems\";\n          div.appendChild(itemsDiv);\n          queue.push({\n            parent: itemsDiv,\n            groups: groupId.order\n          });\n        } else {\n          const group = optionalContentConfig.getGroup(groupId);\n          const input = document.createElement(\"input\");\n\n          this._bindLink(element, {\n            groupId,\n            input\n          });\n\n          input.type = \"checkbox\";\n          input.id = groupId;\n          input.checked = group.visible;\n          const label = document.createElement(\"label\");\n          label.setAttribute(\"for\", groupId);\n          label.textContent = this._normalizeTextContent(group.name);\n          element.appendChild(input);\n          element.appendChild(label);\n          layersCount++;\n        }\n\n        levelData.parent.appendChild(div);\n      }\n    }\n\n    this._finishRendering(fragment, layersCount, hasAnyNesting);\n  }\n\n  async _resetLayers() {\n    if (!this._optionalContentConfig) {\n      return;\n    }\n\n    const optionalContentConfig = await this._pdfDocument.getOptionalContentConfig();\n    this.eventBus.dispatch(\"optionalcontentconfig\", {\n      source: this,\n      promise: Promise.resolve(optionalContentConfig)\n    });\n    this.render({\n      optionalContentConfig,\n      pdfDocument: this._pdfDocument\n    });\n  }\n\n}\n\nexports.PDFLayerViewer = PDFLayerViewer;\n\n/***/ }),\n/* 19 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SimpleLinkService = exports.PDFLinkService = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nclass PDFLinkService {\n  constructor({\n    eventBus,\n    externalLinkTarget = null,\n    externalLinkRel = null,\n    externalLinkEnabled = true,\n    ignoreDestinationZoom = false\n  } = {}) {\n    this.eventBus = eventBus;\n    this.externalLinkTarget = externalLinkTarget;\n    this.externalLinkRel = externalLinkRel;\n    this.externalLinkEnabled = externalLinkEnabled;\n    this._ignoreDestinationZoom = ignoreDestinationZoom;\n    this.baseUrl = null;\n    this.pdfDocument = null;\n    this.pdfViewer = null;\n    this.pdfHistory = null;\n    this._pagesRefCache = null;\n  }\n\n  setDocument(pdfDocument, baseUrl = null) {\n    this.baseUrl = baseUrl;\n    this.pdfDocument = pdfDocument;\n    this._pagesRefCache = Object.create(null);\n  }\n\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  setHistory(pdfHistory) {\n    this.pdfHistory = pdfHistory;\n  }\n\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  }\n\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  }\n\n  set page(value) {\n    this.pdfViewer.currentPageNumber = value;\n  }\n\n  get rotation() {\n    return this.pdfViewer.pagesRotation;\n  }\n\n  set rotation(value) {\n    this.pdfViewer.pagesRotation = value;\n  }\n\n  navigateTo(dest) {\n    console.error(\"Deprecated method: `navigateTo`, use `goToDestination` instead.\");\n    this.goToDestination(dest);\n  }\n\n  _goToDestinationHelper(rawDest, namedDest = null, explicitDest) {\n    const destRef = explicitDest[0];\n    let pageNumber;\n\n    if (destRef instanceof Object) {\n      pageNumber = this._cachedPageNumber(destRef);\n\n      if (pageNumber === null) {\n        this.pdfDocument.getPageIndex(destRef).then(pageIndex => {\n          this.cachePageRef(pageIndex + 1, destRef);\n\n          this._goToDestinationHelper(rawDest, namedDest, explicitDest);\n        }).catch(() => {\n          console.error(`PDFLinkService._goToDestinationHelper: \"${destRef}\" is not ` + `a valid page reference, for dest=\"${rawDest}\".`);\n        });\n        return;\n      }\n    } else if (Number.isInteger(destRef)) {\n      pageNumber = destRef + 1;\n    } else {\n      console.error(`PDFLinkService._goToDestinationHelper: \"${destRef}\" is not ` + `a valid destination reference, for dest=\"${rawDest}\".`);\n      return;\n    }\n\n    if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n      console.error(`PDFLinkService._goToDestinationHelper: \"${pageNumber}\" is not ` + `a valid page number, for dest=\"${rawDest}\".`);\n      return;\n    }\n\n    if (this.pdfHistory) {\n      this.pdfHistory.pushCurrentPosition();\n      this.pdfHistory.push({\n        namedDest,\n        explicitDest,\n        pageNumber\n      });\n    }\n\n    this.pdfViewer.scrollPageIntoView({\n      pageNumber,\n      destArray: explicitDest,\n      ignoreDestinationZoom: this._ignoreDestinationZoom\n    });\n  }\n\n  async goToDestination(dest) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    let namedDest, explicitDest;\n\n    if (typeof dest === \"string\") {\n      namedDest = dest;\n      explicitDest = await this.pdfDocument.getDestination(dest);\n    } else {\n      namedDest = null;\n      explicitDest = await dest;\n    }\n\n    if (!Array.isArray(explicitDest)) {\n      console.error(`PDFLinkService.goToDestination: \"${explicitDest}\" is not ` + `a valid destination array, for dest=\"${dest}\".`);\n      return;\n    }\n\n    this._goToDestinationHelper(dest, namedDest, explicitDest);\n  }\n\n  goToPage(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    const pageNumber = typeof val === \"string\" && this.pdfViewer.pageLabelToPageNumber(val) || val | 0;\n\n    if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.pagesCount)) {\n      console.error(`PDFLinkService.goToPage: \"${val}\" is not a valid page.`);\n      return;\n    }\n\n    if (this.pdfHistory) {\n      this.pdfHistory.pushCurrentPosition();\n      this.pdfHistory.pushPage(pageNumber);\n    }\n\n    this.pdfViewer.scrollPageIntoView({\n      pageNumber\n    });\n  }\n\n  getDestinationHash(dest) {\n    if (typeof dest === \"string\") {\n      if (dest.length > 0) {\n        return this.getAnchorUrl(\"#\" + escape(dest));\n      }\n    } else if (Array.isArray(dest)) {\n      const str = JSON.stringify(dest);\n\n      if (str.length > 0) {\n        return this.getAnchorUrl(\"#\" + escape(str));\n      }\n    }\n\n    return this.getAnchorUrl(\"\");\n  }\n\n  getAnchorUrl(anchor) {\n    return (this.baseUrl || \"\") + anchor;\n  }\n\n  setHash(hash) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    let pageNumber, dest;\n\n    if (hash.includes(\"=\")) {\n      const params = (0, _ui_utils.parseQueryString)(hash);\n\n      if (\"search\" in params) {\n        this.eventBus.dispatch(\"findfromurlhash\", {\n          source: this,\n          query: params.search.replace(/\"/g, \"\"),\n          phraseSearch: params.phrase === \"true\"\n        });\n      }\n\n      if (\"page\" in params) {\n        pageNumber = params.page | 0 || 1;\n      }\n\n      if (\"zoom\" in params) {\n        const zoomArgs = params.zoom.split(\",\");\n        const zoomArg = zoomArgs[0];\n        const zoomArgNumber = parseFloat(zoomArg);\n\n        if (!zoomArg.includes(\"Fit\")) {\n          dest = [null, {\n            name: \"XYZ\"\n          }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null, zoomArgs.length > 2 ? zoomArgs[2] | 0 : null, zoomArgNumber ? zoomArgNumber / 100 : zoomArg];\n        } else {\n          if (zoomArg === \"Fit\" || zoomArg === \"FitB\") {\n            dest = [null, {\n              name: zoomArg\n            }];\n          } else if (zoomArg === \"FitH\" || zoomArg === \"FitBH\" || zoomArg === \"FitV\" || zoomArg === \"FitBV\") {\n            dest = [null, {\n              name: zoomArg\n            }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null];\n          } else if (zoomArg === \"FitR\") {\n            if (zoomArgs.length !== 5) {\n              console.error('PDFLinkService.setHash: Not enough parameters for \"FitR\".');\n            } else {\n              dest = [null, {\n                name: zoomArg\n              }, zoomArgs[1] | 0, zoomArgs[2] | 0, zoomArgs[3] | 0, zoomArgs[4] | 0];\n            }\n          } else {\n            console.error(`PDFLinkService.setHash: \"${zoomArg}\" is not ` + \"a valid zoom value.\");\n          }\n        }\n      }\n\n      if (dest) {\n        this.pdfViewer.scrollPageIntoView({\n          pageNumber: pageNumber || this.page,\n          destArray: dest,\n          allowNegativeOffset: true\n        });\n      } else if (pageNumber) {\n        this.page = pageNumber;\n      }\n\n      if (\"pagemode\" in params) {\n        this.eventBus.dispatch(\"pagemode\", {\n          source: this,\n          mode: params.pagemode\n        });\n      }\n\n      if (\"nameddest\" in params) {\n        this.goToDestination(params.nameddest);\n      }\n    } else {\n      dest = unescape(hash);\n\n      try {\n        dest = JSON.parse(dest);\n\n        if (!Array.isArray(dest)) {\n          dest = dest.toString();\n        }\n      } catch (ex) {}\n\n      if (typeof dest === \"string\" || isValidExplicitDestination(dest)) {\n        this.goToDestination(dest);\n        return;\n      }\n\n      console.error(`PDFLinkService.setHash: \"${unescape(hash)}\" is not ` + \"a valid destination.\");\n    }\n  }\n\n  executeNamedAction(action) {\n    switch (action) {\n      case \"GoBack\":\n        if (this.pdfHistory) {\n          this.pdfHistory.back();\n        }\n\n        break;\n\n      case \"GoForward\":\n        if (this.pdfHistory) {\n          this.pdfHistory.forward();\n        }\n\n        break;\n\n      case \"NextPage\":\n        this.pdfViewer.nextPage();\n        break;\n\n      case \"PrevPage\":\n        this.pdfViewer.previousPage();\n        break;\n\n      case \"LastPage\":\n        this.page = this.pagesCount;\n        break;\n\n      case \"FirstPage\":\n        this.page = 1;\n        break;\n\n      default:\n        break;\n    }\n\n    this.eventBus.dispatch(\"namedaction\", {\n      source: this,\n      action\n    });\n  }\n\n  cachePageRef(pageNum, pageRef) {\n    if (!pageRef) {\n      return;\n    }\n\n    const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    this._pagesRefCache[refStr] = pageNum;\n  }\n\n  _cachedPageNumber(pageRef) {\n    const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    return this._pagesRefCache && this._pagesRefCache[refStr] || null;\n  }\n\n  isPageVisible(pageNumber) {\n    return this.pdfViewer.isPageVisible(pageNumber);\n  }\n\n  isPageCached(pageNumber) {\n    return this.pdfViewer.isPageCached(pageNumber);\n  }\n\n}\n\nexports.PDFLinkService = PDFLinkService;\n\nfunction isValidExplicitDestination(dest) {\n  if (!Array.isArray(dest)) {\n    return false;\n  }\n\n  const destLength = dest.length;\n\n  if (destLength < 2) {\n    return false;\n  }\n\n  const page = dest[0];\n\n  if (!(typeof page === \"object\" && Number.isInteger(page.num) && Number.isInteger(page.gen)) && !(Number.isInteger(page) && page >= 0)) {\n    return false;\n  }\n\n  const zoom = dest[1];\n\n  if (!(typeof zoom === \"object\" && typeof zoom.name === \"string\")) {\n    return false;\n  }\n\n  let allowNull = true;\n\n  switch (zoom.name) {\n    case \"XYZ\":\n      if (destLength !== 5) {\n        return false;\n      }\n\n      break;\n\n    case \"Fit\":\n    case \"FitB\":\n      return destLength === 2;\n\n    case \"FitH\":\n    case \"FitBH\":\n    case \"FitV\":\n    case \"FitBV\":\n      if (destLength !== 3) {\n        return false;\n      }\n\n      break;\n\n    case \"FitR\":\n      if (destLength !== 6) {\n        return false;\n      }\n\n      allowNull = false;\n      break;\n\n    default:\n      return false;\n  }\n\n  for (let i = 2; i < destLength; i++) {\n    const param = dest[i];\n\n    if (!(typeof param === \"number\" || allowNull && param === null)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nclass SimpleLinkService {\n  constructor() {\n    this.externalLinkTarget = null;\n    this.externalLinkRel = null;\n    this.externalLinkEnabled = true;\n    this._ignoreDestinationZoom = false;\n  }\n\n  get pagesCount() {\n    return 0;\n  }\n\n  get page() {\n    return 0;\n  }\n\n  set page(value) {}\n\n  get rotation() {\n    return 0;\n  }\n\n  set rotation(value) {}\n\n  async goToDestination(dest) {}\n\n  goToPage(val) {}\n\n  getDestinationHash(dest) {\n    return \"#\";\n  }\n\n  getAnchorUrl(hash) {\n    return \"#\";\n  }\n\n  setHash(hash) {}\n\n  executeNamedAction(action) {}\n\n  cachePageRef(pageNum, pageRef) {}\n\n  isPageVisible(pageNumber) {\n    return true;\n  }\n\n  isPageCached(pageNumber) {\n    return true;\n  }\n\n}\n\nexports.SimpleLinkService = SimpleLinkService;\n\n/***/ }),\n/* 20 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFOutlineViewer = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _base_tree_viewer = __webpack_require__(12);\n\nvar _ui_utils = __webpack_require__(4);\n\nclass PDFOutlineViewer extends _base_tree_viewer.BaseTreeViewer {\n  constructor(options) {\n    super(options);\n    this.linkService = options.linkService;\n\n    this.eventBus._on(\"toggleoutlinetree\", this._toggleAllTreeItems.bind(this));\n\n    this.eventBus._on(\"currentoutlineitem\", this._currentOutlineItem.bind(this));\n\n    this.eventBus._on(\"pagechanging\", evt => {\n      this._currentPageNumber = evt.pageNumber;\n    });\n\n    this.eventBus._on(\"pagesloaded\", evt => {\n      this._isPagesLoaded = !!evt.pagesCount;\n    });\n\n    this.eventBus._on(\"sidebarviewchanged\", evt => {\n      this._sidebarView = evt.view;\n    });\n  }\n\n  reset() {\n    super.reset();\n    this._outline = null;\n    this._pageNumberToDestHashCapability = null;\n    this._currentPageNumber = 1;\n    this._isPagesLoaded = false;\n  }\n\n  _dispatchEvent(outlineCount) {\n    this.eventBus.dispatch(\"outlineloaded\", {\n      source: this,\n      outlineCount,\n      enableCurrentOutlineItemButton: outlineCount > 0 && !(this._pdfDocument && this._pdfDocument.loadingParams.disableAutoFetch) //?.\n    });\n  }\n\n  _bindLink(element, {\n    url,\n    newWindow,\n    dest\n  }) {\n    const {\n      linkService\n    } = this;\n\n    if (url) {\n      (0, _pdfjsLib.addLinkAttributes)(element, {\n        url,\n        target: newWindow ? _pdfjsLib.LinkTarget.BLANK : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled\n      });\n      return;\n    }\n\n    element.href = linkService.getDestinationHash(dest);\n\n    element.onclick = evt => {\n      this._updateCurrentTreeItem(evt.target.parentNode);\n\n      if (dest) {\n        linkService.goToDestination(dest);\n      }\n\n      return false;\n    };\n  }\n\n  _setStyles(element, {\n    bold,\n    italic\n  }) {\n    if (bold) {\n      element.style.fontWeight = \"bold\";\n    }\n\n    if (italic) {\n      element.style.fontStyle = \"italic\";\n    }\n  }\n\n  _addToggleButton(div, {\n    count,\n    items\n  }) {\n    let hidden = false;\n\n    if (count < 0) {\n      let totalCount = items.length;\n\n      if (totalCount > 0) {\n        const queue = [...items];\n\n        while (queue.length > 0) {\n          const {\n            count: nestedCount,\n            items: nestedItems\n          } = queue.shift();\n\n          if (nestedCount > 0 && nestedItems.length > 0) {\n            totalCount += nestedItems.length;\n            queue.push(...nestedItems);\n          }\n        }\n      }\n\n      if (Math.abs(count) === totalCount) {\n        hidden = true;\n      }\n    }\n\n    super._addToggleButton(div, hidden);\n  }\n\n  _toggleAllTreeItems() {\n    if (!this._outline) {\n      return;\n    }\n\n    super._toggleAllTreeItems();\n  }\n\n  render({\n    outline,\n    pdfDocument\n  }) {\n    if (this._outline) {\n      this.reset();\n    }\n\n    this._outline = outline || null;\n    this._pdfDocument = pdfDocument || null;\n\n    if (!outline) {\n      this._dispatchEvent(0);\n\n      return;\n    }\n\n    const fragment = document.createDocumentFragment();\n    const queue = [{\n      parent: fragment,\n      items: outline\n    }];\n    let outlineCount = 0,\n        hasAnyNesting = false;\n\n    while (queue.length > 0) {\n      const levelData = queue.shift();\n\n      for (const item of levelData.items) {\n        const div = document.createElement(\"div\");\n        div.className = \"treeItem\";\n        const element = document.createElement(\"a\");\n\n        this._bindLink(element, item);\n\n        this._setStyles(element, item);\n\n        element.textContent = this._normalizeTextContent(item.title);\n        div.appendChild(element);\n\n        if (item.items.length > 0) {\n          hasAnyNesting = true;\n\n          this._addToggleButton(div, item);\n\n          const itemsDiv = document.createElement(\"div\");\n          itemsDiv.className = \"treeItems\";\n          div.appendChild(itemsDiv);\n          queue.push({\n            parent: itemsDiv,\n            items: item.items\n          });\n        }\n\n        levelData.parent.appendChild(div);\n        outlineCount++;\n      }\n    }\n\n    this._finishRendering(fragment, outlineCount, hasAnyNesting);\n  }\n\n  async _currentOutlineItem() {\n    if (!this._isPagesLoaded) {\n      throw new Error(\"_currentOutlineItem: All pages have not been loaded.\");\n    }\n\n    if (!this._outline || !this._pdfDocument) {\n      return;\n    }\n\n    const pageNumberToDestHash = await this._getPageNumberToDestHash(this._pdfDocument);\n\n    if (!pageNumberToDestHash) {\n      return;\n    }\n\n    this._updateCurrentTreeItem(null);\n\n    if (this._sidebarView !== _ui_utils.SidebarView.OUTLINE) {\n      return;\n    }\n\n    for (let i = this._currentPageNumber; i > 0; i--) {\n      const destHash = pageNumberToDestHash.get(i);\n\n      if (!destHash) {\n        continue;\n      }\n\n      const linkElement = this.container.querySelector(`a[href=\"${destHash}\"]`);\n\n      if (!linkElement) {\n        continue;\n      }\n\n      this._scrollToCurrentTreeItem(linkElement.parentNode);\n\n      break;\n    }\n  }\n\n  async _getPageNumberToDestHash(pdfDocument) {\n    if (this._pageNumberToDestHashCapability) {\n      return this._pageNumberToDestHashCapability.promise;\n    }\n\n    this._pageNumberToDestHashCapability = (0, _pdfjsLib.createPromiseCapability)();\n    const pageNumberToDestHash = new Map(),\n          pageNumberNesting = new Map();\n    const queue = [{\n      nesting: 0,\n      items: this._outline\n    }];\n\n    while (queue.length > 0) {\n      const levelData = queue.shift(),\n            currentNesting = levelData.nesting;\n\n      for (const {\n        dest,\n        items\n      } of levelData.items) {\n        let explicitDest, pageNumber;\n\n        if (typeof dest === \"string\") {\n          explicitDest = await pdfDocument.getDestination(dest);\n\n          if (pdfDocument !== this._pdfDocument) {\n            return null;\n          }\n        } else {\n          explicitDest = dest;\n        }\n\n        if (Array.isArray(explicitDest)) {\n          const [destRef] = explicitDest;\n\n          if (typeof destRef === \"object\") {\n            pageNumber = this.linkService._cachedPageNumber(destRef);\n\n            if (!pageNumber) {\n              try {\n                pageNumber = (await pdfDocument.getPageIndex(destRef)) + 1;\n\n                if (pdfDocument !== this._pdfDocument) {\n                  return null;\n                }\n\n                this.linkService.cachePageRef(pageNumber, destRef);\n              } catch (ex) {}\n            }\n          } else if (Number.isInteger(destRef)) {\n            pageNumber = destRef + 1;\n          }\n\n          if (Number.isInteger(pageNumber) && (!pageNumberToDestHash.has(pageNumber) || currentNesting > pageNumberNesting.get(pageNumber))) {\n            const destHash = this.linkService.getDestinationHash(dest);\n            pageNumberToDestHash.set(pageNumber, destHash);\n            pageNumberNesting.set(pageNumber, currentNesting);\n          }\n        }\n\n        if (items.length > 0) {\n          queue.push({\n            nesting: currentNesting + 1,\n            items\n          });\n        }\n      }\n    }\n\n    this._pageNumberToDestHashCapability.resolve(pageNumberToDestHash.size > 0 ? pageNumberToDestHash : null);\n\n    return this._pageNumberToDestHashCapability.promise;\n  }\n\n}\n\nexports.PDFOutlineViewer = PDFOutlineViewer;\n\n/***/ }),\n/* 21 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFPresentationMode = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nconst DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS = 1500;\nconst DELAY_BEFORE_HIDING_CONTROLS = 3000;\nconst ACTIVE_SELECTOR = \"pdfPresentationMode\";\nconst CONTROLS_SELECTOR = \"pdfPresentationModeControls\";\nconst MOUSE_SCROLL_COOLDOWN_TIME = 50;\nconst PAGE_SWITCH_THRESHOLD = 0.1;\nconst SWIPE_MIN_DISTANCE_THRESHOLD = 50;\nconst SWIPE_ANGLE_THRESHOLD = Math.PI / 6;\n\nclass PDFPresentationMode {\n  constructor({\n    container,\n    pdfViewer,\n    eventBus,\n    contextMenuItems = null\n  }) {\n    this.container = container;\n    this.pdfViewer = pdfViewer;\n    this.eventBus = eventBus;\n    this.active = false;\n    this.args = null;\n    this.contextMenuOpen = false;\n    this.mouseScrollTimeStamp = 0;\n    this.mouseScrollDelta = 0;\n    this.touchSwipeState = null;\n\n    if (contextMenuItems) {\n      contextMenuItems.contextFirstPage.addEventListener(\"click\", () => {\n        this.contextMenuOpen = false;\n        this.eventBus.dispatch(\"firstpage\", {\n          source: this\n        });\n      });\n      contextMenuItems.contextLastPage.addEventListener(\"click\", () => {\n        this.contextMenuOpen = false;\n        this.eventBus.dispatch(\"lastpage\", {\n          source: this\n        });\n      });\n      contextMenuItems.contextPageRotateCw.addEventListener(\"click\", () => {\n        this.contextMenuOpen = false;\n        this.eventBus.dispatch(\"rotatecw\", {\n          source: this\n        });\n      });\n      contextMenuItems.contextPageRotateCcw.addEventListener(\"click\", () => {\n        this.contextMenuOpen = false;\n        this.eventBus.dispatch(\"rotateccw\", {\n          source: this\n        });\n      });\n    }\n  }\n\n  request() {\n    if (this.switchInProgress || this.active || !this.pdfViewer.pagesCount) {\n      return false;\n    }\n\n    this._addFullscreenChangeListeners();\n\n    this._setSwitchInProgress();\n\n    this._notifyStateChange();\n\n    if (this.container.requestFullscreen) {\n      this.container.requestFullscreen();\n    } else if (this.container.mozRequestFullScreen) {\n      this.container.mozRequestFullScreen();\n    } else if (this.container.webkitRequestFullscreen) {\n      this.container.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n    } else {\n      return false;\n    }\n\n    this.args = {\n      page: this.pdfViewer.currentPageNumber,\n      previousScale: this.pdfViewer.currentScaleValue\n    };\n    return true;\n  }\n\n  _mouseWheel(evt) {\n    if (!this.active) {\n      return;\n    }\n\n    evt.preventDefault();\n    const delta = (0, _ui_utils.normalizeWheelEventDelta)(evt);\n    const currentTime = new Date().getTime();\n    const storedTime = this.mouseScrollTimeStamp;\n\n    if (currentTime > storedTime && currentTime - storedTime < MOUSE_SCROLL_COOLDOWN_TIME) {\n      return;\n    }\n\n    if (this.mouseScrollDelta > 0 && delta < 0 || this.mouseScrollDelta < 0 && delta > 0) {\n      this._resetMouseScrollState();\n    }\n\n    this.mouseScrollDelta += delta;\n\n    if (Math.abs(this.mouseScrollDelta) >= PAGE_SWITCH_THRESHOLD) {\n      const totalDelta = this.mouseScrollDelta;\n\n      this._resetMouseScrollState();\n\n      const success = totalDelta > 0 ? this.pdfViewer.previousPage() : this.pdfViewer.nextPage();\n\n      if (success) {\n        this.mouseScrollTimeStamp = currentTime;\n      }\n    }\n  }\n\n  get isFullscreen() {\n    return !!(document.fullscreenElement || document.mozFullScreen || document.webkitIsFullScreen);\n  }\n\n  _notifyStateChange() {\n    let state = _ui_utils.PresentationModeState.NORMAL;\n\n    if (this.switchInProgress) {\n      state = _ui_utils.PresentationModeState.CHANGING;\n    } else if (this.active) {\n      state = _ui_utils.PresentationModeState.FULLSCREEN;\n    }\n\n    this.eventBus.dispatch(\"presentationmodechanged\", {\n      source: this,\n      state,\n\n      get active() {\n        throw new Error(\"Deprecated parameter: `active`, please use `state` instead.\");\n      },\n\n      get switchInProgress() {\n        throw new Error(\"Deprecated parameter: `switchInProgress`, please use `state` instead.\");\n      }\n\n    });\n  }\n\n  _setSwitchInProgress() {\n    if (this.switchInProgress) {\n      clearTimeout(this.switchInProgress);\n    }\n\n    this.switchInProgress = setTimeout(() => {\n      this._removeFullscreenChangeListeners();\n\n      delete this.switchInProgress;\n\n      this._notifyStateChange();\n    }, DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS);\n  }\n\n  _resetSwitchInProgress() {\n    if (this.switchInProgress) {\n      clearTimeout(this.switchInProgress);\n      delete this.switchInProgress;\n    }\n  }\n\n  _enter() {\n    this.active = true;\n\n    this._resetSwitchInProgress();\n\n    this._notifyStateChange();\n\n    this.container.classList.add(ACTIVE_SELECTOR);\n    setTimeout(() => {\n      this.pdfViewer.currentPageNumber = this.args.page;\n      this.pdfViewer.currentScaleValue = \"page-fit\";\n    }, 0);\n\n    this._addWindowListeners();\n\n    this._showControls();\n\n    this.contextMenuOpen = false;\n    this.container.setAttribute(\"contextmenu\", \"viewerContextMenu\");\n    window.getSelection().removeAllRanges();\n  }\n\n  _exit() {\n    const page = this.pdfViewer.currentPageNumber;\n    this.container.classList.remove(ACTIVE_SELECTOR);\n    setTimeout(() => {\n      this.active = false;\n\n      this._removeFullscreenChangeListeners();\n\n      this._notifyStateChange();\n\n      this.pdfViewer.currentScaleValue = this.args.previousScale;\n      this.pdfViewer.currentPageNumber = page;\n      this.args = null;\n    }, 0);\n\n    this._removeWindowListeners();\n\n    this._hideControls();\n\n    this._resetMouseScrollState();\n\n    this.container.removeAttribute(\"contextmenu\");\n    this.contextMenuOpen = false;\n  }\n\n  _mouseDown(evt) {\n    if (this.contextMenuOpen) {\n      this.contextMenuOpen = false;\n      evt.preventDefault();\n      return;\n    }\n\n    if (evt.button === 0) {\n      const isInternalLink = evt.target.href && evt.target.classList.contains(\"internalLink\");\n\n      if (!isInternalLink) {\n        evt.preventDefault();\n\n        if (evt.shiftKey) {\n          this.pdfViewer.previousPage();\n        } else {\n          this.pdfViewer.nextPage();\n        }\n      }\n    }\n  }\n\n  _contextMenu() {\n    this.contextMenuOpen = true;\n  }\n\n  _showControls() {\n    if (this.controlsTimeout) {\n      clearTimeout(this.controlsTimeout);\n    } else {\n      this.container.classList.add(CONTROLS_SELECTOR);\n    }\n\n    this.controlsTimeout = setTimeout(() => {\n      this.container.classList.remove(CONTROLS_SELECTOR);\n      delete this.controlsTimeout;\n    }, DELAY_BEFORE_HIDING_CONTROLS);\n  }\n\n  _hideControls() {\n    if (!this.controlsTimeout) {\n      return;\n    }\n\n    clearTimeout(this.controlsTimeout);\n    this.container.classList.remove(CONTROLS_SELECTOR);\n    delete this.controlsTimeout;\n  }\n\n  _resetMouseScrollState() {\n    this.mouseScrollTimeStamp = 0;\n    this.mouseScrollDelta = 0;\n  }\n\n  _touchSwipe(evt) {\n    if (!this.active) {\n      return;\n    }\n\n    if (evt.touches.length > 1) {\n      this.touchSwipeState = null;\n      return;\n    }\n\n    switch (evt.type) {\n      case \"touchstart\":\n        this.touchSwipeState = {\n          startX: evt.touches[0].pageX,\n          startY: evt.touches[0].pageY,\n          endX: evt.touches[0].pageX,\n          endY: evt.touches[0].pageY\n        };\n        break;\n\n      case \"touchmove\":\n        if (this.touchSwipeState === null) {\n          return;\n        }\n\n        this.touchSwipeState.endX = evt.touches[0].pageX;\n        this.touchSwipeState.endY = evt.touches[0].pageY;\n        evt.preventDefault();\n        break;\n\n      case \"touchend\":\n        if (this.touchSwipeState === null) {\n          return;\n        }\n\n        let delta = 0;\n        const dx = this.touchSwipeState.endX - this.touchSwipeState.startX;\n        const dy = this.touchSwipeState.endY - this.touchSwipeState.startY;\n        const absAngle = Math.abs(Math.atan2(dy, dx));\n\n        if (Math.abs(dx) > SWIPE_MIN_DISTANCE_THRESHOLD && (absAngle <= SWIPE_ANGLE_THRESHOLD || absAngle >= Math.PI - SWIPE_ANGLE_THRESHOLD)) {\n          delta = dx;\n        } else if (Math.abs(dy) > SWIPE_MIN_DISTANCE_THRESHOLD && Math.abs(absAngle - Math.PI / 2) <= SWIPE_ANGLE_THRESHOLD) {\n          delta = dy;\n        }\n\n        if (delta > 0) {\n          this.pdfViewer.previousPage();\n        } else if (delta < 0) {\n          this.pdfViewer.nextPage();\n        }\n\n        break;\n    }\n  }\n\n  _addWindowListeners() {\n    this.showControlsBind = this._showControls.bind(this);\n    this.mouseDownBind = this._mouseDown.bind(this);\n    this.mouseWheelBind = this._mouseWheel.bind(this);\n    this.resetMouseScrollStateBind = this._resetMouseScrollState.bind(this);\n    this.contextMenuBind = this._contextMenu.bind(this);\n    this.touchSwipeBind = this._touchSwipe.bind(this);\n    window.addEventListener(\"mousemove\", this.showControlsBind);\n    window.addEventListener(\"mousedown\", this.mouseDownBind);\n    window.addEventListener(\"wheel\", this.mouseWheelBind, {\n      passive: false\n    });\n    window.addEventListener(\"keydown\", this.resetMouseScrollStateBind);\n    window.addEventListener(\"contextmenu\", this.contextMenuBind);\n    window.addEventListener(\"touchstart\", this.touchSwipeBind);\n    window.addEventListener(\"touchmove\", this.touchSwipeBind);\n    window.addEventListener(\"touchend\", this.touchSwipeBind);\n  }\n\n  _removeWindowListeners() {\n    window.removeEventListener(\"mousemove\", this.showControlsBind);\n    window.removeEventListener(\"mousedown\", this.mouseDownBind);\n    window.removeEventListener(\"wheel\", this.mouseWheelBind, {\n      passive: false\n    });\n    window.removeEventListener(\"keydown\", this.resetMouseScrollStateBind);\n    window.removeEventListener(\"contextmenu\", this.contextMenuBind);\n    window.removeEventListener(\"touchstart\", this.touchSwipeBind);\n    window.removeEventListener(\"touchmove\", this.touchSwipeBind);\n    window.removeEventListener(\"touchend\", this.touchSwipeBind);\n    delete this.showControlsBind;\n    delete this.mouseDownBind;\n    delete this.mouseWheelBind;\n    delete this.resetMouseScrollStateBind;\n    delete this.contextMenuBind;\n    delete this.touchSwipeBind;\n  }\n\n  _fullscreenChange() {\n    if (this.isFullscreen) {\n      this._enter();\n    } else {\n      this._exit();\n    }\n  }\n\n  _addFullscreenChangeListeners() {\n    this.fullscreenChangeBind = this._fullscreenChange.bind(this);\n    window.addEventListener(\"fullscreenchange\", this.fullscreenChangeBind);\n    window.addEventListener(\"mozfullscreenchange\", this.fullscreenChangeBind);\n    window.addEventListener(\"webkitfullscreenchange\", this.fullscreenChangeBind);\n  }\n\n  _removeFullscreenChangeListeners() {\n    window.removeEventListener(\"fullscreenchange\", this.fullscreenChangeBind);\n    window.removeEventListener(\"mozfullscreenchange\", this.fullscreenChangeBind);\n    window.removeEventListener(\"webkitfullscreenchange\", this.fullscreenChangeBind);\n    delete this.fullscreenChangeBind;\n  }\n\n}\n\nexports.PDFPresentationMode = PDFPresentationMode;\n\n/***/ }),\n/* 22 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFSidebar = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdf_rendering_queue = __webpack_require__(8);\n\nconst UI_NOTIFICATION_CLASS = \"pdfSidebarNotification\";\n\nclass PDFSidebar {\n  constructor({\n    elements,\n    pdfViewer,\n    pdfThumbnailViewer,\n    eventBus,\n    l10n = _ui_utils.NullL10n\n  }) {\n    this.isOpen = false;\n    this.active = _ui_utils.SidebarView.THUMBS;\n    this.isInitialViewSet = false;\n    this.onToggled = null;\n    this.pdfViewer = pdfViewer;\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n    this.outerContainer = elements.outerContainer;\n    this.viewerContainer = elements.viewerContainer;\n    this.toggleButton = elements.toggleButton;\n    this.thumbnailButton = elements.thumbnailButton;\n    this.outlineButton = elements.outlineButton;\n    this.attachmentsButton = elements.attachmentsButton;\n    this.layersButton = elements.layersButton;\n    this.thumbnailView = elements.thumbnailView;\n    this.outlineView = elements.outlineView;\n    this.attachmentsView = elements.attachmentsView;\n    this.layersView = elements.layersView;\n    this._outlineOptionsContainer = elements.outlineOptionsContainer;\n    this._currentOutlineItemButton = elements.currentOutlineItemButton;\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n\n    this._addEventListeners();\n  }\n\n  reset() {\n    this.isInitialViewSet = false;\n\n    this._hideUINotification(true);\n\n    this.switchView(_ui_utils.SidebarView.THUMBS);\n    this.outlineButton.disabled = false;\n    this.attachmentsButton.disabled = false;\n    this.layersButton.disabled = false;\n    this._currentOutlineItemButton.disabled = true;\n  }\n\n  get visibleView() {\n    return this.isOpen ? this.active : _ui_utils.SidebarView.NONE;\n  }\n\n  get isThumbnailViewVisible() {\n    return this.isOpen && this.active === _ui_utils.SidebarView.THUMBS;\n  }\n\n  get isOutlineViewVisible() {\n    return this.isOpen && this.active === _ui_utils.SidebarView.OUTLINE;\n  }\n\n  get isAttachmentsViewVisible() {\n    return this.isOpen && this.active === _ui_utils.SidebarView.ATTACHMENTS;\n  }\n\n  get isLayersViewVisible() {\n    return this.isOpen && this.active === _ui_utils.SidebarView.LAYERS;\n  }\n\n  setInitialView(view = _ui_utils.SidebarView.NONE) {\n    if (this.isInitialViewSet) {\n      return;\n    }\n\n    this.isInitialViewSet = true;\n\n    if (view === _ui_utils.SidebarView.NONE || view === _ui_utils.SidebarView.UNKNOWN) {\n      this._dispatchEvent();\n\n      return;\n    }\n\n    if (!this._switchView(view, true)) {\n      this._dispatchEvent();\n    }\n  }\n\n  switchView(view, forceOpen = false) {\n    this._switchView(view, forceOpen);\n  }\n\n  _switchView(view, forceOpen = false) {\n    const isViewChanged = view !== this.active;\n    let shouldForceRendering = false;\n\n    switch (view) {\n      case _ui_utils.SidebarView.NONE:\n        if (this.isOpen) {\n          this.close();\n          return true;\n        }\n\n        return false;\n\n      case _ui_utils.SidebarView.THUMBS:\n        if (this.isOpen && isViewChanged) {\n          shouldForceRendering = true;\n        }\n\n        break;\n\n      case _ui_utils.SidebarView.OUTLINE:\n        if (this.outlineButton.disabled) {\n          return false;\n        }\n\n        break;\n\n      case _ui_utils.SidebarView.ATTACHMENTS:\n        if (this.attachmentsButton.disabled) {\n          return false;\n        }\n\n        break;\n\n      case _ui_utils.SidebarView.LAYERS:\n        if (this.layersButton.disabled) {\n          return false;\n        }\n\n        break;\n\n      default:\n        console.error(`PDFSidebar._switchView: \"${view}\" is not a valid view.`);\n        return false;\n    }\n\n    this.active = view;\n    this.thumbnailButton.classList.toggle(\"toggled\", view === _ui_utils.SidebarView.THUMBS);\n    this.outlineButton.classList.toggle(\"toggled\", view === _ui_utils.SidebarView.OUTLINE);\n    this.attachmentsButton.classList.toggle(\"toggled\", view === _ui_utils.SidebarView.ATTACHMENTS);\n    this.layersButton.classList.toggle(\"toggled\", view === _ui_utils.SidebarView.LAYERS);\n    this.thumbnailView.classList.toggle(\"hidden\", view !== _ui_utils.SidebarView.THUMBS);\n    this.outlineView.classList.toggle(\"hidden\", view !== _ui_utils.SidebarView.OUTLINE);\n    this.attachmentsView.classList.toggle(\"hidden\", view !== _ui_utils.SidebarView.ATTACHMENTS);\n    this.layersView.classList.toggle(\"hidden\", view !== _ui_utils.SidebarView.LAYERS);\n\n    this._outlineOptionsContainer.classList.toggle(\"hidden\", view !== _ui_utils.SidebarView.OUTLINE);\n\n    if (forceOpen && !this.isOpen) {\n      this.open();\n      return true;\n    }\n\n    if (shouldForceRendering) {\n      this._updateThumbnailViewer();\n\n      this._forceRendering();\n    }\n\n    if (isViewChanged) {\n      this._dispatchEvent();\n    }\n\n    return isViewChanged;\n  }\n\n  open() {\n    if (this.isOpen) {\n      return;\n    }\n\n    this.isOpen = true;\n    this.toggleButton.classList.add(\"toggled\");\n    this.outerContainer.classList.add(\"sidebarMoving\", \"sidebarOpen\");\n\n    if (this.active === _ui_utils.SidebarView.THUMBS) {\n      this._updateThumbnailViewer();\n    }\n\n    this._forceRendering();\n\n    this._dispatchEvent();\n\n    this._hideUINotification();\n  }\n\n  close() {\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.isOpen = false;\n    this.toggleButton.classList.remove(\"toggled\");\n    this.outerContainer.classList.add(\"sidebarMoving\");\n    this.outerContainer.classList.remove(\"sidebarOpen\");\n\n    this._forceRendering();\n\n    this._dispatchEvent();\n  }\n\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  _dispatchEvent() {\n    this.eventBus.dispatch(\"sidebarviewchanged\", {\n      source: this,\n      view: this.visibleView\n    });\n  }\n\n  _forceRendering() {\n    if (this.onToggled) {\n      this.onToggled();\n    } else {\n      this.pdfViewer.forceRendering();\n      this.pdfThumbnailViewer.forceRendering();\n    }\n  }\n\n  _updateThumbnailViewer() {\n    const {\n      pdfViewer,\n      pdfThumbnailViewer\n    } = this;\n    const pagesCount = pdfViewer.pagesCount;\n\n    for (let pageIndex = 0; pageIndex < pagesCount; pageIndex++) {\n      const pageView = pdfViewer.getPageView(pageIndex);\n\n      if (pageView && pageView.renderingState === _pdf_rendering_queue.RenderingStates.FINISHED) {\n        const thumbnailView = pdfThumbnailViewer.getThumbnail(pageIndex);\n        thumbnailView.setImage(pageView);\n      }\n    }\n\n    pdfThumbnailViewer.scrollThumbnailIntoView(pdfViewer.currentPageNumber);\n  }\n\n  _showUINotification() {\n    this.l10n.get(\"toggle_sidebar_notification2.title\", null, \"Toggle Sidebar (document contains outline/attachments/layers)\").then(msg => {\n      this.toggleButton.title = msg;\n    });\n\n    if (!this.isOpen) {\n      this.toggleButton.classList.add(UI_NOTIFICATION_CLASS);\n    }\n  }\n\n  _hideUINotification(reset = false) {\n    if (this.isOpen || reset) {\n      this.toggleButton.classList.remove(UI_NOTIFICATION_CLASS);\n    }\n\n    if (reset) {\n      this.l10n.get(\"toggle_sidebar.title\", null, \"Toggle Sidebar\").then(msg => {\n        this.toggleButton.title = msg;\n      });\n    }\n  }\n\n  _addEventListeners() {\n    this.viewerContainer.addEventListener(\"transitionend\", evt => {\n      if (evt.target === this.viewerContainer) {\n        this.outerContainer.classList.remove(\"sidebarMoving\");\n      }\n    });\n    this.toggleButton.addEventListener(\"click\", () => {\n      this.toggle();\n    });\n    this.thumbnailButton.addEventListener(\"click\", () => {\n      this.switchView(_ui_utils.SidebarView.THUMBS);\n    });\n    this.outlineButton.addEventListener(\"click\", () => {\n      this.switchView(_ui_utils.SidebarView.OUTLINE);\n    });\n    this.outlineButton.addEventListener(\"dblclick\", () => {\n      this.eventBus.dispatch(\"toggleoutlinetree\", {\n        source: this\n      });\n    });\n    this.attachmentsButton.addEventListener(\"click\", () => {\n      this.switchView(_ui_utils.SidebarView.ATTACHMENTS);\n    });\n    this.layersButton.addEventListener(\"click\", () => {\n      this.switchView(_ui_utils.SidebarView.LAYERS);\n    });\n    this.layersButton.addEventListener(\"dblclick\", () => {\n      this.eventBus.dispatch(\"resetlayers\", {\n        source: this\n      });\n    });\n\n    this._currentOutlineItemButton.addEventListener(\"click\", () => {\n      this.eventBus.dispatch(\"currentoutlineitem\", {\n        source: this\n      });\n    });\n\n    const onTreeLoaded = (count, button, view) => {\n      button.disabled = !count;\n\n      if (count) {\n        this._showUINotification();\n      } else if (this.active === view) {\n        this.switchView(_ui_utils.SidebarView.THUMBS);\n      }\n    };\n\n    this.eventBus._on(\"outlineloaded\", evt => {\n      onTreeLoaded(evt.outlineCount, this.outlineButton, _ui_utils.SidebarView.OUTLINE);\n\n      if (evt.enableCurrentOutlineItemButton) {\n        this.pdfViewer.pagesPromise.then(() => {\n          this._currentOutlineItemButton.disabled = !this.isInitialViewSet;\n        });\n      }\n    });\n\n    this.eventBus._on(\"attachmentsloaded\", evt => {\n      onTreeLoaded(evt.attachmentsCount, this.attachmentsButton, _ui_utils.SidebarView.ATTACHMENTS);\n    });\n\n    this.eventBus._on(\"layersloaded\", evt => {\n      onTreeLoaded(evt.layersCount, this.layersButton, _ui_utils.SidebarView.LAYERS);\n    });\n\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      if (evt.state === _ui_utils.PresentationModeState.NORMAL && this.isThumbnailViewVisible) {\n        this._updateThumbnailViewer();\n      }\n    });\n  }\n\n}\n\nexports.PDFSidebar = PDFSidebar;\n\n/***/ }),\n/* 23 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFSidebarResizer = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nconst SIDEBAR_WIDTH_VAR = \"--sidebar-width\";\nconst SIDEBAR_MIN_WIDTH = 200;\nconst SIDEBAR_RESIZING_CLASS = \"sidebarResizing\";\n\nclass PDFSidebarResizer {\n  constructor(options, eventBus, l10n = _ui_utils.NullL10n) {\n    this.isRTL = false;\n    this.sidebarOpen = false;\n    this.doc = document.documentElement;\n    this._width = null;\n    this._outerContainerWidth = null;\n    this._boundEvents = Object.create(null);\n    this.outerContainer = options.outerContainer;\n    this.resizer = options.resizer;\n    this.eventBus = eventBus;\n    l10n.getDirection().then(dir => {\n      this.isRTL = dir === \"rtl\";\n    });\n\n    this._addEventListeners();\n  }\n\n  get outerContainerWidth() {\n    if (!this._outerContainerWidth) {\n      this._outerContainerWidth = this.outerContainer.clientWidth;\n    }\n\n    return this._outerContainerWidth;\n  }\n\n  _updateWidth(width = 0) {\n    const maxWidth = Math.floor(this.outerContainerWidth / 2);\n\n    if (width > maxWidth) {\n      width = maxWidth;\n    }\n\n    if (width < SIDEBAR_MIN_WIDTH) {\n      width = SIDEBAR_MIN_WIDTH;\n    }\n\n    if (width === this._width) {\n      return false;\n    }\n\n    this._width = width;\n    this.doc.style.setProperty(SIDEBAR_WIDTH_VAR, `${width}px`);\n    return true;\n  }\n\n  _mouseMove(evt) {\n    let width = evt.clientX;\n\n    if (this.isRTL) {\n      width = this.outerContainerWidth - width;\n    }\n\n    this._updateWidth(width);\n  }\n\n  _mouseUp(evt) {\n    this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);\n    this.eventBus.dispatch(\"resize\", {\n      source: this\n    });\n    const _boundEvents = this._boundEvents;\n    window.removeEventListener(\"mousemove\", _boundEvents.mouseMove);\n    window.removeEventListener(\"mouseup\", _boundEvents.mouseUp);\n  }\n\n  _addEventListeners() {\n    const _boundEvents = this._boundEvents;\n    _boundEvents.mouseMove = this._mouseMove.bind(this);\n    _boundEvents.mouseUp = this._mouseUp.bind(this);\n    this.resizer.addEventListener(\"mousedown\", evt => {\n      if (evt.button !== 0) {\n        return;\n      }\n\n      this.outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);\n      window.addEventListener(\"mousemove\", _boundEvents.mouseMove);\n      window.addEventListener(\"mouseup\", _boundEvents.mouseUp);\n    });\n\n    this.eventBus._on(\"sidebarviewchanged\", evt => {\n      this.sidebarOpen = !!(evt && evt.view);\n    });\n\n    this.eventBus._on(\"resize\", evt => {\n      if (!evt || evt.source !== window) {\n        return;\n      }\n\n      this._outerContainerWidth = null;\n\n      if (!this._width) {\n        return;\n      }\n\n      if (!this.sidebarOpen) {\n        this._updateWidth(this._width);\n\n        return;\n      }\n\n      this.outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);\n\n      const updated = this._updateWidth(this._width);\n\n      Promise.resolve().then(() => {\n        this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);\n\n        if (updated) {\n          this.eventBus.dispatch(\"resize\", {\n            source: this\n          });\n        }\n      });\n    });\n  }\n\n}\n\nexports.PDFSidebarResizer = PDFSidebarResizer;\n\n/***/ }),\n/* 24 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFThumbnailViewer = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdf_thumbnail_view = __webpack_require__(25);\n\nvar _pdf_rendering_queue = __webpack_require__(8);\n\nconst THUMBNAIL_SCROLL_MARGIN = -19;\nconst THUMBNAIL_SELECTED_CLASS = \"selected\";\n\nclass PDFThumbnailViewer {\n  constructor({\n    container,\n    eventBus,\n    linkService,\n    renderingQueue,\n    l10n = _ui_utils.NullL10n\n  }) {\n    this.container = container;\n    this.linkService = linkService;\n    this.renderingQueue = renderingQueue;\n    this.l10n = l10n;\n    this.scroll = (0, _ui_utils.watchScroll)(this.container, this._scrollUpdated.bind(this));\n\n    this._resetView();\n\n    eventBus._on(\"optionalcontentconfigchanged\", () => {\n      this._setImageDisabled = true;\n    });\n  }\n\n  _scrollUpdated() {\n    this.renderingQueue.renderHighestPriority();\n  }\n\n  getThumbnail(index) {\n    return this._thumbnails[index];\n  }\n\n  _getVisibleThumbs() {\n    return (0, _ui_utils.getVisibleElements)({\n      scrollEl: this.container,\n      views: this._thumbnails\n    });\n  }\n\n  scrollThumbnailIntoView(pageNumber) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    const thumbnailView = this._thumbnails[pageNumber - 1];\n\n    if (!thumbnailView) {\n      console.error('scrollThumbnailIntoView: Invalid \"pageNumber\" parameter.');\n      return;\n    }\n\n    if (pageNumber !== this._currentPageNumber) {\n      const prevThumbnailView = this._thumbnails[this._currentPageNumber - 1];\n      prevThumbnailView.div.classList.remove(THUMBNAIL_SELECTED_CLASS);\n      thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\n    }\n\n    const visibleThumbs = this._getVisibleThumbs();\n\n    const numVisibleThumbs = visibleThumbs.views.length;\n\n    if (numVisibleThumbs > 0) {\n      const first = visibleThumbs.first.id;\n      const last = numVisibleThumbs > 1 ? visibleThumbs.last.id : first;\n      let shouldScroll = false;\n\n      if (pageNumber <= first || pageNumber >= last) {\n        shouldScroll = true;\n      } else {\n        visibleThumbs.views.some(function (view) {\n          if (view.id !== pageNumber) {\n            return false;\n          }\n\n          shouldScroll = view.percent < 100;\n          return true;\n        });\n      }\n\n      if (shouldScroll) {\n        (0, _ui_utils.scrollIntoView)(thumbnailView.div, {\n          top: THUMBNAIL_SCROLL_MARGIN\n        });\n      }\n    }\n\n    this._currentPageNumber = pageNumber;\n  }\n\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  set pagesRotation(rotation) {\n    if (!(0, _ui_utils.isValidRotation)(rotation)) {\n      throw new Error(\"Invalid thumbnails rotation angle.\");\n    }\n\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    if (this._pagesRotation === rotation) {\n      return;\n    }\n\n    this._pagesRotation = rotation;\n\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      this._thumbnails[i].update(rotation);\n    }\n  }\n\n  cleanup() {\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      if (this._thumbnails[i] && this._thumbnails[i].renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED) {\n        this._thumbnails[i].reset();\n      }\n    }\n\n    _pdf_thumbnail_view.TempImageFactory.destroyCanvas();\n  }\n\n  _resetView() {\n    this._thumbnails = [];\n    this._currentPageNumber = 1;\n    this._pageLabels = null;\n    this._pagesRotation = 0;\n    this._optionalContentConfigPromise = null;\n    this._pagesRequests = new WeakMap();\n    this._setImageDisabled = false;\n    this.container.textContent = \"\";\n  }\n\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this._cancelRendering();\n\n      this._resetView();\n    }\n\n    this.pdfDocument = pdfDocument;\n\n    if (!pdfDocument) {\n      return;\n    }\n\n    const firstPagePromise = pdfDocument.getPage(1);\n    const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig();\n    firstPagePromise.then(firstPdfPage => {\n      this._optionalContentConfigPromise = optionalContentConfigPromise;\n      const pagesCount = pdfDocument.numPages;\n      const viewport = firstPdfPage.getViewport({\n        scale: 1\n      });\n\n      const checkSetImageDisabled = () => {\n        return this._setImageDisabled;\n      };\n\n      for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n        const thumbnail = new _pdf_thumbnail_view.PDFThumbnailView({\n          container: this.container,\n          id: pageNum,\n          defaultViewport: viewport.clone(),\n          optionalContentConfigPromise,\n          linkService: this.linkService,\n          renderingQueue: this.renderingQueue,\n          checkSetImageDisabled,\n          disableCanvasToImageConversion: false,\n          l10n: this.l10n\n        });\n\n        this._thumbnails.push(thumbnail);\n      }\n\n      const firstThumbnailView = this._thumbnails[0];\n\n      if (firstThumbnailView) {\n        firstThumbnailView.setPdfPage(firstPdfPage);\n      }\n\n      const thumbnailView = this._thumbnails[this._currentPageNumber - 1];\n      thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\n    }).catch(reason => {\n      console.error(\"Unable to initialize thumbnail viewer\", reason);\n    });\n  }\n\n  _cancelRendering() {\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      if (this._thumbnails[i]) {\n        this._thumbnails[i].cancelRendering();\n      }\n    }\n  }\n\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) {\n      this._pageLabels = null;\n      console.error(\"PDFThumbnailViewer_setPageLabels: Invalid page labels.\");\n    } else {\n      this._pageLabels = labels;\n    }\n\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      const label = this._pageLabels && this._pageLabels[i];\n\n      this._thumbnails[i].setPageLabel(label);\n    }\n  }\n\n  _ensurePdfPageLoaded(thumbView) {\n    if (thumbView.pdfPage) {\n      return Promise.resolve(thumbView.pdfPage);\n    }\n\n    if (this._pagesRequests.has(thumbView)) {\n      return this._pagesRequests.get(thumbView);\n    }\n\n    const promise = this.pdfDocument.getPage(thumbView.id).then(pdfPage => {\n      if (!thumbView.pdfPage) {\n        thumbView.setPdfPage(pdfPage);\n      }\n\n      this._pagesRequests.delete(thumbView);\n\n      return pdfPage;\n    }).catch(reason => {\n      console.error(\"Unable to get page for thumb view\", reason);\n\n      this._pagesRequests.delete(thumbView);\n    });\n\n    this._pagesRequests.set(thumbView, promise);\n\n    return promise;\n  }\n\n  forceRendering() {\n    const visibleThumbs = this._getVisibleThumbs();\n\n    const thumbView = this.renderingQueue.getHighestPriority(visibleThumbs, this._thumbnails, this.scroll.down);\n\n    if (thumbView) {\n      this._ensurePdfPageLoaded(thumbView).then(() => {\n        this.renderingQueue.renderView(thumbView);\n      });\n\n      return true;\n    }\n\n    return false;\n  }\n\n}\n\nexports.PDFThumbnailViewer = PDFThumbnailViewer;\n\n/***/ }),\n/* 25 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.TempImageFactory = exports.PDFThumbnailView = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _pdf_rendering_queue = __webpack_require__(8);\n\nconst MAX_NUM_SCALING_STEPS = 3;\nconst THUMBNAIL_CANVAS_BORDER_WIDTH = 1;\nconst THUMBNAIL_WIDTH = 98;\n\nconst TempImageFactory = function TempImageFactoryClosure() {\n  let tempCanvasCache = null;\n  return {\n    getCanvas(width, height) {\n      let tempCanvas = tempCanvasCache;\n\n      if (!tempCanvas) {\n        tempCanvas = document.createElement(\"canvas\");\n        tempCanvasCache = tempCanvas;\n      }\n\n      tempCanvas.width = width;\n      tempCanvas.height = height;\n      tempCanvas.mozOpaque = true;\n      const ctx = tempCanvas.getContext(\"2d\", {\n        alpha: false\n      });\n      ctx.save();\n      ctx.fillStyle = \"rgb(255, 255, 255)\";\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n      return tempCanvas;\n    },\n\n    destroyCanvas() {\n      const tempCanvas = tempCanvasCache;\n\n      if (tempCanvas) {\n        tempCanvas.width = 0;\n        tempCanvas.height = 0;\n      }\n\n      tempCanvasCache = null;\n    }\n\n  };\n}();\n\nexports.TempImageFactory = TempImageFactory;\n\nclass PDFThumbnailView {\n  constructor({\n    container,\n    id,\n    defaultViewport,\n    optionalContentConfigPromise,\n    linkService,\n    renderingQueue,\n    checkSetImageDisabled,\n    disableCanvasToImageConversion = false,\n    l10n = _ui_utils.NullL10n\n  }) {\n    this.id = id;\n    this.renderingId = \"thumbnail\" + id;\n    this.pageLabel = null;\n    this.pdfPage = null;\n    this.rotation = 0;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this._optionalContentConfigPromise = optionalContentConfigPromise || null;\n    this.linkService = linkService;\n    this.renderingQueue = renderingQueue;\n    this.renderTask = null;\n    this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n    this.resume = null;\n\n    this._checkSetImageDisabled = checkSetImageDisabled || function () {\n      return false;\n    };\n\n    this.disableCanvasToImageConversion = disableCanvasToImageConversion;\n    this.pageWidth = this.viewport.width;\n    this.pageHeight = this.viewport.height;\n    this.pageRatio = this.pageWidth / this.pageHeight;\n    this.canvasWidth = THUMBNAIL_WIDTH;\n    this.canvasHeight = this.canvasWidth / this.pageRatio | 0;\n    this.scale = this.canvasWidth / this.pageWidth;\n    this.l10n = l10n;\n    const anchor = document.createElement(\"a\");\n    anchor.href = linkService.getAnchorUrl(\"#page=\" + id);\n\n    this._thumbPageTitle.then(msg => {\n      anchor.title = msg;\n    });\n\n    anchor.onclick = function () {\n      linkService.goToPage(id);\n      return false;\n    };\n\n    this.anchor = anchor;\n    const div = document.createElement(\"div\");\n    div.className = \"thumbnail\";\n    div.setAttribute(\"data-page-number\", this.id);\n    this.div = div;\n    const ring = document.createElement(\"div\");\n    ring.className = \"thumbnailSelectionRing\";\n    const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\n    ring.style.width = this.canvasWidth + borderAdjustment + \"px\";\n    ring.style.height = this.canvasHeight + borderAdjustment + \"px\";\n    this.ring = ring;\n    div.appendChild(ring);\n    anchor.appendChild(div);\n    container.appendChild(anchor);\n  }\n\n  setPdfPage(pdfPage) {\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({\n      scale: 1,\n      rotation: totalRotation\n    });\n    this.reset();\n  }\n\n  reset() {\n    this.cancelRendering();\n    this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n    this.pageWidth = this.viewport.width;\n    this.pageHeight = this.viewport.height;\n    this.pageRatio = this.pageWidth / this.pageHeight;\n    this.canvasHeight = this.canvasWidth / this.pageRatio | 0;\n    this.scale = this.canvasWidth / this.pageWidth;\n    this.div.removeAttribute(\"data-loaded\");\n    const ring = this.ring;\n    const childNodes = ring.childNodes;\n\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      ring.removeChild(childNodes[i]);\n    }\n\n    const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\n    ring.style.width = this.canvasWidth + borderAdjustment + \"px\";\n    ring.style.height = this.canvasHeight + borderAdjustment + \"px\";\n\n    if (this.canvas) {\n      this.canvas.width = 0;\n      this.canvas.height = 0;\n      delete this.canvas;\n    }\n\n    if (this.image) {\n      this.image.removeAttribute(\"src\");\n      delete this.image;\n    }\n  }\n\n  update(rotation) {\n    if (typeof rotation !== \"undefined\") {\n      this.rotation = rotation;\n    }\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = this.viewport.clone({\n      scale: 1,\n      rotation: totalRotation\n    });\n    this.reset();\n  }\n\n  cancelRendering() {\n    if (this.renderTask) {\n      this.renderTask.cancel();\n      this.renderTask = null;\n    }\n\n    this.resume = null;\n  }\n\n  _getPageDrawContext() {\n    const canvas = document.createElement(\"canvas\");\n    this.canvas = canvas;\n    canvas.mozOpaque = true;\n    const ctx = canvas.getContext(\"2d\", {\n      alpha: false\n    });\n    const outputScale = (0, _ui_utils.getOutputScale)(ctx);\n    canvas.width = this.canvasWidth * outputScale.sx | 0;\n    canvas.height = this.canvasHeight * outputScale.sy | 0;\n    canvas.style.width = this.canvasWidth + \"px\";\n    canvas.style.height = this.canvasHeight + \"px\";\n    const transform = outputScale.scaled ? [outputScale.sx, 0, 0, outputScale.sy, 0, 0] : null;\n    return [ctx, transform];\n  }\n\n  _convertCanvasToImage() {\n    if (!this.canvas) {\n      return;\n    }\n\n    if (this.renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED) {\n      return;\n    }\n\n    const className = \"thumbnailImage\";\n\n    if (this.disableCanvasToImageConversion) {\n      this.canvas.className = className;\n\n      this._thumbPageCanvas.then(msg => {\n        this.canvas.setAttribute(\"aria-label\", msg);\n      });\n\n      this.div.setAttribute(\"data-loaded\", true);\n      this.ring.appendChild(this.canvas);\n      return;\n    }\n\n    const image = document.createElement(\"img\");\n    image.className = className;\n\n    this._thumbPageCanvas.then(msg => {\n      image.setAttribute(\"aria-label\", msg);\n    });\n\n    image.style.width = this.canvasWidth + \"px\";\n    image.style.height = this.canvasHeight + \"px\";\n    image.src = this.canvas.toDataURL();\n    this.image = image;\n    this.div.setAttribute(\"data-loaded\", true);\n    this.ring.appendChild(image);\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n    delete this.canvas;\n  }\n\n  draw() {\n    if (this.renderingState !== _pdf_rendering_queue.RenderingStates.INITIAL) {\n      console.error(\"Must be in new state before drawing\");\n      return Promise.resolve(undefined);\n    }\n\n    const {\n      pdfPage\n    } = this;\n\n    if (!pdfPage) {\n      this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\n    }\n\n    this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n\n    const finishRenderTask = async (error = null) => {\n      if (renderTask === this.renderTask) {\n        this.renderTask = null;\n      }\n\n      if (error instanceof _pdfjsLib.RenderingCancelledException) {\n        return;\n      }\n\n      this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n\n      this._convertCanvasToImage();\n\n      if (error) {\n        throw error;\n      }\n    };\n\n    const [ctx, transform] = this._getPageDrawContext();\n\n    const drawViewport = this.viewport.clone({\n      scale: this.scale\n    });\n\n    const renderContinueCallback = cont => {\n      if (!this.renderingQueue.isHighestPriority(this)) {\n        this.renderingState = _pdf_rendering_queue.RenderingStates.PAUSED;\n\n        this.resume = () => {\n          this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n          cont();\n        };\n\n        return;\n      }\n\n      cont();\n    };\n\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: drawViewport,\n      optionalContentConfigPromise: this._optionalContentConfigPromise\n    };\n    const renderTask = this.renderTask = pdfPage.render(renderContext);\n    renderTask.onContinue = renderContinueCallback;\n    const resultPromise = renderTask.promise.then(function () {\n      finishRenderTask(null);\n    }, function (error) {\n      finishRenderTask(error);\n    });\n    resultPromise.finally(() => {\n      const pageCached = this.linkService.isPageCached(this.id);\n\n      if (pageCached) {\n        return;\n      }\n\n      this.pdfPage && this.pdfPage.cleanup(); //?.\n    });\n    return resultPromise;\n  }\n\n  setImage(pageView) {\n    if (this._checkSetImageDisabled()) {\n      return;\n    }\n\n    if (this.renderingState !== _pdf_rendering_queue.RenderingStates.INITIAL) {\n      return;\n    }\n\n    const img = pageView.canvas;\n\n    if (!img) {\n      return;\n    }\n\n    if (!this.pdfPage) {\n      this.setPdfPage(pageView.pdfPage);\n    }\n\n    this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n\n    const [ctx] = this._getPageDrawContext();\n\n    const canvas = ctx.canvas;\n\n    if (img.width <= 2 * canvas.width) {\n      ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\n\n      this._convertCanvasToImage();\n\n      return;\n    }\n\n    let reducedWidth = canvas.width << MAX_NUM_SCALING_STEPS;\n    let reducedHeight = canvas.height << MAX_NUM_SCALING_STEPS;\n    const reducedImage = TempImageFactory.getCanvas(reducedWidth, reducedHeight);\n    const reducedImageCtx = reducedImage.getContext(\"2d\");\n\n    while (reducedWidth > img.width || reducedHeight > img.height) {\n      reducedWidth >>= 1;\n      reducedHeight >>= 1;\n    }\n\n    reducedImageCtx.drawImage(img, 0, 0, img.width, img.height, 0, 0, reducedWidth, reducedHeight);\n\n    while (reducedWidth > 2 * canvas.width) {\n      reducedImageCtx.drawImage(reducedImage, 0, 0, reducedWidth, reducedHeight, 0, 0, reducedWidth >> 1, reducedHeight >> 1);\n      reducedWidth >>= 1;\n      reducedHeight >>= 1;\n    }\n\n    ctx.drawImage(reducedImage, 0, 0, reducedWidth, reducedHeight, 0, 0, canvas.width, canvas.height);\n\n    this._convertCanvasToImage();\n  }\n\n  get _thumbPageTitle() {\n    return this.l10n.get(\"thumb_page_title\", {\n      page: this.pageLabel ||  this.id // ??\n    }, \"Page {{page}}\");\n  }\n\n  get _thumbPageCanvas() {\n    return this.l10n.get(\"thumb_page_canvas\", {\n      page: this.pageLabel ||  this.id // ??\n    }, \"Thumbnail of Page {{page}}\");\n  }\n\n  setPageLabel(label) {\n    this.pageLabel = typeof label === \"string\" ? label : null;\n\n    this._thumbPageTitle.then(msg => {\n      this.anchor.title = msg;\n    });\n\n    if (this.renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED) {\n      return;\n    }\n\n    this._thumbPageCanvas.then(msg => {\n      if (this.image) {\n        this.image.setAttribute(\"aria-label\", msg);\n      } else if (this.disableCanvasToImageConversion && this.canvas) {\n        this.canvas.setAttribute(\"aria-label\", msg);\n      }\n    });\n  }\n\n}\n\nexports.PDFThumbnailView = PDFThumbnailView;\n\n/***/ }),\n/* 26 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFViewer = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _base_viewer = __webpack_require__(27);\n\nvar _pdfjsLib = __webpack_require__(5);\n\nclass PDFViewer extends _base_viewer.BaseViewer {\n  get _viewerElement() {\n    return (0, _pdfjsLib.shadow)(this, \"_viewerElement\", this.viewer);\n  }\n\n  _scrollIntoView({\n    pageDiv,\n    pageSpot = null,\n    pageNumber = null\n  }) {\n    if (!pageSpot && !this.isInPresentationMode) {\n      const left = pageDiv.offsetLeft + pageDiv.clientLeft;\n      const right = left + pageDiv.clientWidth;\n      const {\n        scrollLeft,\n        clientWidth\n      } = this.container;\n\n      if (this._isScrollModeHorizontal || left < scrollLeft || right > scrollLeft + clientWidth) {\n        pageSpot = {\n          left: 0,\n          top: 0\n        };\n      }\n    }\n\n    super._scrollIntoView({\n      pageDiv,\n      pageSpot,\n      pageNumber\n    });\n  }\n\n  _getVisiblePages() {\n    if (this.isInPresentationMode) {\n      return this._getCurrentVisiblePage();\n    }\n\n    return super._getVisiblePages();\n  }\n\n  _updateHelper(visiblePages) {\n    if (this.isInPresentationMode) {\n      return;\n    }\n\n    let currentId = this._currentPageNumber;\n    let stillFullyVisible = false;\n\n    for (const page of visiblePages) {\n      if (page.percent < 100) {\n        break;\n      }\n\n      if (page.id === currentId && this._scrollMode === _ui_utils.ScrollMode.VERTICAL && this._spreadMode === _ui_utils.SpreadMode.NONE) {\n        stillFullyVisible = true;\n        break;\n      }\n    }\n\n    if (!stillFullyVisible) {\n      currentId = visiblePages[0].id;\n    }\n\n    this._setCurrentPageNumber(currentId);\n  }\n\n}\n\nexports.PDFViewer = PDFViewer;\n\n/***/ }),\n/* 27 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.BaseViewer = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdf_rendering_queue = __webpack_require__(8);\n\nvar _annotation_layer_builder = __webpack_require__(28);\n\nvar _pdf_page_view = __webpack_require__(29);\n\nvar _pdf_link_service = __webpack_require__(19);\n\nvar _text_layer_builder = __webpack_require__(30);\n\nconst DEFAULT_CACHE_SIZE = 10;\n\nfunction PDFPageViewBuffer(size) {\n  const data = [];\n\n  this.push = function (view) {\n    const i = data.indexOf(view);\n\n    if (i >= 0) {\n      data.splice(i, 1);\n    }\n\n    data.push(view);\n\n    if (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n\n  this.resize = function (newSize, pagesToKeep) {\n    size = newSize;\n\n    if (pagesToKeep) {\n      const pageIdsToKeep = new Set();\n\n      for (let i = 0, iMax = pagesToKeep.length; i < iMax; ++i) {\n        pageIdsToKeep.add(pagesToKeep[i].id);\n      }\n\n      (0, _ui_utils.moveToEndOfArray)(data, function (page) {\n        return pageIdsToKeep.has(page.id);\n      });\n    }\n\n    while (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n\n  this.has = function (view) {\n    return data.includes(view);\n  };\n}\n\nfunction isSameScale(oldScale, newScale) {\n  if (newScale === oldScale) {\n    return true;\n  }\n\n  if (Math.abs(newScale - oldScale) < 1e-15) {\n    return true;\n  }\n\n  return false;\n}\n\nclass BaseViewer {\n  constructor(options) {\n    if (this.constructor === BaseViewer) {\n      throw new Error(\"Cannot initialize BaseViewer.\");\n    }\n\n    const viewerVersion = '2.7.570';\n\n    if (_pdfjsLib.version !== viewerVersion) {\n      throw new Error(`The API version \"${_pdfjsLib.version}\" does not match the Viewer version \"${viewerVersion}\".`);\n    }\n\n    this._name = this.constructor.name;\n    this.container = options.container;\n    this.viewer = options.viewer || options.container.firstElementChild;\n\n    if (!(this.container && this.container.tagName.toUpperCase() === \"DIV\" && (this.viewer && this.viewer.tagName.toUpperCase() === \"DIV\"))) { //?.\n      throw new Error(\"Invalid `container` and/or `viewer` option.\");\n    }\n\n    if (getComputedStyle(this.container).position !== \"absolute\") {\n      throw new Error(\"The `container` must be absolutely positioned.\");\n    }\n\n    this.eventBus = options.eventBus;\n    this.linkService = options.linkService || new _pdf_link_service.SimpleLinkService();\n    this.downloadManager = options.downloadManager || null;\n    this.findController = options.findController || null;\n    this.removePageBorders = options.removePageBorders || false;\n    this.textLayerMode = Number.isInteger(options.textLayerMode) ? options.textLayerMode : _ui_utils.TextLayerMode.ENABLE;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.renderInteractiveForms = typeof options.renderInteractiveForms === \"boolean\" ? options.renderInteractiveForms : true;\n    this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\n    this.renderer = options.renderer || _ui_utils.RendererType.CANVAS;\n    this.enableWebGL = options.enableWebGL || false;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels;\n    this.l10n = options.l10n || _ui_utils.NullL10n;\n    this.enableScripting = options.enableScripting || false;\n    this._mouseState = options.mouseState || null;\n    this.defaultRenderingQueue = !options.renderingQueue;\n\n    if (this.defaultRenderingQueue) {\n      this.renderingQueue = new _pdf_rendering_queue.PDFRenderingQueue();\n      this.renderingQueue.setViewer(this);\n    } else {\n      this.renderingQueue = options.renderingQueue;\n    }\n\n    this.scroll = (0, _ui_utils.watchScroll)(this.container, this._scrollUpdate.bind(this));\n    this.presentationModeState = _ui_utils.PresentationModeState.UNKNOWN;\n    this._onBeforeDraw = this._onAfterDraw = null;\n\n    this._resetView();\n\n    if (this.removePageBorders) {\n      this.viewer.classList.add(\"removePageBorders\");\n    }\n\n    Promise.resolve().then(() => {\n      this.eventBus.dispatch(\"baseviewerinit\", {\n        source: this\n      });\n    });\n  }\n\n  get pagesCount() {\n    return this._pages.length;\n  }\n\n  getPageView(index) {\n    return this._pages[index];\n  }\n\n  get pageViewsReady() {\n    if (!this._pagesCapability.settled) {\n      return false;\n    }\n\n    return this._pages.every(function (pageView) {\n      return pageView && pageView.pdfPage;\n    });\n  }\n\n  get currentPageNumber() {\n    return this._currentPageNumber;\n  }\n\n  set currentPageNumber(val) {\n    if (!Number.isInteger(val)) {\n      throw new Error(\"Invalid page number.\");\n    }\n\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    if (!this._setCurrentPageNumber(val, true)) {\n      console.error(`${this._name}.currentPageNumber: \"${val}\" is not a valid page.`);\n    }\n  }\n\n  _setCurrentPageNumber(val, resetCurrentPageView = false) {\n    if (this._currentPageNumber === val) {\n      if (resetCurrentPageView) {\n        this._resetCurrentPageView();\n      }\n\n      return true;\n    }\n\n    if (!(0 < val && val <= this.pagesCount)) {\n      return false;\n    }\n\n    const previous = this._currentPageNumber;\n    this._currentPageNumber = val;\n    this.eventBus.dispatch(\"pagechanging\", {\n      source: this,\n      pageNumber: val,\n      pageLabel: this._pageLabels && this._pageLabels[val - 1],\n      previous\n    });\n\n    if (resetCurrentPageView) {\n      this._resetCurrentPageView();\n    }\n\n    return true;\n  }\n\n  get currentPageLabel() {\n    return this._pageLabels && this._pageLabels[this._currentPageNumber - 1];\n  }\n\n  set currentPageLabel(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    let page = val | 0;\n\n    if (this._pageLabels) {\n      const i = this._pageLabels.indexOf(val);\n\n      if (i >= 0) {\n        page = i + 1;\n      }\n    }\n\n    if (!this._setCurrentPageNumber(page, true)) {\n      console.error(`${this._name}.currentPageLabel: \"${val}\" is not a valid page.`);\n    }\n  }\n\n  get currentScale() {\n    return this._currentScale !== _ui_utils.UNKNOWN_SCALE ? this._currentScale : _ui_utils.DEFAULT_SCALE;\n  }\n\n  set currentScale(val) {\n    if (isNaN(val)) {\n      throw new Error(\"Invalid numeric scale.\");\n    }\n\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    this._setScale(val, false);\n  }\n\n  get currentScaleValue() {\n    return this._currentScaleValue;\n  }\n\n  set currentScaleValue(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    this._setScale(val, false);\n  }\n\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  set pagesRotation(rotation) {\n    if (!(0, _ui_utils.isValidRotation)(rotation)) {\n      throw new Error(\"Invalid pages rotation angle.\");\n    }\n\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    if (this._pagesRotation === rotation) {\n      return;\n    }\n\n    this._pagesRotation = rotation;\n    const pageNumber = this._currentPageNumber;\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      const pageView = this._pages[i];\n      pageView.update(pageView.scale, rotation);\n    }\n\n    if (this._currentScaleValue) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    this.eventBus.dispatch(\"rotationchanging\", {\n      source: this,\n      pagesRotation: rotation,\n      pageNumber\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  get firstPagePromise() {\n    return this.pdfDocument ? this._firstPageCapability.promise : null;\n  }\n\n  get onePageRendered() {\n    return this.pdfDocument ? this._onePageRenderedCapability.promise : null;\n  }\n\n  get pagesPromise() {\n    return this.pdfDocument ? this._pagesCapability.promise : null;\n  }\n\n  get _viewerElement() {\n    throw new Error(\"Not implemented: _viewerElement\");\n  }\n\n  _onePageRenderedOrForceFetch() {\n    if (!this.container.offsetParent || this._getVisiblePages().views.length === 0) {\n      return Promise.resolve();\n    }\n\n    return this._onePageRenderedCapability.promise;\n  }\n\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this.eventBus.dispatch(\"pagesdestroy\", {\n        source: this\n      });\n\n      this._cancelRendering();\n\n      this._resetView();\n\n      if (this.findController) {\n        this.findController.setDocument(null);\n      }\n    }\n\n    this.pdfDocument = pdfDocument;\n\n    if (!pdfDocument) {\n      return;\n    }\n\n    const pagesCount = pdfDocument.numPages;\n    const firstPagePromise = pdfDocument.getPage(1);\n    const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig();\n\n    this._pagesCapability.promise.then(() => {\n      this.eventBus.dispatch(\"pagesloaded\", {\n        source: this,\n        pagesCount\n      });\n    });\n\n    this._onBeforeDraw = evt => {\n      const pageView = this._pages[evt.pageNumber - 1];\n\n      if (!pageView) {\n        return;\n      }\n\n      this._buffer.push(pageView);\n    };\n\n    this.eventBus._on(\"pagerender\", this._onBeforeDraw);\n\n    this._onAfterDraw = evt => {\n      if (evt.cssTransform || this._onePageRenderedCapability.settled) {\n        return;\n      }\n\n      this._onePageRenderedCapability.resolve();\n\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n\n      this._onAfterDraw = null;\n    };\n\n    this.eventBus._on(\"pagerendered\", this._onAfterDraw);\n\n    firstPagePromise.then(firstPdfPage => {\n      this._firstPageCapability.resolve(firstPdfPage);\n\n      this._optionalContentConfigPromise = optionalContentConfigPromise;\n      const scale = this.currentScale;\n      const viewport = firstPdfPage.getViewport({\n        scale: scale * _ui_utils.CSS_UNITS\n      });\n      const textLayerFactory = this.textLayerMode !== _ui_utils.TextLayerMode.DISABLE ? this : null;\n\n      for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n        const pageView = new _pdf_page_view.PDFPageView({\n          container: this._viewerElement,\n          eventBus: this.eventBus,\n          id: pageNum,\n          scale,\n          defaultViewport: viewport.clone(),\n          optionalContentConfigPromise,\n          renderingQueue: this.renderingQueue,\n          textLayerFactory,\n          textLayerMode: this.textLayerMode,\n          annotationLayerFactory: this,\n          imageResourcesPath: this.imageResourcesPath,\n          renderInteractiveForms: this.renderInteractiveForms,\n          renderer: this.renderer,\n          enableWebGL: this.enableWebGL,\n          useOnlyCssZoom: this.useOnlyCssZoom,\n          maxCanvasPixels: this.maxCanvasPixels,\n          l10n: this.l10n,\n          enableScripting: this.enableScripting\n        });\n\n        this._pages.push(pageView);\n      }\n\n      const firstPageView = this._pages[0];\n\n      if (firstPageView) {\n        firstPageView.setPdfPage(firstPdfPage);\n        this.linkService.cachePageRef(1, firstPdfPage.ref);\n      }\n\n      if (this._spreadMode !== _ui_utils.SpreadMode.NONE) {\n        this._updateSpreadMode();\n      }\n\n      this._onePageRenderedOrForceFetch().then(() => {\n        if (this.findController) {\n          this.findController.setDocument(pdfDocument);\n        }\n\n        if (pdfDocument.loadingParams.disableAutoFetch || pagesCount > 7500) {\n          this._pagesCapability.resolve();\n\n          return;\n        }\n\n        let getPagesLeft = pagesCount - 1;\n\n        if (getPagesLeft <= 0) {\n          this._pagesCapability.resolve();\n\n          return;\n        }\n\n        for (let pageNum = 2; pageNum <= pagesCount; ++pageNum) {\n          pdfDocument.getPage(pageNum).then(pdfPage => {\n            const pageView = this._pages[pageNum - 1];\n\n            if (!pageView.pdfPage) {\n              pageView.setPdfPage(pdfPage);\n            }\n\n            this.linkService.cachePageRef(pageNum, pdfPage.ref);\n\n            if (--getPagesLeft === 0) {\n              this._pagesCapability.resolve();\n            }\n          }, reason => {\n            console.error(`Unable to get page ${pageNum} to initialize viewer`, reason);\n\n            if (--getPagesLeft === 0) {\n              this._pagesCapability.resolve();\n            }\n          });\n        }\n      });\n\n      this.eventBus.dispatch(\"pagesinit\", {\n        source: this\n      });\n\n      if (this.defaultRenderingQueue) {\n        this.update();\n      }\n    }).catch(reason => {\n      console.error(\"Unable to initialize viewer\", reason);\n    });\n  }\n\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) {\n      this._pageLabels = null;\n      console.error(`${this._name}.setPageLabels: Invalid page labels.`);\n    } else {\n      this._pageLabels = labels;\n    }\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      const pageView = this._pages[i];\n      const label = this._pageLabels && this._pageLabels[i];\n      pageView.setPageLabel(label);\n    }\n  }\n\n  _resetView() {\n    this._pages = [];\n    this._currentPageNumber = 1;\n    this._currentScale = _ui_utils.UNKNOWN_SCALE;\n    this._currentScaleValue = null;\n    this._pageLabels = null;\n    this._buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);\n    this._location = null;\n    this._pagesRotation = 0;\n    this._optionalContentConfigPromise = null;\n    this._pagesRequests = new WeakMap();\n    this._firstPageCapability = (0, _pdfjsLib.createPromiseCapability)();\n    this._onePageRenderedCapability = (0, _pdfjsLib.createPromiseCapability)();\n    this._pagesCapability = (0, _pdfjsLib.createPromiseCapability)();\n    this._scrollMode = _ui_utils.ScrollMode.VERTICAL;\n    this._spreadMode = _ui_utils.SpreadMode.NONE;\n\n    if (this._onBeforeDraw) {\n      this.eventBus._off(\"pagerender\", this._onBeforeDraw);\n\n      this._onBeforeDraw = null;\n    }\n\n    if (this._onAfterDraw) {\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n\n      this._onAfterDraw = null;\n    }\n\n    this._resetScriptingEvents();\n\n    this.viewer.textContent = \"\";\n\n    this._updateScrollMode();\n  }\n\n  _scrollUpdate() {\n    if (this.pagesCount === 0) {\n      return;\n    }\n\n    this.update();\n  }\n\n  _scrollIntoView({\n    pageDiv,\n    pageSpot = null,\n    pageNumber = null\n  }) {\n    (0, _ui_utils.scrollIntoView)(pageDiv, pageSpot);\n  }\n\n  _setScaleUpdatePages(newScale, newValue, noScroll = false, preset = false) {\n    this._currentScaleValue = newValue.toString();\n\n    if (isSameScale(this._currentScale, newScale)) {\n      if (preset) {\n        this.eventBus.dispatch(\"scalechanging\", {\n          source: this,\n          scale: newScale,\n          presetValue: newValue\n        });\n      }\n\n      return;\n    }\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      this._pages[i].update(newScale);\n    }\n\n    this._currentScale = newScale;\n\n    if (!noScroll) {\n      let page = this._currentPageNumber,\n          dest;\n\n      if (this._location && !(this.isInPresentationMode || this.isChangingPresentationMode)) {\n        page = this._location.pageNumber;\n        dest = [null, {\n          name: \"XYZ\"\n        }, this._location.left, this._location.top, null];\n      }\n\n      this.scrollPageIntoView({\n        pageNumber: page,\n        destArray: dest,\n        allowNegativeOffset: true\n      });\n    }\n\n    this.eventBus.dispatch(\"scalechanging\", {\n      source: this,\n      scale: newScale,\n      presetValue: preset ? newValue : undefined\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  get _pageWidthScaleFactor() {\n    if (this.spreadMode !== _ui_utils.SpreadMode.NONE && this.scrollMode !== _ui_utils.ScrollMode.HORIZONTAL && !this.isInPresentationMode) {\n      return 2;\n    }\n\n    return 1;\n  }\n\n  _setScale(value, noScroll = false) {\n    let scale = parseFloat(value);\n\n    if (scale > 0) {\n      this._setScaleUpdatePages(scale, value, noScroll, false);\n    } else {\n      const currentPage = this._pages[this._currentPageNumber - 1];\n\n      if (!currentPage) {\n        return;\n      }\n\n      const noPadding = this.isInPresentationMode || this.removePageBorders;\n      let hPadding = noPadding ? 0 : _ui_utils.SCROLLBAR_PADDING;\n      let vPadding = noPadding ? 0 : _ui_utils.VERTICAL_PADDING;\n\n      if (!noPadding && this._isScrollModeHorizontal) {\n        [hPadding, vPadding] = [vPadding, hPadding];\n      }\n\n      const pageWidthScale = (this.container.clientWidth - hPadding) / currentPage.width * currentPage.scale / this._pageWidthScaleFactor;\n      const pageHeightScale = (this.container.clientHeight - vPadding) / currentPage.height * currentPage.scale;\n\n      switch (value) {\n        case \"page-actual\":\n          scale = 1;\n          break;\n\n        case \"page-width\":\n          scale = pageWidthScale;\n          break;\n\n        case \"page-height\":\n          scale = pageHeightScale;\n          break;\n\n        case \"page-fit\":\n          scale = Math.min(pageWidthScale, pageHeightScale);\n          break;\n\n        case \"auto\":\n          const horizontalScale = (0, _ui_utils.isPortraitOrientation)(currentPage) ? pageWidthScale : Math.min(pageHeightScale, pageWidthScale);\n          scale = Math.min(_ui_utils.MAX_AUTO_SCALE, horizontalScale);\n          break;\n\n        default:\n          console.error(`${this._name}._setScale: \"${value}\" is an unknown zoom value.`);\n          return;\n      }\n\n      this._setScaleUpdatePages(scale, value, noScroll, true);\n    }\n  }\n\n  _resetCurrentPageView() {\n    if (this.isInPresentationMode) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    const pageView = this._pages[this._currentPageNumber - 1];\n\n    this._scrollIntoView({\n      pageDiv: pageView.div\n    });\n  }\n\n  pageLabelToPageNumber(label) {\n    if (!this._pageLabels) {\n      return null;\n    }\n\n    const i = this._pageLabels.indexOf(label);\n\n    if (i < 0) {\n      return null;\n    }\n\n    return i + 1;\n  }\n\n  scrollPageIntoView({\n    pageNumber,\n    destArray = null,\n    allowNegativeOffset = false,\n    ignoreDestinationZoom = false\n  }) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    const pageView = Number.isInteger(pageNumber) && this._pages[pageNumber - 1];\n\n    if (!pageView) {\n      console.error(`${this._name}.scrollPageIntoView: ` + `\"${pageNumber}\" is not a valid pageNumber parameter.`);\n      return;\n    }\n\n    if (this.isInPresentationMode || !destArray) {\n      this._setCurrentPageNumber(pageNumber, true);\n\n      return;\n    }\n\n    let x = 0,\n        y = 0;\n    let width = 0,\n        height = 0,\n        widthScale,\n        heightScale;\n    const changeOrientation = pageView.rotation % 180 !== 0;\n    const pageWidth = (changeOrientation ? pageView.height : pageView.width) / pageView.scale / _ui_utils.CSS_UNITS;\n    const pageHeight = (changeOrientation ? pageView.width : pageView.height) / pageView.scale / _ui_utils.CSS_UNITS;\n    let scale = 0;\n\n    switch (destArray[1].name) {\n      case \"XYZ\":\n        x = destArray[2];\n        y = destArray[3];\n        scale = destArray[4];\n        x = x !== null ? x : 0;\n        y = y !== null ? y : pageHeight;\n        break;\n\n      case \"Fit\":\n      case \"FitB\":\n        scale = \"page-fit\";\n        break;\n\n      case \"FitH\":\n      case \"FitBH\":\n        y = destArray[2];\n        scale = \"page-width\";\n\n        if (y === null && this._location) {\n          x = this._location.left;\n          y = this._location.top;\n        } else if (typeof y !== \"number\") {\n          y = pageHeight;\n        }\n\n        break;\n\n      case \"FitV\":\n      case \"FitBV\":\n        x = destArray[2];\n        width = pageWidth;\n        height = pageHeight;\n        scale = \"page-height\";\n        break;\n\n      case \"FitR\":\n        x = destArray[2];\n        y = destArray[3];\n        width = destArray[4] - x;\n        height = destArray[5] - y;\n        const hPadding = this.removePageBorders ? 0 : _ui_utils.SCROLLBAR_PADDING;\n        const vPadding = this.removePageBorders ? 0 : _ui_utils.VERTICAL_PADDING;\n        widthScale = (this.container.clientWidth - hPadding) / width / _ui_utils.CSS_UNITS;\n        heightScale = (this.container.clientHeight - vPadding) / height / _ui_utils.CSS_UNITS;\n        scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n        break;\n\n      default:\n        console.error(`${this._name}.scrollPageIntoView: ` + `\"${destArray[1].name}\" is not a valid destination type.`);\n        return;\n    }\n\n    if (!ignoreDestinationZoom) {\n      if (scale && scale !== this._currentScale) {\n        this.currentScaleValue = scale;\n      } else if (this._currentScale === _ui_utils.UNKNOWN_SCALE) {\n        this.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n      }\n    }\n\n    if (scale === \"page-fit\" && !destArray[4]) {\n      this._scrollIntoView({\n        pageDiv: pageView.div,\n        pageNumber\n      });\n\n      return;\n    }\n\n    const boundingRect = [pageView.viewport.convertToViewportPoint(x, y), pageView.viewport.convertToViewportPoint(x + width, y + height)];\n    let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n    let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n\n    if (!allowNegativeOffset) {\n      left = Math.max(left, 0);\n      top = Math.max(top, 0);\n    }\n\n    this._scrollIntoView({\n      pageDiv: pageView.div,\n      pageSpot: {\n        left,\n        top\n      },\n      pageNumber\n    });\n  }\n\n  _updateLocation(firstPage) {\n    const currentScale = this._currentScale;\n    const currentScaleValue = this._currentScaleValue;\n    const normalizedScaleValue = parseFloat(currentScaleValue) === currentScale ? Math.round(currentScale * 10000) / 100 : currentScaleValue;\n    const pageNumber = firstPage.id;\n    let pdfOpenParams = \"#page=\" + pageNumber;\n    pdfOpenParams += \"&zoom=\" + normalizedScaleValue;\n    const currentPageView = this._pages[pageNumber - 1];\n    const container = this.container;\n    const topLeft = currentPageView.getPagePoint(container.scrollLeft - firstPage.x, container.scrollTop - firstPage.y);\n    const intLeft = Math.round(topLeft[0]);\n    const intTop = Math.round(topLeft[1]);\n    pdfOpenParams += \",\" + intLeft + \",\" + intTop;\n    this._location = {\n      pageNumber,\n      scale: normalizedScaleValue,\n      top: intTop,\n      left: intLeft,\n      rotation: this._pagesRotation,\n      pdfOpenParams\n    };\n  }\n\n  _updateHelper(visiblePages) {\n    throw new Error(\"Not implemented: _updateHelper\");\n  }\n\n  update() {\n    const visible = this._getVisiblePages();\n\n    const visiblePages = visible.views,\n          numVisiblePages = visiblePages.length;\n\n    if (numVisiblePages === 0) {\n      return;\n    }\n\n    const newCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * numVisiblePages + 1);\n\n    this._buffer.resize(newCacheSize, visiblePages);\n\n    this.renderingQueue.renderHighestPriority(visible);\n\n    this._updateHelper(visiblePages);\n\n    this._updateLocation(visible.first);\n\n    this.eventBus.dispatch(\"updateviewarea\", {\n      source: this,\n      location: this._location\n    });\n  }\n\n  containsElement(element) {\n    return this.container.contains(element);\n  }\n\n  focus() {\n    this.container.focus();\n  }\n\n  get _isScrollModeHorizontal() {\n    return this.isInPresentationMode ? false : this._scrollMode === _ui_utils.ScrollMode.HORIZONTAL;\n  }\n\n  get _isContainerRtl() {\n    return getComputedStyle(this.container).direction === \"rtl\";\n  }\n\n  get isInPresentationMode() {\n    return this.presentationModeState === _ui_utils.PresentationModeState.FULLSCREEN;\n  }\n\n  get isChangingPresentationMode() {\n    return this.presentationModeState === _ui_utils.PresentationModeState.CHANGING;\n  }\n\n  get isHorizontalScrollbarEnabled() {\n    return this.isInPresentationMode ? false : this.container.scrollWidth > this.container.clientWidth;\n  }\n\n  get isVerticalScrollbarEnabled() {\n    return this.isInPresentationMode ? false : this.container.scrollHeight > this.container.clientHeight;\n  }\n\n  _getCurrentVisiblePage() {\n    if (!this.pagesCount) {\n      return {\n        views: []\n      };\n    }\n\n    const pageView = this._pages[this._currentPageNumber - 1];\n    const element = pageView.div;\n    const view = {\n      id: pageView.id,\n      x: element.offsetLeft + element.clientLeft,\n      y: element.offsetTop + element.clientTop,\n      view: pageView\n    };\n    return {\n      first: view,\n      last: view,\n      views: [view]\n    };\n  }\n\n  _getVisiblePages() {\n    return (0, _ui_utils.getVisibleElements)({\n      scrollEl: this.container,\n      views: this._pages,\n      sortByVisibility: true,\n      horizontal: this._isScrollModeHorizontal,\n      rtl: this._isScrollModeHorizontal && this._isContainerRtl\n    });\n  }\n\n  isPageVisible(pageNumber) {\n    if (!this.pdfDocument) {\n      return false;\n    }\n\n    if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.pagesCount)) {\n      console.error(`${this._name}.isPageVisible: \"${pageNumber}\" is not a valid page.`);\n      return false;\n    }\n\n    return this._getVisiblePages().views.some(function (view) {\n      return view.id === pageNumber;\n    });\n  }\n\n  isPageCached(pageNumber) {\n    if (!this.pdfDocument || !this._buffer) {\n      return false;\n    }\n\n    if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber <= this.pagesCount)) {\n      console.error(`${this._name}.isPageCached: \"${pageNumber}\" is not a valid page.`);\n      return false;\n    }\n\n    const pageView = this._pages[pageNumber - 1];\n\n    if (!pageView) {\n      return false;\n    }\n\n    return this._buffer.has(pageView);\n  }\n\n  cleanup() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (this._pages[i] && this._pages[i].renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED) {\n        this._pages[i].reset();\n      }\n    }\n  }\n\n  _cancelRendering() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (this._pages[i]) {\n        this._pages[i].cancelRendering();\n      }\n    }\n  }\n\n  _ensurePdfPageLoaded(pageView) {\n    if (pageView.pdfPage) {\n      return Promise.resolve(pageView.pdfPage);\n    }\n\n    if (this._pagesRequests.has(pageView)) {\n      return this._pagesRequests.get(pageView);\n    }\n\n    const promise = this.pdfDocument.getPage(pageView.id).then(pdfPage => {\n      if (!pageView.pdfPage) {\n        pageView.setPdfPage(pdfPage);\n      }\n\n      this._pagesRequests.delete(pageView);\n\n      return pdfPage;\n    }).catch(reason => {\n      console.error(\"Unable to get page for page view\", reason);\n\n      this._pagesRequests.delete(pageView);\n    });\n\n    this._pagesRequests.set(pageView, promise);\n\n    return promise;\n  }\n\n  forceRendering(currentlyVisiblePages) {\n    const visiblePages = currentlyVisiblePages || this._getVisiblePages();\n\n    const scrollAhead = this._isScrollModeHorizontal ? this.scroll.right : this.scroll.down;\n    const pageView = this.renderingQueue.getHighestPriority(visiblePages, this._pages, scrollAhead);\n\n    if (pageView) {\n      this._ensurePdfPageLoaded(pageView).then(() => {\n        this.renderingQueue.renderView(pageView);\n      });\n\n      return true;\n    }\n\n    return false;\n  }\n\n  createTextLayerBuilder(textLayerDiv, pageIndex, viewport, enhanceTextSelection = false, eventBus) {\n    return new _text_layer_builder.TextLayerBuilder({\n      textLayerDiv,\n      eventBus,\n      pageIndex,\n      viewport,\n      findController: this.isInPresentationMode ? null : this.findController,\n      enhanceTextSelection: this.isInPresentationMode ? false : enhanceTextSelection\n    });\n  }\n\n  createAnnotationLayerBuilder(pageDiv, pdfPage, annotationStorage = null, imageResourcesPath = \"\", renderInteractiveForms = false, l10n = _ui_utils.NullL10n, enableScripting = false, hasJSActionsPromise = null, mouseState = null) {\n    return new _annotation_layer_builder.AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      annotationStorage: annotationStorage || this.pdfDocument && this.pdfDocument.annotationStorage, // ?.\n      imageResourcesPath,\n      renderInteractiveForms,\n      linkService: this.linkService,\n      downloadManager: this.downloadManager,\n      l10n,\n      enableScripting,\n      hasJSActionsPromise: hasJSActionsPromise || this.pdfDocument && this.pdfDocument.hasJSActions(), //?.\n      mouseState: mouseState || this._mouseState\n    });\n  }\n\n  get hasEqualPageSizes() {\n    const firstPageView = this._pages[0];\n\n    for (let i = 1, ii = this._pages.length; i < ii; ++i) {\n      const pageView = this._pages[i];\n\n      if (pageView.width !== firstPageView.width || pageView.height !== firstPageView.height) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getPagesOverview() {\n    const pagesOverview = this._pages.map(function (pageView) {\n      const viewport = pageView.pdfPage.getViewport({\n        scale: 1\n      });\n      return {\n        width: viewport.width,\n        height: viewport.height,\n        rotation: viewport.rotation\n      };\n    });\n\n    if (!this.enablePrintAutoRotate) {\n      return pagesOverview;\n    }\n\n    return pagesOverview.map(function (size) {\n      if ((0, _ui_utils.isPortraitOrientation)(size)) {\n        return size;\n      }\n\n      return {\n        width: size.height,\n        height: size.width,\n        rotation: (size.rotation + 90) % 360\n      };\n    });\n  }\n\n  get optionalContentConfigPromise() {\n    if (!this.pdfDocument) {\n      return Promise.resolve(null);\n    }\n\n    if (!this._optionalContentConfigPromise) {\n      return this.pdfDocument.getOptionalContentConfig();\n    }\n\n    return this._optionalContentConfigPromise;\n  }\n\n  set optionalContentConfigPromise(promise) {\n    if (!(promise instanceof Promise)) {\n      throw new Error(`Invalid optionalContentConfigPromise: ${promise}`);\n    }\n\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    if (!this._optionalContentConfigPromise) {\n      return;\n    }\n\n    this._optionalContentConfigPromise = promise;\n\n    for (const pageView of this._pages) {\n      pageView.update(pageView.scale, pageView.rotation, promise);\n    }\n\n    this.update();\n    this.eventBus.dispatch(\"optionalcontentconfigchanged\", {\n      source: this,\n      promise\n    });\n  }\n\n  get scrollMode() {\n    return this._scrollMode;\n  }\n\n  set scrollMode(mode) {\n    if (this._scrollMode === mode) {\n      return;\n    }\n\n    if (!(0, _ui_utils.isValidScrollMode)(mode)) {\n      throw new Error(`Invalid scroll mode: ${mode}`);\n    }\n\n    this._scrollMode = mode;\n    this.eventBus.dispatch(\"scrollmodechanged\", {\n      source: this,\n      mode\n    });\n\n    this._updateScrollMode(this._currentPageNumber);\n  }\n\n  _updateScrollMode(pageNumber = null) {\n    const scrollMode = this._scrollMode,\n          viewer = this.viewer;\n    viewer.classList.toggle(\"scrollHorizontal\", scrollMode === _ui_utils.ScrollMode.HORIZONTAL);\n    viewer.classList.toggle(\"scrollWrapped\", scrollMode === _ui_utils.ScrollMode.WRAPPED);\n\n    if (!this.pdfDocument || !pageNumber) {\n      return;\n    }\n\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    this._setCurrentPageNumber(pageNumber, true);\n\n    this.update();\n  }\n\n  get spreadMode() {\n    return this._spreadMode;\n  }\n\n  set spreadMode(mode) {\n    if (this._spreadMode === mode) {\n      return;\n    }\n\n    if (!(0, _ui_utils.isValidSpreadMode)(mode)) {\n      throw new Error(`Invalid spread mode: ${mode}`);\n    }\n\n    this._spreadMode = mode;\n    this.eventBus.dispatch(\"spreadmodechanged\", {\n      source: this,\n      mode\n    });\n\n    this._updateSpreadMode(this._currentPageNumber);\n  }\n\n  _updateSpreadMode(pageNumber = null) {\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    const viewer = this.viewer,\n          pages = this._pages;\n    viewer.textContent = \"\";\n\n    if (this._spreadMode === _ui_utils.SpreadMode.NONE) {\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        viewer.appendChild(pages[i].div);\n      }\n    } else {\n      const parity = this._spreadMode - 1;\n      let spread = null;\n\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        if (spread === null) {\n          spread = document.createElement(\"div\");\n          spread.className = \"spread\";\n          viewer.appendChild(spread);\n        } else if (i % 2 === parity) {\n          spread = spread.cloneNode(false);\n          viewer.appendChild(spread);\n        }\n\n        spread.appendChild(pages[i].div);\n      }\n    }\n\n    if (!pageNumber) {\n      return;\n    }\n\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    this._setCurrentPageNumber(pageNumber, true);\n\n    this.update();\n  }\n\n  _getPageAdvance(currentPageNumber, previous = false) {\n    if (this.isInPresentationMode) {\n      return 1;\n    }\n\n    switch (this._scrollMode) {\n      case _ui_utils.ScrollMode.WRAPPED:\n        {\n          const {\n            views\n          } = this._getVisiblePages(),\n                pageLayout = new Map();\n\n          for (const {\n            id,\n            y,\n            percent,\n            widthPercent\n          } of views) {\n            if (percent === 0 || widthPercent < 100) {\n              continue;\n            }\n\n            let yArray = pageLayout.get(y);\n\n            if (!yArray) {\n              pageLayout.set(y, yArray || (yArray = []));\n            }\n\n            yArray.push(id);\n          }\n\n          for (const yArray of pageLayout.values()) {\n            const currentIndex = yArray.indexOf(currentPageNumber);\n\n            if (currentIndex === -1) {\n              continue;\n            }\n\n            const numPages = yArray.length;\n\n            if (numPages === 1) {\n              break;\n            }\n\n            if (previous) {\n              for (let i = currentIndex - 1, ii = 0; i >= ii; i--) {\n                const currentId = yArray[i],\n                      expectedId = yArray[i + 1] - 1;\n\n                if (currentId < expectedId) {\n                  return currentPageNumber - expectedId;\n                }\n              }\n            } else {\n              for (let i = currentIndex + 1, ii = numPages; i < ii; i++) {\n                const currentId = yArray[i],\n                      expectedId = yArray[i - 1] + 1;\n\n                if (currentId > expectedId) {\n                  return expectedId - currentPageNumber;\n                }\n              }\n            }\n\n            if (previous) {\n              const firstId = yArray[0];\n\n              if (firstId < currentPageNumber) {\n                return currentPageNumber - firstId + 1;\n              }\n            } else {\n              const lastId = yArray[numPages - 1];\n\n              if (lastId > currentPageNumber) {\n                return lastId - currentPageNumber + 1;\n              }\n            }\n\n            break;\n          }\n\n          break;\n        }\n\n      case _ui_utils.ScrollMode.HORIZONTAL:\n        {\n          break;\n        }\n\n      case _ui_utils.ScrollMode.VERTICAL:\n        {\n          if (this._spreadMode === _ui_utils.SpreadMode.NONE) {\n            break;\n          }\n\n          const parity = this._spreadMode - 1;\n\n          if (previous && currentPageNumber % 2 !== parity) {\n            break;\n          } else if (!previous && currentPageNumber % 2 === parity) {\n            break;\n          }\n\n          const {\n            views\n          } = this._getVisiblePages(),\n                expectedId = previous ? currentPageNumber - 1 : currentPageNumber + 1;\n\n          for (const {\n            id,\n            percent,\n            widthPercent\n          } of views) {\n            if (id !== expectedId) {\n              continue;\n            }\n\n            if (percent > 0 && widthPercent === 100) {\n              return 2;\n            }\n\n            break;\n          }\n\n          break;\n        }\n    }\n\n    return 1;\n  }\n\n  nextPage() {\n    const currentPageNumber = this._currentPageNumber,\n          pagesCount = this.pagesCount;\n\n    if (currentPageNumber >= pagesCount) {\n      return false;\n    }\n\n    const advance = this._getPageAdvance(currentPageNumber, false) || 1;\n    this.currentPageNumber = Math.min(currentPageNumber + advance, pagesCount);\n    return true;\n  }\n\n  previousPage() {\n    const currentPageNumber = this._currentPageNumber;\n\n    if (currentPageNumber <= 1) {\n      return false;\n    }\n\n    const advance = this._getPageAdvance(currentPageNumber, true) || 1;\n    this.currentPageNumber = Math.max(currentPageNumber - advance, 1);\n    return true;\n  }\n\n  initializeScriptingEvents() {\n    if (!this.enableScripting || this._pageOpenPendingSet) {\n      return;\n    }\n\n    const eventBus = this.eventBus,\n          pageOpenPendingSet = this._pageOpenPendingSet = new Set(),\n          scriptingEvents = this._scriptingEvents || (this._scriptingEvents = Object.create(null));\n\n    const dispatchPageClose = pageNumber => {\n      if (pageOpenPendingSet.has(pageNumber)) {\n        return;\n      }\n\n      eventBus.dispatch(\"pageclose\", {\n        source: this,\n        pageNumber\n      });\n    };\n\n    const dispatchPageOpen = pageNumber => {\n      const pageView = this._pages[pageNumber - 1];\n\n      if (pageView && pageView.renderingState === _pdf_rendering_queue.RenderingStates.FINISHED) { //?.\n        pageOpenPendingSet.delete(pageNumber);\n        eventBus.dispatch(\"pageopen\", {\n          source: this,\n          pageNumber,\n          actionsPromise: pageView.pdfPage && pageView.pdfPage.getJSActions() //?.\n        });\n      } else {\n        pageOpenPendingSet.add(pageNumber);\n      }\n    };\n\n    scriptingEvents.onPageChanging = ({\n      pageNumber,\n      previous\n    }) => {\n      if (pageNumber === previous) {\n        return;\n      }\n\n      dispatchPageClose(previous);\n      dispatchPageOpen(pageNumber);\n    };\n\n    eventBus._on(\"pagechanging\", scriptingEvents.onPageChanging);\n\n    scriptingEvents.onPageRendered = ({\n      pageNumber\n    }) => {\n      if (!pageOpenPendingSet.has(pageNumber)) {\n        return;\n      }\n\n      if (pageNumber !== this._currentPageNumber) {\n        return;\n      }\n\n      dispatchPageOpen(pageNumber);\n    };\n\n    eventBus._on(\"pagerendered\", scriptingEvents.onPageRendered);\n\n    scriptingEvents.onPagesDestroy = () => {\n      dispatchPageClose(this._currentPageNumber);\n    };\n\n    eventBus._on(\"pagesdestroy\", scriptingEvents.onPagesDestroy);\n\n    dispatchPageOpen(this._currentPageNumber);\n  }\n\n  _resetScriptingEvents() {\n    if (!this.enableScripting || !this._pageOpenPendingSet) {\n      return;\n    }\n\n    const eventBus = this.eventBus,\n          scriptingEvents = this._scriptingEvents;\n\n    eventBus._off(\"pagechanging\", scriptingEvents.onPageChanging);\n\n    scriptingEvents.onPageChanging = null;\n\n    eventBus._off(\"pagerendered\", scriptingEvents.onPageRendered);\n\n    scriptingEvents.onPageRendered = null;\n\n    eventBus._off(\"pagesdestroy\", scriptingEvents.onPagesDestroy);\n\n    scriptingEvents.onPagesDestroy = null;\n    this._pageOpenPendingSet = null;\n  }\n\n}\n\nexports.BaseViewer = BaseViewer;\n\n/***/ }),\n/* 28 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.DefaultAnnotationLayerFactory = exports.AnnotationLayerBuilder = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdf_link_service = __webpack_require__(19);\n\nclass AnnotationLayerBuilder {\n  constructor({\n    pageDiv,\n    pdfPage,\n    linkService,\n    downloadManager,\n    annotationStorage = null,\n    imageResourcesPath = \"\",\n    renderInteractiveForms = true,\n    l10n = _ui_utils.NullL10n,\n    enableScripting = false,\n    hasJSActionsPromise = null,\n    mouseState = null\n  }) {\n    this.pageDiv = pageDiv;\n    this.pdfPage = pdfPage;\n    this.linkService = linkService;\n    this.downloadManager = downloadManager;\n    this.imageResourcesPath = imageResourcesPath;\n    this.renderInteractiveForms = renderInteractiveForms;\n    this.l10n = l10n;\n    this.annotationStorage = annotationStorage;\n    this.enableScripting = enableScripting;\n    this._hasJSActionsPromise = hasJSActionsPromise;\n    this._mouseState = mouseState;\n    this.div = null;\n    this._cancelled = false;\n  }\n\n  render(viewport, intent = \"display\") {\n    return Promise.all([this.pdfPage.getAnnotations({\n      intent\n    }), this._hasJSActionsPromise]).then(([annotations, hasJSActions = false]) => {\n      if (this._cancelled) {\n        return;\n      }\n\n      if (annotations.length === 0) {\n        return;\n      }\n\n      const parameters = {\n        viewport: viewport.clone({\n          dontFlip: true\n        }),\n        div: this.div,\n        annotations,\n        page: this.pdfPage,\n        imageResourcesPath: this.imageResourcesPath,\n        renderInteractiveForms: this.renderInteractiveForms,\n        linkService: this.linkService,\n        downloadManager: this.downloadManager,\n        annotationStorage: this.annotationStorage,\n        enableScripting: this.enableScripting,\n        hasJSActions,\n        mouseState: this._mouseState\n      };\n\n      if (this.div) {\n        _pdfjsLib.AnnotationLayer.update(parameters);\n      } else {\n        this.div = document.createElement(\"div\");\n        this.div.className = \"annotationLayer\";\n        this.pageDiv.appendChild(this.div);\n        parameters.div = this.div;\n\n        _pdfjsLib.AnnotationLayer.render(parameters);\n\n        this.l10n.translate(this.div);\n      }\n    });\n  }\n\n  cancel() {\n    this._cancelled = true;\n  }\n\n  hide() {\n    if (!this.div) {\n      return;\n    }\n\n    this.div.setAttribute(\"hidden\", \"true\");\n  }\n\n}\n\nexports.AnnotationLayerBuilder = AnnotationLayerBuilder;\n\nclass DefaultAnnotationLayerFactory {\n  createAnnotationLayerBuilder(pageDiv, pdfPage, annotationStorage = null, imageResourcesPath = \"\", renderInteractiveForms = true, l10n = _ui_utils.NullL10n, enableScripting = false, hasJSActionsPromise = null, mouseState = null) {\n    return new AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      imageResourcesPath,\n      renderInteractiveForms,\n      linkService: new _pdf_link_service.SimpleLinkService(),\n      l10n,\n      annotationStorage,\n      enableScripting,\n      hasJSActionsPromise,\n      mouseState\n    });\n  }\n\n}\n\nexports.DefaultAnnotationLayerFactory = DefaultAnnotationLayerFactory;\n\n/***/ }),\n/* 29 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFPageView = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _pdf_rendering_queue = __webpack_require__(8);\n\nvar _viewer_compatibility = __webpack_require__(2);\n\nconst MAX_CANVAS_PIXELS = _viewer_compatibility.viewerCompatibilityParams.maxCanvasPixels || 16777216;\n\nclass PDFPageView {\n  constructor(options) {\n    const container = options.container;\n    const defaultViewport = options.defaultViewport;\n    this.id = options.id;\n    this.renderingId = \"page\" + this.id;\n    this.pdfPage = null;\n    this.pageLabel = null;\n    this.rotation = 0;\n    this.scale = options.scale || _ui_utils.DEFAULT_SCALE;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this._optionalContentConfigPromise = options.optionalContentConfigPromise || null;\n    this.hasRestrictedScaling = false;\n    this.textLayerMode = Number.isInteger(options.textLayerMode) ? options.textLayerMode : _ui_utils.TextLayerMode.ENABLE;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.renderInteractiveForms = typeof options.renderInteractiveForms === \"boolean\" ? options.renderInteractiveForms : true;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels || MAX_CANVAS_PIXELS;\n    this.eventBus = options.eventBus;\n    this.renderingQueue = options.renderingQueue;\n    this.textLayerFactory = options.textLayerFactory;\n    this.annotationLayerFactory = options.annotationLayerFactory;\n    this.renderer = options.renderer || _ui_utils.RendererType.CANVAS;\n    this.enableWebGL = options.enableWebGL || false;\n    this.l10n = options.l10n || _ui_utils.NullL10n;\n    this.enableScripting = options.enableScripting || false;\n    this.paintTask = null;\n    this.paintedViewportMap = new WeakMap();\n    this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n    this.resume = null;\n    this._renderError = null;\n    this.annotationLayer = null;\n    this.textLayer = null;\n    this.zoomLayer = null;\n    const div = document.createElement(\"div\");\n    div.className = \"page\";\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n    div.setAttribute(\"data-page-number\", this.id);\n    this.div = div;\n    container.appendChild(div);\n  }\n\n  setPdfPage(pdfPage) {\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({\n      scale: this.scale * _ui_utils.CSS_UNITS,\n      rotation: totalRotation\n    });\n    this.reset();\n  }\n\n  destroy() {\n    this.reset();\n\n    if (this.pdfPage) {\n      this.pdfPage.cleanup();\n    }\n  }\n\n  async _renderAnnotationLayer() {\n    let error = null;\n\n    try {\n      await this.annotationLayer.render(this.viewport, \"display\");\n    } catch (ex) {\n      error = ex;\n    } finally {\n      this.eventBus.dispatch(\"annotationlayerrendered\", {\n        source: this,\n        pageNumber: this.id,\n        error\n      });\n    }\n  }\n\n  _resetZoomLayer(removeFromDOM = false) {\n    if (!this.zoomLayer) {\n      return;\n    }\n\n    const zoomLayerCanvas = this.zoomLayer.firstChild;\n    this.paintedViewportMap.delete(zoomLayerCanvas);\n    zoomLayerCanvas.width = 0;\n    zoomLayerCanvas.height = 0;\n\n    if (removeFromDOM) {\n      this.zoomLayer.remove();\n    }\n\n    this.zoomLayer = null;\n  }\n\n  reset(keepZoomLayer = false, keepAnnotations = false) {\n    this.cancelRendering(keepAnnotations);\n    this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n    const div = this.div;\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n    const childNodes = div.childNodes;\n    const currentZoomLayerNode = keepZoomLayer && this.zoomLayer || null;\n    const currentAnnotationNode = keepAnnotations && this.annotationLayer && this.annotationLayer.div || null;\n\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const node = childNodes[i];\n\n      if (currentZoomLayerNode === node || currentAnnotationNode === node) {\n        continue;\n      }\n\n      div.removeChild(node);\n    }\n\n    div.removeAttribute(\"data-loaded\");\n\n    if (currentAnnotationNode) {\n      this.annotationLayer.hide();\n    } else if (this.annotationLayer) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n    }\n\n    if (!currentZoomLayerNode) {\n      if (this.canvas) {\n        this.paintedViewportMap.delete(this.canvas);\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        delete this.canvas;\n      }\n\n      this._resetZoomLayer();\n    }\n\n    if (this.svg) {\n      this.paintedViewportMap.delete(this.svg);\n      delete this.svg;\n    }\n\n    this.loadingIconDiv = document.createElement(\"div\");\n    this.loadingIconDiv.className = \"loadingIcon\";\n    div.appendChild(this.loadingIconDiv);\n  }\n\n  update(scale, rotation, optionalContentConfigPromise = null) {\n    this.scale = scale || this.scale;\n\n    if (typeof rotation !== \"undefined\") {\n      this.rotation = rotation;\n    }\n\n    if (optionalContentConfigPromise instanceof Promise) {\n      this._optionalContentConfigPromise = optionalContentConfigPromise;\n    }\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = this.viewport.clone({\n      scale: this.scale * _ui_utils.CSS_UNITS,\n      rotation: totalRotation\n    });\n\n    if (this.svg) {\n      this.cssTransform(this.svg, true);\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: true,\n        timestamp: performance.now(),\n        error: this._renderError\n      });\n      return;\n    }\n\n    let isScalingRestricted = false;\n\n    if (this.canvas && this.maxCanvasPixels > 0) {\n      const outputScale = this.outputScale;\n\n      if ((Math.floor(this.viewport.width) * outputScale.sx | 0) * (Math.floor(this.viewport.height) * outputScale.sy | 0) > this.maxCanvasPixels) {\n        isScalingRestricted = true;\n      }\n    }\n\n    if (this.canvas) {\n      if (this.useOnlyCssZoom || this.hasRestrictedScaling && isScalingRestricted) {\n        this.cssTransform(this.canvas, true);\n        this.eventBus.dispatch(\"pagerendered\", {\n          source: this,\n          pageNumber: this.id,\n          cssTransform: true,\n          timestamp: performance.now(),\n          error: this._renderError\n        });\n        return;\n      }\n\n      if (!this.zoomLayer && !this.canvas.hasAttribute(\"hidden\")) {\n        this.zoomLayer = this.canvas.parentNode;\n        this.zoomLayer.style.position = \"absolute\";\n      }\n    }\n\n    if (this.zoomLayer) {\n      this.cssTransform(this.zoomLayer.firstChild);\n    }\n\n    this.reset(true, true);\n  }\n\n  cancelRendering(keepAnnotations = false) {\n    if (this.paintTask) {\n      this.paintTask.cancel();\n      this.paintTask = null;\n    }\n\n    this.resume = null;\n\n    if (this.textLayer) {\n      this.textLayer.cancel();\n      this.textLayer = null;\n    }\n\n    if (!keepAnnotations && this.annotationLayer) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n    }\n  }\n\n  cssTransform(target, redrawAnnotations = false) {\n    const width = this.viewport.width;\n    const height = this.viewport.height;\n    const div = this.div;\n    target.style.width = target.parentNode.style.width = div.style.width = Math.floor(width) + \"px\";\n    target.style.height = target.parentNode.style.height = div.style.height = Math.floor(height) + \"px\";\n    const relativeRotation = this.viewport.rotation - this.paintedViewportMap.get(target).rotation;\n    const absRotation = Math.abs(relativeRotation);\n    let scaleX = 1,\n        scaleY = 1;\n\n    if (absRotation === 90 || absRotation === 270) {\n      scaleX = height / width;\n      scaleY = width / height;\n    }\n\n    target.style.transform = `rotate(${relativeRotation}deg) scale(${scaleX}, ${scaleY})`;\n\n    if (this.textLayer) {\n      const textLayerViewport = this.textLayer.viewport;\n      const textRelativeRotation = this.viewport.rotation - textLayerViewport.rotation;\n      const textAbsRotation = Math.abs(textRelativeRotation);\n      let scale = width / textLayerViewport.width;\n\n      if (textAbsRotation === 90 || textAbsRotation === 270) {\n        scale = width / textLayerViewport.height;\n      }\n\n      const textLayerDiv = this.textLayer.textLayerDiv;\n      let transX, transY;\n\n      switch (textAbsRotation) {\n        case 0:\n          transX = transY = 0;\n          break;\n\n        case 90:\n          transX = 0;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n\n        case 180:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n\n        case 270:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = 0;\n          break;\n\n        default:\n          console.error(\"Bad rotation value.\");\n          break;\n      }\n\n      textLayerDiv.style.transform = `rotate(${textAbsRotation}deg) ` + `scale(${scale}) ` + `translate(${transX}, ${transY})`;\n      textLayerDiv.style.transformOrigin = \"0% 0%\";\n    }\n\n    if (redrawAnnotations && this.annotationLayer) {\n      this._renderAnnotationLayer();\n    }\n  }\n\n  get width() {\n    return this.viewport.width;\n  }\n\n  get height() {\n    return this.viewport.height;\n  }\n\n  getPagePoint(x, y) {\n    return this.viewport.convertToPdfPoint(x, y);\n  }\n\n  draw() {\n    if (this.renderingState !== _pdf_rendering_queue.RenderingStates.INITIAL) {\n      console.error(\"Must be in new state before drawing\");\n      this.reset();\n    }\n\n    const {\n      div,\n      pdfPage\n    } = this;\n\n    if (!pdfPage) {\n      this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\n    }\n\n    this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n    const canvasWrapper = document.createElement(\"div\");\n    canvasWrapper.style.width = div.style.width;\n    canvasWrapper.style.height = div.style.height;\n    canvasWrapper.classList.add(\"canvasWrapper\");\n\n    if (this.annotationLayer && this.annotationLayer.div) {\n      div.insertBefore(canvasWrapper, this.annotationLayer.div);\n    } else {\n      div.appendChild(canvasWrapper);\n    }\n\n    let textLayer = null;\n\n    if (this.textLayerMode !== _ui_utils.TextLayerMode.DISABLE && this.textLayerFactory) {\n      const textLayerDiv = document.createElement(\"div\");\n      textLayerDiv.className = \"textLayer\";\n      textLayerDiv.style.width = canvasWrapper.style.width;\n      textLayerDiv.style.height = canvasWrapper.style.height;\n\n      if (this.annotationLayer && this.annotationLayer.div) {\n        div.insertBefore(textLayerDiv, this.annotationLayer.div);\n      } else {\n        div.appendChild(textLayerDiv);\n      }\n\n      textLayer = this.textLayerFactory.createTextLayerBuilder(textLayerDiv, this.id - 1, this.viewport, this.textLayerMode === _ui_utils.TextLayerMode.ENABLE_ENHANCE, this.eventBus);\n    }\n\n    this.textLayer = textLayer;\n    let renderContinueCallback = null;\n\n    if (this.renderingQueue) {\n      renderContinueCallback = cont => {\n        if (!this.renderingQueue.isHighestPriority(this)) {\n          this.renderingState = _pdf_rendering_queue.RenderingStates.PAUSED;\n\n          this.resume = () => {\n            this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n            cont();\n          };\n\n          return;\n        }\n\n        cont();\n      };\n    }\n\n    const finishPaintTask = async (error = null) => {\n      if (paintTask === this.paintTask) {\n        this.paintTask = null;\n      }\n\n      if (error instanceof _pdfjsLib.RenderingCancelledException) {\n        this._renderError = null;\n        return;\n      }\n\n      this._renderError = error;\n      this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n\n      this._resetZoomLayer(true);\n\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: false,\n        timestamp: performance.now(),\n        error: this._renderError\n      });\n\n      if (error) {\n        throw error;\n      }\n    };\n\n    const paintTask = this.renderer === _ui_utils.RendererType.SVG ? this.paintOnSvg(canvasWrapper) : this.paintOnCanvas(canvasWrapper);\n    paintTask.onRenderContinue = renderContinueCallback;\n    this.paintTask = paintTask;\n    const resultPromise = paintTask.promise.then(function () {\n      return finishPaintTask(null).then(function () {\n        if (textLayer) {\n          const readableStream = pdfPage.streamTextContent({\n            normalizeWhitespace: true\n          });\n          textLayer.setTextContentStream(readableStream);\n          textLayer.render();\n        }\n      });\n    }, function (reason) {\n      return finishPaintTask(reason);\n    });\n\n    if (this.annotationLayerFactory) {\n      if (!this.annotationLayer) {\n        this.annotationLayer = this.annotationLayerFactory.createAnnotationLayerBuilder(div, pdfPage, null, this.imageResourcesPath, this.renderInteractiveForms, this.l10n, this.enableScripting, null, null);\n      }\n\n      this._renderAnnotationLayer();\n    }\n\n    div.setAttribute(\"data-loaded\", true);\n    this.eventBus.dispatch(\"pagerender\", {\n      source: this,\n      pageNumber: this.id\n    });\n    return resultPromise;\n  }\n\n  paintOnCanvas(canvasWrapper) {\n    const renderCapability = (0, _pdfjsLib.createPromiseCapability)();\n    const result = {\n      promise: renderCapability.promise,\n\n      onRenderContinue(cont) {\n        cont();\n      },\n\n      cancel() {\n        renderTask.cancel();\n      }\n\n    };\n    const viewport = this.viewport;\n    const canvas = document.createElement(\"canvas\");\n    this.l10n.get(\"page_canvas\", {\n      page: this.id\n    }, \"Page {{page}}\").then(msg => {\n      canvas.setAttribute(\"aria-label\", msg);\n    });\n    canvas.setAttribute(\"hidden\", \"hidden\");\n    let isCanvasHidden = true;\n\n    const showCanvas = function () {\n      if (isCanvasHidden) {\n        canvas.removeAttribute(\"hidden\");\n        isCanvasHidden = false;\n      }\n    };\n\n    canvasWrapper.appendChild(canvas);\n    this.canvas = canvas;\n    canvas.mozOpaque = true;\n    const ctx = canvas.getContext(\"2d\", {\n      alpha: false\n    });\n    const outputScale = (0, _ui_utils.getOutputScale)(ctx);\n    this.outputScale = outputScale;\n\n    if (this.useOnlyCssZoom) {\n      const actualSizeViewport = viewport.clone({\n        scale: _ui_utils.CSS_UNITS\n      });\n      outputScale.sx *= actualSizeViewport.width / viewport.width;\n      outputScale.sy *= actualSizeViewport.height / viewport.height;\n      outputScale.scaled = true;\n    }\n\n    if (this.maxCanvasPixels > 0) {\n      const pixelsInViewport = viewport.width * viewport.height;\n      const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\n\n      if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n        outputScale.sx = maxScale;\n        outputScale.sy = maxScale;\n        outputScale.scaled = true;\n        this.hasRestrictedScaling = true;\n      } else {\n        this.hasRestrictedScaling = false;\n      }\n    }\n\n    const sfx = (0, _ui_utils.approximateFraction)(outputScale.sx);\n    const sfy = (0, _ui_utils.approximateFraction)(outputScale.sy);\n    canvas.width = (0, _ui_utils.roundToDivide)(viewport.width * outputScale.sx, sfx[0]);\n    canvas.height = (0, _ui_utils.roundToDivide)(viewport.height * outputScale.sy, sfy[0]);\n    canvas.style.width = (0, _ui_utils.roundToDivide)(viewport.width, sfx[1]) + \"px\";\n    canvas.style.height = (0, _ui_utils.roundToDivide)(viewport.height, sfy[1]) + \"px\";\n    this.paintedViewportMap.set(canvas, viewport);\n    const transform = !outputScale.scaled ? null : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: this.viewport,\n      enableWebGL: this.enableWebGL,\n      renderInteractiveForms: this.renderInteractiveForms,\n      optionalContentConfigPromise: this._optionalContentConfigPromise\n    };\n    const renderTask = this.pdfPage.render(renderContext);\n\n    renderTask.onContinue = function (cont) {\n      showCanvas();\n\n      if (result.onRenderContinue) {\n        result.onRenderContinue(cont);\n      } else {\n        cont();\n      }\n    };\n\n    renderTask.promise.then(function () {\n      showCanvas();\n      renderCapability.resolve(undefined);\n    }, function (error) {\n      showCanvas();\n      renderCapability.reject(error);\n    });\n    return result;\n  }\n\n  paintOnSvg(wrapper) {\n    let cancelled = false;\n\n    const ensureNotCancelled = () => {\n      if (cancelled) {\n        throw new _pdfjsLib.RenderingCancelledException(`Rendering cancelled, page ${this.id}`, \"svg\");\n      }\n    };\n\n    const pdfPage = this.pdfPage;\n    const actualSizeViewport = this.viewport.clone({\n      scale: _ui_utils.CSS_UNITS\n    });\n    const promise = pdfPage.getOperatorList().then(opList => {\n      ensureNotCancelled();\n      const svgGfx = new _pdfjsLib.SVGGraphics(pdfPage.commonObjs, pdfPage.objs);\n      return svgGfx.getSVG(opList, actualSizeViewport).then(svg => {\n        ensureNotCancelled();\n        this.svg = svg;\n        this.paintedViewportMap.set(svg, actualSizeViewport);\n        svg.style.width = wrapper.style.width;\n        svg.style.height = wrapper.style.height;\n        this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n        wrapper.appendChild(svg);\n      });\n    });\n    return {\n      promise,\n\n      onRenderContinue(cont) {\n        cont();\n      },\n\n      cancel() {\n        cancelled = true;\n      }\n\n    };\n  }\n\n  setPageLabel(label) {\n    this.pageLabel = typeof label === \"string\" ? label : null;\n\n    if (this.pageLabel !== null) {\n      this.div.setAttribute(\"data-page-label\", this.pageLabel);\n    } else {\n      this.div.removeAttribute(\"data-page-label\");\n    }\n  }\n\n}\n\nexports.PDFPageView = PDFPageView;\n\n/***/ }),\n/* 30 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.TextLayerBuilder = exports.DefaultTextLayerFactory = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nconst EXPAND_DIVS_TIMEOUT = 300;\n\nclass TextLayerBuilder {\n  constructor({\n    textLayerDiv,\n    eventBus,\n    pageIndex,\n    viewport,\n    findController = null,\n    enhanceTextSelection = false\n  }) {\n    this.textLayerDiv = textLayerDiv;\n    this.eventBus = eventBus;\n    this.textContent = null;\n    this.textContentItemsStr = [];\n    this.textContentStream = null;\n    this.renderingDone = false;\n    this.pageIdx = pageIndex;\n    this.pageNumber = this.pageIdx + 1;\n    this.matches = [];\n    this.viewport = viewport;\n    this.textDivs = [];\n    this.findController = findController;\n    this.textLayerRenderTask = null;\n    this.enhanceTextSelection = enhanceTextSelection;\n    this._onUpdateTextLayerMatches = null;\n\n    this._bindMouse();\n  }\n\n  _finishRendering() {\n    this.renderingDone = true;\n\n    if (!this.enhanceTextSelection) {\n      const endOfContent = document.createElement(\"div\");\n      endOfContent.className = \"endOfContent\";\n      this.textLayerDiv.appendChild(endOfContent);\n    }\n\n    this.eventBus.dispatch(\"textlayerrendered\", {\n      source: this,\n      pageNumber: this.pageNumber,\n      numTextDivs: this.textDivs.length\n    });\n  }\n\n  render(timeout = 0) {\n    if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n      return;\n    }\n\n    this.cancel();\n    this.textDivs = [];\n    const textLayerFrag = document.createDocumentFragment();\n    this.textLayerRenderTask = (0, _pdfjsLib.renderTextLayer)({\n      textContent: this.textContent,\n      textContentStream: this.textContentStream,\n      container: textLayerFrag,\n      viewport: this.viewport,\n      textDivs: this.textDivs,\n      textContentItemsStr: this.textContentItemsStr,\n      timeout,\n      enhanceTextSelection: this.enhanceTextSelection\n    });\n    this.textLayerRenderTask.promise.then(() => {\n      this.textLayerDiv.appendChild(textLayerFrag);\n\n      this._finishRendering();\n\n      this._updateMatches();\n    }, function (reason) {});\n\n    if (!this._onUpdateTextLayerMatches) {\n      this._onUpdateTextLayerMatches = evt => {\n        if (evt.pageIndex === this.pageIdx || evt.pageIndex === -1) {\n          this._updateMatches();\n        }\n      };\n\n      this.eventBus._on(\"updatetextlayermatches\", this._onUpdateTextLayerMatches);\n    }\n  }\n\n  cancel() {\n    if (this.textLayerRenderTask) {\n      this.textLayerRenderTask.cancel();\n      this.textLayerRenderTask = null;\n    }\n\n    if (this._onUpdateTextLayerMatches) {\n      this.eventBus._off(\"updatetextlayermatches\", this._onUpdateTextLayerMatches);\n\n      this._onUpdateTextLayerMatches = null;\n    }\n  }\n\n  setTextContentStream(readableStream) {\n    this.cancel();\n    this.textContentStream = readableStream;\n  }\n\n  setTextContent(textContent) {\n    this.cancel();\n    this.textContent = textContent;\n  }\n\n  _convertMatches(matches, matchesLength) {\n    if (!matches) {\n      return [];\n    }\n\n    const {\n      textContentItemsStr\n    } = this;\n    let i = 0,\n        iIndex = 0;\n    const end = textContentItemsStr.length - 1;\n    const result = [];\n\n    for (let m = 0, mm = matches.length; m < mm; m++) {\n      let matchIdx = matches[m];\n\n      while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      if (i === textContentItemsStr.length) {\n        console.error(\"Could not find a matching mapping\");\n      }\n\n      const match = {\n        begin: {\n          divIdx: i,\n          offset: matchIdx - iIndex\n        }\n      };\n      matchIdx += matchesLength[m];\n\n      while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      match.end = {\n        divIdx: i,\n        offset: matchIdx - iIndex\n      };\n      result.push(match);\n    }\n\n    return result;\n  }\n\n  _renderMatches(matches) {\n    if (matches.length === 0) {\n      return;\n    }\n\n    const {\n      findController,\n      pageIdx,\n      textContentItemsStr,\n      textDivs\n    } = this;\n    const isSelectedPage = pageIdx === findController.selected.pageIdx;\n    const selectedMatchIdx = findController.selected.matchIdx;\n    const highlightAll = findController.state.highlightAll;\n    let prevEnd = null;\n    const infinity = {\n      divIdx: -1,\n      offset: undefined\n    };\n\n    function beginText(begin, className) {\n      const divIdx = begin.divIdx;\n      textDivs[divIdx].textContent = \"\";\n      appendTextToDiv(divIdx, 0, begin.offset, className);\n    }\n\n    function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n      const div = textDivs[divIdx];\n      const content = textContentItemsStr[divIdx].substring(fromOffset, toOffset);\n      const node = document.createTextNode(content);\n\n      if (className) {\n        const span = document.createElement(\"span\");\n        span.className = className;\n        span.appendChild(node);\n        div.appendChild(span);\n        return;\n      }\n\n      div.appendChild(node);\n    }\n\n    let i0 = selectedMatchIdx,\n        i1 = i0 + 1;\n\n    if (highlightAll) {\n      i0 = 0;\n      i1 = matches.length;\n    } else if (!isSelectedPage) {\n      return;\n    }\n\n    for (let i = i0; i < i1; i++) {\n      const match = matches[i];\n      const begin = match.begin;\n      const end = match.end;\n      const isSelected = isSelectedPage && i === selectedMatchIdx;\n      const highlightSuffix = isSelected ? \" selected\" : \"\";\n\n      if (isSelected) {\n        findController.scrollMatchIntoView({\n          element: textDivs[begin.divIdx],\n          pageIndex: pageIdx,\n          matchIndex: selectedMatchIdx\n        });\n      }\n\n      if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n        if (prevEnd !== null) {\n          appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n        }\n\n        beginText(begin);\n      } else {\n        appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n      }\n\n      if (begin.divIdx === end.divIdx) {\n        appendTextToDiv(begin.divIdx, begin.offset, end.offset, \"highlight\" + highlightSuffix);\n      } else {\n        appendTextToDiv(begin.divIdx, begin.offset, infinity.offset, \"highlight begin\" + highlightSuffix);\n\n        for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n          textDivs[n0].className = \"highlight middle\" + highlightSuffix;\n        }\n\n        beginText(end, \"highlight end\" + highlightSuffix);\n      }\n\n      prevEnd = end;\n    }\n\n    if (prevEnd) {\n      appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n    }\n  }\n\n  _updateMatches() {\n    if (!this.renderingDone) {\n      return;\n    }\n\n    const {\n      findController,\n      matches,\n      pageIdx,\n      textContentItemsStr,\n      textDivs\n    } = this;\n    let clearedUntilDivIdx = -1;\n\n    for (let i = 0, ii = matches.length; i < ii; i++) {\n      const match = matches[i];\n      const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n\n      for (let n = begin, end = match.end.divIdx; n <= end; n++) {\n        const div = textDivs[n];\n        div.textContent = textContentItemsStr[n];\n        div.className = \"\";\n      }\n\n      clearedUntilDivIdx = match.end.divIdx + 1;\n    }\n\n    if (!findController || !findController.highlightMatches) {\n      return;\n    }\n\n    const pageMatches = findController.pageMatches[pageIdx] || null;\n    const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\n    this.matches = this._convertMatches(pageMatches, pageMatchesLength);\n\n    this._renderMatches(this.matches);\n  }\n\n  _bindMouse() {\n    const div = this.textLayerDiv;\n    let expandDivsTimer = null;\n    div.addEventListener(\"mousedown\", evt => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        this.textLayerRenderTask.expandTextDivs(true);\n\n        if (expandDivsTimer) {\n          clearTimeout(expandDivsTimer);\n          expandDivsTimer = null;\n        }\n\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n\n      if (!end) {\n        return;\n      }\n\n      let adjustTop = evt.target !== div;\n      adjustTop = adjustTop && window.getComputedStyle(end).getPropertyValue(\"-moz-user-select\") !== \"none\";\n\n      if (adjustTop) {\n        const divBounds = div.getBoundingClientRect();\n        const r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height);\n        end.style.top = (r * 100).toFixed(2) + \"%\";\n      }\n\n      end.classList.add(\"active\");\n    });\n    div.addEventListener(\"mouseup\", () => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        expandDivsTimer = setTimeout(() => {\n          if (this.textLayerRenderTask) {\n            this.textLayerRenderTask.expandTextDivs(false);\n          }\n\n          expandDivsTimer = null;\n        }, EXPAND_DIVS_TIMEOUT);\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n\n      if (!end) {\n        return;\n      }\n\n      end.style.top = \"\";\n      end.classList.remove(\"active\");\n    });\n  }\n\n}\n\nexports.TextLayerBuilder = TextLayerBuilder;\n\nclass DefaultTextLayerFactory {\n  createTextLayerBuilder(textLayerDiv, pageIndex, viewport, enhanceTextSelection = false, eventBus) {\n    return new TextLayerBuilder({\n      textLayerDiv,\n      pageIndex,\n      viewport,\n      enhanceTextSelection,\n      eventBus\n    });\n  }\n\n}\n\nexports.DefaultTextLayerFactory = DefaultTextLayerFactory;\n\n/***/ }),\n/* 31 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SecondaryToolbar = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _pdf_cursor_tools = __webpack_require__(6);\n\nvar _pdf_single_page_viewer = __webpack_require__(32);\n\nclass SecondaryToolbar {\n  constructor(options, mainContainer, eventBus) {\n    this.toolbar = options.toolbar;\n    this.toggleButton = options.toggleButton;\n    this.toolbarButtonContainer = options.toolbarButtonContainer;\n    this.buttons = [{\n      element: options.presentationModeButton,\n      eventName: \"presentationmode\",\n      close: true\n    }, {\n      element: options.openFileButton,\n      eventName: \"openfile\",\n      close: true\n    }, {\n      element: options.printButton,\n      eventName: \"print\",\n      close: true\n    }, {\n      element: options.downloadButton,\n      eventName: \"download\",\n      close: true\n    }, {\n      element: options.viewBookmarkButton,\n      eventName: null,\n      close: true\n    }, {\n      element: options.firstPageButton,\n      eventName: \"firstpage\",\n      close: true\n    }, {\n      element: options.lastPageButton,\n      eventName: \"lastpage\",\n      close: true\n    }, {\n      element: options.pageRotateCwButton,\n      eventName: \"rotatecw\",\n      close: false\n    }, {\n      element: options.pageRotateCcwButton,\n      eventName: \"rotateccw\",\n      close: false\n    }, {\n      element: options.cursorSelectToolButton,\n      eventName: \"switchcursortool\",\n      eventDetails: {\n        tool: _pdf_cursor_tools.CursorTool.SELECT\n      },\n      close: true\n    }, {\n      element: options.cursorHandToolButton,\n      eventName: \"switchcursortool\",\n      eventDetails: {\n        tool: _pdf_cursor_tools.CursorTool.HAND\n      },\n      close: true\n    }, {\n      element: options.scrollVerticalButton,\n      eventName: \"switchscrollmode\",\n      eventDetails: {\n        mode: _ui_utils.ScrollMode.VERTICAL\n      },\n      close: true\n    }, {\n      element: options.scrollHorizontalButton,\n      eventName: \"switchscrollmode\",\n      eventDetails: {\n        mode: _ui_utils.ScrollMode.HORIZONTAL\n      },\n      close: true\n    }, {\n      element: options.scrollWrappedButton,\n      eventName: \"switchscrollmode\",\n      eventDetails: {\n        mode: _ui_utils.ScrollMode.WRAPPED\n      },\n      close: true\n    }, {\n      element: options.spreadNoneButton,\n      eventName: \"switchspreadmode\",\n      eventDetails: {\n        mode: _ui_utils.SpreadMode.NONE\n      },\n      close: true\n    }, {\n      element: options.spreadOddButton,\n      eventName: \"switchspreadmode\",\n      eventDetails: {\n        mode: _ui_utils.SpreadMode.ODD\n      },\n      close: true\n    }, {\n      element: options.spreadEvenButton,\n      eventName: \"switchspreadmode\",\n      eventDetails: {\n        mode: _ui_utils.SpreadMode.EVEN\n      },\n      close: true\n    }, {\n      element: options.documentPropertiesButton,\n      eventName: \"documentproperties\",\n      close: true\n    }];\n    this.items = {\n      firstPage: options.firstPageButton,\n      lastPage: options.lastPageButton,\n      pageRotateCw: options.pageRotateCwButton,\n      pageRotateCcw: options.pageRotateCcwButton\n    };\n    this.mainContainer = mainContainer;\n    this.eventBus = eventBus;\n    this.opened = false;\n    this.containerHeight = null;\n    this.previousContainerHeight = null;\n    this.reset();\n\n    this._bindClickListeners();\n\n    this._bindCursorToolsListener(options);\n\n    this._bindScrollModeListener(options);\n\n    this._bindSpreadModeListener(options);\n\n    this.eventBus._on(\"resize\", this._setMaxHeight.bind(this));\n\n    this.eventBus._on(\"baseviewerinit\", evt => {\n      if (evt.source instanceof _pdf_single_page_viewer.PDFSinglePageViewer) {\n        this.toolbarButtonContainer.classList.add(\"hiddenScrollModeButtons\", \"hiddenSpreadModeButtons\");\n      } else {\n        this.toolbarButtonContainer.classList.remove(\"hiddenScrollModeButtons\", \"hiddenSpreadModeButtons\");\n      }\n    });\n  }\n\n  get isOpen() {\n    return this.opened;\n  }\n\n  setPageNumber(pageNumber) {\n    this.pageNumber = pageNumber;\n\n    this._updateUIState();\n  }\n\n  setPagesCount(pagesCount) {\n    this.pagesCount = pagesCount;\n\n    this._updateUIState();\n  }\n\n  reset() {\n    this.pageNumber = 0;\n    this.pagesCount = 0;\n\n    this._updateUIState();\n\n    this.eventBus.dispatch(\"secondarytoolbarreset\", {\n      source: this\n    });\n  }\n\n  _updateUIState() {\n    this.items.firstPage.disabled = this.pageNumber <= 1;\n    this.items.lastPage.disabled = this.pageNumber >= this.pagesCount;\n    this.items.pageRotateCw.disabled = this.pagesCount === 0;\n    this.items.pageRotateCcw.disabled = this.pagesCount === 0;\n  }\n\n  _bindClickListeners() {\n    this.toggleButton.addEventListener(\"click\", this.toggle.bind(this));\n\n    for (const {\n      element,\n      eventName,\n      close,\n      eventDetails\n    } of this.buttons) {\n      element.addEventListener(\"click\", evt => {\n        if (eventName !== null) {\n          const details = {\n            source: this\n          };\n\n          for (const property in eventDetails) {\n            details[property] = eventDetails[property];\n          }\n\n          this.eventBus.dispatch(eventName, details);\n        }\n\n        if (close) {\n          this.close();\n        }\n      });\n    }\n  }\n\n  _bindCursorToolsListener(buttons) {\n    this.eventBus._on(\"cursortoolchanged\", function ({\n      tool\n    }) {\n      buttons.cursorSelectToolButton.classList.toggle(\"toggled\", tool === _pdf_cursor_tools.CursorTool.SELECT);\n      buttons.cursorHandToolButton.classList.toggle(\"toggled\", tool === _pdf_cursor_tools.CursorTool.HAND);\n    });\n  }\n\n  _bindScrollModeListener(buttons) {\n    function scrollModeChanged({\n      mode\n    }) {\n      buttons.scrollVerticalButton.classList.toggle(\"toggled\", mode === _ui_utils.ScrollMode.VERTICAL);\n      buttons.scrollHorizontalButton.classList.toggle(\"toggled\", mode === _ui_utils.ScrollMode.HORIZONTAL);\n      buttons.scrollWrappedButton.classList.toggle(\"toggled\", mode === _ui_utils.ScrollMode.WRAPPED);\n      const isScrollModeHorizontal = mode === _ui_utils.ScrollMode.HORIZONTAL;\n      buttons.spreadNoneButton.disabled = isScrollModeHorizontal;\n      buttons.spreadOddButton.disabled = isScrollModeHorizontal;\n      buttons.spreadEvenButton.disabled = isScrollModeHorizontal;\n    }\n\n    this.eventBus._on(\"scrollmodechanged\", scrollModeChanged);\n\n    this.eventBus._on(\"secondarytoolbarreset\", evt => {\n      if (evt.source === this) {\n        scrollModeChanged({\n          mode: _ui_utils.ScrollMode.VERTICAL\n        });\n      }\n    });\n  }\n\n  _bindSpreadModeListener(buttons) {\n    function spreadModeChanged({\n      mode\n    }) {\n      buttons.spreadNoneButton.classList.toggle(\"toggled\", mode === _ui_utils.SpreadMode.NONE);\n      buttons.spreadOddButton.classList.toggle(\"toggled\", mode === _ui_utils.SpreadMode.ODD);\n      buttons.spreadEvenButton.classList.toggle(\"toggled\", mode === _ui_utils.SpreadMode.EVEN);\n    }\n\n    this.eventBus._on(\"spreadmodechanged\", spreadModeChanged);\n\n    this.eventBus._on(\"secondarytoolbarreset\", evt => {\n      if (evt.source === this) {\n        spreadModeChanged({\n          mode: _ui_utils.SpreadMode.NONE\n        });\n      }\n    });\n  }\n\n  open() {\n    if (this.opened) {\n      return;\n    }\n\n    this.opened = true;\n\n    this._setMaxHeight();\n\n    this.toggleButton.classList.add(\"toggled\");\n    this.toolbar.classList.remove(\"hidden\");\n  }\n\n  close() {\n    if (!this.opened) {\n      return;\n    }\n\n    this.opened = false;\n    this.toolbar.classList.add(\"hidden\");\n    this.toggleButton.classList.remove(\"toggled\");\n  }\n\n  toggle() {\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  _setMaxHeight() {\n    if (!this.opened) {\n      return;\n    }\n\n    this.containerHeight = this.mainContainer.clientHeight;\n\n    if (this.containerHeight === this.previousContainerHeight) {\n      return;\n    }\n\n    this.toolbarButtonContainer.style.maxHeight = `${this.containerHeight - _ui_utils.SCROLLBAR_PADDING}px`;\n    this.previousContainerHeight = this.containerHeight;\n  }\n\n}\n\nexports.SecondaryToolbar = SecondaryToolbar;\n\n/***/ }),\n/* 32 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFSinglePageViewer = void 0;\n\nvar _base_viewer = __webpack_require__(27);\n\nvar _pdfjsLib = __webpack_require__(5);\n\nclass PDFSinglePageViewer extends _base_viewer.BaseViewer {\n  constructor(options) {\n    super(options);\n\n    this.eventBus._on(\"pagesinit\", evt => {\n      this._ensurePageViewVisible();\n    });\n  }\n\n  get _viewerElement() {\n    return (0, _pdfjsLib.shadow)(this, \"_viewerElement\", this._shadowViewer);\n  }\n\n  get _pageWidthScaleFactor() {\n    return 1;\n  }\n\n  _resetView() {\n    super._resetView();\n\n    this._previousPageNumber = 1;\n    this._shadowViewer = document.createDocumentFragment();\n    this._updateScrollDown = null;\n  }\n\n  _ensurePageViewVisible() {\n    const pageView = this._pages[this._currentPageNumber - 1];\n    const previousPageView = this._pages[this._previousPageNumber - 1];\n    const viewerNodes = this.viewer.childNodes;\n\n    switch (viewerNodes.length) {\n      case 0:\n        this.viewer.appendChild(pageView.div);\n        break;\n\n      case 1:\n        if (viewerNodes[0] !== previousPageView.div) {\n          throw new Error(\"_ensurePageViewVisible: Unexpected previously visible page.\");\n        }\n\n        if (pageView === previousPageView) {\n          break;\n        }\n\n        this._shadowViewer.appendChild(previousPageView.div);\n\n        this.viewer.appendChild(pageView.div);\n        this.container.scrollTop = 0;\n        break;\n\n      default:\n        throw new Error(\"_ensurePageViewVisible: Only one page should be visible at a time.\");\n    }\n\n    this._previousPageNumber = this._currentPageNumber;\n  }\n\n  _scrollUpdate() {\n    if (this._updateScrollDown) {\n      this._updateScrollDown();\n    }\n\n    super._scrollUpdate();\n  }\n\n  _scrollIntoView({\n    pageDiv,\n    pageSpot = null,\n    pageNumber = null\n  }) {\n    if (pageNumber) {\n      this._setCurrentPageNumber(pageNumber);\n    }\n\n    const scrolledDown = this._currentPageNumber >= this._previousPageNumber;\n\n    this._ensurePageViewVisible();\n\n    this.update();\n\n    super._scrollIntoView({\n      pageDiv,\n      pageSpot,\n      pageNumber\n    });\n\n    this._updateScrollDown = () => {\n      this.scroll.down = scrolledDown;\n      this._updateScrollDown = null;\n    };\n  }\n\n  _getVisiblePages() {\n    return this._getCurrentVisiblePage();\n  }\n\n  _updateHelper(visiblePages) {}\n\n  get _isScrollModeHorizontal() {\n    return (0, _pdfjsLib.shadow)(this, \"_isScrollModeHorizontal\", false);\n  }\n\n  _updateScrollMode() {}\n\n  _updateSpreadMode() {}\n\n  _getPageAdvance() {\n    return 1;\n  }\n\n}\n\nexports.PDFSinglePageViewer = PDFSinglePageViewer;\n\n/***/ }),\n/* 33 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Toolbar = void 0;\n\nvar _ui_utils = __webpack_require__(4);\n\nconst PAGE_NUMBER_LOADING_INDICATOR = \"visiblePageIsLoading\";\nconst SCALE_SELECT_CONTAINER_WIDTH = 140;\nconst SCALE_SELECT_WIDTH = 162;\n\nclass Toolbar {\n  constructor(options, eventBus, l10n = _ui_utils.NullL10n) {\n    this.toolbar = options.container;\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n    this.buttons = [{\n      element: options.previous,\n      eventName: \"previouspage\"\n    }, {\n      element: options.next,\n      eventName: \"nextpage\"\n    }, {\n      element: options.zoomIn,\n      eventName: \"zoomin\"\n    }, {\n      element: options.zoomOut,\n      eventName: \"zoomout\"\n    }, {\n      element: options.openFile,\n      eventName: \"openfile\"\n    }, {\n      element: options.print,\n      eventName: \"print\"\n    }, {\n      element: options.presentationModeButton,\n      eventName: \"presentationmode\"\n    }, {\n      element: options.download,\n      eventName: \"download\"\n    }, {\n      element: options.viewBookmark,\n      eventName: null\n    }];\n    this.items = {\n      numPages: options.numPages,\n      pageNumber: options.pageNumber,\n      scaleSelectContainer: options.scaleSelectContainer,\n      scaleSelect: options.scaleSelect,\n      customScaleOption: options.customScaleOption,\n      previous: options.previous,\n      next: options.next,\n      zoomIn: options.zoomIn,\n      zoomOut: options.zoomOut\n    };\n    this._wasLocalized = false;\n    this.reset();\n\n    this._bindListeners();\n  }\n\n  setPageNumber(pageNumber, pageLabel) {\n    this.pageNumber = pageNumber;\n    this.pageLabel = pageLabel;\n\n    this._updateUIState(false);\n  }\n\n  setPagesCount(pagesCount, hasPageLabels) {\n    this.pagesCount = pagesCount;\n    this.hasPageLabels = hasPageLabels;\n\n    this._updateUIState(true);\n  }\n\n  setPageScale(pageScaleValue, pageScale) {\n    this.pageScaleValue = (pageScaleValue || pageScale).toString();\n    this.pageScale = pageScale;\n\n    this._updateUIState(false);\n  }\n\n  reset() {\n    this.pageNumber = 0;\n    this.pageLabel = null;\n    this.hasPageLabels = false;\n    this.pagesCount = 0;\n    this.pageScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n    this.pageScale = _ui_utils.DEFAULT_SCALE;\n\n    this._updateUIState(true);\n\n    this.updateLoadingIndicatorState();\n  }\n\n  _bindListeners() {\n    const {\n      pageNumber,\n      scaleSelect\n    } = this.items;\n    const self = this;\n\n    for (const {\n      element,\n      eventName\n    } of this.buttons) {\n      element.addEventListener(\"click\", evt => {\n        if (eventName !== null) {\n          this.eventBus.dispatch(eventName, {\n            source: this\n          });\n        }\n      });\n    }\n\n    pageNumber.addEventListener(\"click\", function () {\n      this.select();\n    });\n    pageNumber.addEventListener(\"change\", function () {\n      self.eventBus.dispatch(\"pagenumberchanged\", {\n        source: self,\n        value: this.value\n      });\n    });\n    scaleSelect.addEventListener(\"change\", function () {\n      if (this.value === \"custom\") {\n        return;\n      }\n\n      self.eventBus.dispatch(\"scalechanged\", {\n        source: self,\n        value: this.value\n      });\n    });\n    scaleSelect.oncontextmenu = _ui_utils.noContextMenuHandler;\n\n    this.eventBus._on(\"localized\", () => {\n      this._wasLocalized = true;\n\n      this._adjustScaleWidth();\n\n      this._updateUIState(true);\n    });\n  }\n\n  _updateUIState(resetNumPages = false) {\n    if (!this._wasLocalized) {\n      return;\n    }\n\n    const {\n      pageNumber,\n      pagesCount,\n      pageScaleValue,\n      pageScale,\n      items\n    } = this;\n\n    if (resetNumPages) {\n      if (this.hasPageLabels) {\n        items.pageNumber.type = \"text\";\n      } else {\n        items.pageNumber.type = \"number\";\n        this.l10n.get(\"of_pages\", {\n          pagesCount\n        }, \"of {{pagesCount}}\").then(msg => {\n          items.numPages.textContent = msg;\n        });\n      }\n\n      items.pageNumber.max = pagesCount;\n    }\n\n    if (this.hasPageLabels) {\n      items.pageNumber.value = this.pageLabel;\n      this.l10n.get(\"page_of_pages\", {\n        pageNumber,\n        pagesCount\n      }, \"({{pageNumber}} of {{pagesCount}})\").then(msg => {\n        items.numPages.textContent = msg;\n      });\n    } else {\n      items.pageNumber.value = pageNumber;\n    }\n\n    items.previous.disabled = pageNumber <= 1;\n    items.next.disabled = pageNumber >= pagesCount;\n    items.zoomOut.disabled = pageScale <= _ui_utils.MIN_SCALE;\n    items.zoomIn.disabled = pageScale >= _ui_utils.MAX_SCALE;\n    const customScale = Math.round(pageScale * 10000) / 100;\n    this.l10n.get(\"page_scale_percent\", {\n      scale: customScale\n    }, \"{{scale}}%\").then(msg => {\n      let predefinedValueFound = false;\n\n      for (const option of items.scaleSelect.options) {\n        if (option.value !== pageScaleValue) {\n          option.selected = false;\n          continue;\n        }\n\n        option.selected = true;\n        predefinedValueFound = true;\n      }\n\n      if (!predefinedValueFound) {\n        items.customScaleOption.textContent = msg;\n        items.customScaleOption.selected = true;\n      }\n    });\n  }\n\n  updateLoadingIndicatorState(loading = false) {\n    const pageNumberInput = this.items.pageNumber;\n    pageNumberInput.classList.toggle(PAGE_NUMBER_LOADING_INDICATOR, loading);\n  }\n\n  async _adjustScaleWidth() {\n    const {\n      items,\n      l10n\n    } = this;\n    const predefinedValuesPromise = Promise.all([l10n.get(\"page_scale_auto\", null, \"Automatic Zoom\"), l10n.get(\"page_scale_actual\", null, \"Actual Size\"), l10n.get(\"page_scale_fit\", null, \"Page Fit\"), l10n.get(\"page_scale_width\", null, \"Page Width\")]);\n    let canvas = document.createElement(\"canvas\");\n    canvas.mozOpaque = true;\n    let ctx = canvas.getContext(\"2d\", {\n      alpha: false\n    });\n    await _ui_utils.animationStarted;\n    const {\n      fontSize,\n      fontFamily\n    } = getComputedStyle(items.scaleSelect);\n    ctx.font = `${fontSize} ${fontFamily}`;\n    let maxWidth = 0;\n\n    for (const predefinedValue of await predefinedValuesPromise) {\n      const {\n        width\n      } = ctx.measureText(predefinedValue);\n\n      if (width > maxWidth) {\n        maxWidth = width;\n      }\n    }\n\n    const overflow = SCALE_SELECT_WIDTH - SCALE_SELECT_CONTAINER_WIDTH;\n    maxWidth += 2 * overflow;\n\n    if (maxWidth > SCALE_SELECT_CONTAINER_WIDTH) {\n      items.scaleSelect.style.width = `${maxWidth + overflow}px`;\n      items.scaleSelectContainer.style.width = `${maxWidth}px`;\n    }\n\n    canvas.width = 0;\n    canvas.height = 0;\n    canvas = ctx = null;\n  }\n\n}\n\nexports.Toolbar = Toolbar;\n\n/***/ }),\n/* 34 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ViewHistory = void 0;\nconst DEFAULT_VIEW_HISTORY_CACHE_SIZE = 20;\n\nclass ViewHistory {\n  constructor(fingerprint, cacheSize = DEFAULT_VIEW_HISTORY_CACHE_SIZE) {\n    this.fingerprint = fingerprint;\n    this.cacheSize = cacheSize;\n    this._initializedPromise = this._readFromStorage().then(databaseStr => {\n      const database = JSON.parse(databaseStr || \"{}\");\n      let index = -1;\n\n      if (!Array.isArray(database.files)) {\n        database.files = [];\n      } else {\n        while (database.files.length >= this.cacheSize) {\n          database.files.shift();\n        }\n\n        for (let i = 0, ii = database.files.length; i < ii; i++) {\n          const branch = database.files[i];\n\n          if (branch.fingerprint === this.fingerprint) {\n            index = i;\n            break;\n          }\n        }\n      }\n\n      if (index === -1) {\n        index = database.files.push({\n          fingerprint: this.fingerprint\n        }) - 1;\n      }\n\n      this.file = database.files[index];\n      this.database = database;\n    });\n  }\n\n  async _writeToStorage() {\n    const databaseStr = JSON.stringify(this.database);\n    localStorage.setItem(\"pdfjs.history\", databaseStr);\n  }\n\n  async _readFromStorage() {\n    return localStorage.getItem(\"pdfjs.history\");\n  }\n\n  async set(name, val) {\n    await this._initializedPromise;\n    this.file[name] = val;\n    return this._writeToStorage();\n  }\n\n  async setMultiple(properties) {\n    await this._initializedPromise;\n\n    for (const name in properties) {\n      this.file[name] = properties[name];\n    }\n\n    return this._writeToStorage();\n  }\n\n  async get(name, defaultValue) {\n    await this._initializedPromise;\n    const val = this.file[name];\n    return val !== undefined ? val : defaultValue;\n  }\n\n  async getMultiple(properties) {\n    await this._initializedPromise;\n    const values = Object.create(null);\n\n    for (const name in properties) {\n      const val = this.file[name];\n      values[name] = val !== undefined ? val : properties[name];\n    }\n\n    return values;\n  }\n\n}\n\nexports.ViewHistory = ViewHistory;\n\n/***/ }),\n/* 35 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.GenericCom = void 0;\n\nvar _app = __webpack_require__(3);\n\nvar _preferences = __webpack_require__(36);\n\nvar _download_manager = __webpack_require__(37);\n\nvar _genericl10n = __webpack_require__(38);\n\nvar _generic_scripting = __webpack_require__(40);\n\n;\nconst GenericCom = {};\nexports.GenericCom = GenericCom;\n\nclass GenericPreferences extends _preferences.BasePreferences {\n  async _writeToStorage(prefObj) {\n    localStorage.setItem(\"pdfjs.preferences\", JSON.stringify(prefObj));\n  }\n\n  async _readFromStorage(prefObj) {\n    return JSON.parse(localStorage.getItem(\"pdfjs.preferences\"));\n  }\n\n}\n\nclass GenericExternalServices extends _app.DefaultExternalServices {\n  static createDownloadManager(options) {\n    return new _download_manager.DownloadManager();\n  }\n\n  static createPreferences() {\n    return new GenericPreferences();\n  }\n\n  static createL10n({\n    locale = \"en-US\"\n  }) {\n    return new _genericl10n.GenericL10n(locale);\n  }\n\n  static createScripting({\n    sandboxBundleSrc\n  }) {\n    return new _generic_scripting.GenericScripting(sandboxBundleSrc);\n  }\n\n}\n\n_app.PDFViewerApplication.externalServices = GenericExternalServices;\n\n/***/ }),\n/* 36 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.BasePreferences = void 0;\n\nvar _app_options = __webpack_require__(1);\n\nclass BasePreferences {\n  constructor() {\n    if (this.constructor === BasePreferences) {\n      throw new Error(\"Cannot initialize BasePreferences.\");\n    }\n\n    Object.defineProperty(this, \"defaults\", {\n      value: Object.freeze({\n        \"cursorToolOnLoad\": 0,\n        \"defaultZoomValue\": \"\",\n        \"disablePageLabels\": false,\n        \"enablePermissions\": false,\n        \"enablePrintAutoRotate\": false,\n        \"enableScripting\": false,\n        \"enableWebGL\": false,\n        \"externalLinkTarget\": 0,\n        \"historyUpdateUrl\": false,\n        \"ignoreDestinationZoom\": false,\n        \"pdfBugEnabled\": false,\n        \"renderer\": \"canvas\",\n        \"renderInteractiveForms\": true,\n        \"sidebarViewOnLoad\": -1,\n        \"scrollModeOnLoad\": -1,\n        \"spreadModeOnLoad\": -1,\n        \"textLayerMode\": 1,\n        \"useOnlyCssZoom\": false,\n        \"viewerCssTheme\": 0,\n        \"viewOnLoad\": 0,\n        \"disableAutoFetch\": false,\n        \"disableFontFace\": false,\n        \"disableRange\": false,\n        \"disableStream\": false\n      }),\n      writable: false,\n      enumerable: true,\n      configurable: false\n    });\n    this.prefs = Object.assign(Object.create(null), this.defaults);\n    this._initializedPromise = this._readFromStorage(this.defaults).then(prefs => {\n      if (!prefs) {\n        return;\n      }\n\n      for (const name in prefs) {\n        const defaultValue = this.defaults[name],\n              prefValue = prefs[name];\n\n        if (defaultValue === undefined || typeof prefValue !== typeof defaultValue) {\n          continue;\n        }\n\n        this.prefs[name] = prefValue;\n      }\n    });\n  }\n\n  async _writeToStorage(prefObj) {\n    throw new Error(\"Not implemented: _writeToStorage\");\n  }\n\n  async _readFromStorage(prefObj) {\n    throw new Error(\"Not implemented: _readFromStorage\");\n  }\n\n  async reset() {\n    await this._initializedPromise;\n    this.prefs = Object.assign(Object.create(null), this.defaults);\n    return this._writeToStorage(this.defaults);\n  }\n\n  async set(name, value) {\n    await this._initializedPromise;\n    const defaultValue = this.defaults[name];\n\n    if (defaultValue === undefined) {\n      throw new Error(`Set preference: \"${name}\" is undefined.`);\n    } else if (value === undefined) {\n      throw new Error(\"Set preference: no value is specified.\");\n    }\n\n    const valueType = typeof value;\n    const defaultType = typeof defaultValue;\n\n    if (valueType !== defaultType) {\n      if (valueType === \"number\" && defaultType === \"string\") {\n        value = value.toString();\n      } else {\n        throw new Error(`Set preference: \"${value}\" is a ${valueType}, ` + `expected a ${defaultType}.`);\n      }\n    } else {\n      if (valueType === \"number\" && !Number.isInteger(value)) {\n        throw new Error(`Set preference: \"${value}\" must be an integer.`);\n      }\n    }\n\n    this.prefs[name] = value;\n    return this._writeToStorage(this.prefs);\n  }\n\n  async get(name) {\n    await this._initializedPromise;\n    const defaultValue = this.defaults[name];\n\n    if (defaultValue === undefined) {\n      throw new Error(`Get preference: \"${name}\" is undefined.`);\n    } else {\n      const prefValue = this.prefs[name];\n\n      if (prefValue !== undefined) {\n        return prefValue;\n      }\n    }\n\n    return defaultValue;\n  }\n\n  async getAll() {\n    await this._initializedPromise;\n    return Object.assign(Object.create(null), this.defaults, this.prefs);\n  }\n\n}\n\nexports.BasePreferences = BasePreferences;\n\n/***/ }),\n/* 37 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.DownloadManager = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nvar _viewer_compatibility = __webpack_require__(2);\n\n;\n\nfunction download(blobUrl, filename) {\n  const a = document.createElement(\"a\");\n\n  if (!a.click) {\n    throw new Error('DownloadManager: \"a.click()\" is not supported.');\n  }\n\n  a.href = blobUrl;\n  a.target = \"_parent\";\n\n  if (\"download\" in a) {\n    a.download = filename;\n  }\n\n  (document.body || document.documentElement).appendChild(a);\n  a.click();\n  a.remove();\n}\n\nclass DownloadManager {\n  downloadUrl(url, filename) {\n    if (!(0, _pdfjsLib.createValidAbsoluteUrl)(url, \"http://example.com\")) {\n      return;\n    }\n\n    download(url + \"#pdfjs.action=download\", filename);\n  }\n\n  downloadData(data, filename, contentType) {\n    const blobUrl = (0, _pdfjsLib.createObjectURL)(data, contentType, _viewer_compatibility.viewerCompatibilityParams.disableCreateObjectURL);\n    download(blobUrl, filename);\n  }\n\n  download(blob, url, filename, sourceEventType = \"download\") {\n    if (_viewer_compatibility.viewerCompatibilityParams.disableCreateObjectURL) {\n      this.downloadUrl(url, filename);\n      return;\n    }\n\n    const blobUrl = URL.createObjectURL(blob);\n    download(blobUrl, filename);\n  }\n\n}\n\nexports.DownloadManager = DownloadManager;\n\n/***/ }),\n/* 38 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.GenericL10n = void 0;\n\n__webpack_require__(39);\n\nconst webL10n = document.webL10n;\n\nclass GenericL10n {\n  constructor(lang) {\n    this._lang = lang;\n    this._ready = new Promise((resolve, reject) => {\n      webL10n.setLanguage(lang, () => {\n        resolve(webL10n);\n      });\n    });\n  }\n\n  async getLanguage() {\n    const l10n = await this._ready;\n    return l10n.getLanguage();\n  }\n\n  async getDirection() {\n    const l10n = await this._ready;\n    return l10n.getDirection();\n  }\n\n  async get(property, args, fallback) {\n    const l10n = await this._ready;\n    return l10n.get(property, args, fallback);\n  }\n\n  async translate(element) {\n    const l10n = await this._ready;\n    return l10n.translate(element);\n  }\n\n}\n\nexports.GenericL10n = GenericL10n;\n\n/***/ }),\n/* 39 */\n/***/ (() => {\n\n\n\ndocument.webL10n = function (window, document, undefined) {\n  var gL10nData = {};\n  var gTextData = '';\n  var gTextProp = 'textContent';\n  var gLanguage = '';\n  var gMacros = {};\n  var gReadyState = 'loading';\n  var gAsyncResourceLoading = true;\n\n  function getL10nResourceLinks() {\n    return document.querySelectorAll('link[type=\"application/l10n\"]');\n  }\n\n  function getL10nDictionary() {\n    var script = document.querySelector('script[type=\"application/l10n\"]');\n    return script ? JSON.parse(script.innerHTML) : null;\n  }\n\n  function getTranslatableChildren(element) {\n    return element ? element.querySelectorAll('*[data-l10n-id]') : [];\n  }\n\n  function getL10nAttributes(element) {\n    if (!element) return {};\n    var l10nId = element.getAttribute('data-l10n-id');\n    var l10nArgs = element.getAttribute('data-l10n-args');\n    var args = {};\n\n    if (l10nArgs) {\n      try {\n        args = JSON.parse(l10nArgs);\n      } catch (e) {\n        console.warn('could not parse arguments for #' + l10nId);\n      }\n    }\n\n    return {\n      id: l10nId,\n      args: args\n    };\n  }\n\n  function xhrLoadText(url, onSuccess, onFailure) {\n    onSuccess = onSuccess || function _onSuccess(data) {};\n\n    onFailure = onFailure || function _onFailure() {};\n\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, gAsyncResourceLoading);\n\n    if (xhr.overrideMimeType) {\n      xhr.overrideMimeType('text/plain; charset=utf-8');\n    }\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == 4) {\n        if (xhr.status == 200 || xhr.status === 0) {\n          onSuccess(xhr.responseText);\n        } else {\n          onFailure();\n        }\n      }\n    };\n\n    xhr.onerror = onFailure;\n    xhr.ontimeout = onFailure;\n\n    try {\n      xhr.send(null);\n    } catch (e) {\n      onFailure();\n    }\n  }\n\n  function parseResource(href, lang, successCallback, failureCallback) {\n    var baseURL = href.replace(/[^\\/]*$/, '') || './';\n\n    function evalString(text) {\n      if (text.lastIndexOf('\\\\') < 0) return text;\n      return text.replace(/\\\\\\\\/g, '\\\\').replace(/\\\\n/g, '\\n').replace(/\\\\r/g, '\\r').replace(/\\\\t/g, '\\t').replace(/\\\\b/g, '\\b').replace(/\\\\f/g, '\\f').replace(/\\\\{/g, '{').replace(/\\\\}/g, '}').replace(/\\\\\"/g, '\"').replace(/\\\\'/g, \"'\");\n    }\n\n    function parseProperties(text, parsedPropertiesCallback) {\n      var dictionary = {};\n      var reBlank = /^\\s*|\\s*$/;\n      var reComment = /^\\s*#|^\\s*$/;\n      var reSection = /^\\s*\\[(.*)\\]\\s*$/;\n      var reImport = /^\\s*@import\\s+url\\((.*)\\)\\s*$/i;\n      var reSplit = /^([^=\\s]*)\\s*=\\s*(.+)$/;\n\n      function parseRawLines(rawText, extendedSyntax, parsedRawLinesCallback) {\n        var entries = rawText.replace(reBlank, '').split(/[\\r\\n]+/);\n        var currentLang = '*';\n        var genericLang = lang.split('-', 1)[0];\n        var skipLang = false;\n        var match = '';\n\n        function nextEntry() {\n          while (true) {\n            if (!entries.length) {\n              parsedRawLinesCallback();\n              return;\n            }\n\n            var line = entries.shift();\n            if (reComment.test(line)) continue;\n\n            if (extendedSyntax) {\n              match = reSection.exec(line);\n\n              if (match) {\n                currentLang = match[1].toLowerCase();\n                skipLang = currentLang !== '*' && currentLang !== lang && currentLang !== genericLang;\n                continue;\n              } else if (skipLang) {\n                continue;\n              }\n\n              match = reImport.exec(line);\n\n              if (match) {\n                loadImport(baseURL + match[1], nextEntry);\n                return;\n              }\n            }\n\n            var tmp = line.match(reSplit);\n\n            if (tmp && tmp.length == 3) {\n              dictionary[tmp[1]] = evalString(tmp[2]);\n            }\n          }\n        }\n\n        nextEntry();\n      }\n\n      function loadImport(url, callback) {\n        xhrLoadText(url, function (content) {\n          parseRawLines(content, false, callback);\n        }, function () {\n          console.warn(url + ' not found.');\n          callback();\n        });\n      }\n\n      parseRawLines(text, true, function () {\n        parsedPropertiesCallback(dictionary);\n      });\n    }\n\n    xhrLoadText(href, function (response) {\n      gTextData += response;\n      parseProperties(response, function (data) {\n        for (var key in data) {\n          var id,\n              prop,\n              index = key.lastIndexOf('.');\n\n          if (index > 0) {\n            id = key.substring(0, index);\n            prop = key.substring(index + 1);\n          } else {\n            id = key;\n            prop = gTextProp;\n          }\n\n          if (!gL10nData[id]) {\n            gL10nData[id] = {};\n          }\n\n          gL10nData[id][prop] = data[key];\n        }\n\n        if (successCallback) {\n          successCallback();\n        }\n      });\n    }, failureCallback);\n  }\n\n  function loadLocale(lang, callback) {\n    if (lang) {\n      lang = lang.toLowerCase();\n    }\n\n    callback = callback || function _callback() {};\n\n    clear();\n    gLanguage = lang;\n    var langLinks = getL10nResourceLinks();\n    var langCount = langLinks.length;\n\n    if (langCount === 0) {\n      var dict = getL10nDictionary();\n\n      if (dict && dict.locales && dict.default_locale) {\n        console.log('using the embedded JSON directory, early way out');\n        gL10nData = dict.locales[lang];\n\n        if (!gL10nData) {\n          var defaultLocale = dict.default_locale.toLowerCase();\n\n          for (var anyCaseLang in dict.locales) {\n            anyCaseLang = anyCaseLang.toLowerCase();\n\n            if (anyCaseLang === lang) {\n              gL10nData = dict.locales[lang];\n              break;\n            } else if (anyCaseLang === defaultLocale) {\n              gL10nData = dict.locales[defaultLocale];\n            }\n          }\n        }\n\n        callback();\n      } else {\n        console.log('no resource to load, early way out');\n      }\n\n      gReadyState = 'complete';\n      return;\n    }\n\n    var onResourceLoaded = null;\n    var gResourceCount = 0;\n\n    onResourceLoaded = function () {\n      gResourceCount++;\n\n      if (gResourceCount >= langCount) {\n        callback();\n        gReadyState = 'complete';\n      }\n    };\n\n    function L10nResourceLink(link) {\n      var href = link.href;\n\n      this.load = function (lang, callback) {\n        parseResource(href, lang, callback, function () {\n          console.warn(href + ' not found.');\n          console.warn('\"' + lang + '\" resource not found');\n          gLanguage = '';\n          callback();\n        });\n      };\n    }\n\n    for (var i = 0; i < langCount; i++) {\n      var resource = new L10nResourceLink(langLinks[i]);\n      resource.load(lang, onResourceLoaded);\n    }\n  }\n\n  function clear() {\n    gL10nData = {};\n    gTextData = '';\n    gLanguage = '';\n  }\n\n  function getPluralRules(lang) {\n    var locales2rules = {\n      'af': 3,\n      'ak': 4,\n      'am': 4,\n      'ar': 1,\n      'asa': 3,\n      'az': 0,\n      'be': 11,\n      'bem': 3,\n      'bez': 3,\n      'bg': 3,\n      'bh': 4,\n      'bm': 0,\n      'bn': 3,\n      'bo': 0,\n      'br': 20,\n      'brx': 3,\n      'bs': 11,\n      'ca': 3,\n      'cgg': 3,\n      'chr': 3,\n      'cs': 12,\n      'cy': 17,\n      'da': 3,\n      'de': 3,\n      'dv': 3,\n      'dz': 0,\n      'ee': 3,\n      'el': 3,\n      'en': 3,\n      'eo': 3,\n      'es': 3,\n      'et': 3,\n      'eu': 3,\n      'fa': 0,\n      'ff': 5,\n      'fi': 3,\n      'fil': 4,\n      'fo': 3,\n      'fr': 5,\n      'fur': 3,\n      'fy': 3,\n      'ga': 8,\n      'gd': 24,\n      'gl': 3,\n      'gsw': 3,\n      'gu': 3,\n      'guw': 4,\n      'gv': 23,\n      'ha': 3,\n      'haw': 3,\n      'he': 2,\n      'hi': 4,\n      'hr': 11,\n      'hu': 0,\n      'id': 0,\n      'ig': 0,\n      'ii': 0,\n      'is': 3,\n      'it': 3,\n      'iu': 7,\n      'ja': 0,\n      'jmc': 3,\n      'jv': 0,\n      'ka': 0,\n      'kab': 5,\n      'kaj': 3,\n      'kcg': 3,\n      'kde': 0,\n      'kea': 0,\n      'kk': 3,\n      'kl': 3,\n      'km': 0,\n      'kn': 0,\n      'ko': 0,\n      'ksb': 3,\n      'ksh': 21,\n      'ku': 3,\n      'kw': 7,\n      'lag': 18,\n      'lb': 3,\n      'lg': 3,\n      'ln': 4,\n      'lo': 0,\n      'lt': 10,\n      'lv': 6,\n      'mas': 3,\n      'mg': 4,\n      'mk': 16,\n      'ml': 3,\n      'mn': 3,\n      'mo': 9,\n      'mr': 3,\n      'ms': 0,\n      'mt': 15,\n      'my': 0,\n      'nah': 3,\n      'naq': 7,\n      'nb': 3,\n      'nd': 3,\n      'ne': 3,\n      'nl': 3,\n      'nn': 3,\n      'no': 3,\n      'nr': 3,\n      'nso': 4,\n      'ny': 3,\n      'nyn': 3,\n      'om': 3,\n      'or': 3,\n      'pa': 3,\n      'pap': 3,\n      'pl': 13,\n      'ps': 3,\n      'pt': 3,\n      'rm': 3,\n      'ro': 9,\n      'rof': 3,\n      'ru': 11,\n      'rwk': 3,\n      'sah': 0,\n      'saq': 3,\n      'se': 7,\n      'seh': 3,\n      'ses': 0,\n      'sg': 0,\n      'sh': 11,\n      'shi': 19,\n      'sk': 12,\n      'sl': 14,\n      'sma': 7,\n      'smi': 7,\n      'smj': 7,\n      'smn': 7,\n      'sms': 7,\n      'sn': 3,\n      'so': 3,\n      'sq': 3,\n      'sr': 11,\n      'ss': 3,\n      'ssy': 3,\n      'st': 3,\n      'sv': 3,\n      'sw': 3,\n      'syr': 3,\n      'ta': 3,\n      'te': 3,\n      'teo': 3,\n      'th': 0,\n      'ti': 4,\n      'tig': 3,\n      'tk': 3,\n      'tl': 4,\n      'tn': 3,\n      'to': 0,\n      'tr': 0,\n      'ts': 3,\n      'tzm': 22,\n      'uk': 11,\n      'ur': 3,\n      've': 3,\n      'vi': 0,\n      'vun': 3,\n      'wa': 4,\n      'wae': 3,\n      'wo': 0,\n      'xh': 3,\n      'xog': 3,\n      'yo': 0,\n      'zh': 0,\n      'zu': 3\n    };\n\n    function isIn(n, list) {\n      return list.indexOf(n) !== -1;\n    }\n\n    function isBetween(n, start, end) {\n      return start <= n && n <= end;\n    }\n\n    var pluralRules = {\n      '0': function (n) {\n        return 'other';\n      },\n      '1': function (n) {\n        if (isBetween(n % 100, 3, 10)) return 'few';\n        if (n === 0) return 'zero';\n        if (isBetween(n % 100, 11, 99)) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '2': function (n) {\n        if (n !== 0 && n % 10 === 0) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '3': function (n) {\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '4': function (n) {\n        if (isBetween(n, 0, 1)) return 'one';\n        return 'other';\n      },\n      '5': function (n) {\n        if (isBetween(n, 0, 2) && n != 2) return 'one';\n        return 'other';\n      },\n      '6': function (n) {\n        if (n === 0) return 'zero';\n        if (n % 10 == 1 && n % 100 != 11) return 'one';\n        return 'other';\n      },\n      '7': function (n) {\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '8': function (n) {\n        if (isBetween(n, 3, 6)) return 'few';\n        if (isBetween(n, 7, 10)) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '9': function (n) {\n        if (n === 0 || n != 1 && isBetween(n % 100, 1, 19)) return 'few';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '10': function (n) {\n        if (isBetween(n % 10, 2, 9) && !isBetween(n % 100, 11, 19)) return 'few';\n        if (n % 10 == 1 && !isBetween(n % 100, 11, 19)) return 'one';\n        return 'other';\n      },\n      '11': function (n) {\n        if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14)) return 'few';\n        if (n % 10 === 0 || isBetween(n % 10, 5, 9) || isBetween(n % 100, 11, 14)) return 'many';\n        if (n % 10 == 1 && n % 100 != 11) return 'one';\n        return 'other';\n      },\n      '12': function (n) {\n        if (isBetween(n, 2, 4)) return 'few';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '13': function (n) {\n        if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14)) return 'few';\n        if (n != 1 && isBetween(n % 10, 0, 1) || isBetween(n % 10, 5, 9) || isBetween(n % 100, 12, 14)) return 'many';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '14': function (n) {\n        if (isBetween(n % 100, 3, 4)) return 'few';\n        if (n % 100 == 2) return 'two';\n        if (n % 100 == 1) return 'one';\n        return 'other';\n      },\n      '15': function (n) {\n        if (n === 0 || isBetween(n % 100, 2, 10)) return 'few';\n        if (isBetween(n % 100, 11, 19)) return 'many';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '16': function (n) {\n        if (n % 10 == 1 && n != 11) return 'one';\n        return 'other';\n      },\n      '17': function (n) {\n        if (n == 3) return 'few';\n        if (n === 0) return 'zero';\n        if (n == 6) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '18': function (n) {\n        if (n === 0) return 'zero';\n        if (isBetween(n, 0, 2) && n !== 0 && n != 2) return 'one';\n        return 'other';\n      },\n      '19': function (n) {\n        if (isBetween(n, 2, 10)) return 'few';\n        if (isBetween(n, 0, 1)) return 'one';\n        return 'other';\n      },\n      '20': function (n) {\n        if ((isBetween(n % 10, 3, 4) || n % 10 == 9) && !(isBetween(n % 100, 10, 19) || isBetween(n % 100, 70, 79) || isBetween(n % 100, 90, 99))) return 'few';\n        if (n % 1000000 === 0 && n !== 0) return 'many';\n        if (n % 10 == 2 && !isIn(n % 100, [12, 72, 92])) return 'two';\n        if (n % 10 == 1 && !isIn(n % 100, [11, 71, 91])) return 'one';\n        return 'other';\n      },\n      '21': function (n) {\n        if (n === 0) return 'zero';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '22': function (n) {\n        if (isBetween(n, 0, 1) || isBetween(n, 11, 99)) return 'one';\n        return 'other';\n      },\n      '23': function (n) {\n        if (isBetween(n % 10, 1, 2) || n % 20 === 0) return 'one';\n        return 'other';\n      },\n      '24': function (n) {\n        if (isBetween(n, 3, 10) || isBetween(n, 13, 19)) return 'few';\n        if (isIn(n, [2, 12])) return 'two';\n        if (isIn(n, [1, 11])) return 'one';\n        return 'other';\n      }\n    };\n    var index = locales2rules[lang.replace(/-.*$/, '')];\n\n    if (!(index in pluralRules)) {\n      console.warn('plural form unknown for [' + lang + ']');\n      return function () {\n        return 'other';\n      };\n    }\n\n    return pluralRules[index];\n  }\n\n  gMacros.plural = function (str, param, key, prop) {\n    var n = parseFloat(param);\n    if (isNaN(n)) return str;\n    if (prop != gTextProp) return str;\n\n    if (!gMacros._pluralRules) {\n      gMacros._pluralRules = getPluralRules(gLanguage);\n    }\n\n    var index = '[' + gMacros._pluralRules(n) + ']';\n\n    if (n === 0 && key + '[zero]' in gL10nData) {\n      str = gL10nData[key + '[zero]'][prop];\n    } else if (n == 1 && key + '[one]' in gL10nData) {\n      str = gL10nData[key + '[one]'][prop];\n    } else if (n == 2 && key + '[two]' in gL10nData) {\n      str = gL10nData[key + '[two]'][prop];\n    } else if (key + index in gL10nData) {\n      str = gL10nData[key + index][prop];\n    } else if (key + '[other]' in gL10nData) {\n      str = gL10nData[key + '[other]'][prop];\n    }\n\n    return str;\n  };\n\n  function getL10nData(key, args, fallback) {\n    var data = gL10nData[key];\n\n    if (!data) {\n      console.warn('#' + key + ' is undefined.');\n\n      if (!fallback) {\n        return null;\n      }\n\n      data = fallback;\n    }\n\n    var rv = {};\n\n    for (var prop in data) {\n      var str = data[prop];\n      str = substIndexes(str, args, key, prop);\n      str = substArguments(str, args, key);\n      rv[prop] = str;\n    }\n\n    return rv;\n  }\n\n  function substIndexes(str, args, key, prop) {\n    var reIndex = /\\{\\[\\s*([a-zA-Z]+)\\(([a-zA-Z]+)\\)\\s*\\]\\}/;\n    var reMatch = reIndex.exec(str);\n    if (!reMatch || !reMatch.length) return str;\n    var macroName = reMatch[1];\n    var paramName = reMatch[2];\n    var param;\n\n    if (args && paramName in args) {\n      param = args[paramName];\n    } else if (paramName in gL10nData) {\n      param = gL10nData[paramName];\n    }\n\n    if (macroName in gMacros) {\n      var macro = gMacros[macroName];\n      str = macro(str, param, key, prop);\n    }\n\n    return str;\n  }\n\n  function substArguments(str, args, key) {\n    var reArgs = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n    return str.replace(reArgs, function (matched_text, arg) {\n      if (args && arg in args) {\n        return args[arg];\n      }\n\n      if (arg in gL10nData) {\n        return gL10nData[arg];\n      }\n\n      console.log('argument {{' + arg + '}} for #' + key + ' is undefined.');\n      return matched_text;\n    });\n  }\n\n  function translateElement(element) {\n    var l10n = getL10nAttributes(element);\n    if (!l10n.id) return;\n    var data = getL10nData(l10n.id, l10n.args);\n\n    if (!data) {\n      console.warn('#' + l10n.id + ' is undefined.');\n      return;\n    }\n\n    if (data[gTextProp]) {\n      if (getChildElementCount(element) === 0) {\n        element[gTextProp] = data[gTextProp];\n      } else {\n        var children = element.childNodes;\n        var found = false;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i].nodeType === 3 && /\\S/.test(children[i].nodeValue)) {\n            if (found) {\n              children[i].nodeValue = '';\n            } else {\n              children[i].nodeValue = data[gTextProp];\n              found = true;\n            }\n          }\n        }\n\n        if (!found) {\n          var textNode = document.createTextNode(data[gTextProp]);\n          element.insertBefore(textNode, element.firstChild);\n        }\n      }\n\n      delete data[gTextProp];\n    }\n\n    for (var k in data) {\n      element[k] = data[k];\n    }\n  }\n\n  function getChildElementCount(element) {\n    if (element.children) {\n      return element.children.length;\n    }\n\n    if (typeof element.childElementCount !== 'undefined') {\n      return element.childElementCount;\n    }\n\n    var count = 0;\n\n    for (var i = 0; i < element.childNodes.length; i++) {\n      count += element.nodeType === 1 ? 1 : 0;\n    }\n\n    return count;\n  }\n\n  function translateFragment(element) {\n    element = element || document.documentElement;\n    var children = getTranslatableChildren(element);\n    var elementCount = children.length;\n\n    for (var i = 0; i < elementCount; i++) {\n      translateElement(children[i]);\n    }\n\n    translateElement(element);\n  }\n\n  return {\n    get: function (key, args, fallbackString) {\n      var index = key.lastIndexOf('.');\n      var prop = gTextProp;\n\n      if (index > 0) {\n        prop = key.substring(index + 1);\n        key = key.substring(0, index);\n      }\n\n      var fallback;\n\n      if (fallbackString) {\n        fallback = {};\n        fallback[prop] = fallbackString;\n      }\n\n      var data = getL10nData(key, args, fallback);\n\n      if (data && prop in data) {\n        return data[prop];\n      }\n\n      return '{{' + key + '}}';\n    },\n    getData: function () {\n      return gL10nData;\n    },\n    getText: function () {\n      return gTextData;\n    },\n    getLanguage: function () {\n      return gLanguage;\n    },\n    setLanguage: function (lang, callback) {\n      loadLocale(lang, function () {\n        if (callback) callback();\n      });\n    },\n    getDirection: function () {\n      var rtlList = ['ar', 'he', 'fa', 'ps', 'ur'];\n      var shortCode = gLanguage.split('-', 1)[0];\n      return rtlList.indexOf(shortCode) >= 0 ? 'rtl' : 'ltr';\n    },\n    translate: translateFragment,\n    getReadyState: function () {\n      return gReadyState;\n    },\n    ready: function (callback) {\n      if (!callback) {\n        return;\n      } else if (gReadyState == 'complete' || gReadyState == 'interactive') {\n        window.setTimeout(function () {\n          callback();\n        });\n      } else if (document.addEventListener) {\n        document.addEventListener('localized', function once() {\n          document.removeEventListener('localized', once);\n          callback();\n        });\n      }\n    }\n  };\n}(window, document);\n\n/***/ }),\n/* 40 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.GenericScripting = void 0;\n\nvar _pdfjsLib = __webpack_require__(5);\n\nclass GenericScripting {\n  constructor(sandboxBundleSrc) {\n    this._ready = (0, _pdfjsLib.loadScript)(sandboxBundleSrc, true).then(() => {\n      return window.pdfjsSandbox.QuickJSSandbox();\n    });\n  }\n\n  async createSandbox(data) {\n    const sandbox = await this._ready;\n    sandbox.create(data);\n  }\n\n  async dispatchEventInSandbox(event) {\n    const sandbox = await this._ready;\n    sandbox.dispatchEvent(event);\n  }\n\n  async destroySandbox() {\n    const sandbox = await this._ready;\n    sandbox.nukeSandbox();\n  }\n\n}\n\nexports.GenericScripting = GenericScripting;\n\n/***/ }),\n/* 41 */\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFPrintService = PDFPrintService;\n\nvar _ui_utils = __webpack_require__(4);\n\nvar _app = __webpack_require__(3);\n\nvar _viewer_compatibility = __webpack_require__(2);\n\nlet activeService = null;\nlet overlayManager = null;\n\nfunction renderPage(activeServiceOnEntry, pdfDocument, pageNumber, size, printResolution, optionalContentConfigPromise) {\n  const scratchCanvas = activeService.scratchCanvas;\n  const PRINT_UNITS = printResolution / 72.0;\n  scratchCanvas.width = Math.floor(size.width * PRINT_UNITS);\n  scratchCanvas.height = Math.floor(size.height * PRINT_UNITS);\n  const width = Math.floor(size.width * _ui_utils.CSS_UNITS) + \"px\";\n  const height = Math.floor(size.height * _ui_utils.CSS_UNITS) + \"px\";\n  const ctx = scratchCanvas.getContext(\"2d\");\n  ctx.save();\n  ctx.fillStyle = \"rgb(255, 255, 255)\";\n  ctx.fillRect(0, 0, scratchCanvas.width, scratchCanvas.height);\n  ctx.restore();\n  return pdfDocument.getPage(pageNumber).then(function (pdfPage) {\n    const renderContext = {\n      canvasContext: ctx,\n      transform: [PRINT_UNITS, 0, 0, PRINT_UNITS, 0, 0],\n      viewport: pdfPage.getViewport({\n        scale: 1,\n        rotation: size.rotation\n      }),\n      intent: \"print\",\n      annotationStorage: pdfDocument.annotationStorage,\n      optionalContentConfigPromise\n    };\n    return pdfPage.render(renderContext).promise;\n  }).then(function () {\n    return {\n      width,\n      height\n    };\n  });\n}\n\nfunction PDFPrintService(pdfDocument, pagesOverview, printContainer, printResolution, optionalContentConfigPromise = null, l10n) {\n  this.pdfDocument = pdfDocument;\n  this.pagesOverview = pagesOverview;\n  this.printContainer = printContainer;\n  this._printResolution = printResolution || 150;\n  this._optionalContentConfigPromise = optionalContentConfigPromise || pdfDocument.getOptionalContentConfig();\n  this.l10n = l10n || _ui_utils.NullL10n;\n  this.currentPage = -1;\n  this.scratchCanvas = document.createElement(\"canvas\");\n}\n\nPDFPrintService.prototype = {\n  layout() {\n    this.throwIfInactive();\n    const body = document.querySelector(\"body\");\n    body.setAttribute(\"data-pdfjsprinting\", true);\n    const hasEqualPageSizes = this.pagesOverview.every(function (size) {\n      return size.width === this.pagesOverview[0].width && size.height === this.pagesOverview[0].height;\n    }, this);\n\n    if (!hasEqualPageSizes) {\n      console.warn(\"Not all pages have the same size. The printed \" + \"result may be incorrect!\");\n    }\n\n    this.pageStyleSheet = document.createElement(\"style\");\n    const pageSize = this.pagesOverview[0];\n    this.pageStyleSheet.textContent = \"@supports ((size:A4) and (size:1pt 1pt)) {\" + \"@page { size: \" + pageSize.width + \"pt \" + pageSize.height + \"pt;}\" + \"}\";\n    body.appendChild(this.pageStyleSheet);\n  },\n\n  destroy() {\n    if (activeService !== this) {\n      return;\n    }\n\n    this.printContainer.textContent = \"\";\n    const body = document.querySelector(\"body\");\n    body.removeAttribute(\"data-pdfjsprinting\");\n\n    if (this.pageStyleSheet) {\n      this.pageStyleSheet.remove();\n      this.pageStyleSheet = null;\n    }\n\n    this.scratchCanvas.width = this.scratchCanvas.height = 0;\n    this.scratchCanvas = null;\n    activeService = null;\n    ensureOverlay().then(function () {\n      if (overlayManager.active !== \"printServiceOverlay\") {\n        return;\n      }\n\n      overlayManager.close(\"printServiceOverlay\");\n    });\n  },\n\n  renderPages() {\n    const pageCount = this.pagesOverview.length;\n\n    const renderNextPage = (resolve, reject) => {\n      this.throwIfInactive();\n\n      if (++this.currentPage >= pageCount) {\n        renderProgress(pageCount, pageCount, this.l10n);\n        resolve();\n        return;\n      }\n\n      const index = this.currentPage;\n      renderProgress(index, pageCount, this.l10n);\n      renderPage(this, this.pdfDocument, index + 1, this.pagesOverview[index], this._printResolution, this._optionalContentConfigPromise).then(this.useRenderedPage.bind(this)).then(function () {\n        renderNextPage(resolve, reject);\n      }, reject);\n    };\n\n    return new Promise(renderNextPage);\n  },\n\n  useRenderedPage(printItem) {\n    this.throwIfInactive();\n    const img = document.createElement(\"img\");\n    img.style.width = printItem.width;\n    img.style.height = printItem.height;\n    const scratchCanvas = this.scratchCanvas;\n\n    if (\"toBlob\" in scratchCanvas && !_viewer_compatibility.viewerCompatibilityParams.disableCreateObjectURL) {\n      scratchCanvas.toBlob(function (blob) {\n        img.src = URL.createObjectURL(blob);\n      });\n    } else {\n      img.src = scratchCanvas.toDataURL();\n    }\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.appendChild(img);\n    this.printContainer.appendChild(wrapper);\n    return new Promise(function (resolve, reject) {\n      img.onload = resolve;\n      img.onerror = reject;\n    });\n  },\n\n  performPrint() {\n    this.throwIfInactive();\n    return new Promise(resolve => {\n      setTimeout(() => {\n        if (!this.active) {\n          resolve();\n          return;\n        }\n\n        print.call(window);\n        setTimeout(resolve, 20);\n      }, 0);\n    });\n  },\n\n  get active() {\n    return this === activeService;\n  },\n\n  throwIfInactive() {\n    if (!this.active) {\n      throw new Error(\"This print request was cancelled or completed.\");\n    }\n  }\n\n};\nconst print = window.print;\n\nwindow.print = function () {\n  if (activeService) {\n    console.warn(\"Ignored window.print() because of a pending print job.\");\n    return;\n  }\n\n  ensureOverlay().then(function () {\n    if (activeService) {\n      overlayManager.open(\"printServiceOverlay\");\n    }\n  });\n\n  try {\n    dispatchEvent(\"beforeprint\");\n  } finally {\n    if (!activeService) {\n      console.error(\"Expected print service to be initialized.\");\n      ensureOverlay().then(function () {\n        if (overlayManager.active === \"printServiceOverlay\") {\n          overlayManager.close(\"printServiceOverlay\");\n        }\n      });\n      return;\n    }\n\n    const activeServiceOnEntry = activeService;\n    activeService.renderPages().then(function () {\n      return activeServiceOnEntry.performPrint();\n    }).catch(function () {}).then(function () {\n      if (activeServiceOnEntry.active) {\n        abort();\n      }\n    });\n  }\n};\n\nfunction dispatchEvent(eventType) {\n  const event = document.createEvent(\"CustomEvent\");\n  event.initCustomEvent(eventType, false, false, \"custom\");\n  window.dispatchEvent(event);\n}\n\nfunction abort() {\n  if (activeService) {\n    activeService.destroy();\n    dispatchEvent(\"afterprint\");\n  }\n}\n\nfunction renderProgress(index, total, l10n) {\n  const progressContainer = document.getElementById(\"printServiceOverlay\");\n  const progress = Math.round(100 * index / total);\n  const progressBar = progressContainer.querySelector(\"progress\");\n  const progressPerc = progressContainer.querySelector(\".relative-progress\");\n  progressBar.value = progress;\n  l10n.get(\"print_progress_percent\", {\n    progress\n  }, progress + \"%\").then(msg => {\n    progressPerc.textContent = msg;\n  });\n}\n\nwindow.addEventListener(\"keydown\", function (event) {\n  if (event.keyCode === 80 && (event.ctrlKey || event.metaKey) && !event.altKey && (!event.shiftKey || window.chrome || window.opera)) {\n    window.print();\n    event.preventDefault();\n\n    if (event.stopImmediatePropagation) {\n      event.stopImmediatePropagation();\n    } else {\n      event.stopPropagation();\n    }\n  }\n}, true);\n\nif (\"onbeforeprint\" in window) {\n  const stopPropagationIfNeeded = function (event) {\n    if (event.detail !== \"custom\" && event.stopImmediatePropagation) {\n      event.stopImmediatePropagation();\n    }\n  };\n\n  window.addEventListener(\"beforeprint\", stopPropagationIfNeeded);\n  window.addEventListener(\"afterprint\", stopPropagationIfNeeded);\n}\n\nlet overlayPromise;\n\nfunction ensureOverlay() {\n  if (!overlayPromise) {\n    overlayManager = _app.PDFViewerApplication.overlayManager;\n\n    if (!overlayManager) {\n      throw new Error(\"The overlay manager has not yet been initialized.\");\n    }\n\n    overlayPromise = overlayManager.register(\"printServiceOverlay\", document.getElementById(\"printServiceOverlay\"), abort, true);\n    document.getElementById(\"printCancel\").onclick = abort;\n  }\n\n  return overlayPromise;\n}\n\n_app.PDFPrintServiceFactory.instance = {\n  supportsPrinting: true,\n\n  createPrintService(pdfDocument, pagesOverview, printContainer, printResolution, optionalContentConfigPromise, l10n) {\n    if (activeService) {\n      throw new Error(\"The print service is created and active.\");\n    }\n\n    activeService = new PDFPrintService(pdfDocument, pagesOverview, printContainer, printResolution, optionalContentConfigPromise, l10n);\n    return activeService;\n  }\n\n};\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t// startup\n/******/ \t// Load entry module\n/******/ \t__webpack_require__(0);\n/******/ \t// This entry module used 'exports' so it can't be inlined\n/******/ })()\n;\n});\n\ndefine('skylark-pdfjs-viewer/main',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"./viewer\"\r\n],function(skylark,viewer) {\r\n\treturn skylark.attach(\"intg.pdfjs.viewer\",viewer);\r\n});\ndefine('skylark-pdfjs-viewer', ['skylark-pdfjs-viewer/main'], function (main) { return main; });\n\n"]}